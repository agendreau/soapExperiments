<java.io.BufferedWriter: void flush()>
<com.jwork.spycamera.utility.Utility: void <clinit>()>
<android.util.Log: int d(java.lang.String,java.lang.String)>
<android.view.ViewGroup: void addView(android.view.View)>
<java.lang.Class: java.lang.String getSimpleName()>
<java.util.ArrayList: boolean add(java.lang.Object)>
<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>
<java.lang.Object: void <init>()>
<android.widget.FrameLayout: void <init>(android.content.Context)>
<com.jwork.spycamera.utility.LogUtility: void d(java.lang.Object,java.lang.String)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.webkit.WebView: void <init>(android.content.Context)>
<android.app.Activity: void onResume()>
<com.jwork.spycamera.utility.ConfigurationUtility: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>
<com.jwork.spycamera.utility.Utility$3: void <init>(com.jwork.spycamera.utility.ConfigurationUtility,android.app.Activity)>
<com.jwork.spycamera.SpyCamPrefsActivity$3: void <init>(com.jwork.spycamera.SpyCamPrefsActivity,android.app.AlertDialog)>
<android.os.Bundle: void <clinit>()>
<com.jwork.spycamera.utility.Utility$1: void <init>(com.jwork.spycamera.utility.ConfigurationUtility,android.app.Activity)>
<com.jwork.spycamera.SpyCamActivity: void onConfigurationChanged(android.content.res.Configuration)>
<com.jwork.spycamera.utility.ConfigurationUtility: com.jwork.spycamera.utility.ConfigurationUtility getInstance(android.content.Context)>
<java.lang.String: void <clinit>()>
<java.lang.Integer: java.lang.Integer valueOf(int)>
<android.support.v4.app.FragmentManagerImpl$5: void <init>(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.Fragment)>
<java.lang.StringBuilder: java.lang.String toString()>
<android.os.Handler: boolean hasMessages(int)>
<java.io.File: boolean exists()>
<android.content.Context: java.lang.String getString(int)>
<android.support.v4.app.FragmentManagerImpl: void reportBackStackChanged()>
<java.util.Date: void <init>()>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<android.net.Uri: void <clinit>()>
<android.support.v4.app.FragmentManagerImpl: void dispatchPause()>
<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>
<android.support.v4.app.FragmentManagerImpl: boolean popBackStackImmediate()>
<android.view.KeyEvent: int getRepeatCount()>
<android.support.v4.app.FragmentManagerImpl: void <init>()>
<java.lang.IllegalStateException: void <init>()>
<android.app.Activity: void onCreate(android.os.Bundle)>
<dummyMainClass: void dummyMainMethod()>
<com.jwork.spycamera.utility.ConfigurationUtility: void setAppVersion(java.lang.String)>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
<android.app.Activity: android.view.Window getWindow()>
<android.view.animation.AnimationSet: void <init>(boolean)>
<com.jwork.spycamera.utility.ConfigurationUtility: boolean isLogging()>
<android.support.v4.app.FragmentManager: void <init>()>
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>
<android.app.Activity: android.content.Intent getIntent()>
<android.view.animation.AccelerateInterpolator: void <init>(float)>
<com.jwork.spycamera.SpyCamPrefsActivity$3: void onClick(android.content.DialogInterface,int)>
<com.jwork.spycamera.utility.ConfigurationUtility: int getCurrentCamera()>
<java.util.ArrayList: void <init>()>
<android.support.v4.app.FragmentManagerImpl: boolean executePendingTransactions()>
<com.jwork.spycamera.utility.ConfigurationUtility: java.lang.String getSavingPath()>
<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>
<android.util.SparseArray: void <init>()>
<android.util.SparseArray: int size()>
<com.jwork.spycamera.SpyCamActivity: void getDefaultOrientation()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<android.util.AndroidRuntimeException: void <init>(java.lang.String)>
<com.jwork.spycamera.SpyCamPrefsActivity$2: void <init>(com.jwork.spycamera.SpyCamPrefsActivity,android.app.AlertDialog)>
<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.jwork.spycamera.SpyCamActivity: void onPause()>
<com.jwork.spycamera.utility.Utility$1: void onClick(android.content.DialogInterface,int)>
<com.jwork.spycamera.utility.LogUtility: void finalize()>
<android.support.v4.app.FragmentManagerImpl: void dispatchCreate()>
<java.lang.String: boolean equals(java.lang.Object)>
<com.jwork.spycamera.SpyCamPrefsActivity: void onCreate(android.os.Bundle)>
<android.app.Activity: boolean isFinishing()>
<android.os.Handler: boolean sendEmptyMessage(int)>
<java.io.File: void <init>(java.lang.String)>
<android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
<com.jwork.spycamera.utility.ConfigurationUtility: boolean isHideFolder()>
<android.app.Activity: void <init>()>
<android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
<com.jwork.spycamera.SpyCamPrefsActivity: void onDestroy()>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<android.net.Uri: android.net.Uri fromFile(java.io.File)>
<android.util.Log: int v(java.lang.String,java.lang.String)>
<java.io.File: boolean delete()>
<android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>
<android.support.v4.app.NoSaveStateFrameLayout: void <init>(android.content.Context)>
<android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)>
<android.app.Activity: void startActivity(android.content.Intent)>
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.view.ViewGroup$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<android.os.Bundle: void <init>()>
<com.jwork.spycamera.utility.Factory: com.jwork.spycamera.utility.Factory getInstance()>
<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,int,boolean)>
<com.jwork.spycamera.utility.Utility$2: void <init>(com.jwork.spycamera.utility.ConfigurationUtility,android.app.Activity)>
<com.jwork.spycamera.SpyCamPrefsActivity: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<android.app.Activity: void <clinit>()>
<java.lang.String: java.lang.String[] split(java.lang.String)>
<android.support.v4.app.FragmentActivity: void <init>()>
<android.os.Handler: void removeCallbacks(java.lang.Runnable)>
<com.jwork.spycamera.utility.ConfigurationUtility: java.lang.String getSavingPathPrimary()>
<com.jwork.spycamera.utility.ConfigurationUtility: java.lang.String getVideoQualityList(int)>
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
<android.app.Activity: void onPause()>
<android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
<com.jwork.spycamera.utility.Utility: void openDonation(android.content.Context)>
<android.support.v4.app.FragmentManagerImpl: void startPendingDeferredFragments()>
<com.jwork.spycamera.SpyCamPrefsActivity: boolean onPreferenceClick(android.preference.Preference)>
<java.lang.IllegalStateException: void <init>(java.lang.String)>
<com.jwork.spycamera.utility.Factory: void <clinit>()>
<com.jwork.spycamera.utility.ConfigurationUtility: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>
<android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)>
<com.jwork.spycamera.utility.Utility: void shareIt(android.content.Context)>
<android.preference.PreferenceActivity: void addPreferencesFromResource(int)>
<java.lang.Object: void finalize()>
<com.jwork.spycamera.utility.LogUtility: void disableLogging()>
<android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<java.io.BufferedWriter: void close()>
<android.view.KeyEvent: void <init>(int,int)>
<java.io.File: boolean mkdir()>
<android.support.v4.app.FragmentManagerImpl$1: void run()>
<android.content.Context: void <init>()>
<android.support.v4.app.FragmentActivity: void onResume()>
<android.support.v4.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)>
<android.view.View: void setScrollContainer(boolean)>
<android.app.Dialog: void dismiss()>
<java.io.Writer: void write(java.lang.String)>
<java.lang.System: void <clinit>()>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<android.support.v4.app.FragmentManagerImpl: void attachActivity(android.support.v4.app.FragmentActivity)>
<android.app.Activity: void setRequestedOrientation(int)>
<java.util.ArrayList: java.lang.Object remove(int)>
<com.jwork.spycamera.SpyCamActivity: void onCreate(android.os.Bundle)>
<java.util.ArrayList: int size()>
<java.io.BufferedWriter: void <init>(java.io.Writer)>
<android.support.v4.app.FragmentActivity: void onResumeFragments()>
<android.util.Log: int w(java.lang.String,java.lang.Throwable)>
<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>
<android.widget.AbsoluteLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.res.Configuration: void <init>()>
<android.os.Build$VERSION: void <clinit>()>
<android.support.v4.app.FragmentManagerImpl: void checkStateLoss()>
<com.jwork.spycamera.utility.LogUtility: void <init>()>
<android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<android.os.Looper: android.os.Looper myLooper()>
<android.content.ContextWrapper: void <init>(android.content.Context)>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment findFragmentById(int)>
<java.io.FileWriter: void <init>(java.io.File,boolean)>
<android.support.v4.app.FragmentManagerImpl: void <clinit>()>
<android.content.res.Configuration: void <clinit>()>
<com.jwork.spycamera.SpyCamActivity: void <init>()>
<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<android.app.Activity: void invalidateOptionsMenu()>
<java.io.File: void <clinit>()>
<com.jwork.spycamera.SpyCamActivity: void finalize()>
<android.support.v4.app.FragmentActivity: boolean onKeyDown(int,android.view.KeyEvent)>
<android.support.v4.app.FragmentActivity: void onBackPressed()>
<android.app.Activity: android.view.WindowManager getWindowManager()>
<android.support.v4.app.FragmentActivity: void invalidateSupportFragmentIndex(int)>
<com.jwork.spycamera.utility.ConfigurationUtility: void <init>(android.content.Context)>
<android.view.animation.DecelerateInterpolator: void <init>(float)>
<android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)>
<java.lang.Boolean: void <clinit>()>
<java.lang.Integer: void <clinit>()>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<com.jwork.spycamera.utility.LogUtility: void flushLogging(android.content.Context)>
<com.jwork.spycamera.utility.Utility: boolean showChangelogNew(boolean,android.app.Activity,boolean)>
<java.io.File: java.lang.String getPath()>
<android.support.v4.app.FragmentActivity: void onAttachFragment(android.support.v4.app.Fragment)>
<android.support.v4.app.FragmentActivity$1: void <init>(android.support.v4.app.FragmentActivity)>
<android.support.v4.app.FragmentManagerImpl$1: void <init>(android.support.v4.app.FragmentManagerImpl)>
<com.jwork.spycamera.utility.Factory: void <init>()>
<android.app.ListActivity: void <init>()>
<com.jwork.spycamera.SpyCamPrefsActivity$1: void <init>(com.jwork.spycamera.SpyCamPrefsActivity,android.app.AlertDialog)>
<android.content.Intent: android.content.Intent setType(java.lang.String)>
<java.io.BufferedReader: void close()>
<java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<com.jwork.spycamera.utility.LogUtility: com.jwork.spycamera.utility.LogUtility getInstance()>
<com.jwork.spycamera.SpyCamPrefsActivity: void <init>()>
<java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.jwork.spycamera.utility.Utility$3: void onClick(android.content.DialogInterface,int)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>
<java.io.File: boolean canWrite()>
<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.jwork.spycamera.SpyCamActivity: void onResume()>
<java.lang.String: java.lang.String toLowerCase()>
<android.os.Handler: void removeMessages(int)>
<java.lang.Exception: void <init>()>
<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>
<android.view.ContextThemeWrapper: void <init>()>
<android.view.animation.AlphaAnimation: void <init>(float,float)>
<android.view.animation.Animation: void <init>()>
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.jwork.spycamera.utility.Factory: void reset()>
<android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float)>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,int,float,int,float)>
<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>
<android.util.SparseArray: void clear()>
<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>
<com.jwork.spycamera.utility.ConfigurationUtility: void newVersionSetup()>
<android.view.InputEvent: void <clinit>()>
<com.jwork.spycamera.SpyCamPrefsActivity$1: void onClick(android.content.DialogInterface,int)>
<com.jwork.spycamera.utility.ConfigurationUtility: java.lang.String getSavingPathExternal()>
<com.jwork.spycamera.utility.LogUtility: void v(java.lang.Object,java.lang.String)>
<android.content.Intent: void <init>(java.lang.String)>
<java.io.FileReader: void <init>(java.io.File)>
<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.jwork.spycamera.utility.Utility: java.lang.String getExternalSDCardPath()>
<android.support.v4.app.FragmentManagerImpl: void dispatchResume()>
<android.support.v4.app.FragmentManagerImpl: void saveFragmentViewState(android.support.v4.app.Fragment)>
<com.jwork.spycamera.utility.ConfigurationUtility: java.lang.String getAppVersion()>
<java.lang.StringBuilder: void <init>()>
<com.jwork.spycamera.utility.CrashHandler: com.jwork.spycamera.utility.CrashHandler getInstance(android.app.Activity,java.lang.Thread$UncaughtExceptionHandler)>
<java.util.ArrayList: void clear()>
<android.view.View: void <clinit>()>
<android.app.Activity: void setContentView(int)>
<com.jwork.spycamera.SpyCamPrefsActivity$2: void onClick(android.content.DialogInterface,int)>
<android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
<android.content.Intent: android.content.Intent addFlags(int)>
<com.jwork.spycamera.utility.LogUtility: void e(java.lang.Object,java.lang.Throwable)>
<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<java.io.File: boolean createNewFile()>
<java.lang.Integer: int parseInt(java.lang.String)>
<android.view.ViewGroup: void removeView(android.view.View)>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<android.view.animation.Animation: void setDuration(long)>
<android.app.Activity: android.view.View findViewById(int)>
<android.view.InputEvent: void <init>()>
<android.support.v4.app.FragmentActivity: void onPause()>
<android.support.v4.app.FragmentActivity: void supportInvalidateOptionsMenu()>
<com.jwork.spycamera.SpyCamPrefsActivity: void <clinit>()>
<android.support.v4.app.ActivityCompatHoneycomb: void invalidateOptionsMenu(android.app.Activity)>
<java.lang.Class: java.lang.String getName()>
<android.view.animation.Animation: void finalize()>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.support.v4.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>
<android.content.Intent: void <clinit>()>
<java.io.BufferedReader: void <init>(java.io.Reader)>
<android.os.Handler: void <init>()>
<android.support.v4.app.NoSaveStateFrameLayout: android.view.ViewGroup wrap(android.view.View)>
<android.preference.PreferenceActivity: void <init>()>
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<android.support.v4.app.FragmentManagerImpl: void dispatchConfigurationChanged(android.content.res.Configuration)>
<java.util.ArrayList: java.lang.Object get(int)>
<java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<com.jwork.spycamera.utility.LogUtility: void v(java.lang.Class,java.lang.String)>
<android.webkit.WebView: void loadData(java.lang.String,java.lang.String,java.lang.String)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.view.KeyEvent: void <clinit>()>
<android.app.Activity: void finish()>
<android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)>
<java.lang.Object: java.lang.Class getClass()>
<com.jwork.spycamera.SpyCamActivity: boolean onKeyDown(int,android.view.KeyEvent)>
<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>
<android.os.Handler: android.os.Looper getLooper()>
<com.jwork.spycamera.utility.ConfigurationUtility: void setSavingPath(java.lang.String)>
<android.app.AlertDialog: void <init>(android.content.Context)>
<android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)>
<java.lang.RuntimeException: void <init>()>
<android.preference.PreferenceActivity: void onDestroy()>
<android.support.v4.app.FragmentManagerImpl: void moveToState(int,int,int,boolean)>
<android.util.Log: int w(java.lang.String,java.lang.String)>
<java.lang.Integer: java.lang.String toHexString(int)>
<android.support.v4.app.FragmentManagerImpl: void performPendingDeferredStart(android.support.v4.app.Fragment)>
<com.jwork.spycamera.utility.CrashHandler: void <init>(android.app.Activity,java.lang.Thread$UncaughtExceptionHandler)>
<android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)>
<com.jwork.spycamera.utility.Utility$2: void onClick(android.content.DialogInterface,int)>
<java.io.BufferedReader: java.lang.String readLine()>
<java.util.ArrayList: void <init>(int)>
<java.lang.RuntimeException: void <init>(java.lang.String)>
