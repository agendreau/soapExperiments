<com.squareup.okhttp.Request: java.net.URL access$800(com.squareup.okhttp.Request)>
<com.google.android.gms.analytics.h: void u(android.content.Context)>
<com.battlelancer.seriesguide.ui.SeasonsFragment$SeasonsQuery: void <clinit>()>
<com.squareup.picasso.MediaStoreBitmapHunter$PicassoKind: void <clinit>()>
<com.battlelancer.seriesguide.util.ServiceUtils: android.content.Intent buildWebSearchIntent(java.lang.String)>
<com.uwetrottmann.seriesguide.backend.shows.model.ShowList: com.uwetrottmann.seriesguide.backend.shows.model.ShowList clone()>
<com.squareup.picasso.Utils: boolean parseResponseSourceHeader(java.lang.String)>
<android.support.v4.app.Fragment: void setIndex(int,android.support.v4.app.Fragment)>
<com.battlelancer.seriesguide.extensions.ExtensionSubscriberService: void <init>()>
<android.support.v4.widget.ViewDragHelper$2: void run()>
<android.widget.TextView: void setMinWidth(int)>
<android.support.v4.util.TimeUtils: void formatDuration(long,java.io.PrintWriter,int)>
<com.google.api.client.googleapis.extensions.android.gms.auth.GooglePlayServicesAvailabilityIOException: com.google.android.gms.auth.GooglePlayServicesAvailabilityException getCause()>
<com.squareup.okhttp.internal.spdy.HeadersMode: void <init>(java.lang.String,int)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment$7: void onClick(android.view.View)>
<com.google.api.client.http.HttpRequest: com.google.api.client.util.ObjectParser getParser()>
<com.squareup.okhttp.Cache$Entry: com.squareup.okhttp.Response response(com.squareup.okhttp.Request,com.squareup.okhttp.internal.DiskLruCache$Snapshot)>
<com.google.api.client.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>
<com.battlelancer.seriesguide.Constants$EpisodeSorting: void <clinit>()>
<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>
<org.apache.oltu.oauth2.common.message.types.GrantType: java.lang.String toString()>
<com.battlelancer.seriesguide.ui.OverviewFragment$ShowQuery: void <clinit>()>
<com.battlelancer.seriesguide.billing.IabHelper: java.lang.String getResponseDesc(int)>
<android.view.ViewGroup: void setClipToPadding(boolean)>
<com.google.api.client.util.Types$1$1: java.lang.Object next()>
<android.webkit.WebViewClient: void <init>()>
<android.graphics.Paint: void setDither(boolean)>
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>
<android.support.v4.app.Fragment: java.lang.String getString(int,java.lang.Object[])>
<com.battlelancer.seriesguide.ui.ShowsActivity: void onAddShow(com.battlelancer.seriesguide.items.SearchResult)>
<com.squareup.okio.Okio: com.squareup.okio.Source source(java.net.Socket)>
<com.squareup.okhttp.internal.http.AuthenticatorAdapter: java.net.InetAddress getConnectToInetAddress(java.net.Proxy,java.net.URL)>
<com.squareup.okhttp.internal.http.CacheStrategy$Factory: com.squareup.okhttp.internal.http.CacheStrategy get()>
<com.squareup.okio.Buffer: java.lang.String readUtf8Line(long)>
<com.battlelancer.seriesguide.ui.PersonFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.google.api.client.json.gson.GsonGenerator: void writeBoolean(boolean)>
<com.uwetrottmann.seriesguide.backend.episodes.EpisodesRequest: void <init>(com.uwetrottmann.seriesguide.backend.episodes.Episodes,java.lang.String,java.lang.String,java.lang.Object,java.lang.Class)>
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<android.widget.AbsListView: boolean onTouchEvent(android.view.MotionEvent)>
<com.battlelancer.seriesguide.Constants$SeasonSorting: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String)>
<android.widget.LinearLayout: boolean shouldDelayChildPressedState()>
<com.squareup.okhttp.internal.spdy.SpdyStream: void checkOutNotClosed()>
<com.google.android.gms.analytics.t: void <init>(android.content.Context)>
<com.battlelancer.seriesguide.billing.BillingActivity: boolean checkForSubscription(android.content.Context,com.battlelancer.seriesguide.billing.Inventory)>
<com.squareup.okhttp.internal.Platform$Android: void <init>(java.lang.Class,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,com.squareup.okhttp.internal.Platform$1)>
<com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection: java.lang.String getContentType()>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void retain()>
<com.battlelancer.seriesguide.service.TraktFlagService: void onFailure(boolean)>
<com.google.android.gms.common.SignInButton: void <init>(android.content.Context)>
<com.google.api.client.googleapis.services.AbstractGoogleClient$Builder: com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setServicePath(java.lang.String)>
<org.json.JSONObject: int optInt(java.lang.String)>
<com.squareup.okhttp.internal.Platform$JettyNegoProvider: boolean access$100(com.squareup.okhttp.internal.Platform$JettyNegoProvider)>
<com.google.api.client.http.LowLevelHttpRequest: void <init>()>
<android.widget.AdapterView: int getCount()>
<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>
<android.widget.ScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<com.squareup.okhttp.Address: java.lang.String getUriHost()>
<com.battlelancer.seriesguide.util.ShowTools$Upload: boolean toHexagon(android.content.Context,java.util.List)>
<retrofit.appengine.UrlFetchClient: void <init>(com.google.appengine.api.urlfetch.URLFetchService)>
<com.battlelancer.seriesguide.dataliberation.JsonExportTask: void writeJsonStreamLists(java.io.OutputStream,android.database.Cursor)>
<java.io.FileInputStream: void close()>
<com.google.myjson.internal.bind.TypeAdapters$6: void <init>()>
<com.squareup.okhttp.internal.spdy.NameValueBlockReader$1: void <init>(com.squareup.okhttp.internal.spdy.NameValueBlockReader,com.squareup.okio.Source)>
<uk.co.senab.photoview.PhotoViewAttacher: android.graphics.RectF getDisplayRect(android.graphics.Matrix)>
<com.battlelancer.seriesguide.util.PeopleListHelper: void populateMovieCrew(android.content.Context,android.view.LayoutInflater,android.view.ViewGroup,com.uwetrottmann.tmdb.entities.Credits)>
<com.battlelancer.seriesguide.ui.ShowsFragment$4: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<com.google.api.client.util.escape.UnicodeEscaper: char[] growBuffer(char[],int,int)>
<com.battlelancer.seriesguide.ui.EpisodesFragment$2: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>
<java.lang.Object: java.lang.Object clone()>
<com.battlelancer.seriesguide.ui.EpisodesActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.battlelancer.seriesguide.ui.ShowsFragment$ShowsAdapter$PopupMenuItemClickListener: void <init>(com.battlelancer.seriesguide.ui.ShowsFragment$ShowsAdapter,int,int)>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment: void ensureGetGlueAuthAndConnection()>
<java.io.StringWriter: void <init>()>
<com.tonicartos.widget.stickygridheaders.StickyGridHeadersGridView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.battlelancer.seriesguide.util.TraktTask: com.battlelancer.seriesguide.util.TraktTask shoutShow(int,java.lang.String,boolean)>
<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>
<java.math.BigDecimal: double doubleValue()>
<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>
<com.google.api.client.googleapis.extensions.android.gms.auth.GooglePlayServicesAvailabilityIOException: void <init>(com.google.android.gms.auth.GooglePlayServicesAvailabilityException)>
<com.battlelancer.seriesguide.util.ShortcutUtils$1: void <init>(android.content.Context,java.lang.String,int,java.lang.String)>
<com.battlelancer.seriesguide.billing.Base64DecoderException: void <init>(java.lang.String)>
<com.battlelancer.seriesguide.ui.dialogs.ListManageDialogFragment: void onStart()>
<android.support.v4.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)>
<java.lang.Math: float abs(float)>
<com.squareup.picasso.GetAction: void <init>(com.squareup.picasso.Picasso,com.squareup.picasso.Request,boolean,java.lang.String)>
<com.squareup.okhttp.Headers: com.squareup.okhttp.Headers$Builder newBuilder()>
<com.google.api.client.util.DateTime: void appendInt(java.lang.StringBuilder,int,int)>
<com.squareup.okhttp.internal.NamedRunnable: void run()>
<com.battlelancer.seriesguide.util.EpisodeTools$ShowWatchedType: void setEpisodeProperties(com.uwetrottmann.seriesguide.backend.episodes.model.Episode)>
<java.lang.Error: void <init>()>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity: android.app.Dialog onCreateDialog(int)>
<android.net.Uri: void <clinit>()>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int)>
<com.battlelancer.seriesguide.util.SelectionBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>
<com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment: int access$000(com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment)>
<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>
<com.squareup.okhttp.internal.spdy.Settings: void clear()>
<android.appwidget.AppWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>
<com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)>
<de.greenrobot.event.BackgroundPoster: void run()>
<android.view.ViewGroup: void addView(android.view.View,int,int)>
<android.support.v4.view.ViewCompatJB: void postOnAnimation(android.view.View,java.lang.Runnable)>
<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>
<com.battlelancer.seriesguide.ui.MoviesSearchFragment: void onLoaderReset(android.support.v4.content.Loader)>
<com.google.api.client.http.HttpResponse: void ignore()>
<com.google.android.gms.analytics.ac: void dr()>
<com.google.myjson.internal.bind.CollectionTypeAdapterFactory: void <init>(com.google.myjson.internal.ConstructorConstructor)>
<com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl: void setRequestProperty(java.lang.String,java.lang.String)>
<retrofit.RestAdapter$Builder: retrofit.RestAdapter$Builder setEndpoint(java.lang.String)>
<com.uwetrottmann.seriesguide.backend.movies.Movies$Builder: com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setServicePath(java.lang.String)>
<com.google.myjson.internal.bind.TypeAdapters$19: void <init>()>
<android.widget.AbsListView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.google.gson.internal.$Gson$Types$WildcardTypeImpl: void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[])>
<com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity$2: void onClick(android.view.View)>
<java.io.OutputStreamWriter: void flush()>
<com.battlelancer.seriesguide.ui.EpisodeDetailsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.support.v4.app.FragmentManagerImpl: void hideFragment(android.support.v4.app.Fragment,int,int)>
<org.apache.oltu.oauth2.common.utils.OAuthUtils: java.lang.String encode(java.lang.String,java.lang.String)>
<android.support.v4.util.SparseArrayCompat: int size()>
<com.google.android.gms.analytics.w: void <init>()>
<com.uwetrottmann.getglue.GetGlue: void <init>()>
<com.uwetrottmann.seriesguide.backend.movies.Movies: void <init>(com.uwetrottmann.seriesguide.backend.movies.Movies$Builder)>
<com.mobeta.android.dslv.DragSortController: void <init>(com.mobeta.android.dslv.DragSortListView)>
<android.view.View: int getId()>
<com.google.api.client.http.HttpHeaders: void parseHeader(java.lang.String,java.lang.String,com.google.api.client.http.HttpHeaders$ParseHeaderState)>
<com.google.myjson.reflect.TypeToken: com.google.myjson.reflect.TypeToken get(java.lang.reflect.Type)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<com.squareup.picasso.DeferredRequestCreator: boolean onPreDraw()>
<com.battlelancer.seriesguide.ui.QuickCheckInActivity: void onStop()>
<com.squareup.okhttp.internal.spdy.Spdy3$Reader: void readConnectionPreface()>
<timber.log.Timber$1: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>
<com.battlelancer.seriesguide.ui.ShowsActivity: void setInitialTab(android.os.Bundle,android.os.Bundle)>
<com.battlelancer.seriesguide.loaders.EpisodeActionsLoader: void onReleaseResources(java.lang.Object)>
<com.squareup.okhttp.internal.Platform: void setProtocols(javax.net.ssl.SSLSocket,java.util.List)>
<com.battlelancer.seriesguide.billing.BillingActivity: boolean verifyDeveloperPayload(com.battlelancer.seriesguide.billing.Purchase)>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential$RequestHandler: void <init>(com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential)>
<android.support.v4.view.ViewCompatICS: boolean canScrollHorizontally(android.view.View,int)>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Builder: java.lang.String access$400(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder)>
<com.battlelancer.seriesguide.adapters.ExtensionsAdapter: int getCount()>
<com.battlelancer.seriesguide.ui.EpisodesFragment: int access$200(com.battlelancer.seriesguide.ui.EpisodesFragment)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>
<android.view.View: int getScrollY()>
<com.battlelancer.seriesguide.util.PeopleListHelper$OnPersonClickListener: void onClick(android.view.View)>
<com.google.myjson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>
<com.squareup.okio.Base64: java.lang.String encode(byte[])>
<com.battlelancer.seriesguide.ui.ShowFragment: void onLoadTraktRatings(boolean)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$8: void onLoadFinished(android.support.v4.content.Loader,com.uwetrottmann.tmdb.entities.Trailers)>
<android.widget.RemoteViews: void setPendingIntentTemplate(int,android.app.PendingIntent)>
<com.battlelancer.seriesguide.util.EpisodeTools: void episodeCollected(android.content.Context,int,int,int,int,boolean)>
<com.battlelancer.seriesguide.dataliberation.DataLiberationActivity: void onCreate(android.os.Bundle)>
<com.squareup.picasso.Utils: java.lang.String createKey(com.squareup.picasso.Request)>
<java.lang.Math: double floor(double)>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Reader: void readPing(com.squareup.okhttp.internal.spdy.FrameReader$Handler,short,byte,int)>
<com.squareup.okhttp.ResponseBody: void close()>
<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSink: void writeHex(long)>
<android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl: void <init>()>
<com.squareup.okhttp.Headers: java.lang.String get(java.lang.String)>
<com.battlelancer.seriesguide.ui.ShowFragment: void access$500(com.battlelancer.seriesguide.ui.ShowFragment)>
<java.io.InputStream: int read(byte[])>
<com.battlelancer.seriesguide.ui.OverviewFragment: void onPause()>
<com.google.myjson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type getRawType()>
<com.squareup.okhttp.internal.http.HeaderParser: int skipUntil(java.lang.String,int,java.lang.String)>
<com.uwetrottmann.seriesguide.backend.shows.ShowsRequest: com.google.api.client.googleapis.services.AbstractGoogleClientRequest setDisableGZipContent(boolean)>
<android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase: int getFinalY(java.lang.Object)>
<android.os.Build: void <clinit>()>
<com.battlelancer.seriesguide.ui.OverviewFragment$2: void <init>(com.battlelancer.seriesguide.ui.OverviewFragment)>
<com.uwetrottmann.androidutils.GenericSimpleLoader: void onReset()>
<java.io.FileInputStream: int read(byte[],int,int)>
<android.widget.ScrollView: int computeVerticalScrollRange()>
<com.google.android.gms.internal.ho: void c(android.content.res.Resources,int,int)>
<com.google.api.client.http.GenericUrl: java.lang.String buildAuthority()>
<android.view.ViewGroup: int getChildCount()>
<de.greenrobot.event.EventBus: void addInterfaces(java.util.List,java.lang.Class[])>
<com.google.api.client.util.Types: java.lang.Iterable iterableOf(java.lang.Object)>
<com.google.myjson.internal.$Gson$Types: void checkNotPrimitive(java.lang.reflect.Type)>
<com.google.api.client.http.UrlEncodedContent: boolean appendParam(boolean,java.io.Writer,java.lang.String,java.lang.Object)>
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<android.graphics.Point: void <clinit>()>
<com.squareup.okhttp.internal.http.HttpEngine: void disconnect()>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void access$2400(com.squareup.okhttp.internal.spdy.SpdyConnection,int,java.util.List)>
<com.google.android.gms.analytics.aj: boolean dM()>
<android.support.v4.widget.DrawerLayout: void setDrawerViewOffset(android.view.View,float)>
<retrofit.Platform$AppEngine$1: void <init>(retrofit.Platform$AppEngine,retrofit.appengine.UrlFetchClient)>
<com.battlelancer.seriesguide.dataliberation.JsonExportTask$EpisodesQuery: void <clinit>()>
<com.battlelancer.seriesguide.ui.FullscreenImageActivity: void onPostCreate(android.os.Bundle)>
<android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
<java.lang.String: boolean startsWith(java.lang.String)>
<com.battlelancer.seriesguide.ui.ShowFragment$3: void <init>(com.battlelancer.seriesguide.ui.ShowFragment)>
<com.squareup.okio.ByteString: byte getByte(int)>
<com.battlelancer.seriesguide.ui.ShowsFragment$4: void <init>(com.battlelancer.seriesguide.ui.ShowsFragment)>
<com.google.gson.internal.bind.TimeTypeAdapter$1: void <init>()>
<com.squareup.okhttp.internal.spdy.Settings: int getInitialWindowSize(int)>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Writer: void connectionPreface()>
<com.battlelancer.seriesguide.util.EpisodeTools$FlagType: java.util.List getEpisodesForHexagon()>
<java.util.zip.DeflaterOutputStream: void close()>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment$7: void <init>(com.battlelancer.seriesguide.ui.EpisodeDetailsFragment)>
<com.crashlytics.android.internal.m: void <clinit>()>
<com.google.gson.stream.JsonReader: java.lang.String nextUnquotedValue()>
<android.widget.OverScroller: boolean isFinished()>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences: boolean isValidFragment(java.lang.String)>
<retrofit.Platform$Android: void <init>(retrofit.Platform$1)>
<android.support.v4.view.ViewPager: void removeView(android.view.View)>
<android.support.v4.app.FragmentManagerImpl: void moveToState(int,int,int,boolean)>
<com.squareup.picasso.DeferredRequestCreator: void <init>(com.squareup.picasso.RequestCreator,android.widget.ImageView,com.squareup.picasso.Callback)>
<fr.castorflex.android.smoothprogressbar.SmoothProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.support.v4.app.Fragment: void performActivityCreated(android.os.Bundle)>
<com.google.api.client.util.Sleeper$1: void sleep(long)>
<android.view.View: int getWidth()>
<android.support.v4.app.FragmentActivity: void onPause()>
<com.battlelancer.seriesguide.util.Utils: void advertiseSubscription(android.content.Context)>
<com.battlelancer.seriesguide.ui.SearchActivity: void onCreate(android.os.Bundle)>
<java.util.ArrayList: void add(int,java.lang.Object)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$4: boolean onPreferenceClick(android.preference.Preference)>
<com.squareup.okhttp.internal.spdy.Http20Draft12: void <init>()>
<android.os.Handler: android.os.Message obtainMessage()>
<android.widget.ImageView: void onDetachedFromWindow()>
<com.battlelancer.seriesguide.ui.OverviewFragment: void onResume()>
<uk.co.senab.photoview.gestures.EclairGestureDetector: void <init>(android.content.Context)>
<com.google.myjson.internal.bind.TimeTypeAdapter: void <clinit>()>
<com.google.android.gms.common.SignInButton: android.widget.Button a(android.content.Context,int,int)>
<org.apache.http.message.AbstractHttpMessage: void addHeader(java.lang.String,java.lang.String)>
<com.google.android.gms.analytics.Tracker$a: void enableAutoActivityTracking(boolean)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment: void fireTrackerEvent(java.lang.String)>
<android.view.View: boolean postDelayed(java.lang.Runnable,long)>
<android.app.Notification$Builder: android.app.Notification$Builder setNumber(int)>
<android.widget.ScrollView: void addView(android.view.View)>
<com.battlelancer.seriesguide.util.TraktTask: com.battlelancer.seriesguide.util.TraktTask checkInMovie(int,java.lang.String)>
<android.graphics.Point: void set(int,int)>
<com.squareup.okio.DeflaterSink: void write(com.squareup.okio.Buffer,long)>
<java.util.zip.Inflater: void setInput(byte[],int,int)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<android.support.v4.content.ModernAsyncTask$Status: void <clinit>()>
<com.google.gson.stream.JsonReader: void skipQuotedValue(char)>
<com.battlelancer.seriesguide.ui.dialogs.RemoveCloudAccountDialogFragment$1: void <init>(com.battlelancer.seriesguide.ui.dialogs.RemoveCloudAccountDialogFragment)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<com.battlelancer.seriesguide.util.MovieTools: void addToCollection(android.content.Context,int)>
<com.google.android.gms.analytics.g: com.google.android.gms.analytics.g cu()>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Builder: boolean access$200(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder)>
<com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment$3: void <init>(com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment)>
<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>
<com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment: void onStart()>
<com.battlelancer.seriesguide.util.FlagTapedTask$1: void run()>
<java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>
<com.google.api.client.json.gson.GsonGenerator: void flush()>
<android.support.v4.view.MotionEventCompatEclair: int getPointerCount(android.view.MotionEvent)>
<android.support.v4.widget.ViewDragHelper: boolean forceSettleCapturedViewAt(int,int,int,int)>
<com.battlelancer.seriesguide.ui.ShowsFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<android.os.Binder: void <init>()>
<com.battlelancer.seriesguide.settings.TraktCredentials: boolean hasCredentials()>
<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>
<com.google.myjson.stream.JsonWriter: void writeDeferredName()>
<java.util.Collections: java.util.Set singleton(java.lang.Object)>
<com.battlelancer.seriesguide.dashclock.UpcomingEpisodeSettingsActivity: void onCreate(android.os.Bundle)>
<android.support.v4.view.ViewCompat$JBViewCompatImpl: int getImportantForAccessibility(android.view.View)>
<retrofit.Platform$Base$3: void <init>(retrofit.Platform$Base)>
<com.google.android.gms.analytics.ac$a: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSource: void close()>
<com.squareup.okhttp.internal.http.HttpConnection: int access$600(com.squareup.okhttp.internal.http.HttpConnection)>
<com.google.api.client.http.HttpHeaders: java.lang.Object parseValue(java.lang.reflect.Type,java.util.List,java.lang.String)>
<com.squareup.okio.AsyncTimeout$1: void write(com.squareup.okio.Buffer,long)>
<android.support.v4.view.VelocityTrackerCompat: void <clinit>()>
<com.battlelancer.seriesguide.migration.MigrationActivity: void onCreate(android.os.Bundle)>
<com.google.api.client.http.HttpResponse: void <init>(com.google.api.client.http.HttpRequest,com.google.api.client.http.LowLevelHttpResponse)>
<android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>
<com.google.api.client.http.apache.ApacheHttpRequest: com.google.api.client.http.LowLevelHttpResponse execute()>
<android.graphics.Color: int red(int)>
<com.squareup.picasso.BitmapHunter: void setExifRotation(int)>
<com.google.android.gms.analytics.Tracker: void set(java.lang.String,java.lang.String)>
<java.io.InputStreamReader: int read(char[],int,int)>
<com.battlelancer.seriesguide.ui.EpisodesActivity: void <init>()>
<com.google.android.gms.plus.PlusOneDummyView: android.graphics.Point cY(int)>
<com.google.api.client.http.HttpStatusCodes: boolean isRedirect(int)>
<android.support.v4.app.ActionBarDrawerToggle: android.graphics.drawable.Drawable getThemeUpIndicator()>
<com.battlelancer.seriesguide.settings.ActivitySettings: int getDefaultActivityTabPosition(android.content.Context)>
<com.battlelancer.seriesguide.util.TimeTools: java.lang.String[] formatToShowReleaseTimeAndDay(android.content.Context,long,java.lang.String,java.lang.String)>
<java.io.FileOutputStream: void close()>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity: void setupViews()>
<com.google.myjson.internal.$Gson$Types: void access$000(java.lang.reflect.Type)>
<android.widget.ScrollView: void onSizeChanged(int,int,int,int)>
<android.widget.ProgressBar: android.view.animation.Interpolator getInterpolator()>
<com.google.android.gms.plus.PlusOneDummyView$a: android.graphics.drawable.Drawable getDrawable(int)>
<android.preference.PreferenceActivity: android.preference.PreferenceManager getPreferenceManager()>
<android.support.v4.content.ModernAsyncTask: android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>
<android.os.AsyncTask$Status: void <clinit>()>
<java.util.NoSuchElementException: void <init>()>
<com.squareup.okhttp.internal.tls.DistinguishedNameParser: char getUTF8()>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeFlagTask: java.lang.Object doInBackground(java.lang.Object[])>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment$1: void onClick(android.view.View)>
<uk.co.senab.photoview.PhotoViewAttacher: void <init>(android.widget.ImageView)>
<android.widget.ListView: boolean isOpaque()>
<com.squareup.okhttp.ConnectionPool: long access$100(com.squareup.okhttp.ConnectionPool)>
<android.app.Notification$Builder: android.app.Notification getNotification()>
<com.battlelancer.seriesguide.billing.BillingActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread: int getFinalX(java.lang.Object)>
<com.readystatesoftware.systembartint.SystemBarTintManager$SystemBarConfig: void <init>(android.app.Activity,boolean,boolean,com.readystatesoftware.systembartint.SystemBarTintManager$1)>
<com.google.android.gms.analytics.h: java.lang.String cy()>
<com.squareup.okhttp.ResponseBody: void <init>()>
<com.google.api.client.util.ArrayMap$EntryIterator: boolean hasNext()>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences: void access$100(android.content.Context)>
<com.squareup.okhttp.internal.BitArray$FixedCapacity: void toggle(int)>
<android.view.MotionEvent: float getX()>
<com.battlelancer.seriesguide.ui.streams.UserMovieStreamFragment: void <init>()>
<com.squareup.okio.Buffer: long indexOf(byte,long)>
<com.google.android.gms.analytics.h: void <clinit>()>
<java.net.CookieHandler: java.net.CookieHandler getDefault()>
<com.google.android.gms.analytics.z: void <init>(java.lang.String)>
<com.google.android.gms.analytics.s: void a(int,android.content.Intent)>
<com.google.api.client.util.escape.Platform: void <clinit>()>
<android.support.v4.widget.DrawerLayout: boolean hasVisibleDrawer()>
<com.battlelancer.seriesguide.adapters.ListsPagerAdapter: void onCleanUp()>
<com.battlelancer.seriesguide.util.TraktTask: void <init>(android.content.Context,android.os.Bundle)>
<android.support.v4.widget.ScrollerCompat: int getCurrX()>
<com.battlelancer.seriesguide.extensions.ExtensionManager$Extension: void <init>(com.battlelancer.seriesguide.extensions.ExtensionManager)>
<com.google.api.client.json.JsonParser: java.lang.reflect.Field getCachedTypemapFieldFor(java.lang.Class)>
<com.battlelancer.seriesguide.extensions.YouTubeExtension: void <init>()>
<com.google.api.client.http.apache.ApacheHttpTransport: void <init>()>
<android.view.View: void setHorizontalScrollBarEnabled(boolean)>
<android.view.View: void setPadding(int,int,int,int)>
<com.battlelancer.seriesguide.billing.BillingActivity$2: void onClick(android.view.View)>
<android.widget.OverScroller: int getCurrY()>
<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.lang.String: void getChars(int,int,char[],int)>
<com.uwetrottmann.getglue.GetGlue$1: void <init>(com.uwetrottmann.getglue.GetGlue)>
<com.google.android.gms.plus.internal.c$a$a: com.google.android.gms.dynamic.d a(com.google.android.gms.dynamic.d,int,int,java.lang.String,int)>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeCollectedType: java.lang.String getColumn()>
<com.squareup.okhttp.OkHttpClient$1: int recycleCount(com.squareup.okhttp.Connection)>
<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>
<java.net.URLConnection: boolean getUseCaches()>
<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request getRequest()>
<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.OkHttpClient clone()>
<android.widget.FrameLayout: android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams()>
<com.squareup.okhttp.internal.http.HttpConnection: com.squareup.okhttp.Response$Builder readResponse()>
<com.mobeta.android.dslv.DragSortListView: void doRemoveItem(int)>
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
<com.battlelancer.seriesguide.util.EpisodeTools$ShowCollectedType: void <init>(android.content.Context,int,int)>
<com.battlelancer.seriesguide.dataliberation.JsonExportTask: java.io.File getExportPath(boolean)>
<com.crashlytics.android.internal.x: void <init>(com.crashlytics.android.internal.w)>
<android.support.v4.view.ViewPager: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<timber.log.Timber$1: void e(java.lang.String,java.lang.Object[])>
<android.os.Binder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>
<com.battlelancer.seriesguide.ui.ShowsFragment: void onLoaderReset(android.support.v4.content.Loader)>
<android.support.v4.view.ViewPager: void endDrag()>
<android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>
<android.support.v4.widget.ViewDragHelper: void dispatchViewReleased(float,float)>
<com.battlelancer.seriesguide.backend.CloudSetupActivity: void onCreate(android.os.Bundle)>
<com.battlelancer.seriesguide.thetvdbapi.TheTVDB: java.lang.String buildScreenshotUrl(java.lang.String)>
<com.battlelancer.seriesguide.backend.CloudSetupFragment: void access$000(com.battlelancer.seriesguide.backend.CloudSetupFragment)>
<com.google.api.client.util.LoggingOutputStream: void <init>(java.io.OutputStream,java.util.logging.Logger,java.util.logging.Level,int)>
<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment$CheckForRemovalTask: void <init>(android.content.Context)>
<com.google.api.client.repackaged.com.google.common.base.Preconditions: void checkArgument(boolean)>
<com.battlelancer.seriesguide.settings.AppSettings: boolean hasSeenNavDrawer(android.content.Context)>
<com.battlelancer.seriesguide.dataliberation.JsonImportTask: void addShowToDatabase(com.battlelancer.seriesguide.dataliberation.model.Show)>
<com.jakewharton.trakt.TraktHelper$7: void <init>()>
<com.google.myjson.stream.JsonReader: void skipToEndOfLine()>
<com.battlelancer.seriesguide.util.EpisodeTools$SeasonCollectedType: void setEpisodeProperties(com.uwetrottmann.seriesguide.backend.episodes.model.Episode)>
<android.support.v4.widget.ViewDragHelper: int getTouchSlop()>
<com.google.api.client.util.LoggingByteArrayOutputStream: void <init>(java.util.logging.Logger,java.util.logging.Level,int)>
<com.google.android.gms.plus.PlusOneButton: void <init>(android.content.Context)>
<com.battlelancer.seriesguide.util.ServiceUtils: android.content.Intent buildGooglePlayIntent(java.lang.String)>
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>
<android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread: void startScroll(java.lang.Object,int,int,int,int,int)>
<java.io.BufferedWriter: void close()>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment: void setProgressLock(boolean)>
<com.battlelancer.seriesguide.ui.EpisodesFragment$2: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<android.support.v4.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)>
<android.support.v4.content.Loader: java.lang.String dataToString(java.lang.Object)>
<java.lang.Exception: void <init>()>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Reader: void readGoAway(com.squareup.okhttp.internal.spdy.FrameReader$Handler,short,byte,int)>
<android.support.v4.app.FragmentManagerImpl: void <clinit>()>
<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: void <init>(int,boolean)>
<com.battlelancer.seriesguide.provider.SeriesGuideDatabase: long insertListItems(android.content.ContentValues)>
<com.battlelancer.seriesguide.util.EpisodeTools$SeasonCollectedType: void <init>(android.content.Context,int,int,int,int)>
<com.google.android.gms.analytics.c: boolean isConnected()>
<com.uwetrottmann.getglue.GetGlue: com.uwetrottmann.getglue.services.ObjectService objectService()>
<com.mobeta.android.dslv.DragSortController: boolean onDown(android.view.MotionEvent)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$5: void onClick(android.view.View)>
<android.support.v4.view.ViewCompat$JBViewCompatImpl: void postOnAnimation(android.view.View,java.lang.Runnable)>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment$2: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSink: void <init>(com.squareup.okhttp.internal.http.HttpConnection,long,com.squareup.okhttp.internal.http.HttpConnection$1)>
<com.battlelancer.seriesguide.ui.ActivityFragment$2: void run()>
<com.google.android.gms.analytics.ac: void <init>(com.google.android.gms.analytics.e,android.content.Context,java.lang.String,int)>
<com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment: void <init>()>
<com.squareup.picasso.Picasso$RequestTransformer$1: com.squareup.picasso.Request transformRequest(com.squareup.picasso.Request)>
<com.squareup.okhttp.internal.spdy.Huffman: byte[] decode(byte[])>
<java.util.Random: void <init>()>
<org.apache.oltu.oauth2.client.request.OAuthClientRequest: org.apache.oltu.oauth2.client.request.OAuthClientRequest$AuthenticationRequestBuilder authorizationLocation(java.lang.String)>
<com.battlelancer.seriesguide.util.TraktTools: java.lang.String buildUserRatingString(android.content.Context,com.jakewharton.trakt.enumerations.Rating)>
<java.lang.Long: java.lang.String toString(long)>
<com.battlelancer.seriesguide.ui.BaseTopActivity: void <init>()>
<android.content.Intent: android.content.Intent addFlags(int)>
<com.battlelancer.seriesguide.util.MovieTools$MovieChangedEvent: void <init>(int)>
<com.google.android.gms.analytics.w: boolean cY()>
<com.google.android.gms.analytics.h: void <init>(android.content.Context)>
<com.google.android.gms.analytics.w: boolean dg()>
<com.battlelancer.seriesguide.util.EpisodeTools$FlagType: void updateDatabase()>
<java.io.InputStream: void <init>()>
<android.content.Intent$ShortcutIconResource: void <clinit>()>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment$1: void <init>(com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment)>
<android.widget.PopupMenu: void show()>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment findFragmentByTag(java.lang.String)>
<butterknife.ButterKnife: void <clinit>()>
<com.battlelancer.seriesguide.ui.EpisodesFragment$3: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<android.view.View: void measure(int,int)>
<android.widget.RemoteViewsService: void <init>()>
<android.support.v4.widget.DrawerLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.myjson.internal.$Gson$Types$ParameterizedTypeImpl: int hashCode()>
<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.RequestBody access$300(com.squareup.okhttp.Request$Builder)>
<com.squareup.picasso.Utils$ActivityManagerHoneycomb: int getLargeMemoryClass(android.app.ActivityManager)>
<android.view.ScaleGestureDetector: boolean isInProgress()>
<com.battlelancer.seriesguide.ui.ShowsActivity: void showProgressDialog()>
<com.google.android.gms.analytics.HitBuilders$HitBuilder: com.google.android.gms.analytics.HitBuilders$HitBuilder set(java.lang.String,java.lang.String)>
<java.lang.Class: java.lang.Object newInstance()>
<com.battlelancer.seriesguide.ui.OverviewFragment: void access$700(com.battlelancer.seriesguide.ui.OverviewFragment)>
<com.squareup.picasso.Utils: void checkNotMain()>
<java.lang.Float: java.lang.Float valueOf(float)>
<com.battlelancer.seriesguide.util.DBUtils: void <clinit>()>
<android.support.v4.content.Loader: int getId()>
<com.squareup.okhttp.Response$Builder: void checkSupportResponse(java.lang.String,com.squareup.okhttp.Response)>
<com.google.api.client.json.JsonToken: void <init>(java.lang.String,int)>
<android.view.View: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>
<com.mobeta.android.dslv.DragSortListView: void destroyFloatView()>
<com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl: void <init>(com.squareup.okhttp.internal.huc.HttpURLConnectionImpl)>
<com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment: void showProgressBar(boolean)>
<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>
<com.squareup.okhttp.internal.http.HeaderParser: int skipWhitespace(java.lang.String,int)>
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat)>
<com.battlelancer.seriesguide.appwidget.ListWidgetConfigure: void setupActionBar()>
<com.battlelancer.seriesguide.util.ServiceUtils$6: void <init>(java.lang.String,java.lang.String)>
<android.widget.ImageView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>
<com.google.api.client.googleapis.services.AbstractGoogleClientRequest: com.google.api.client.http.GenericUrl buildHttpRequestUrl()>
<com.squareup.okio.RealBufferedSource: java.io.InputStream inputStream()>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$1: void <init>()>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment: void access$000(com.battlelancer.seriesguide.ui.MovieDetailsFragment)>
<android.view.View: android.view.ViewParent getParent()>
<com.battlelancer.seriesguide.ui.SeasonsFragment$UpdateUnwatchThread: void <init>(com.battlelancer.seriesguide.ui.SeasonsFragment,java.lang.String)>
<org.apache.oltu.oauth2.common.message.types.ResponseType: java.lang.String toString()>
<android.support.v4.widget.EdgeEffectCompatIcs: boolean onPull(java.lang.Object,float)>
<com.google.android.gms.wallet.fragment.SupportWalletFragment: android.support.v4.app.Fragment a(com.google.android.gms.wallet.fragment.SupportWalletFragment)>
<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>
<android.app.Activity: android.view.View findViewById(int)>
<com.battlelancer.seriesguide.ui.EpisodesFragment: com.battlelancer.seriesguide.adapters.EpisodesAdapter access$400(com.battlelancer.seriesguide.ui.EpisodesFragment)>
<com.battlelancer.seriesguide.SeriesGuideApplication: void <init>()>
<com.battlelancer.seriesguide.util.ServiceUtils: android.content.Intent buildYouTubeIntent(android.content.Context,java.lang.String)>
<java.lang.StringBuilder: void ensureCapacity(int)>
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: int getOverScrollMode(android.view.View)>
<com.battlelancer.seriesguide.settings.NotificationSettings: boolean isNotificationVibrating(android.content.Context)>
<retrofit.RestAdapter$Builder: retrofit.RestAdapter$Builder setClient(retrofit.client.Client)>
<com.google.android.gms.plus.PlusOneDummyView$a: void <init>(android.content.Context)>
<com.squareup.picasso.Stats: void processBitmap(android.graphics.Bitmap,int)>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable: void refreshLinearGradientOptions()>
<com.battlelancer.seriesguide.ui.AddFragment$AddAdapter$1: void <init>(com.battlelancer.seriesguide.ui.AddFragment$AddAdapter,com.battlelancer.seriesguide.items.SearchResult)>
<com.squareup.picasso.Request: void <init>(android.net.Uri,int,java.util.List,int,int,boolean,boolean,float,float,float,boolean,android.graphics.Bitmap$Config)>
<android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$7: boolean onPreferenceClick(android.preference.Preference)>
<java.io.File: java.lang.String toString()>
<com.squareup.okhttp.internal.spdy.Huffman: void <init>()>
<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int,int,int)>
<com.battlelancer.seriesguide.billing.IabHelper: com.battlelancer.seriesguide.billing.Inventory queryInventory(boolean,java.util.List,java.util.List)>
<java.lang.Class: java.lang.Object cast(java.lang.Object)>
<com.squareup.okio.Buffer$2: void close()>
<com.uwetrottmann.seriesguide.backend.movies.model.MovieList: void <clinit>()>
<com.battlelancer.seriesguide.util.AddShowTask: boolean addShows(java.util.List,boolean,boolean)>
<com.battlelancer.seriesguide.widgets.SlidingTabStrip$SimpleTabColorizer: void <init>()>
<android.support.v4.app.BackStackRecord: void run()>
<com.squareup.okio.AsyncTimeout: void enter()>
<com.squareup.okhttp.internal.DiskLruCache$Entry: long[] access$1000(com.squareup.okhttp.internal.DiskLruCache$Entry)>
<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okio.BufferedSource getResponseBody()>
<com.squareup.okio.RealBufferedSink$1: void <init>(com.squareup.okio.RealBufferedSink)>
<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.io.BufferedWriter: void <init>(java.io.Writer)>
<com.squareup.okhttp.internal.http.SpdyTransport$SpdySource: long read(com.squareup.okio.Buffer,long)>
<com.battlelancer.seriesguide.billing.BillingActivity: java.lang.String access$502(com.battlelancer.seriesguide.billing.BillingActivity,java.lang.String)>
<android.support.v4.app.FragmentManagerImpl: boolean popBackStackImmediate()>
<android.content.ComponentName: void <clinit>()>
<com.battlelancer.seriesguide.util.SystemUiHider$1: void onVisibilityChange(boolean)>
<android.graphics.Color: int blue(int)>
<com.mobeta.android.dslv.DragSortListView: boolean updatePositions()>
<uk.co.senab.photoview.gestures.FroyoGestureDetector$1: void <init>(uk.co.senab.photoview.gestures.FroyoGestureDetector)>
<com.squareup.okhttp.internal.spdy.Huffman: void buildTree()>
<android.widget.FrameLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment$10: void onClick(android.view.View)>
<com.battlelancer.seriesguide.ui.ActivityFragment: void access$000(com.battlelancer.seriesguide.ui.ActivityFragment,int,int,int,int,boolean)>
<android.text.TextUtils: void <clinit>()>
<com.battlelancer.seriesguide.ui.dialogs.MovieCheckInDialogFragment: void onStart()>
<com.uwetrottmann.seriesguide.backend.episodes.Episodes$Builder: com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer)>
<com.battlelancer.seriesguide.ui.ShowFragment$4: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>
<android.support.v4.content.Loader: boolean takeContentChanged()>
<com.google.api.client.util.ArrayMap: int size()>
<java.util.zip.CRC32: void reset()>
<com.google.android.gms.analytics.HitBuilders$HitBuilder: void <init>()>
<android.appwidget.AppWidgetManager: void updateAppWidget(int,android.widget.RemoteViews)>
<android.support.v4.view.ViewPager$LayoutParams: void <init>()>
<com.battlelancer.seriesguide.AnalyticsTree: void <clinit>()>
<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>
<com.battlelancer.seriesguide.dataliberation.model.List: void <init>()>
<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>
<com.jakewharton.trakt.services.ShowService$Episodes: void <init>(int,java.util.List)>
<com.uwetrottmann.seriesguide.backend.episodes.Episodes$Builder: com.uwetrottmann.seriesguide.backend.episodes.Episodes$Builder setServicePath(java.lang.String)>
<com.squareup.okio.AsyncTimeout: com.squareup.okio.AsyncTimeout awaitTimeout()>
<com.battlelancer.seriesguide.ui.BaseNavDrawerActivity: void setDrawerIndicatorEnabled(boolean)>
<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okio.BufferedSink getBufferedRequestBody()>
<com.google.api.client.googleapis.services.AbstractGoogleClient: void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)>
<com.squareup.okio.GzipSource: void consumeTrailer()>
<com.squareup.picasso.UrlConnectionDownloader: com.squareup.picasso.Downloader$Response load(android.net.Uri,boolean)>
<com.battlelancer.seriesguide.util.SystemUiHiderHoneycomb: void setup()>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment$2: void onClick(android.view.View)>
<android.support.v4.widget.ScrollerCompat: boolean computeScrollOffset()>
<com.uwetrottmann.getglue.GetGlue: org.apache.oltu.oauth2.client.response.OAuthAccessTokenResponse getAccessTokenResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.lang.UnsupportedOperationException: void <init>()>
<android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1: int getAbsoluteGravity(int,int)>
<com.squareup.picasso.ContentStreamBitmapHunter: android.graphics.Bitmap decode(com.squareup.picasso.Request)>
<com.google.api.client.util.GenericData: void putAll(java.util.Map)>
<com.squareup.okhttp.Connection: com.squareup.okhttp.Handshake getHandshake()>
<com.battlelancer.seriesguide.Constants$SeasonSorting: com.battlelancer.seriesguide.Constants$SeasonSorting[] values()>
<com.battlelancer.seriesguide.widgets.SlidingTabLayout$TabClickListener: void <init>(com.battlelancer.seriesguide.widgets.SlidingTabLayout)>
<com.google.api.client.json.gson.GsonParser: double getDoubleValue()>
<com.squareup.okhttp.internal.http.OkHeaders: long contentLength(com.squareup.okhttp.Request)>
<com.google.android.gms.analytics.aj: boolean dI()>
<com.crashlytics.android.internal.w: void <init>(com.crashlytics.android.internal.v,byte)>
<com.battlelancer.seriesguide.ui.OverviewFragment$EpisodeLoader: void <init>(android.content.Context,int)>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Reader: void readLiteralHeaderWithIncrementalIndexingIndexedName(int)>
<com.battlelancer.seriesguide.ui.StatsActivity: void onStart()>
<com.google.android.gms.analytics.s$1: void <init>(com.google.android.gms.analytics.s)>
<android.support.v4.view.ViewGroupCompat: void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)>
<android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2: void <init>(android.support.v4.app.ActionBarDrawerToggle$1)>
<com.jakewharton.trakt.services.ShowService$Show: void <init>(int)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: com.squareup.okhttp.internal.spdy.SpdyStream removeStream(int)>
<com.google.gson.internal.bind.TypeAdapters$8: void <init>()>
<android.provider.Settings$System: void <clinit>()>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment: void showProgressBar(boolean)>
<com.google.android.gms.internal.fd: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.battlelancer.seriesguide.ui.ShowsActivity: void scheduleAllShowsUpdate()>
<com.google.api.client.util.DateTime: com.google.api.client.util.DateTime parseRfc3339(java.lang.String)>
<com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment: com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment$ListsAdapter access$000(com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment)>
<com.battlelancer.seriesguide.dataliberation.JsonImportTask: void <init>(android.content.Context,com.battlelancer.seriesguide.interfaces.OnTaskFinishedListener,boolean)>
<com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment: void onDestroyView()>
<com.battlelancer.seriesguide.ui.PeopleFragment: com.battlelancer.seriesguide.adapters.PeopleAdapter access$000(com.battlelancer.seriesguide.ui.PeopleFragment)>
<android.support.v4.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)>
<uk.co.senab.photoview.scrollerproxy.IcsScroller: void <init>(android.content.Context)>
<de.greenrobot.event.SubscriberMethodFinder: java.util.List findSubscriberMethods(java.lang.Class,java.lang.String)>
<com.battlelancer.seriesguide.ui.FullscreenImageActivity$3: void run()>
<com.google.android.gms.plus.internal.c$a$a: void <init>(android.os.IBinder)>
<android.support.v4.app.NotificationCompat$Builder: android.app.Notification build()>
<android.widget.ScrollView: boolean onTouchEvent(android.view.MotionEvent)>
<android.view.KeyEvent: void <init>(int,int)>
<java.io.PrintStream: void flush()>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.battlelancer.seriesguide.ui.SeasonsFragment$4: int[] doInBackground(java.lang.String[])>
<com.battlelancer.seriesguide.ui.BaseActivity: void registerEventBus()>
<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<com.tonicartos.widget.stickygridheaders.StickyGridHeadersGridView: int getHeaderHeight()>
<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)>
<uk.co.senab.photoview.PhotoViewAttacher: void setImageViewMatrix(android.graphics.Matrix)>
<com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment$ListsAdapter: void <init>(com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment,android.content.Context,android.database.Cursor,int)>
<com.squareup.okhttp.internal.http.HttpEngine$1: void <init>()>
<com.battlelancer.seriesguide.util.ServiceUtils: void setUpImdbButton(java.lang.String,android.view.View,java.lang.String,android.content.Context)>
<com.battlelancer.seriesguide.ui.dialogs.CheckInDialogFragment: int access$000(com.battlelancer.seriesguide.ui.dialogs.CheckInDialogFragment)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$9: void <init>(android.content.Context)>
<com.battlelancer.seriesguide.ui.EpisodesActivity: java.util.ArrayList getActiveFragments()>
<com.jakewharton.trakt.Trakt: com.jakewharton.trakt.services.CommentService commentService()>
<com.battlelancer.seriesguide.traktapi.SgTrakt: retrofit.RestAdapter$Builder newRestAdapterBuilder()>
<com.battlelancer.seriesguide.ui.ShowFragment$1: void <init>(com.battlelancer.seriesguide.ui.ShowFragment)>
<com.battlelancer.seriesguide.util.EpisodeTools$ShowType: android.net.Uri getUri()>
<com.battlelancer.seriesguide.util.FlagTapedTask: boolean access$300(com.battlelancer.seriesguide.util.FlagTapedTask)>
<com.google.android.gms.analytics.ab: void c(java.lang.String,int)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void close(com.squareup.okhttp.internal.spdy.ErrorCode,com.squareup.okhttp.internal.spdy.ErrorCode)>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.readystatesoftware.systembartint.SystemBarTintManager$SystemBarConfig: int getNavigationBarHeight(android.content.Context)>
<org.apache.http.params.AbstractHttpParams: void <init>()>
<android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence)>
<com.battlelancer.seriesguide.migration.MigrationActivity: void preventUserInput(boolean)>
<com.google.api.client.util.FieldInfo: void <clinit>()>
<android.app.Dialog: void show()>
<com.google.android.gms.dynamic.d$a: android.os.IBinder asBinder()>
<android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl: float getXVelocity(android.view.VelocityTracker,int)>
<com.squareup.okhttp.Cache: void remove(com.squareup.okhttp.Request)>
<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>
<com.battlelancer.seriesguide.util.Utils: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.Button,int,int,int,int)>
<android.support.v4.widget.ScrollerCompatGingerbread: void startScroll(java.lang.Object,int,int,int,int,int)>
<java.util.TreeSet: void <init>(java.util.Comparator)>
<java.lang.IndexOutOfBoundsException: void <init>()>
<java.util.ArrayList: boolean remove(java.lang.Object)>
<com.google.api.client.http.HttpHeaders$ParseHeaderState: void finish()>
<java.lang.RuntimeException: void <init>(java.lang.Throwable)>
<com.google.myjson.stream.JsonWriter: void setHtmlSafe(boolean)>
<com.google.api.client.util.ArrayMap: java.lang.Object set(int,java.lang.Object,java.lang.Object)>
<com.squareup.picasso.ContactsPhotoBitmapHunter: android.graphics.Bitmap decode(com.squareup.picasso.Request)>
<android.widget.Scroller: void startScroll(int,int,int,int,int)>
<android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo: void <init>(android.app.Activity)>
<android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)>
<com.mobeta.android.dslv.DragSortListView: int getItemHeight(int)>
<android.support.v4.app.NotificationCompat$Style: void setBuilder(android.support.v4.app.NotificationCompat$Builder)>
<com.battlelancer.seriesguide.util.TraktTools: java.lang.String buildRatingVotesString(android.content.Context,java.lang.Integer)>
<android.support.v4.app.DialogFragment: void onStart()>
<com.squareup.okhttp.internal.http.HttpTransport: boolean canReuseConnection()>
<android.graphics.Matrix: void setRotate(float)>
<com.battlelancer.seriesguide.ui.OverviewFragment$2: void onClick(android.view.View)>
<com.google.api.client.util.ClassInfo: void <clinit>()>
<android.widget.EdgeEffect: void finish()>
<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>
<com.battlelancer.seriesguide.ui.PeopleFragment: void setActivateOnItemClick(boolean)>
<com.squareup.okhttp.internal.spdy.HpackDraft07: com.squareup.okhttp.internal.spdy.Header[] access$000()>
<com.battlelancer.seriesguide.extensions.ExtensionPackageChangeReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.squareup.okhttp.Address: javax.net.ssl.SSLSocketFactory getSslSocketFactory()>
<com.squareup.okhttp.OkHttpClient$1: com.squareup.okhttp.internal.RouteDatabase routeDatabase(com.squareup.okhttp.OkHttpClient)>
<android.support.v4.app.DialogFragment: void <init>()>
<android.app.Activity: void invalidateOptionsMenu()>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$8: void <init>(com.battlelancer.seriesguide.ui.MovieDetailsFragment)>
<android.support.v4.content.Loader: void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener)>
<com.google.android.gms.analytics.aj: java.lang.String dF()>
<com.squareup.picasso.MarkableInputStream: void <init>(java.io.InputStream)>
<com.battlelancer.seriesguide.ui.TvdbAddFragment$1: void onClick(android.view.View)>
<com.battlelancer.seriesguide.ui.BaseSettingsFragment: void <init>()>
<com.battlelancer.seriesguide.billing.IabException: void <init>(int,java.lang.String,java.lang.Exception)>
<android.graphics.Region: void finalize()>
<android.app.Activity: void onStart()>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment: com.battlelancer.seriesguide.ui.TraktShoutsFragment newInstanceShow(int)>
<com.squareup.picasso.MarkableInputStream: void skip(long,long)>
<com.battlelancer.seriesguide.util.SelectionBuilder: int delete(android.database.sqlite.SQLiteDatabase)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>
<com.mobeta.android.dslv.DragSortController: void <init>(com.mobeta.android.dslv.DragSortListView,int,int,int,int,int)>
<com.crashlytics.android.internal.v: void <init>()>
<java.lang.Integer: void <clinit>()>
<android.support.v4.app.FragmentStatePagerAdapter: void <init>(android.support.v4.app.FragmentManager)>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: com.squareup.okhttp.internal.http.HttpEngine newHttpEngine(java.lang.String,com.squareup.okhttp.Connection,com.squareup.okhttp.internal.http.RetryableSink,com.squareup.okhttp.Response)>
<java.math.BigDecimal: void <init>(java.lang.String)>
<com.squareup.picasso.Request: void <clinit>()>
<com.google.api.client.googleapis.extensions.android.accounts.GoogleAccountManager: android.accounts.Account[] getAccounts()>
<com.google.api.client.json.gson.GsonParser: long getLongValue()>
<android.support.v4.widget.ViewDragHelper$Callback: void <init>()>
<android.view.View: void postInvalidateDelayed(long)>
<com.battlelancer.seriesguide.ui.OverviewFragment: void onLoadEpisodeDetails(android.database.Cursor)>
<android.widget.ImageView: boolean hasOverlappingRendering()>
<com.google.myjson.stream.JsonWriter: void setLenient(boolean)>
<android.view.KeyEvent: int getMetaState()>
<com.battlelancer.seriesguide.provider.SeriesGuideDatabase: long insertEpisodes(android.content.ContentValues)>
<com.google.android.gms.analytics.t: java.lang.Thread getThread()>
<com.google.api.client.util.Data: boolean isPrimitive(java.lang.reflect.Type)>
<com.battlelancer.seriesguide.billing.IabHelper: void queryInventoryAsync(com.battlelancer.seriesguide.billing.IabHelper$QueryInventoryFinishedListener)>
<android.widget.ArrayAdapter: int getCount()>
<com.battlelancer.seriesguide.ui.TraktShoutsActivity: android.os.Bundle createInitBundleEpisode(int,int,int,java.lang.String)>
<com.squareup.picasso.Utils: boolean isAirplaneModeOn(android.content.Context)>
<android.support.v4.widget.ViewDragHelper: void <clinit>()>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$3: void <init>(android.app.Activity)>
<com.google.android.gms.analytics.h: java.lang.String a(com.google.android.gms.analytics.h,java.lang.String)>
<com.uwetrottmann.seriesguide.backend.movies.MoviesRequest: com.google.api.client.googleapis.services.AbstractGoogleClient getAbstractGoogleClient()>
<java.net.URL: java.lang.String getPath()>
<com.battlelancer.seriesguide.ui.ListsActivity: void onDestroy()>
<com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSource: void <init>(com.squareup.okhttp.internal.http.HttpConnection,java.net.CacheRequest,long)>
<com.google.android.gms.common.GooglePlayServicesNotAvailableException: void <init>(int)>
<java.lang.Enum: boolean equals(java.lang.Object)>
<android.widget.ScrollView: void scrollTo(int,int)>
<com.squareup.okhttp.Cache$CacheResponseBody: void <init>(com.squareup.okhttp.internal.DiskLruCache$Snapshot,java.lang.String,java.lang.String)>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder: fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder progressiveStartSpeed(float)>
<com.uwetrottmann.androidutils.AndroidUtils: boolean isHoneycombOrHigher()>
<com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment$2: void onClick(android.view.View)>
<com.google.api.client.http.UriTemplate$CompositeOutput: boolean getReservedExpansion()>
<com.squareup.okhttp.internal.http.HttpConnection: void poolOnIdle()>
<android.support.v4.widget.EdgeEffectCompatIcs: boolean onRelease(java.lang.Object)>
<java.net.Socket: void close()>
<com.battlelancer.seriesguide.ui.OverviewFragment$8: void <init>(com.battlelancer.seriesguide.ui.OverviewFragment)>
<android.view.ViewGroup: void removeView(android.view.View)>
<com.squareup.okhttp.internal.spdy.Http20Draft12$ContinuationSource: long read(com.squareup.okio.Buffer,long)>
<com.squareup.picasso.Utils: void <clinit>()>
<android.support.v4.view.ViewPager: void onDetachedFromWindow()>
<com.uwetrottmann.getglue.client.GetGlueHttpClient: org.apache.oltu.oauth2.client.response.OAuthClientResponse execute(org.apache.oltu.oauth2.client.request.OAuthClientRequest,java.util.Map,java.lang.String,java.lang.Class)>
<com.squareup.okhttp.internal.tls.OkHostnameVerifier: boolean verifyAsIpAddress(java.lang.String)>
<android.support.v4.view.ViewCompat$JBViewCompatImpl: void setImportantForAccessibility(android.view.View,int)>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeWatchedPreviousType: android.content.ContentValues getContentValues()>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity$2: void <init>(com.battlelancer.seriesguide.ui.BackupDeleteActivity)>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void finalize()>
<java.lang.Thread: void <init>()>
<java.lang.String: boolean endsWith(java.lang.String)>
<com.squareup.okhttp.ConnectionPool$1: void run()>
<android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase: boolean isFinished(java.lang.Object)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void onLoadRemainingCounter()>
<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>
<com.google.api.client.util.ArrayMap: com.google.api.client.util.ArrayMap clone()>
<com.battlelancer.seriesguide.ui.TraktShoutsActivity: android.os.Bundle createInitBundleShow(java.lang.String,int)>
<com.squareup.picasso.NetworkBitmapHunter: android.graphics.Bitmap decodeStream(java.io.InputStream,com.squareup.picasso.Request)>
<com.battlelancer.seriesguide.util.TraktSummaryTask: com.battlelancer.seriesguide.util.TraktSummaryTask$RatingsWrapper doInBackground(java.lang.Void[])>
<com.squareup.okhttp.internal.spdy.SpdyConnection$6: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],int,com.squareup.okio.Buffer,int,boolean)>
<com.squareup.okhttp.internal.spdy.Http20Draft12: short access$400(short,byte,short)>
<com.battlelancer.seriesguide.util.ShareUtils: java.lang.String onCreateShareString(android.content.Context,android.database.Cursor)>
<com.squareup.okhttp.internal.spdy.Huffman$Node: com.squareup.okhttp.internal.spdy.Huffman$Node[] access$000(com.squareup.okhttp.internal.spdy.Huffman$Node)>
<com.squareup.okio.Util: void <clinit>()>
<com.squareup.okhttp.Handshake: java.lang.String cipherSuite()>
<com.battlelancer.seriesguide.backend.CloudEndpointUtils$1: void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)>
<com.battlelancer.seriesguide.ui.OverviewActivity: void onAttachFragment(android.support.v4.app.Fragment)>
<android.support.v4.app.TaskStackBuilderHoneycomb: android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int)>
<java.util.ArrayList: int size()>
<com.google.gson.stream.JsonReader$1: void <init>()>
<android.os.Parcel: android.os.Parcel obtain()>
<com.battlelancer.seriesguide.ui.OverviewFragment$11: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.google.gson.internal.bind.ObjectTypeAdapter$1: void <init>()>
<com.squareup.picasso.Utils: void log(java.lang.String,java.lang.String,java.lang.String)>
<com.battlelancer.seriesguide.ui.PeopleActivity: void setupActionBar()>
<com.google.gson.TreeTypeAdapter$SingleTypeFactory: void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class)>
<com.google.api.client.util.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>
<android.widget.FrameLayout$LayoutParams: void <init>(int,int,int)>
<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment: void showProgressBar(boolean)>
<android.support.v4.view.ViewCompatHC: void setLayerType(android.view.View,int,android.graphics.Paint)>
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>
<com.battlelancer.seriesguide.util.LocalOnlyOkHttpDownloader: boolean parseResponseSourceHeader(java.lang.String)>
<butterknife.ButterKnife: java.lang.reflect.Method findResettersForClass(java.lang.Class)>
<com.squareup.okhttp.internal.Util: int getEffectivePort(java.net.URI)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$1: void onClick(android.view.View)>
<com.google.myjson.internal.bind.TypeAdapters$8: void <init>()>
<com.battlelancer.seriesguide.util.DBUtils: java.lang.String[][] buildActivityQuery(android.content.Context,java.lang.String,boolean,int)>
<java.util.AbstractMap: boolean equals(java.lang.Object)>
<com.battlelancer.seriesguide.ui.ShowFragment$3: void onClick(android.view.View)>
<com.squareup.okhttp.internal.http.OkHeaders: long contentLength(com.squareup.okhttp.Response)>
<com.google.android.gms.internal.et: int a(android.util.DisplayMetrics,int)>
<java.util.Arrays: java.lang.String toString(java.lang.Object[])>
<com.battlelancer.seriesguide.appwidget.AppWidget$UpdateService: android.widget.RemoteViews buildUpdate(android.content.Context,java.lang.String,int,int,android.content.Intent)>
<com.battlelancer.seriesguide.billing.IabHelper: com.battlelancer.seriesguide.billing.Inventory queryInventory(boolean,java.util.List)>
<com.google.api.client.util.ArrayMap: int getDataIndexOfKey(java.lang.Object)>
<com.google.android.gms.wallet.fragment.WalletFragment$c: void <init>(com.google.android.gms.wallet.fragment.WalletFragment)>
<android.support.v4.widget.DrawerLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.squareup.picasso.MediaStoreBitmapHunter: int getExifOrientation(android.content.ContentResolver,android.net.Uri)>
<com.google.api.client.util.GenericData: java.lang.Object put(java.lang.String,java.lang.Object)>
<android.support.v4.content.AsyncTaskLoader: boolean cancelLoad()>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment: void <init>()>
<android.view.animation.Animation: void setDuration(long)>
<com.squareup.okhttp.internal.spdy.Spdy3$Writer: void pushPromise(int,int,java.util.List)>
<com.mobeta.android.dslv.DragSortListView: void measureFloatView()>
<com.battlelancer.seriesguide.ui.EpisodesFragment: void onActivityCreated(android.os.Bundle)>
<com.mobeta.android.dslv.DragSortListView: void removeItem(int,float)>
<android.app.Application: void registerActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks)>
<com.squareup.okhttp.internal.DiskLruCache: boolean journalRebuildRequired()>
<com.battlelancer.seriesguide.util.TraktTask: com.battlelancer.seriesguide.util.TraktTask shoutEpisode(int,int,int,java.lang.String,boolean)>
<com.battlelancer.seriesguide.ui.OverviewActivity: void <init>()>
<com.battlelancer.seriesguide.ui.EpisodesFragment$2: void <init>(com.battlelancer.seriesguide.ui.EpisodesFragment)>
<java.io.PrintWriter: void println(java.lang.String)>
<com.squareup.okhttp.OkUrlFactory: void <init>(com.squareup.okhttp.OkHttpClient)>
<java.lang.Enum: java.lang.String name()>
<android.support.v4.app.FragmentManagerImpl: void detachFragment(android.support.v4.app.Fragment,int,int)>
<com.battlelancer.seriesguide.ui.ShowFragment: void <init>()>
<com.squareup.okhttp.internal.spdy.SpdyStream: void close(com.squareup.okhttp.internal.spdy.ErrorCode)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment$11: void <init>(com.battlelancer.seriesguide.ui.EpisodeDetailsFragment)>
<android.webkit.WebView: void <init>(android.content.Context)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$6: void <init>(com.battlelancer.seriesguide.ui.MovieDetailsFragment,java.lang.String)>
<android.widget.AdapterView: int getFirstVisiblePosition()>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<com.google.myjson.internal.bind.TypeAdapters$29: void <init>(java.lang.Class,java.lang.Class,com.google.myjson.TypeAdapter)>
<com.squareup.picasso.OkHttpDownloader: com.squareup.picasso.Downloader$Response load(android.net.Uri,boolean)>
<com.battlelancer.seriesguide.dataliberation.JsonImportTask: int importLists(java.io.File)>
<android.content.Intent: java.lang.String getAction()>
<com.google.android.gms.dynamic.d$a$a: android.os.IBinder asBinder()>
<android.support.v4.view.AccessibilityDelegateCompatJellyBean: java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean)>
<com.squareup.okhttp.internal.http.SpdyTransport: void disconnect(com.squareup.okhttp.internal.http.HttpEngine)>
<com.battlelancer.seriesguide.sync.AccountUtils: void createAccount(android.content.Context)>
<com.squareup.okhttp.internal.DiskLruCache$Entry: boolean access$600(com.squareup.okhttp.internal.DiskLruCache$Entry)>
<android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl: void <init>()>
<java.io.PrintWriter: void close()>
<java.lang.ThreadLocal: void set(java.lang.Object)>
<com.battlelancer.seriesguide.settings.NotificationSettings: long getLastNotified(android.content.Context)>
<com.battlelancer.seriesguide.extensions.AmazonConfigurationFragment: void <init>()>
<com.battlelancer.seriesguide.ui.SeasonsFragment$2: void <init>(com.battlelancer.seriesguide.ui.SeasonsFragment)>
<java.net.URL: java.lang.String getQuery()>
<android.content.Intent: android.os.Bundle getExtras()>
<com.squareup.okhttp.Response: com.squareup.okhttp.Handshake access$1500(com.squareup.okhttp.Response)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>
<com.google.api.client.json.JsonGenerator: void serialize(boolean,java.lang.Object)>
<com.squareup.okhttp.internal.DiskLruCache$Entry: java.io.File getCleanFile(int)>
<org.apache.oltu.oauth2.client.request.OAuthClientRequest$AuthenticationRequestBuilder: org.apache.oltu.oauth2.client.request.OAuthClientRequest$AuthenticationRequestBuilder setRedirectURI(java.lang.String)>
<com.battlelancer.seriesguide.ui.HelpActivity: void onCreate(android.os.Bundle)>
<android.app.Notification$Builder: android.app.Notification$Builder setPriority(int)>
<com.battlelancer.seriesguide.util.SelectionBuilder: com.battlelancer.seriesguide.util.SelectionBuilder mapToTable(java.lang.String,java.lang.String)>
<com.squareup.okhttp.Cache$1: java.net.CacheRequest put(com.squareup.okhttp.Response)>
<uk.co.senab.photoview.PhotoViewAttacher: android.graphics.RectF getDisplayRect()>
<android.support.v4.widget.ScrollerCompatGingerbread: boolean computeScrollOffset(java.lang.Object)>
<android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB: android.os.Bundle toBundle()>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$ListItems: java.lang.String generateListItemId(int,int,java.lang.String)>
<android.support.v4.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeWatchedPreviousType: int getLastWatchedEpisodeTvdbId()>
<com.mobeta.android.dslv.DragSortListView: boolean listViewIntercepted()>
<android.os.Looper: android.os.Looper myLooper()>
<android.support.v4.widget.ViewDragHelper: void dragTo(int,int,int,int)>
<android.support.v4.app.LoaderManagerImpl: void doReportNextStart()>
<android.view.View$BaseSavedState: void <clinit>()>
<com.battlelancer.seriesguide.ui.SearchFragment: void onActivityCreated(android.os.Bundle)>
<com.squareup.picasso.MediaStoreBitmapHunter: void <init>(android.content.Context,com.squareup.picasso.Picasso,com.squareup.picasso.Dispatcher,com.squareup.picasso.Cache,com.squareup.picasso.Stats,com.squareup.picasso.Action)>
<com.squareup.okhttp.OkHttpClient: javax.net.ssl.HostnameVerifier getHostnameVerifier()>
<com.battlelancer.seriesguide.settings.UpdateSettings: long getLastAutoUpdateTime(android.content.Context)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$2: void <init>(com.battlelancer.seriesguide.ui.MovieDetailsFragment,java.lang.String,java.lang.String)>
<com.battlelancer.seriesguide.billing.BillingActivity: void onExpiredNotification(android.content.Context)>
<com.mobeta.android.dslv.DragSortController: void setDragInitMode(int)>
<com.uwetrottmann.seriesguide.backend.shows.model.ShowList: com.google.api.client.util.GenericData clone()>
<com.battlelancer.seriesguide.ui.StatsFragment$StatsTask: java.lang.Object doInBackground(java.lang.Object[])>
<com.battlelancer.seriesguide.util.TraktTask: com.battlelancer.seriesguide.util.TraktTask watchlistMovie(int)>
<com.battlelancer.seriesguide.settings.TraktCredentials: com.battlelancer.seriesguide.settings.TraktCredentials get(android.content.Context)>
<com.google.android.gms.analytics.t: java.lang.String y(android.content.Context)>
<com.battlelancer.seriesguide.util.SelectionBuilder: int update(android.database.sqlite.SQLiteDatabase,android.content.ContentValues)>
<android.widget.ScrollView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.battlelancer.seriesguide.Constants$EpisodeSorting: java.lang.String query()>
<android.support.v4.view.MotionEventCompatEclair: int getPointerId(android.view.MotionEvent,int)>
<java.util.AbstractMap: int hashCode()>
<uk.co.senab.photoview.PhotoViewAttacher: void updateBaseMatrix(android.graphics.drawable.Drawable)>
<com.squareup.okhttp.Response: com.squareup.okhttp.Handshake handshake()>
<android.support.v4.view.KeyEventCompat: boolean hasNoModifiers(android.view.KeyEvent)>
<com.battlelancer.seriesguide.ui.OverviewFragment: android.database.Cursor access$800(com.battlelancer.seriesguide.ui.OverviewFragment)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: boolean pushedStream(int)>
<com.google.api.client.http.HttpResponse: int getStatusCode()>
<uk.co.senab.photoview.PhotoView: void onDetachedFromWindow()>
<com.jakewharton.trakt.TraktHelper$4: void <init>()>
<com.google.android.gms.dynamic.d$a: com.google.android.gms.dynamic.d ag(android.os.IBinder)>
<android.support.v4.widget.EdgeEffectCompatIcs: java.lang.Object newEdgeEffect(android.content.Context)>
<android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase: android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle)>
<java.math.BigDecimal: float floatValue()>
<com.google.api.client.http.javanet.NetHttpRequest: void addHeader(java.lang.String,java.lang.String)>
<com.squareup.okhttp.OkHttpClient: java.net.Proxy getProxy()>
<com.squareup.okhttp.internal.http.RouteSelector: void resetNextProxy(java.net.URI,java.net.Proxy)>
<com.battlelancer.seriesguide.billing.Inventory: com.battlelancer.seriesguide.billing.Purchase getPurchase(java.lang.String)>
<com.google.myjson.Gson: com.google.myjson.TypeAdapter doubleAdapter(boolean)>
<com.battlelancer.seriesguide.util.ServiceUtils: com.squareup.picasso.Picasso getPicasso(android.content.Context)>
<com.battlelancer.seriesguide.util.DBUtils: int getUnwatchedEpisodesOfShow(android.content.Context,java.lang.String)>
<com.battlelancer.seriesguide.util.TaskManager: void performAddTask(java.util.List,boolean,boolean)>
<com.squareup.okhttp.internal.DiskLruCache$Snapshot: void close()>
<com.google.gson.internal.$Gson$Types: int hashCodeOrZero(java.lang.Object)>
<android.support.v4.widget.DrawerLayout: android.view.View findOpenDrawer()>
<com.tonicartos.widget.stickygridheaders.StickyGridHeadersGridView: void onScrollStateChanged(android.widget.AbsListView,int)>
<com.google.android.gms.analytics.ai$a: com.google.android.gms.analytics.j cB()>
<android.support.v4.app.NotificationCompatHoneycomb: android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)>
<android.widget.TextView: void jumpDrawablesToCurrentState()>
<com.battlelancer.seriesguide.ui.FirstRunFragment$1: void <init>(com.battlelancer.seriesguide.ui.FirstRunFragment)>
<org.apache.oltu.oauth2.common.utils.OAuthUtils: java.lang.String toString(java.io.InputStream,java.lang.String)>
<javax.net.ssl.HttpsURLConnection: void <init>(java.net.URL)>
<com.google.android.gms.common.SupportErrorDialogFragment: com.google.android.gms.common.SupportErrorDialogFragment newInstance(android.app.Dialog,android.content.DialogInterface$OnCancelListener)>
<com.uwetrottmann.getglue.client.GetGlueHttpClient: void <init>()>
<com.google.android.gms.internal.ck: void <init>(android.app.Activity,int)>
<java.lang.Character: int toCodePoint(char,char)>
<android.support.v4.view.ViewPager: void <init>(android.content.Context)>
<android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl: void <init>()>
<retrofit.Platform: retrofit.Platform findPlatform()>
<java.text.DateFormatSymbols: void <init>(java.util.Locale)>
<com.battlelancer.seriesguide.ui.ShowsActivity: void checkPurchase()>
<com.battlelancer.seriesguide.settings.NotificationSettings: java.lang.String getNotificationsRingtone(android.content.Context)>
<android.support.v4.widget.ViewDragHelper: int getViewDragState()>
<com.google.gson.stream.JsonWriter: void beforeName()>
<com.battlelancer.seriesguide.ui.StatsFragment$Stats: com.battlelancer.seriesguide.ui.StatsFragment$Stats showsWithNextEpisodes(int)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: com.battlelancer.seriesguide.ui.SeasonsFragment newInstance(int)>
<com.battlelancer.seriesguide.util.SystemUiHiderHoneycomb: void <init>(android.app.Activity,android.view.View,int)>
<com.google.api.client.util.Data: void <clinit>()>
<com.battlelancer.seriesguide.backend.HexagonTools: void storeAccountName(android.content.Context,java.lang.String)>
<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout access$700(com.squareup.okhttp.internal.spdy.SpdyStream)>
<com.battlelancer.seriesguide.util.MovieTools: void removeFromList(android.content.Context,int,java.lang.Boolean,java.lang.String)>
<android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl: void <init>()>
<com.squareup.picasso.Stats: void dispatchCacheHit()>
<com.battlelancer.seriesguide.ui.OverviewFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>
<com.battlelancer.seriesguide.dataliberation.JsonExportTask: void <clinit>()>
<com.google.api.client.http.HttpHeaders: com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object)>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment$2: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<com.squareup.okhttp.CacheControl: int maxStaleSeconds()>
<com.squareup.okhttp.internal.Platform: void tagSocket(java.net.Socket)>
<java.lang.Void: void <clinit>()>
<com.crashlytics.android.internal.w: void a(com.crashlytics.android.internal.w,android.app.Application)>
<android.preference.PreferenceFragment: android.preference.Preference findPreference(java.lang.CharSequence)>
<android.support.v4.view.ViewPager: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.squareup.okhttp.internal.spdy.Header: void <init>(com.squareup.okio.ByteString,java.lang.String)>
<com.squareup.okhttp.internal.http.OkHeaders: java.util.List parseChallenges(com.squareup.okhttp.Headers,java.lang.String)>
<java.lang.Math: long max(long,long)>
<com.squareup.okio.AsyncTimeout: void exit(boolean)>
<android.database.sqlite.SQLiteOpenHelper: void close()>
<com.squareup.picasso.ContactsPhotoBitmapHunter$ContactPhotoStreamIcs: java.io.InputStream get(android.content.ContentResolver,android.net.Uri)>
<com.battlelancer.seriesguide.util.Utils: void runNotificationServiceDelayed(android.content.Context)>
<java.util.zip.DeflaterOutputStream: void flush()>
<com.mobeta.android.dslv.DragSortListView$DragScroller: void <init>(com.mobeta.android.dslv.DragSortListView)>
<android.support.v4.widget.DrawerLayout$SavedState: void <clinit>()>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment$2: void onLoadFinished(android.support.v4.content.Loader,java.util.List)>
<com.google.api.client.util.Data: java.lang.reflect.Type resolveWildcardTypeOrTypeVariable(java.util.List,java.lang.reflect.Type)>
<com.mobeta.android.dslv.DragSortController: void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point)>
<com.squareup.okhttp.internal.spdy.SpdyStream: int access$600(com.squareup.okhttp.internal.spdy.SpdyStream)>
<com.google.gson.internal.bind.ArrayTypeAdapter$1: void <init>()>
<com.battlelancer.seriesguide.billing.IabException: com.battlelancer.seriesguide.billing.IabResult getResult()>
<com.battlelancer.seriesguide.adapters.TraktCommentsAdapter: void <init>(android.content.Context)>
<com.google.myjson.internal.bind.DateTypeAdapter$1: void <init>()>
<com.tonicartos.widget.stickygridheaders.StickyGridHeadersGridView: void onScroll(android.widget.AbsListView,int,int,int)>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<android.widget.FrameLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<android.support.v4.app.NotificationCompat$NotificationCompatImplBase: android.app.Notification build(android.support.v4.app.NotificationCompat$Builder)>
<com.google.android.gms.analytics.c: void cn()>
<java.lang.String: java.lang.String valueOf(int)>
<android.view.View$MeasureSpec: int getSize(int)>
<com.uwetrottmann.seriesguide.backend.movies.MoviesRequest: com.google.api.client.googleapis.services.AbstractGoogleClientRequest setDisableGZipContent(boolean)>
<android.widget.FrameLayout: void onMeasure(int,int)>
<java.io.PrintWriter: void print(int)>
<android.support.v4.view.ViewPager: boolean canScrollHorizontally(int)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void writePingLater(boolean,int,int,com.squareup.okhttp.internal.spdy.Ping)>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity$1: void <init>(com.battlelancer.seriesguide.ui.BackupDeleteActivity)>
<com.uwetrottmann.seriesguide.backend.shows.Shows$Builder: com.uwetrottmann.seriesguide.backend.shows.Shows$Builder setServicePath(java.lang.String)>
<com.squareup.okhttp.internal.http.RetryableSink: com.squareup.okio.Timeout timeout()>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<com.squareup.okhttp.internal.spdy.SpdyConnection: int access$1502(com.squareup.okhttp.internal.spdy.SpdyConnection,int)>
<com.battlelancer.seriesguide.ui.BaseNavDrawerActivity$1: void <init>(com.battlelancer.seriesguide.ui.BaseNavDrawerActivity,android.app.Activity,android.support.v4.widget.DrawerLayout,int,int,int)>
<java.lang.reflect.Modifier: boolean isAbstract(int)>
<java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>
<com.squareup.okhttp.internal.spdy.Settings: boolean isPersisted(int)>
<com.crashlytics.android.internal.x: void onActivityCreated(android.app.Activity,android.os.Bundle)>
<com.battlelancer.seriesguide.ui.SearchActivity: void onNewIntent(android.content.Intent)>
<com.google.api.client.http.apache.ApacheHttpTransport: org.apache.http.impl.client.DefaultHttpClient newDefaultHttpClient(org.apache.http.conn.ssl.SSLSocketFactory,org.apache.http.params.HttpParams,java.net.ProxySelector)>
<com.google.android.gms.analytics.k: com.google.android.gms.analytics.j r(int)>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest: com.google.api.client.googleapis.json.GoogleJsonResponseException newExceptionOnError(com.google.api.client.http.HttpResponse)>
<android.widget.TextView: void onMeasure(int,int)>
<android.support.v4.view.ViewPager: void access$000(android.support.v4.view.ViewPager,int)>
<com.google.myjson.stream.JsonReader: boolean isLenient()>
<java.io.IOException: void <init>(java.lang.Throwable)>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence)>
<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSink: void close()>
<com.google.api.client.util.Types: java.lang.reflect.Type getActualParameterAtPosition(java.lang.reflect.Type,java.lang.Class,int)>
<android.support.v4.util.SimpleArrayMap: java.lang.Object remove(java.lang.Object)>
<android.os.StatFs: int getBlockSize()>
<com.google.api.client.json.gson.GsonGenerator: void writeNull()>
<android.view.View: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<java.io.Writer: void <init>()>
<com.squareup.okhttp.internal.spdy.SpdyConnection: int access$1500(com.squareup.okhttp.internal.spdy.SpdyConnection)>
<android.support.v4.app.ListFragment$1: void run()>
<android.support.v4.view.ViewPager: float distanceInfluenceForSnapDuration(float)>
<com.google.api.client.http.HttpMediaType: com.google.api.client.http.HttpMediaType setCharsetParameter(java.nio.charset.Charset)>
<com.battlelancer.seriesguide.ui.PersonFragment: void access$100(com.battlelancer.seriesguide.ui.PersonFragment,com.uwetrottmann.tmdb.entities.Person)>
<android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment: android.widget.PopupMenu access$300(com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: int access$1600(com.squareup.okhttp.internal.spdy.SpdyConnection)>
<com.battlelancer.seriesguide.util.tasks.HexagonRemoveMovieFromCollectionTask: void setMovieProperties(com.uwetrottmann.seriesguide.backend.movies.model.Movie)>
<java.util.UUID: java.util.UUID randomUUID()>
<com.google.api.client.http.AbstractHttpContent: long getLength()>
<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>
<java.lang.ClassCastException: void <init>(java.lang.String)>
<com.battlelancer.seriesguide.ui.ListsActivity: void onListsChanged()>
<com.battlelancer.seriesguide.util.EpisodeTools$ShowType: java.lang.String getSelection()>
<com.squareup.picasso.OkHttpDownloader: void <init>(java.io.File)>
<java.lang.Class: boolean isInstance(java.lang.Object)>
<com.battlelancer.seriesguide.ui.ShowsActivity$2: void <init>(com.battlelancer.seriesguide.ui.ShowsActivity)>
<android.widget.ProgressBar: void onMeasure(int,int)>
<com.battlelancer.seriesguide.billing.Base64: byte[] decode(byte[],int,int,byte[])>
<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>
<android.content.IntentFilter: void <init>()>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment: void access$300(com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment,com.battlelancer.seriesguide.items.SearchResult)>
<com.squareup.okhttp.OkHttpClient$1: boolean isConnected(com.squareup.okhttp.Connection)>
<com.squareup.okhttp.Response: java.util.List challenges()>
<android.support.v4.app.DialogFragment: void onDestroyView()>
<com.squareup.picasso.Dispatcher$DispatcherThread: void <init>()>
<android.os.AsyncTask: boolean cancel(boolean)>
<com.battlelancer.seriesguide.ui.StatsFragment: void loadStats()>
<java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>
<com.battlelancer.seriesguide.billing.IabResult: boolean isFailure()>
<android.support.v4.content.ModernAsyncTask: void <init>()>
<com.google.android.gms.analytics.ah: boolean cC()>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void access$600(com.battlelancer.seriesguide.ui.SeasonsFragment,java.lang.String)>
<com.google.api.client.json.JsonParser: void parse(java.util.ArrayList,java.lang.Object,com.google.api.client.json.CustomizeJsonParser)>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Headers$Builder access$500(com.squareup.okhttp.Response$Builder)>
<com.battlelancer.seriesguide.ui.ShowFragment: void onRateOnTrakt()>
<com.squareup.okhttp.internal.http.HttpEngine: void releaseConnection()>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment$1: void <init>(com.battlelancer.seriesguide.ui.TraktShoutsFragment)>
<android.support.v4.util.ContainerHelpers: int idealByteArraySize(int)>
<com.google.api.client.json.GenericJson: com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object)>
<com.jakewharton.trakt.Trakt: retrofit.RestAdapter getRestAdapter()>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Seasons: void <clinit>()>
<com.battlelancer.seriesguide.settings.WidgetSettings: int getWidgetBackgroundColor(android.content.Context,int)>
<com.battlelancer.seriesguide.ui.ShowsFragment$ShowsQuery: void <clinit>()>
<com.battlelancer.seriesguide.ui.dialogs.AddListDialogFragment: com.battlelancer.seriesguide.interfaces.OnListsChangedListener access$100(com.battlelancer.seriesguide.ui.dialogs.AddListDialogFragment)>
<com.google.api.client.json.JsonParser: java.lang.Object parse(java.lang.reflect.Type,boolean)>
<android.support.v4.app.Fragment: void performReallyStop()>
<android.support.v4.widget.DrawerLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment: com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment newInstanceMovie(int)>
<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<uk.co.senab.photoview.PhotoViewAttacher: void setImageViewScaleTypeMatrix(android.widget.ImageView)>
<com.battlelancer.seriesguide.items.Series: void setRuntime(java.lang.String)>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity$ExportDatabaseTask: void <init>(com.battlelancer.seriesguide.ui.BackupDeleteActivity)>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<com.readystatesoftware.systembartint.SystemBarTintManager$SystemBarConfig: int getStatusBarHeight()>
<com.google.myjson.internal.bind.TypeAdapters$20: void <init>()>
<com.battlelancer.seriesguide.Constants$SeasonSorting: void <clinit>()>
<timber.log.Timber: void <clinit>()>
<com.squareup.okio.RealBufferedSource: void <init>(com.squareup.okio.Source)>
<com.squareup.okhttp.internal.spdy.Header: void <init>(com.squareup.okio.ByteString,com.squareup.okio.ByteString)>
<com.google.myjson.internal.bind.TypeAdapters$22: void <init>()>
<com.battlelancer.seriesguide.appwidget.AppWidget: android.content.Intent createUpdateIntent(android.content.Context)>
<android.view.View: void setWillNotDraw(boolean)>
<com.google.android.gms.analytics.ac: android.database.sqlite.SQLiteDatabase S(java.lang.String)>
<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request networkRequest(com.squareup.okhttp.Request)>
<com.google.myjson.internal.bind.ObjectTypeAdapter$1: void <init>()>
<com.battlelancer.seriesguide.ui.PersonFragment$1: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<android.content.res.Configuration: void <clinit>()>
<com.battlelancer.seriesguide.util.ServiceUtils: void setUpWebSearchButton(java.lang.String,android.view.View,java.lang.String)>
<fr.castorflex.android.smoothprogressbar.SmoothProgressBar: void setInterpolator(android.view.animation.Interpolator)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Shows: java.lang.String getShowId(android.net.Uri)>
<com.battlelancer.seriesguide.util.Utils: void setValueOrPlaceholder(android.view.View,java.lang.String)>
<com.google.api.client.http.javanet.NetHttpResponse: void <init>(java.net.HttpURLConnection)>
<com.squareup.okio.Okio: void <clinit>()>
<android.widget.ListView: void setAdapter(android.widget.Adapter)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<java.lang.Math: int round(float)>
<com.battlelancer.seriesguide.items.Series: void setCountry(java.lang.String)>
<com.google.android.gms.analytics.HitBuilders$HitBuilder: java.util.Map build()>
<android.support.v4.app.DialogFragment: void dismiss()>
<com.google.api.client.http.UriTemplate$CompositeOutput: void <init>(java.lang.String,int,java.lang.Character,java.lang.String,java.lang.String,boolean,boolean)>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Reader: int headerTableIndex(int)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>
<com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSource: com.squareup.okio.Timeout timeout()>
<com.squareup.okhttp.internal.spdy.HpackDraft07: com.squareup.okio.ByteString checkLowercase(com.squareup.okio.ByteString)>
<android.support.v4.widget.DrawerLayout: void setDrawerLockMode(int,int)>
<android.support.v4.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>
<com.google.android.gms.internal.ck: void onClick(android.view.View)>
<com.battlelancer.seriesguide.util.TraktTask: com.jakewharton.trakt.entities.Response doShoutAction(com.jakewharton.trakt.Trakt)>
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.battlelancer.seriesguide.util.TimeTools: int getDayOfWeek(java.lang.String)>
<java.util.zip.Inflater: int inflate(byte[],int,int)>
<android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder 'from'(android.app.Activity)>
<com.uwetrottmann.seriesguide.backend.movies.Movies$Builder: com.uwetrottmann.seriesguide.backend.movies.Movies build()>
<java.net.HttpURLConnection: void <init>(java.net.URL)>
<android.support.v4.util.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)>
<com.google.api.client.http.GZipEncoding: java.lang.String getName()>
<com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment: com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment newInstance(int,int)>
<com.google.gson.stream.JsonWriter: void newline()>
<com.google.android.gms.analytics.v$a: void d(java.lang.String,java.lang.String)>
<com.google.myjson.internal.$Gson$Types$WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>
<com.squareup.okhttp.internal.spdy.HpackDraft07: com.squareup.okio.ByteString access$100(com.squareup.okio.ByteString)>
<com.google.myjson.internal.bind.SqlDateTypeAdapter: void <clinit>()>
<android.widget.ListView: void setRemoteViewsAdapter(android.content.Intent)>
<com.battlelancer.seriesguide.ui.PersonActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<java.lang.Class: java.lang.Class[] getInterfaces()>
<android.support.v4.widget.DrawerLayout: boolean onTouchEvent(android.view.MotionEvent)>
<android.support.v4.view.ViewPager: void onDraw(android.graphics.Canvas)>
<android.widget.TextView: boolean onKeyShortcut(int,android.view.KeyEvent)>
<com.google.android.gms.common.ErrorDialogFragment: com.google.android.gms.common.ErrorDialogFragment newInstance(android.app.Dialog,android.content.DialogInterface$OnCancelListener)>
<uk.co.senab.photoview.log.LogManager: void <clinit>()>
<com.google.myjson.stream.JsonWriter: boolean getSerializeNulls()>
<com.readystatesoftware.systembartint.SystemBarTintManager$SystemBarConfig: boolean hasNavigtionBar()>
<android.support.v4.widget.CursorAdapter: int getCount()>
<com.google.api.client.http.HttpHeaders$ParseHeaderState: void <init>(com.google.api.client.http.HttpHeaders,java.lang.StringBuilder)>
<com.google.android.gms.internal.r$a: com.google.android.gms.internal.r a(android.os.IBinder)>
<java.lang.String: void <init>(byte[],int,int,java.lang.String)>
<com.battlelancer.seriesguide.sync.SgSyncAdapter: void <init>(android.content.Context,boolean)>
<com.google.myjson.internal.Excluder: void <init>()>
<com.squareup.okhttp.internal.spdy.Spdy3$Writer: void rstStream(int,com.squareup.okhttp.internal.spdy.ErrorCode)>
<com.battlelancer.seriesguide.billing.IabException: void <init>(com.battlelancer.seriesguide.billing.IabResult)>
<com.jakewharton.trakt.Trakt: com.jakewharton.trakt.services.MovieService movieService()>
<com.google.api.client.util.GenericData$Flags: void <init>(java.lang.String,int)>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment$6: void onClick(android.view.View)>
<com.battlelancer.seriesguide.adapters.TabStripAdapter: void <init>(android.support.v4.app.FragmentManager,android.content.Context,android.support.v4.view.ViewPager,com.battlelancer.seriesguide.widgets.SlidingTabLayout)>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment: void onAttach(android.app.Activity)>
<com.battlelancer.seriesguide.util.TraktTask: com.battlelancer.seriesguide.util.TraktTask shoutMovie(int,java.lang.String,boolean)>
<android.widget.TextView: void onDraw(android.graphics.Canvas)>
<com.google.api.client.http.GenericUrl: java.net.URL toURL()>
<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Reader: void maxHeaderTableByteCountSetting(int)>
<com.squareup.okhttp.internal.DiskLruCache$Entry: com.squareup.okhttp.internal.DiskLruCache$Editor access$700(com.squareup.okhttp.internal.DiskLruCache$Entry)>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment: void showAddExtensionPopupMenu(android.view.View)>
<com.google.android.gms.analytics.GoogleAnalytics: void a(com.google.android.gms.analytics.w)>
<android.support.v4.app.FragmentActivity: void onStart()>
<android.view.accessibility.AccessibilityRecord: void <init>()>
<android.view.ViewGroup: android.view.View findFocus()>
<com.battlelancer.seriesguide.ui.ShowFragment: int getShowTvdbId()>
<android.os.HandlerThread: android.os.Looper getLooper()>
<com.uwetrottmann.androidutils.GenericSimpleLoader: void onStopLoading()>
<android.support.v4.widget.ViewDragHelper: void clearMotionHistory()>
<com.readystatesoftware.systembartint.SystemBarTintManager$SystemBarConfig: boolean isNavigationAtBottom()>
<com.battlelancer.seriesguide.settings.TraktCredentials: boolean setPassword(java.lang.String)>
<com.battlelancer.seriesguide.ui.OverviewActivity: void setupActionBar()>
<com.google.api.client.http.javanet.NetHttpTransport: com.google.api.client.http.javanet.NetHttpRequest buildRequest(java.lang.String,java.lang.String)>
<com.battlelancer.seriesguide.ui.PeopleActivity$PeopleType: void <init>(java.lang.String,int,java.lang.String)>
<com.google.gson.internal.bind.TypeAdapters$20: void <init>()>
<com.battlelancer.seriesguide.ui.ShowFragment$8: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.google.android.gms.analytics.Tracker: long dy()>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$10: void run()>
<com.google.android.gms.analytics.ai$a: void a(java.lang.String,int)>
<com.google.android.gms.common.GooglePlayServicesUtil: boolean isUserRecoverableError(int)>
<java.util.LinkedList: java.lang.Object remove()>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment$2: void onLoaderReset(android.support.v4.content.Loader)>
<com.squareup.picasso.Utils: boolean isWebPFile(java.io.InputStream)>
<android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: boolean onPull(java.lang.Object,float)>
<com.google.gson.FieldNamingPolicy$5: void <init>(java.lang.String,int)>
<android.os.Binder: void attachInterface(android.os.IInterface,java.lang.String)>
<com.google.api.client.json.gson.GsonGenerator: void writeNumber(float)>
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: void setLayerType(android.view.View,int,android.graphics.Paint)>
<com.google.android.gms.analytics.s: void cl()>
<com.google.myjson.stream.JsonReader: boolean hasNext()>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeType: java.util.List getEpisodesForTrakt()>
<com.google.android.gms.analytics.ai$a: void d(java.lang.String,java.lang.String)>
<com.battlelancer.seriesguide.api.Action: int getEntityIdentifier()>
<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>
<android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread: int getFinalY(java.lang.Object)>
<android.view.View: int getLeft()>
<com.google.gson.stream.JsonReader: int doPeek()>
<android.widget.ScrollView: void onStopNestedScroll(android.view.View)>
<com.battlelancer.seriesguide.appwidget.ListWidgetConfigure: boolean onCreateOptionsMenu(android.view.Menu)>
<android.support.v4.app.LoaderManagerImpl: void doDestroy()>
<java.math.BigInteger: float floatValue()>
<com.squareup.okhttp.Cache: void access$400(com.squareup.okhttp.Cache,com.squareup.okhttp.internal.http.CacheStrategy)>
<com.jakewharton.trakt.TraktHelper$15: void <init>()>
<com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection: int getHeaderFieldInt(java.lang.String,int)>
<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>
<com.battlelancer.seriesguide.appwidget.ListWidgetService: android.widget.RemoteViewsService$RemoteViewsFactory onGetViewFactory(android.content.Intent)>
<java.lang.Integer: int parseInt(java.lang.String,int)>
<java.util.Arrays: int hashCode(byte[])>
<uk.co.senab.photoview.scrollerproxy.PreGingerScroller: void forceFinished(boolean)>
<java.lang.ThreadLocal: void remove()>
<com.google.api.client.http.HttpMediaType: com.google.api.client.http.HttpMediaType removeParameter(java.lang.String)>
<uk.co.senab.photoview.PhotoViewAttacher: void onDrag(float,float)>
<android.widget.TextView: boolean performAccessibilityAction(int,android.os.Bundle)>
<com.google.android.gms.analytics.Tracker: void enableAutoActivityTracking(boolean)>
<android.widget.ImageView: boolean isOpaque()>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment$3: void <init>(com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment)>
<com.google.android.gms.analytics.w: boolean de()>
<com.squareup.picasso.Utils: java.lang.String createKey(com.squareup.picasso.Request,java.lang.StringBuilder)>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter endArray()>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: void addRequestProperty(java.lang.String,java.lang.String)>
<com.squareup.okio.RealBufferedSource: byte readByte()>
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>
<com.squareup.okhttp.Request$Builder: java.lang.String access$000(com.squareup.okhttp.Request$Builder)>
<android.content.ContentProviderOperation: void <clinit>()>
<com.squareup.okhttp.internal.http.HttpMethod: boolean hasRequestBody(java.lang.String)>
<android.support.v4.view.ViewPager$3: void <init>(android.support.v4.view.ViewPager)>
<com.squareup.okio.Base64: void <clinit>()>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(double)>
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<uk.co.senab.photoview.PhotoViewAttacher: float getScale()>
<com.uwetrottmann.seriesguide.backend.movies.MoviesRequest: com.uwetrottmann.seriesguide.backend.movies.Movies getAbstractGoogleClient()>
<com.google.api.client.googleapis.extensions.android.gms.auth.UserRecoverableAuthIOException: com.google.android.gms.auth.UserRecoverableAuthException getCause()>
<com.squareup.okhttp.CacheControl: int minFreshSeconds()>
<com.battlelancer.seriesguide.adapters.ActivitySlowAdapter$1: void <init>(com.battlelancer.seriesguide.adapters.ActivitySlowAdapter,android.content.Context,int,int,int,int)>
<com.battlelancer.seriesguide.billing.Security: boolean verifyPurchase(java.lang.String,java.lang.String,java.lang.String)>
<android.support.v4.widget.DrawerLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<android.support.v4.view.ViewCompat$ICSViewCompatImpl: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>
<com.google.myjson.Gson$2: void <init>(com.google.myjson.Gson)>
<com.battlelancer.seriesguide.ui.ListsActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.OkHttpClient setProtocols(java.util.List)>
<android.app.DialogFragment: void <init>()>
<com.battlelancer.seriesguide.billing.IabResult: void <init>(int,java.lang.String)>
<com.uwetrottmann.seriesguide.backend.movies.MoviesRequest: com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient getAbstractGoogleClient()>
<com.google.android.gms.analytics.ae: com.google.android.gms.analytics.ae dv()>
<com.squareup.okhttp.Response$Builder: void <init>(com.squareup.okhttp.Response,com.squareup.okhttp.Response$1)>
<android.support.v4.app.ShareCompat$IntentBuilder: void startChooser()>
<com.battlelancer.seriesguide.ui.EpisodesFragment: void access$100(com.battlelancer.seriesguide.ui.EpisodesFragment,long)>
<com.google.android.gms.plus.PlusOneDummyView$c: void <init>(android.content.Context,com.google.android.gms.plus.PlusOneDummyView$1)>
<com.battlelancer.seriesguide.util.FlagTapedTask: com.battlelancer.seriesguide.util.EpisodeTools$EpisodeAction access$100(com.battlelancer.seriesguide.util.FlagTapedTask)>
<com.squareup.okhttp.internal.http.OkHeaders: void addCookies(com.squareup.okhttp.Request$Builder,java.util.Map)>
<com.battlelancer.seriesguide.util.LocalOnlyOkHttpDownloader: java.net.HttpURLConnection openConnection(android.net.Uri)>
<com.google.android.gms.analytics.z: void <init>(int,long,java.lang.String)>
<android.accounts.AbstractAccountAuthenticator: void <init>(android.content.Context)>
<com.battlelancer.seriesguide.service.TraktFlagService: void onSuccess()>
<java.io.File: void <init>(java.io.File,java.lang.String)>
<android.widget.EdgeEffect: void onPull(float)>
<java.lang.Object: void wait()>
<retrofit.ErrorHandler$1: void <init>()>
<com.google.android.apps.dashclock.api.DashClockExtension: void loadMetaData()>
<android.support.v4.app.ActivityCompat: void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle)>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Reader$2: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection$Reader,java.lang.String,java.lang.Object[])>
<android.widget.ListView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.squareup.okio.Okio: com.squareup.okio.Source source(java.io.InputStream)>
<com.battlelancer.seriesguide.ui.PeopleFragment$4: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.jakewharton.trakt.services.ShowService$ShowCheckin: void <init>(int,int,int,java.lang.String,java.lang.String)>
<android.widget.Scroller: int timePassed()>
<com.battlelancer.seriesguide.appwidget.ListWidgetProvider: void onAppWidgetOptionsChanged(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle)>
<com.squareup.okhttp.internal.spdy.NameValueBlockReader$1: long read(com.squareup.okio.Buffer,long)>
<com.battlelancer.seriesguide.util.FlagTapeEntryQueue: void <init>(com.squareup.tape.ObjectQueue,android.content.Context)>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink: void <init>(com.squareup.okhttp.internal.spdy.SpdyStream)>
<android.support.v4.widget.DrawerLayout: void openDrawer(android.view.View)>
<java.util.TreeSet: int size()>
<uk.co.senab.photoview.PhotoViewAttacher: void cleanup()>
<com.battlelancer.seriesguide.backend.CloudSetupFragment: void onDestroy()>
<android.support.v4.app.FragmentManagerImpl: boolean executePendingTransactions()>
<com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.reflect.Type)>
<com.battlelancer.seriesguide.ui.ConnectTraktActivity: void onCreate(android.os.Bundle)>
<com.jakewharton.trakt.services.CommentService$MovieComment: com.jakewharton.trakt.services.CommentService$MovieComment spoiler(boolean)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment$8: void <init>(com.battlelancer.seriesguide.ui.EpisodeDetailsFragment)>
<com.battlelancer.seriesguide.settings.DisplaySettings: boolean isHidingSpecials(android.content.Context)>
<org.apache.http.impl.client.AbstractHttpClient: void setHttpRequestRetryHandler(org.apache.http.client.HttpRequestRetryHandler)>
<android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>
<com.battlelancer.seriesguide.ui.EpisodesFragment$1: boolean onMenuItemClick(android.view.MenuItem)>
<com.squareup.picasso.Picasso: void defer(android.widget.ImageView,com.squareup.picasso.DeferredRequestCreator)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Lists: android.net.Uri buildListsWithListItemUri(java.lang.String)>
<com.uwetrottmann.seriesguide.backend.episodes.Episodes: void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)>
<java.lang.AbstractStringBuilder: void <init>()>
<com.squareup.okio.Timeout: void <init>()>
<com.battlelancer.seriesguide.util.TimeTools: void setUserOffsetInverted(android.content.Context,java.util.Calendar)>
<com.google.api.client.http.AbstractHttpContent: java.lang.String getType()>
<com.google.gson.internal.bind.DateTypeAdapter: void <clinit>()>
<com.google.api.client.http.UriTemplate$CompositeOutput: java.lang.String getExplodeJoiner()>
<com.google.android.gms.analytics.ac$1: long currentTimeMillis()>
<com.google.android.gms.analytics.l: void info(java.lang.String)>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity$3: void <init>(com.battlelancer.seriesguide.ui.BackupDeleteActivity)>
<android.os.HandlerThread: void <init>(java.lang.String,int)>
<com.battlelancer.seriesguide.util.SystemUiHiderBase: void setup()>
<com.google.api.client.http.HttpResponseException: void <init>(com.google.api.client.http.HttpResponse)>
<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>
<android.widget.ImageView$ScaleType: void <clinit>()>
<com.google.android.gms.analytics.o: java.lang.String b(java.lang.String,int)>
<com.google.android.gms.analytics.t: com.google.android.gms.analytics.t x(android.content.Context)>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Reader: void readData(com.squareup.okhttp.internal.spdy.FrameReader$Handler,short,byte,int)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Lists: java.lang.String generateListId(java.lang.String)>
<android.widget.ProgressBar: void onRestoreInstanceState(android.os.Parcelable)>
<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>
<uk.co.senab.photoview.PhotoView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.battlelancer.seriesguide.ui.ActivityFragment: void schedulePeriodicDataRefresh(boolean)>
<com.battlelancer.seriesguide.loaders.MovieCreditsLoader: void <init>(android.content.Context,int)>
<timber.log.Timber$HollowTree: void <init>()>
<android.support.v4.widget.ViewDragHelper: boolean isPointerDown(int)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$SettingsFragment: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationActivity: void setupActionBar()>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeDateTimeString(android.content.Context,long,long,long,int)>
<com.squareup.okhttp.internal.http.HttpConnection: boolean isReadable()>
<com.battlelancer.seriesguide.ui.EpisodesFragment: int getSeasonNumber()>
<android.support.v4.util.SparseArrayCompat: void delete(int)>
<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>
<com.google.api.client.util.escape.Escaper: void <init>()>
<com.squareup.picasso.Utils: boolean hasPermission(android.content.Context,java.lang.String)>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<com.squareup.okhttp.internal.DiskLruCache: boolean remove(java.lang.String)>
<com.battlelancer.seriesguide.ui.FirstRunFragment: void access$100(com.battlelancer.seriesguide.ui.FirstRunFragment)>
<java.lang.Class: java.lang.Class forName(java.lang.String)>
<com.google.myjson.stream.JsonWriter: void close()>
<java.lang.Byte: void <clinit>()>
<com.mobeta.android.dslv.DragSortController$1: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<com.google.api.client.http.javanet.NetHttpResponse: void disconnect()>
<com.battlelancer.seriesguide.util.TraktTools: void rateEpisode(android.content.Context,android.support.v4.app.FragmentManager,int,int,int)>
<com.battlelancer.seriesguide.ui.ActivityFragment$1: boolean onMenuItemClick(android.view.MenuItem)>
<java.lang.String: int indexOf(java.lang.String,int)>
<com.squareup.okio.Buffer: byte[] readByteArray(long)>
<com.battlelancer.seriesguide.ui.PeopleFragment: com.battlelancer.seriesguide.ui.PeopleActivity$MediaType access$300(com.battlelancer.seriesguide.ui.PeopleFragment)>
<com.google.api.client.util.DataMap$Entry: java.lang.Object getKey()>
<com.google.api.client.json.JsonParser: void <init>()>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment$3: void <init>(com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment)>
<com.battlelancer.seriesguide.ui.PersonFragment: void setProgressVisibility(boolean)>
<com.battlelancer.seriesguide.appwidget.AppWidget: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>
<com.squareup.okhttp.internal.spdy.SpdyConnection: boolean access$1400(com.squareup.okhttp.internal.spdy.SpdyConnection)>
<java.util.TimeZone: java.util.TimeZone getDefault()>
<com.google.myjson.internal.bind.ObjectTypeAdapter: void <clinit>()>
<android.support.v4.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)>
<java.math.BigInteger: double doubleValue()>
<com.crashlytics.android.internal.p: void <init>()>
<com.squareup.okio.RealBufferedSource: short readShort()>
<android.support.v4.app.ShareCompat$IntentBuilder: android.content.Intent getIntent()>
<android.widget.TextView: void setPaddingRelative(int,int,int,int)>
<com.google.api.client.http.apache.HttpExtensionMethod: void <init>(java.lang.String,java.lang.String)>
<android.widget.BaseAdapter: void notifyDataSetInvalidated()>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setWhen(long)>
<com.squareup.okhttp.internal.http.RouteSelector: boolean hasNextTlsVersion()>
<com.google.api.client.http.UriTemplate$CompositeOutput: boolean requiresVarAssignment()>
<com.uwetrottmann.androidutils.CheatSheet$2: boolean onLongClick(android.view.View)>
<com.battlelancer.seriesguide.sync.SgAccountAuthenticator: void <init>(android.content.Context)>
<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.shapes.Shape)>
<com.battlelancer.seriesguide.ui.StatsActivity: void onCreate(android.os.Bundle)>
<android.app.Activity: boolean shouldUpRecreateTask(android.content.Intent)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void flush()>
<com.google.api.client.http.HttpMediaType: com.google.api.client.http.HttpMediaType setParameter(java.lang.String,java.lang.String)>
<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>
<com.squareup.okio.RealBufferedSource: long read(com.squareup.okio.Buffer,long)>
<com.squareup.okio.AsyncTimeout$2: void <init>(com.squareup.okio.AsyncTimeout,com.squareup.okio.Source)>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeWatchedType: java.lang.String getColumn()>
<java.io.File: java.io.File[] listFiles()>
<retrofit.Platform: boolean hasOkHttpOnClasspath()>
<android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: boolean isFinished(java.lang.Object)>
<com.google.android.gms.analytics.Tracker$a: void <init>(com.google.android.gms.analytics.Tracker)>
<com.battlelancer.seriesguide.ui.PeopleActivity$PeopleType: java.lang.String toString()>
<uk.co.senab.photoview.scrollerproxy.GingerScroller: void forceFinished(boolean)>
<com.squareup.okhttp.internal.http.HttpConnection: com.squareup.okio.Sink newChunkedSink()>
<com.google.android.gms.analytics.HitBuilders$AppViewBuilder: void <init>()>
<de.greenrobot.event.EventBus: void register(java.lang.Object)>
<java.util.ArrayList: boolean addAll(java.util.Collection)>
<com.battlelancer.seriesguide.ui.ShowFragment$5: void onClick(android.view.View)>
<com.squareup.picasso.Picasso$RequestTransformer$1: void <init>()>
<java.util.Arrays: void fill(long[],long)>
<android.graphics.Paint: void finalize()>
<android.widget.FrameLayout: void onSizeChanged(int,int,int,int)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$ListItems: android.net.Uri buildListItemUri(java.lang.String)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void onFlagSeasonWatched(long,int,boolean)>
<java.lang.String: void <init>(byte[],int,int)>
<com.battlelancer.seriesguide.Constants$EpisodeSorting: com.battlelancer.seriesguide.Constants$EpisodeSorting[] values()>
<android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean: void <init>()>
<com.google.api.client.util.Types: java.lang.reflect.Type getMapValueParameter(java.lang.reflect.Type)>
<android.support.v4.app.FragmentManagerImpl$4: void run()>
<com.google.myjson.Gson: com.google.myjson.TypeAdapter floatAdapter(boolean)>
<com.google.api.client.util.ArrayMap$Entry: boolean equals(java.lang.Object)>
<de.greenrobot.event.util.ErrorDialogFragments$Honeycomb: void onClick(android.content.DialogInterface,int)>
<com.battlelancer.seriesguide.ui.BaseTopActivity: void setupNavDrawer()>
<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.google.gson.LongSerializationPolicy: void <clinit>()>
<com.google.myjson.JsonParseException: void <init>(java.lang.Throwable)>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Writer: void rstStream(int,com.squareup.okhttp.internal.spdy.ErrorCode)>
<com.battlelancer.seriesguide.backend.CloudSetupFragment: void signIn()>
<com.battlelancer.seriesguide.util.EpisodeTools: void showWatched(android.content.Context,int,boolean)>
<com.battlelancer.seriesguide.settings.GetGlueSettings: java.lang.String getRefreshToken(android.content.Context)>
<com.mobeta.android.dslv.DragSortListView: void access$1200(com.mobeta.android.dslv.DragSortListView)>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpResponse execute()>
<com.squareup.okhttp.Cache: int access$900(com.squareup.okio.BufferedSource)>
<com.google.api.client.json.gson.GsonGenerator: void writeStartArray()>
<uk.co.senab.photoview.scrollerproxy.GingerScroller: void fling(int,int,int,int,int,int,int,int,int,int)>
<com.battlelancer.seriesguide.items.Series: void setTitle(java.lang.String)>
<com.squareup.okhttp.Response: com.squareup.okhttp.Response access$1900(com.squareup.okhttp.Response)>
<com.squareup.okio.RealBufferedSource: boolean access$000(com.squareup.okio.RealBufferedSource)>
<android.content.ContentResolver: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>
<com.battlelancer.seriesguide.ui.SeasonsFragment$1: void <init>(com.battlelancer.seriesguide.ui.SeasonsFragment)>
<com.google.myjson.internal.bind.TypeAdapters$12: void <init>()>
<com.google.myjson.stream.JsonWriter: com.google.myjson.stream.JsonWriter beginArray()>
<android.support.v4.view.AccessibilityDelegateCompat: void <init>()>
<com.squareup.okhttp.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)>
<com.uwetrottmann.seriesguide.backend.shows.Shows: void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)>
<android.os.Process: void setThreadPriority(int)>
<android.support.v4.app.Fragment: void restoreViewState(android.os.Bundle)>
<com.squareup.okio.RealBufferedSink: long writeAll(com.squareup.okio.Source)>
<java.util.Timer: void <init>(java.lang.String)>
<android.app.Activity: void onDestroy()>
<com.battlelancer.seriesguide.extensions.ExtensionPackageChangeReceiver: void <init>()>
<com.google.android.gms.internal.hj$a$a: void <init>(android.os.IBinder)>
<com.battlelancer.seriesguide.ui.ListsFragment: void fireTrackerEvent(java.lang.String)>
<retrofit.RequestInterceptor$1: void <init>()>
<android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase: android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity)>
<com.squareup.picasso.RequestCreator: int getRequestId()>
<android.content.Intent: android.content.Intent setPackage(java.lang.String)>
<com.battlelancer.seriesguide.util.tasks.HexagonAddMovieToCollectionTask: void setMovieProperties(com.uwetrottmann.seriesguide.backend.movies.model.Movie)>
<com.google.android.gms.analytics.s$a: void <init>(java.lang.String,int)>
<com.google.android.gms.analytics.l: java.lang.String L(java.lang.String)>
<android.widget.ListView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs: void <init>()>
<com.google.android.gms.analytics.t$3: void <init>(com.google.android.gms.analytics.t)>
<com.battlelancer.seriesguide.ui.PeopleFragment$1: void <init>()>
<com.google.myjson.stream.JsonReader: int getColumnNumber()>
<com.battlelancer.seriesguide.loaders.TmdbMoviesLoader: void <init>(android.content.Context,java.lang.String)>
<java.lang.Class: boolean isPrimitive()>
<android.provider.MediaStore$Images$Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory$Options)>
<android.support.v4.widget.DrawerLayout: void closeDrawers()>
<org.apache.oltu.oauth2.client.request.OAuthClientRequest: org.apache.oltu.oauth2.client.request.OAuthClientRequest$TokenRequestBuilder tokenLocation(java.lang.String)>
<com.google.myjson.internal.bind.TypeAdapters$4: void <init>()>
<com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl: void <init>(java.net.URL,com.squareup.okhttp.OkHttpClient)>
<com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSink: void close()>
<de.greenrobot.event.EventBusException: void <init>(java.lang.String)>
<com.uwetrottmann.seriesguide.backend.episodes.Episodes: com.uwetrottmann.seriesguide.backend.episodes.Episodes$Save save(com.uwetrottmann.seriesguide.backend.episodes.model.EpisodeList)>
<com.battlelancer.seriesguide.provider.SeriesGuideDatabase: void <init>(android.content.Context)>
<android.widget.ArrayAdapter: void add(java.lang.Object)>
<java.util.Date: void <init>(long)>
<com.google.android.gms.dynamic.b: com.google.android.gms.dynamic.b a(android.app.Fragment)>
<com.squareup.picasso.MediaStoreBitmapHunter: android.graphics.Bitmap decode(com.squareup.picasso.Request)>
<com.battlelancer.seriesguide.dataliberation.DataLiberationFragment$3: void <init>(com.battlelancer.seriesguide.dataliberation.DataLiberationFragment,android.content.Context)>
<android.support.v4.view.ViewPager: boolean executeKeyEvent(android.view.KeyEvent)>
<com.google.android.gms.analytics.q: void w(android.content.Context)>
<com.battlelancer.seriesguide.ui.OverviewFragment: void loadEpisodeActions()>
<android.widget.ImageView: void drawableHotspotChanged(float,float)>
<java.util.ArrayList: java.lang.Object get(int)>
<android.support.v4.content.IntentCompat: void <clinit>()>
<com.squareup.okhttp.Request: com.squareup.okhttp.RequestBody access$1000(com.squareup.okhttp.Request)>
<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)>
<com.google.android.gms.analytics.ac: void a(java.util.Map,long,java.lang.String)>
<com.squareup.picasso.BitmapHunter: void <clinit>()>
<com.google.myjson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type getOwnerType()>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Reader: com.squareup.okio.ByteString readByteString()>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void stop()>
<com.battlelancer.seriesguide.items.Series: java.lang.String getPoster()>
<com.squareup.okhttp.internal.spdy.Http20Draft12$FrameLogger: java.lang.String formatHeader(boolean,int,int,byte,byte)>
<com.google.api.client.util.FieldInfo: void <init>(java.lang.reflect.Field,java.lang.String)>
<com.battlelancer.seriesguide.ui.OverviewFragment: int access$900(com.battlelancer.seriesguide.ui.OverviewFragment)>
<android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManager getSupportLoaderManager()>
<android.widget.TextView: int getBaseline()>
<com.google.android.gms.analytics.Tracker$a: boolean dz()>
<com.battlelancer.seriesguide.util.ServiceUtils: com.jakewharton.trakt.Trakt getTraktWithAuth(android.content.Context)>
<android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment)>
<com.battlelancer.seriesguide.provider.SeriesGuideDatabase: long insertLists(android.content.ContentValues)>
<com.battlelancer.seriesguide.ui.dialogs.AddListDialogFragment: android.widget.EditText access$000(com.battlelancer.seriesguide.ui.dialogs.AddListDialogFragment)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$9: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>
<com.battlelancer.seriesguide.adapters.ExtensionsAdapter$OverflowItemClickListener: void <init>(com.battlelancer.seriesguide.adapters.ExtensionsAdapter,int)>
<android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl: void <init>()>
<com.squareup.okhttp.internal.http.HttpTransport: void flushRequest()>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.squareup.picasso.Picasso: void <clinit>()>
<android.widget.ListView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<com.battlelancer.seriesguide.billing.BillingActivity: void updateViewStates(boolean)>
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<java.lang.String: byte[] getBytes(java.lang.String)>
<com.google.api.client.googleapis.services.AbstractGoogleClientRequest: com.google.api.client.http.HttpResponse executeUnparsed(boolean)>
<com.battlelancer.seriesguide.ui.BaseActivity: void unregisterEventBus()>
<java.lang.Object: void wait(long)>
<java.lang.System: long nanoTime()>
<com.google.android.gms.analytics.r: com.google.android.gms.analytics.d cH()>
<android.support.v4.util.LruCache: void trimToSize(int)>
<com.uwetrottmann.seriesguide.backend.shows.ShowsRequest: com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient getAbstractGoogleClient()>
<android.support.v4.widget.ScrollerCompat: void startScroll(int,int,int,int,int)>
<android.widget.FrameLayout: void draw(android.graphics.Canvas)>
<com.google.api.client.http.HttpHeaders: java.util.List getAsList(java.lang.Object)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void writeSynReset(int,com.squareup.okhttp.internal.spdy.ErrorCode)>
<com.battlelancer.seriesguide.items.Series: void setOverview(java.lang.String)>
<java.lang.String: void <init>()>
<com.squareup.okhttp.internal.DiskLruCache$Editor: java.io.OutputStream newOutputStream(int)>
<android.support.v4.content.ContextCompatJellybean: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)>
<com.squareup.okhttp.Cache: int readInt(com.squareup.okio.BufferedSource)>
<com.google.android.gms.analytics.aa: void A(java.lang.String)>
<com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.Tracker newTracker(int)>
<com.google.android.gms.wallet.fragment.WalletFragment$a: void <init>(com.google.android.gms.wallet.fragment.WalletFragment)>
<com.battlelancer.seriesguide.billing.IabHelper$2: void run()>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void onFlagSeasonCollected(long,int,boolean)>
<java.lang.Class: boolean isEnum()>
<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.battlelancer.seriesguide.billing.BillingActivity: void onCreate(android.os.Bundle)>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder protocol(com.squareup.okhttp.Protocol)>
<com.battlelancer.seriesguide.util.SeasonTools: java.lang.String getSeasonString(android.content.Context,int)>
<com.battlelancer.seriesguide.billing.IabHelper: void queryInventoryAsync(boolean,java.util.List,com.battlelancer.seriesguide.billing.IabHelper$QueryInventoryFinishedListener)>
<com.google.api.client.util.Types$1$1: void <init>(com.google.api.client.util.Types$1)>
<com.battlelancer.seriesguide.util.ConnectTraktTask: void <init>(android.content.Context,com.battlelancer.seriesguide.util.ConnectTraktTask$OnTaskFinishedListener)>
<com.battlelancer.seriesguide.util.ShowTools: void storeIsFavorite(int,boolean)>
<android.support.v4.app.FragmentActivity: void doReallyStop(boolean)>
<android.support.v4.app.Fragment: void onDestroy()>
<android.widget.RemoteViews: void setRemoteAdapter(int,android.content.Intent)>
<com.battlelancer.seriesguide.ui.OverviewFragment$5: void onClick(android.view.View)>
<com.squareup.okhttp.internal.spdy.Spdy3$Writer: void settings(com.squareup.okhttp.internal.spdy.Settings)>
<org.apache.http.entity.StringEntity: void <init>(java.lang.String)>
<com.google.myjson.stream.JsonWriter: void setSerializeNulls(boolean)>
<com.squareup.okio.AsyncTimeout: void scheduleTimeout(com.squareup.okio.AsyncTimeout,long,boolean)>
<com.battlelancer.seriesguide.migration.MigrationActivity: android.os.AsyncTask access$002(com.battlelancer.seriesguide.migration.MigrationActivity,android.os.AsyncTask)>
<android.util.SparseIntArray: void put(int,int)>
<com.google.gson.internal.bind.TypeAdapters$11: void <init>()>
<android.content.AbstractThreadedSyncAdapter: android.os.IBinder getSyncAdapterBinder()>
<com.battlelancer.seriesguide.billing.BillingActivity$4: void onClick(android.view.View)>
<android.content.ContextWrapper: int checkCallingOrSelfPermission(java.lang.String)>
<com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSink: void flush()>
<android.support.v4.app.NavUtils$NavUtilsImplJB: void navigateUpTo(android.app.Activity,android.content.Intent)>
<com.squareup.okhttp.Dispatcher: void <init>()>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment$1: void <init>(com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment,java.lang.String)>
<com.google.android.gms.analytics.Tracker$a: void dB()>
<android.app.Activity: void setProgressBarVisibility(boolean)>
<com.google.gson.FieldNamingPolicy$1: void <init>(java.lang.String,int)>
<com.squareup.picasso.BitmapHunter: android.graphics.Bitmap hunt()>
<java.io.OutputStream: void close()>
<android.widget.ListView: void onMeasure(int,int)>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Reader: void readLiteralHeaderWithoutIndexingNewName()>
<com.uwetrottmann.seriesguide.backend.episodes.Episodes$Builder: com.uwetrottmann.seriesguide.backend.episodes.Episodes$Builder setRootUrl(java.lang.String)>
<com.uwetrottmann.seriesguide.backend.shows.ShowsRequest: com.uwetrottmann.seriesguide.backend.shows.ShowsRequest setDisableGZipContent(boolean)>
<android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1: void <init>()>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpTransport getTransport()>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment: void access$600(com.battlelancer.seriesguide.ui.MovieDetailsFragment,com.uwetrottmann.tmdb.entities.Credits)>
<com.battlelancer.seriesguide.ui.OverviewActivity: boolean onSearchRequested()>
<com.crashlytics.android.Crashlytics: void <init>()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>
<com.battlelancer.seriesguide.ui.EpisodesFragment: com.battlelancer.seriesguide.Constants$EpisodeSorting access$300(com.battlelancer.seriesguide.ui.EpisodesFragment)>
<com.google.android.gms.analytics.ac: void <init>(com.google.android.gms.analytics.e,android.content.Context)>
<com.battlelancer.seriesguide.ui.TvdbAddFragment$1: void <init>(com.battlelancer.seriesguide.ui.TvdbAddFragment)>
<java.lang.Long: java.lang.Long valueOf(long)>
<com.battlelancer.seriesguide.ui.OverviewFragment$3: void onClick(android.view.View)>
<java.lang.Exception: void <init>(java.lang.Throwable)>
<com.google.api.client.repackaged.com.google.common.base.Throwables: java.lang.RuntimeException propagate(java.lang.Throwable)>
<com.battlelancer.seriesguide.sync.AccountUtils: android.accounts.Account getAccount(android.content.Context)>
<android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>
<android.support.v4.widget.DrawerLayout: void <clinit>()>
<com.squareup.okhttp.internal.Util: void deleteContents(java.io.File)>
<android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: void setSize(java.lang.Object,int,int)>
<android.support.v4.widget.DrawerLayout$ViewDragCallback: void onEdgeTouched(int,int)>
<com.squareup.okhttp.internal.Platform: com.squareup.okhttp.internal.Platform get()>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)>
<com.battlelancer.seriesguide.appwidget.AppWidget$UpdateService: void <init>()>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment: void access$200(com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment,boolean)>
<com.google.android.gms.common.ErrorDialogFragment: void show(android.app.FragmentManager,java.lang.String)>
<com.battlelancer.seriesguide.extensions.ExtensionManager: void <init>(android.content.Context)>
<java.lang.String: java.lang.String valueOf(double)>
<com.google.api.client.http.HttpResponseException$Builder: com.google.api.client.http.HttpResponseException$Builder setHeaders(com.google.api.client.http.HttpHeaders)>
<com.battlelancer.seriesguide.util.MovieTools: void updateMovie(android.content.Context,int,java.lang.String,boolean)>
<com.battlelancer.seriesguide.util.ServiceUtils$4: void <init>(int,int,int,android.view.View,java.lang.String)>
<com.google.gson.stream.JsonReader: void setLenient(boolean)>
<com.battlelancer.seriesguide.loaders.EpisodeActionsLoader: void onReleaseResources(java.util.List)>
<com.google.android.gms.analytics.v$a: void c(java.lang.String,java.lang.String)>
<android.support.v4.view.VelocityTrackerCompatHoneycomb: float getXVelocity(android.view.VelocityTracker,int)>
<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<com.squareup.okhttp.Route: boolean supportsNpn()>
<com.battlelancer.seriesguide.adapters.ActivitySlowAdapter: void <init>(android.content.Context,android.database.Cursor,int)>
<com.squareup.okhttp.Cache: com.squareup.okhttp.Response get(com.squareup.okhttp.Request)>
<com.mobeta.android.dslv.DragSortListView: int getChildHeight(int)>
<uk.co.senab.photoview.DefaultOnDoubleTapListener: void <init>(uk.co.senab.photoview.PhotoViewAttacher)>
<com.squareup.okio.AsyncTimeout: com.squareup.okio.Sink sink(com.squareup.okio.Sink)>
<com.battlelancer.seriesguide.util.TraktTask: com.jakewharton.trakt.entities.Response doRatingAction(com.jakewharton.trakt.Trakt)>
<java.util.AbstractQueue: boolean add(java.lang.Object)>
<com.battlelancer.seriesguide.ui.ActivityFragment: void access$100(com.battlelancer.seriesguide.ui.ActivityFragment,int,int,int,int,boolean)>
<com.squareup.okhttp.internal.http.RouteSelector: com.squareup.okhttp.Connection next(java.lang.String)>
<com.mobeta.android.dslv.DragSortListView: void setDragScrollStart(float)>
<com.battlelancer.seriesguide.util.EpisodeTools$ShowCollectedType: java.lang.String getColumn()>
<com.google.api.client.http.javanet.NetHttpResponse: java.lang.String getReasonPhrase()>
<com.google.android.gms.auth.GoogleAuthUtil: boolean ac(java.lang.String)>
<android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread: android.app.Notification build(android.support.v4.app.NotificationCompat$Builder)>
<android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment: void onActivityCreated(android.os.Bundle)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment: void onToggleSkipped()>
<com.mobeta.android.dslv.DragSortListView: void measureItem(android.view.View)>
<java.io.FilterInputStream: void close()>
<com.squareup.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Writer: void writeInt(int,int,int)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences: void setupActionBar()>
<com.battlelancer.seriesguide.ui.ShowsActivity: void onDestroy()>
<java.util.HashSet: int size()>
<com.squareup.okhttp.Response: boolean isRedirect()>
<uk.co.senab.photoview.PhotoView: void setScaleType(android.widget.ImageView$ScaleType)>
<com.battlelancer.seriesguide.ui.BaseActivity$1: void run()>
<android.app.Notification$BigPictureStyle: android.app.Notification$BigPictureStyle bigLargeIcon(android.graphics.Bitmap)>
<android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase: java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void onFlagSeasonSkipped(long,int)>
<android.support.v4.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: void <init>(com.squareup.okhttp.internal.http.HttpConnection,java.net.CacheRequest,com.squareup.okhttp.internal.http.HttpEngine)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$2: void <init>(android.content.Context)>
<com.squareup.okhttp.OkHttpClient$1: void share(com.squareup.okhttp.ConnectionPool,com.squareup.okhttp.Connection)>
<com.google.android.gms.dynamic.e: java.lang.Object e(com.google.android.gms.dynamic.d)>
<com.battlelancer.seriesguide.util.EpisodeTools$SeasonType: android.content.ContentValues getContentValues()>
<com.squareup.okhttp.internal.DiskLruCache$Snapshot: com.squareup.okhttp.internal.DiskLruCache$Editor edit()>
<android.app.Activity: android.app.ActionBar getActionBar()>
<com.google.android.gms.internal.hn: android.view.View b(android.content.Context,int,int)>
<com.google.api.client.http.AbstractHttpContent: boolean retrySupported()>
<android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
<com.battlelancer.seriesguide.backend.CloudSetupFragment$1: void onClick(android.view.View)>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpResponseInterceptor getResponseInterceptor()>
<com.google.api.client.util.escape.CharEscapers: java.lang.String escapeUri(java.lang.String)>
<com.squareup.picasso.Request: void <init>(android.net.Uri,int,java.util.List,int,int,boolean,boolean,float,float,float,boolean,android.graphics.Bitmap$Config,com.squareup.picasso.Request$1)>
<com.battlelancer.seriesguide.ui.EpisodesActivity: void onStop()>
<com.squareup.okhttp.internal.Platform: void <init>()>
<com.squareup.okhttp.ConnectionPool: void recycle(com.squareup.okhttp.Connection)>
<com.mobeta.android.dslv.DragSortListView: boolean isDragEnabled()>
<com.battlelancer.seriesguide.adapters.PeopleAdapter: void <clinit>()>
<java.lang.Class: int getModifiers()>
<com.battlelancer.seriesguide.ui.OverviewActivity: void setupPanes()>
<com.squareup.okhttp.Cache$Entry: java.util.List readCertificateList(com.squareup.okio.BufferedSource)>
<com.battlelancer.seriesguide.ui.SearchFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.google.gson.internal.$Gson$Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<com.squareup.okhttp.Challenge: void <init>(java.lang.String,java.lang.String)>
<android.widget.ArrayAdapter: android.content.Context getContext()>
<com.battlelancer.seriesguide.ui.PersonFragment$1: void onLoaderReset(android.support.v4.content.Loader)>
<de.greenrobot.event.SubscriberExceptionEvent: void <init>(de.greenrobot.event.EventBus,java.lang.Throwable,java.lang.Object,java.lang.Object)>
<java.util.HashMap: int size()>
<com.google.api.client.http.apache.ApacheHttpResponse: java.lang.String getHeaderName(int)>
<com.squareup.okhttp.internal.http.HttpConnection: com.squareup.okhttp.ConnectionPool access$700(com.squareup.okhttp.internal.http.HttpConnection)>
<com.battlelancer.seriesguide.settings.UpdateSettings: boolean isLargeDataOverWifiOnly(android.content.Context)>
<com.google.api.client.json.gson.GsonParser: float getFloatValue()>
<android.widget.PopupMenu: android.view.Menu getMenu()>
<com.battlelancer.seriesguide.util.ShowTools: void storeIsHidden(int,boolean)>
<uk.co.senab.photoview.PhotoViewAttacher$1: void onLongPress(android.view.MotionEvent)>
<com.battlelancer.seriesguide.api.Action: com.battlelancer.seriesguide.api.Action fromBundle(android.os.Bundle)>
<com.battlelancer.seriesguide.ui.PeopleFragment: void onDetach()>
<com.battlelancer.seriesguide.billing.BillingActivity: void alert(java.lang.String)>
<android.widget.ProgressBar: void postInvalidate()>
<java.net.URL: java.lang.String getFile()>
<com.battlelancer.seriesguide.adapters.EpisodesAdapter: int getItemPosition(long)>
<de.greenrobot.event.EventBus: void invokeSubscriber(de.greenrobot.event.Subscription,java.lang.Object)>
<com.google.myjson.Gson: void <init>()>
<android.support.v4.widget.ViewDragHelper: void saveLastMotion(android.view.MotionEvent)>
<android.support.v4.app.LoaderManager: void <init>()>
<com.squareup.okhttp.internal.spdy.Http20Draft12$ContinuationSource: void close()>
<java.io.File: void <clinit>()>
<java.io.FileInputStream: void <init>(java.io.File)>
<android.widget.ListView: int getFooterViewsCount()>
<com.google.api.client.http.HttpTransport: com.google.api.client.http.HttpRequestFactory createRequestFactory()>
<java.util.zip.CRC32: void update(byte[],int,int)>
<com.battlelancer.seriesguide.items.Series: void setNetwork(java.lang.String)>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: void initHttpEngine()>
<android.support.v4.view.ViewPager: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.battlelancer.seriesguide.service.NotificationService: void maybeSetPoster(android.content.Context,android.support.v4.app.NotificationCompat$Builder,java.lang.String)>
<com.battlelancer.seriesguide.ui.OverviewFragment: void onDestroyView()>
<android.util.FloatMath: float sqrt(float)>
<com.squareup.okio.RealBufferedSink: com.squareup.okio.BufferedSink writeInt(int)>
<com.squareup.okhttp.internal.BitArray$VariableCapacity: void shiftLeft(int)>
<com.battlelancer.seriesguide.items.Episode: void <init>()>
<com.battlelancer.seriesguide.ui.dialogs.ListManageDialogFragment: void onAttach(android.app.Activity)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment$5: void <init>(com.battlelancer.seriesguide.ui.EpisodeDetailsFragment)>
<com.squareup.okhttp.internal.Platform$Android: void tagSocket(java.net.Socket)>
<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback)>
<com.google.android.gms.analytics.s: void cL()>
<android.util.Log: int d(java.lang.String,java.lang.String)>
<com.google.myjson.LongSerializationPolicy$2: void <init>(java.lang.String,int)>
<com.google.api.client.googleapis.services.AbstractGoogleClient: com.google.api.client.util.ObjectParser getObjectParser()>
<com.battlelancer.seriesguide.ui.OverviewActivity: void setupViewPager(android.view.View)>
<android.support.v4.app.ActivityOptionsCompat: android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int)>
<android.view.SoundEffectConstants: int getContantForFocusDirection(int)>
<com.battlelancer.seriesguide.ui.dialogs.ListManageDialogFragment: android.widget.EditText access$100(com.battlelancer.seriesguide.ui.dialogs.ListManageDialogFragment)>
<java.net.URL: void <init>(java.lang.String)>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: void <init>(com.squareup.okhttp.internal.spdy.SpdyStream,long,com.squareup.okhttp.internal.spdy.SpdyStream$1)>
<com.google.android.gms.internal.ez$1: void <init>(android.webkit.JsResult)>
<android.support.v4.content.Loader: void forceLoad()>
<android.support.v4.app.NotificationCompat$Action: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>
<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.squareup.okhttp.internal.spdy.SpdyConnection$5: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],int,java.util.List,boolean)>
<com.battlelancer.seriesguide.dataliberation.JsonExportTask: int exportShows(java.io.File)>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<android.support.v4.util.SparseArrayCompat: void remove(int)>
<android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl: boolean metaStateHasNoModifiers(int)>
<com.battlelancer.seriesguide.util.FlagTapedTask$1$2: void <init>(com.battlelancer.seriesguide.util.FlagTapedTask$1,boolean)>
<com.mobeta.android.dslv.DragSortListView$2: void <init>(com.mobeta.android.dslv.DragSortListView)>
<com.google.api.client.http.GenericUrl: void <init>(java.lang.String)>
<android.text.style.MetricAffectingSpan: void <init>()>
<com.google.api.client.util.LoggingByteArrayOutputStream: void appendBytes(java.lang.StringBuilder,int)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$7: void <init>(com.battlelancer.seriesguide.ui.MovieDetailsFragment)>
<java.util.concurrent.atomic.AtomicInteger: void <init>()>
<com.squareup.okio.RealBufferedSource: int readIntLe()>
<com.uwetrottmann.androidutils.AndroidUtils: boolean isExtStorageAvailable()>
<com.battlelancer.seriesguide.ui.AddFragment$1: void onClick(android.view.View)>
<android.support.v4.widget.DrawerLayout: int[] access$100()>
<android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType[] values()>
<android.support.v4.widget.DrawerLayout: boolean hasPeekingDrawer()>
<com.squareup.picasso.LruCache: void <init>(android.content.Context)>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(boolean)>
<com.google.gson.DefaultDateTypeAdapter: void <init>(int,int)>
<org.json.JSONObject: void <init>(java.lang.String)>
<com.battlelancer.seriesguide.ui.BaseNavDrawerActivity: void onCreate(android.os.Bundle)>
<android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>
<com.uwetrottmann.androidutils.GenericSimpleLoader: void deliverResult(java.lang.Object)>
<org.json.JSONTokener: void <init>(java.lang.String)>
<com.battlelancer.seriesguide.util.TimeTools: java.lang.String getTimeZoneIdForCountry(java.lang.String)>
<java.lang.reflect.Modifier: boolean isFinal(int)>
<com.battlelancer.seriesguide.ui.dialogs.MovieCheckInDialogFragment: void setupButtonFixGetGlue(android.view.View)>
<com.battlelancer.seriesguide.util.EpisodeTools: void <clinit>()>
<com.mobeta.android.dslv.DragSortListView: void setDragScrollStarts(float,float)>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder: fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder strokeWidth(float)>
<com.battlelancer.seriesguide.ui.MoviesSearchFragment: void onLoadFinished(android.support.v4.content.Loader,java.util.List)>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.app.Dialog: boolean isShowing()>
<com.squareup.okio.ByteString: java.lang.String base64()>
<android.view.View: void clearAnimation()>
<com.battlelancer.seriesguide.ui.EpisodesFragment: void onSortOrderChanged()>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter beginArray()>
<android.support.v4.app.FragmentActivity: void <init>()>
<com.battlelancer.seriesguide.adapters.MoviesCursorAdapter: void <init>(android.content.Context,com.battlelancer.seriesguide.adapters.MoviesCursorAdapter$PopupMenuClickListener)>
<fr.castorflex.android.smoothprogressbar.R$styleable: void <clinit>()>
<com.squareup.okhttp.OkHttpClient: int getReadTimeout()>
<android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>
<uk.co.senab.photoview.gestures.CupcakeGestureDetector: boolean isScaling()>
<com.google.myjson.Gson: com.google.myjson.TypeAdapter getAdapter(com.google.myjson.reflect.TypeToken)>
<com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>
<de.greenrobot.event.BackgroundPoster: void <init>(de.greenrobot.event.EventBus)>
<com.google.gson.reflect.TypeToken: java.lang.Class getRawType()>
<com.squareup.picasso.ResourceBitmapHunter: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,com.squareup.picasso.Request)>
<java.io.IOException: void <init>()>
<android.app.Notification$BigPictureStyle: android.app.Notification$BigPictureStyle bigPicture(android.graphics.Bitmap)>
<com.squareup.okio.InflaterSource: void close()>
<android.support.v4.view.KeyEventCompat: void startTracking(android.view.KeyEvent)>
<android.support.v4.util.SimpleArrayMap: void <init>()>
<android.support.v4.app.Fragment: void onStart()>
<com.google.android.gms.analytics.Tracker$a: boolean dA()>
<org.apache.oltu.oauth2.client.request.OAuthClientRequest$OAuthRequestBuilder: void <init>(java.lang.String)>
<com.battlelancer.seriesguide.ui.OverviewFragment$11: void onLoaderReset(android.support.v4.content.Loader)>
<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>
<java.util.concurrent.CountDownLatch: void countDown()>
<android.content.Intent: void removeExtra(java.lang.String)>
<com.battlelancer.seriesguide.provider.SeriesGuideProvider: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>
<com.squareup.okhttp.Headers: java.lang.String get(java.lang.String[],java.lang.String)>
<com.google.api.client.http.HttpHeaders: com.google.api.client.http.HttpHeaders setAuthorization(java.lang.String)>
<com.google.api.client.http.HttpStatusCodes: boolean isSuccess(int)>
<com.battlelancer.seriesguide.ui.SearchFragment: void onLoaderReset(android.support.v4.content.Loader)>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment$4: void <init>(com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment)>
<java.lang.Class: boolean isInterface()>
<com.battlelancer.seriesguide.util.TimeTools: void applyUnitedStatesCorrections(java.util.Calendar)>
<java.util.HashMap: void putAll(java.util.Map)>
<java.lang.Math: float min(float,float)>
<android.support.v4.app.LoaderManagerImpl: void doRetain()>
<android.content.ComponentName: void <init>(android.content.Context,java.lang.String)>
<com.uwetrottmann.androidutils.CheatSheet: boolean access$000(android.view.View,java.lang.CharSequence)>
<android.view.ViewGroup: void removeViewInLayout(android.view.View)>
<com.google.api.client.http.HttpMediaType: com.google.api.client.http.HttpMediaType fromString(java.lang.String)>
<com.battlelancer.seriesguide.util.SelectionBuilder: com.battlelancer.seriesguide.util.SelectionBuilder where(java.lang.String,java.lang.String[])>
<com.google.myjson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)>
<com.battlelancer.seriesguide.util.EpisodeTools$ShowWatchedType: int getLastWatchedEpisodeTvdbId()>
<android.app.Dialog: void setCancelable(boolean)>
<com.squareup.okio.Buffer: com.squareup.okio.Buffer writeByte(int)>
<com.battlelancer.seriesguide.ui.OverviewFragment$10: void <init>(com.battlelancer.seriesguide.ui.OverviewFragment)>
<com.battlelancer.seriesguide.settings.DisplaySettings: com.battlelancer.seriesguide.Constants$EpisodeSorting getEpisodeSortOrder(android.content.Context)>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newUpdate(android.net.Uri)>
<java.lang.Thread: void run()>
<com.google.api.client.json.GenericJson: void setFactory(com.google.api.client.json.JsonFactory)>
<com.squareup.okhttp.internal.BitArray$FixedCapacity: int checkInput(int)>
<com.battlelancer.seriesguide.billing.Base64: int decode4to3(byte[],int,byte[],int,byte[])>
<android.view.accessibility.AccessibilityEvent: void <init>()>
<com.battlelancer.seriesguide.billing.BillingActivity: void <init>()>
<com.google.gson.Gson$1: void <init>(com.google.gson.Gson)>
<com.battlelancer.seriesguide.billing.Purchase: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<de.greenrobot.event.Subscription: boolean equals(java.lang.Object)>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Writer: void windowUpdate(int,long)>
<android.support.v4.view.GravityCompat$GravityCompatImplBase: int getAbsoluteGravity(int,int)>
<android.graphics.Rect: void set(int,int,int,int)>
<timber.log.Timber: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>
<com.google.api.client.util.ArrayMap: java.lang.Object set(int,java.lang.Object)>
<com.mobeta.android.dslv.DragSortListView: boolean stopDragWithVelocity(boolean,float)>
<android.support.v4.app.DialogFragment: void onAttach(android.app.Activity)>
<com.squareup.okio.ByteString: com.squareup.okio.ByteString encodeUtf8(java.lang.String)>
<com.battlelancer.seriesguide.util.LatestEpisodeUpdateTask: java.lang.Object doInBackground(java.lang.Object[])>
<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>
<com.battlelancer.seriesguide.backend.settings.HexagonSettings: java.lang.String getAccountName(android.content.Context)>
<com.battlelancer.seriesguide.ui.EpisodesFragment: long access$600(com.battlelancer.seriesguide.ui.EpisodesFragment)>
<com.google.api.client.http.javanet.NetHttpResponse: int getStatusCode()>
<java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void access$1400(com.battlelancer.seriesguide.ui.SeasonsFragment)>
<com.battlelancer.seriesguide.ui.dialogs.ListManageDialogFragment$1: void <init>(com.battlelancer.seriesguide.ui.dialogs.ListManageDialogFragment)>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment$8: void onClick(android.view.View)>
<android.widget.OverScroller: void <init>(android.content.Context)>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: void disconnect()>
<butterknife.ButterKnife: android.view.View findById(android.view.View,int)>
<com.google.api.client.http.HttpHeaders: void serializeHeaders(com.google.api.client.http.HttpHeaders,java.lang.StringBuilder,java.lang.StringBuilder,java.util.logging.Logger,com.google.api.client.http.LowLevelHttpRequest)>
<android.widget.ProgressBar: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.google.android.gms.analytics.GoogleAnalytics: void <init>(android.content.Context,com.google.android.gms.analytics.f,com.google.android.gms.analytics.af)>
<com.battlelancer.seriesguide.util.Utils: int setColorAlpha(int,int)>
<com.battlelancer.seriesguide.ui.ListsActivity$1: void <init>(com.battlelancer.seriesguide.ui.ListsActivity)>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Reader: void <init>(int,com.squareup.okio.Source)>
<java.lang.Throwable: java.lang.Throwable getCause()>
<com.squareup.okhttp.internal.spdy.Spdy3$Writer: void <init>(com.squareup.okio.BufferedSink,boolean)>
<com.google.myjson.internal.$Gson$Types$ParameterizedTypeImpl: void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])>
<com.battlelancer.seriesguide.SeriesGuideApplication: void enableStrictMode()>
<com.battlelancer.seriesguide.dashclock.UpcomingEpisodeSettingsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.squareup.okhttp.Headers: int size()>
<com.google.api.client.json.JsonParser: void <clinit>()>
<retrofit.RestAdapter$Builder: retrofit.RestAdapter build()>
<com.squareup.okhttp.OkUrlFactory: com.squareup.okhttp.OkHttpClient client()>
<com.google.api.client.http.LowLevelHttpResponse: void <init>()>
<com.google.api.client.repackaged.com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>
<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>
<com.google.api.client.util.escape.UnicodeEscaper: void <init>()>
<com.google.android.gms.internal.fd$1: void <init>()>
<android.widget.AdapterView: int getLastVisiblePosition()>
<com.squareup.okhttp.internal.spdy.HpackDraft07: java.util.Map nameToFirstIndex()>
<android.view.MotionEvent: float getRawY()>
<com.google.api.client.json.JsonParser: java.lang.String skipToKey(java.util.Set)>
<com.squareup.okhttp.internal.spdy.NameValueBlockReader: void close()>
<com.google.android.gms.plus.PlusOneButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.support.v4.widget.ViewDragHelper: boolean checkNewEdgeDrag(float,float,int,int)>
<android.view.animation.DecelerateInterpolator: void <init>(float)>
<com.google.api.client.util.BackOffUtils: boolean next(com.google.api.client.util.Sleeper,com.google.api.client.util.BackOff)>
<com.google.gson.TreeTypeAdapter: com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object)>
<android.widget.TextView: void cancelLongPress()>
<android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>
<com.battlelancer.seriesguide.ui.OverviewFragment$7: void <init>(com.battlelancer.seriesguide.ui.OverviewFragment)>
<android.media.ExifInterface: void <init>(java.lang.String)>
<com.google.gson.stream.JsonWriter: void push(int)>
<com.squareup.tape.InMemoryObjectQueue: java.lang.Object peek()>
<java.util.TreeSet: boolean add(java.lang.Object)>
<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>
<java.lang.Math: long abs(long)>
<com.battlelancer.seriesguide.ui.FullscreenImageActivity$3: void <init>(com.battlelancer.seriesguide.ui.FullscreenImageActivity)>
<com.squareup.okhttp.Cache$CacheRequestImpl: boolean access$602(com.squareup.okhttp.Cache$CacheRequestImpl,boolean)>
<com.google.api.client.json.JsonObjectParser: com.google.api.client.json.JsonFactory getJsonFactory()>
<com.google.api.client.util.LoggingInputStream: void <init>(java.io.InputStream,java.util.logging.Logger,java.util.logging.Level,int)>
<com.google.api.client.http.GenericUrl: java.net.URL parseURL(java.lang.String)>
<android.support.v4.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor,int)>
<retrofit.Platform$Android: java.util.concurrent.Executor defaultCallbackExecutor()>
<retrofit.RestAdapter: void <init>(retrofit.Endpoint,retrofit.client.Client$Provider,java.util.concurrent.Executor,java.util.concurrent.Executor,retrofit.RequestInterceptor,retrofit.converter.Converter,retrofit.Profiler,retrofit.ErrorHandler,retrofit.RestAdapter$Log,retrofit.RestAdapter$LogLevel,retrofit.RestAdapter$1)>
<java.text.NumberFormat: java.text.NumberFormat getInstance()>
<android.content.Intent: android.content.Intent setData(android.net.Uri)>
<com.crashlytics.android.internal.v: void a(com.crashlytics.android.internal.q)>
<com.battlelancer.seriesguide.ui.ShowFragment: void shareShow()>
<java.lang.IllegalStateException: void <init>(java.lang.String)>
<com.google.api.client.util.Types: java.lang.reflect.Type resolveTypeVariable(java.util.List,java.lang.reflect.TypeVariable)>
<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.battlelancer.seriesguide.util.TimeTools: java.util.Calendar getShowReleaseTime(long,java.lang.String,int)>
<com.google.api.client.http.HttpRequest: java.lang.String getRequestMethod()>
<com.battlelancer.seriesguide.util.EpisodeTools: void episodeWatched(android.content.Context,int,int,int,int,int)>
<com.uwetrottmann.seriesguide.backend.movies.Movies$Builder: void <init>(com.google.api.client.http.HttpTransport,com.google.api.client.json.JsonFactory,com.google.api.client.http.HttpRequestInitializer)>
<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>
<com.squareup.okhttp.Cache: void <init>(java.io.File,long)>
<com.battlelancer.seriesguide.util.Utils: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.Button,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.uwetrottmann.seriesguide.backend.shows.Shows$Builder: com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setRootUrl(java.lang.String)>
<android.widget.ScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<uk.co.senab.photoview.gestures.VersionedGestureDetector: uk.co.senab.photoview.gestures.GestureDetector newInstance(android.content.Context,uk.co.senab.photoview.gestures.OnGestureListener)>
<com.uwetrottmann.getglue.GetGlue: com.uwetrottmann.getglue.services.InteractionService interactionService()>
<java.util.HashSet: void <init>()>
<android.widget.ScrollView: void onDetachedFromWindow()>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Reader: com.squareup.okio.ByteString getName(int)>
<android.support.v4.widget.ViewDragHelper: void releaseViewForPointerUp()>
<com.squareup.okhttp.internal.spdy.SpdyStream: void access$1000(com.squareup.okhttp.internal.spdy.SpdyStream)>
<android.support.v4.content.ModernAsyncTask$1: void <init>()>
<com.battlelancer.seriesguide.util.ServiceUtils$2: void <init>(java.lang.String,java.lang.String)>
<com.squareup.picasso.RequestCreator$2: void <init>(java.lang.InterruptedException)>
<com.google.android.gms.plus.PlusOneDummyView$b: void <init>(android.content.Context,com.google.android.gms.plus.PlusOneDummyView$1)>
<android.support.v4.widget.DrawerLayout$ViewDragCallback: void peekDrawer()>
<com.battlelancer.seriesguide.dataliberation.JsonImportTask: java.lang.Integer doInBackground(java.lang.Void[])>
<com.google.android.gms.analytics.ak: void a(java.util.Map,java.lang.String,java.lang.String)>
<com.squareup.okhttp.Address: void <init>(java.lang.String,int,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,com.squareup.okhttp.Authenticator,java.net.Proxy,java.util.List)>
<android.graphics.Paint$Style: void <clinit>()>
<org.apache.http.conn.params.ConnManagerParams: void setTimeout(org.apache.http.params.HttpParams,long)>
<com.battlelancer.seriesguide.util.Utils: void launchWebsite(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
<com.squareup.okhttp.internal.spdy.Settings: int flags(int)>
<android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.battlelancer.seriesguide.util.ServiceUtils: void openImdb(java.lang.String,java.lang.String,android.content.Context)>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>
<com.squareup.okhttp.internal.DiskLruCache$Snapshot: java.io.InputStream getInputStream(int)>
<com.google.api.client.util.Sleeper$1: void <init>()>
<com.squareup.okhttp.internal.http.CacheStrategy$Factory: com.squareup.okhttp.internal.http.CacheStrategy getCandidate()>
<com.squareup.picasso.Downloader$Response: java.io.InputStream getInputStream()>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity$1: void onClick(android.view.View)>
<android.support.v4.widget.DrawerLayout$ViewDragCallback: int getViewHorizontalDragRange(android.view.View)>
<com.squareup.okhttp.internal.http.OkHeaders: com.squareup.okhttp.Request processAuthHeader(com.squareup.okhttp.Authenticator,com.squareup.okhttp.Response,java.net.Proxy)>
<android.support.v4.app.Fragment: android.content.res.Resources getResources()>
<android.support.v4.widget.ScrollerCompat: void <clinit>()>
<retrofit.Platform$Base: retrofit.converter.Converter defaultConverter()>
<android.support.v4.app.NotificationCompat$Builder: void setFlag(int,boolean)>
<com.battlelancer.seriesguide.dataliberation.JsonImportTask: int importShows(java.io.File)>
<com.squareup.okhttp.internal.BitArray$VariableCapacity: void set(int)>
<java.lang.StringBuilder: void <init>(java.lang.String)>
<com.battlelancer.seriesguide.util.TmdbTools$ProfileImageSize: void <init>(java.lang.String,int,java.lang.String)>
<com.squareup.okhttp.Cache$Entry: boolean isHttps()>
<android.util.Log: int wtf(java.lang.String,java.lang.String)>
<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void setEntity(org.apache.http.HttpEntity)>
<org.apache.http.client.methods.HttpPut: void <init>(java.lang.String)>
<com.google.android.gms.plus.PlusOneButton: int getAnnotation(android.content.Context,android.util.AttributeSet)>
<android.support.v4.view.KeyEventCompatEclair: void startTracking(android.view.KeyEvent)>
<com.battlelancer.seriesguide.ui.PeopleFragment: void setEmptyMessage()>
<com.squareup.okhttp.internal.http.HttpConnection$UnknownLengthSource: void <init>(com.squareup.okhttp.internal.http.HttpConnection,java.net.CacheRequest)>
<android.widget.TextView: android.os.Parcelable onSaveInstanceState()>
<com.squareup.picasso.OkHttpDownloader: void <init>(android.content.Context)>
<com.squareup.okio.AsyncTimeout$1: void <init>(com.squareup.okio.AsyncTimeout,com.squareup.okio.Sink)>
<android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.squareup.okhttp.Cache: int access$708(com.squareup.okhttp.Cache)>
<android.support.v4.content.CursorLoader: void onStopLoading()>
<com.squareup.okhttp.internal.Platform: void logW(java.lang.String)>
<android.support.v4.widget.ViewDragHelper$1: void <init>()>
<com.google.gson.internal.bind.ObjectTypeAdapter: void <clinit>()>
<com.battlelancer.seriesguide.ui.ShowsFragment$ShowsAdapter$1: void onClick(android.view.View)>
<uk.co.senab.photoview.PhotoViewAttacher: void onGlobalLayout()>
<android.widget.Scroller: int getCurrY()>
<com.squareup.okhttp.internal.http.HttpTransport: void releaseConnectionOnIdle()>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential$RequestHandler: void intercept(com.google.api.client.http.HttpRequest)>
<com.battlelancer.seriesguide.util.SystemUiHider: void <clinit>()>
<android.support.v4.widget.ViewDragHelper: void setEdgeTrackingEnabled(int)>
<com.battlelancer.seriesguide.adapters.ExtensionsAdapter$ExtensionDisableRequestEvent: void <init>(com.battlelancer.seriesguide.adapters.ExtensionsAdapter,int)>
<android.os.Handler: void <init>()>
<com.battlelancer.seriesguide.util.EpisodeTools: void execute(android.content.Context,com.battlelancer.seriesguide.util.EpisodeTools$FlagType)>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder: fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder color(int)>
<com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment$1: void <init>(com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment)>
<com.google.api.client.http.HttpResponse: boolean isSuccessStatusCode()>
<java.io.StringWriter: void write(int)>
<com.battlelancer.seriesguide.util.FlagTapedTask: void <init>(android.content.Context,com.jakewharton.trakt.services.ShowService,com.battlelancer.seriesguide.util.EpisodeTools$EpisodeAction,int,java.util.List,boolean)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: boolean access$2100(com.squareup.okhttp.internal.spdy.SpdyConnection)>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder addHeader(java.lang.String,java.lang.String)>
<android.support.v4.content.ModernAsyncTask$InternalHandler: void <init>(android.support.v4.content.ModernAsyncTask$1)>
<com.squareup.picasso.Stats: void dispatchBitmapTransformed(android.graphics.Bitmap)>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment findFragmentById(int)>
<android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<com.google.gson.stream.JsonReader: int peekNumber()>
<android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase: int getCurrY(java.lang.Object)>
<java.util.TreeMap: java.util.Set entrySet()>
<com.google.api.client.util.escape.PercentEscaper: void <init>(java.lang.String,boolean)>
<com.battlelancer.seriesguide.loaders.TvdbShowLoader: void <init>(android.content.Context,int)>
<com.google.gson.stream.JsonReader: void skipToEndOfLine()>
<android.view.ViewGroup: void addView(android.view.View)>
<android.widget.LinearLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.TextView: boolean onKeyUp(int,android.view.KeyEvent)>
<com.google.api.client.http.HttpHeaders: com.google.api.client.http.HttpHeaders setIfNoneMatch(java.lang.String)>
<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request followUpRequest()>
<java.io.FilterInputStream: void <init>(java.io.InputStream)>
<java.util.Arrays: void fill(float[],float)>
<com.battlelancer.seriesguide.sync.SgAuthenticationService: void <init>()>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder handshake(com.squareup.okhttp.Handshake)>
<com.google.api.client.util.Types: java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type)>
<android.os.BaseBundle: void putInt(java.lang.String,int)>
<com.mobeta.android.dslv.DragSortListView: void doRemoveItem()>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout: void exitAndThrowIfTimedOut()>
<com.google.api.client.http.apache.ApacheHttpTransport: org.apache.http.impl.client.DefaultHttpClient newDefaultHttpClient()>
<com.google.api.client.util.ArrayMap: java.lang.Object get(java.lang.Object)>
<java.util.Collections: java.util.List nCopies(int,java.lang.Object)>
<android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC: android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity)>
<com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity: void onSearch(java.lang.String)>
<com.google.api.client.http.HttpMediaType: com.google.api.client.http.HttpMediaType setType(java.lang.String)>
<com.battlelancer.seriesguide.ui.AddActivity: void processIntent(android.content.Intent)>
<android.app.Dialog: void <init>(android.content.Context,int)>
<com.squareup.picasso.Downloader$ResponseException: void <init>(java.lang.String)>
<com.google.android.gms.analytics.Tracker: com.google.android.gms.analytics.Tracker$a b(com.google.android.gms.analytics.Tracker)>
<java.lang.Math: float max(float,float)>
<android.widget.TextView: void drawableStateChanged()>
<com.battlelancer.seriesguide.billing.BillingActivity$3: void <init>(com.battlelancer.seriesguide.billing.BillingActivity)>
<com.squareup.picasso.PicassoExecutorService: void <init>()>
<java.util.zip.Deflater: void setDictionary(byte[])>
<org.apache.oltu.oauth2.client.request.OAuthClientRequest$TokenRequestBuilder: org.apache.oltu.oauth2.client.request.OAuthClientRequest$TokenRequestBuilder setRedirectURI(java.lang.String)>
<com.battlelancer.seriesguide.ui.EpisodesFragment$EpisodesQuery: void <clinit>()>
<com.battlelancer.seriesguide.backend.CloudSetupFragment: void <init>()>
<com.battlelancer.seriesguide.ui.EpisodeDetailsActivity: void setupViews()>
<com.uwetrottmann.seriesguide.backend.shows.Shows$Save: void <init>(com.uwetrottmann.seriesguide.backend.shows.Shows,com.uwetrottmann.seriesguide.backend.shows.model.ShowList)>
<com.jakewharton.trakt.services.ShowService$Episodes: void <init>(int,int,int)>
<com.squareup.okio.Timeout$1: com.squareup.okio.Timeout timeout(long,java.util.concurrent.TimeUnit)>
<com.squareup.tape.InMemoryObjectQueue: void add(java.lang.Object)>
<com.crashlytics.android.internal.w: void <init>(com.crashlytics.android.internal.v)>
<android.support.v4.app.LoaderManagerImpl: void doStop()>
<android.widget.RemoteViews: void <init>(java.lang.String,int)>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Reader: int evictToRecoverBytes(int)>
<java.util.Collections: java.util.Set emptySet()>
<com.battlelancer.seriesguide.ui.BaseNavDrawerActivity: void setupNavDrawer()>
<uk.co.senab.photoview.PhotoViewAttacher$FlingRunnable: void fling(int,int,int,int)>
<com.battlelancer.seriesguide.ui.ShowsFragment$3: void run()>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Request access$000(com.squareup.okhttp.Response$Builder)>
<java.util.concurrent.LinkedBlockingQueue: java.lang.Object take()>
<android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl: void startTracking(android.view.KeyEvent)>
<android.view.ContextThemeWrapper: void setTheme(int)>
<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>
<android.support.v4.view.ViewPager: boolean arrowScroll(int)>
<com.squareup.okio.InflaterSource: void releaseInflatedBytes()>
<com.google.api.client.http.UrlEncodedContent: void writeTo(java.io.OutputStream)>
<com.google.android.gms.analytics.StandardExceptionParser: void setIncludedPackages(android.content.Context,java.util.Collection)>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter endObject()>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.google.myjson.FieldNamingPolicy: void <init>(java.lang.String,int)>
<com.google.api.client.http.javanet.NetHttpTransport: void <init>()>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment: void onStart()>
<com.squareup.okhttp.Response: com.squareup.okhttp.CacheControl cacheControl()>
<com.battlelancer.seriesguide.migration.MigrationActivity: android.os.AsyncTask access$000(com.battlelancer.seriesguide.migration.MigrationActivity)>
<android.widget.FrameLayout: void drawableStateChanged()>
<java.util.LinkedHashSet: void <init>()>
<java.lang.String: char charAt(int)>
<android.support.v4.app.FragmentActivity: void onReallyStop()>
<android.support.v4.app.Fragment: void performDestroy()>
<android.support.v4.app.FragmentManagerImpl$2: void <init>(android.support.v4.app.FragmentManagerImpl)>
<com.google.myjson.stream.JsonReader: int getLineNumber()>
<com.squareup.okhttp.Cache: int access$808(com.squareup.okhttp.Cache)>
<com.battlelancer.seriesguide.api.Action: com.battlelancer.seriesguide.api.Action fromJson(org.json.JSONObject)>
<android.support.v4.widget.ViewDragHelper: void saveInitialMotion(float,float,int)>
<android.widget.Scroller: int getDuration()>
<com.google.android.gms.analytics.v$a: com.google.android.gms.analytics.j cB()>
<com.jakewharton.trakt.enumerations.Rating: java.lang.String toString()>
<com.battlelancer.seriesguide.adapters.MoviesAdapter: com.battlelancer.seriesguide.adapters.MoviesAdapter$PopupMenuClickListener access$000(com.battlelancer.seriesguide.adapters.MoviesAdapter)>
<com.google.api.client.http.apache.ContentEntity: void <init>(long,com.google.api.client.util.StreamingContent)>
<retrofit.RestAdapter: java.util.Map getMethodInfoCache(java.lang.Class)>
<com.battlelancer.seriesguide.backend.CloudEndpointUtils$1: void <init>(boolean)>
<com.battlelancer.seriesguide.billing.BillingActivity: void enableFallBackMode()>
<com.battlelancer.seriesguide.ui.PersonActivity: void <init>()>
<com.battlelancer.seriesguide.util.ServiceUtils: com.squareup.okhttp.OkHttpClient getCachingOkHttpClient(android.content.Context)>
<com.google.android.gms.analytics.aa: void C(java.lang.String)>
<uk.co.senab.photoview.log.LoggerDefault: int d(java.lang.String,java.lang.String)>
<android.support.v4.view.ViewCompatJB: void postInvalidateOnAnimation(android.view.View)>
<retrofit.RestAdapter$Builder$1: void <init>(retrofit.RestAdapter$Builder,retrofit.client.Client)>
<com.battlelancer.seriesguide.ui.ShowFragment$8: void <init>(com.battlelancer.seriesguide.ui.ShowFragment)>
<java.util.concurrent.ConcurrentHashMap: boolean containsKey(java.lang.Object)>
<retrofit.Platform$Base: retrofit.client.Client$Provider defaultClient()>
<java.util.zip.Inflater: void <init>()>
<uk.co.senab.photoview.PhotoView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<com.squareup.okhttp.Cache: java.lang.String urlToKey(com.squareup.okhttp.Request)>
<android.content.Intent$ShortcutIconResource: android.content.Intent$ShortcutIconResource fromContext(android.content.Context,int)>
<com.squareup.okhttp.internal.http.StatusLine: java.lang.String toString()>
<com.battlelancer.seriesguide.ui.BaseActivity: void onCreate(android.os.Bundle)>
<com.battlelancer.seriesguide.ui.ShowFragment: void populateShow()>
<com.google.api.client.util.ArrayMap$Entry: void <init>(com.google.api.client.util.ArrayMap,int)>
<com.squareup.picasso.Action$RequestWeakReference: void <init>(com.squareup.picasso.Action,java.lang.Object,java.lang.ref.ReferenceQueue)>
<com.tonicartos.widget.stickygridheaders.StickyGridHeadersGridView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.api.client.repackaged.com.google.common.base.Throwables: void propagateIfInstanceOf(java.lang.Throwable,java.lang.Class)>
<android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2: android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity)>
<com.google.api.client.http.javanet.NetHttpRequest: void <init>(java.net.HttpURLConnection)>
<com.google.android.gms.analytics.h: java.lang.String cA()>
<android.support.v4.view.AccessibilityDelegateCompatIcs: java.lang.Object newAccessibilityDelegateDefaultImpl()>
<com.squareup.picasso.Request: java.lang.String logId()>
<com.battlelancer.seriesguide.ui.BaseActivity: void <init>()>
<java.lang.String: java.lang.String valueOf(long)>
<com.squareup.okhttp.internal.DiskLruCache$2: void <init>()>
<android.app.Activity: void setIntent(android.content.Intent)>
<com.mobeta.android.dslv.DragSortListView: boolean access$1500(com.mobeta.android.dslv.DragSortListView)>
<com.google.android.gms.analytics.ab: void <init>(java.lang.String,boolean)>
<com.battlelancer.seriesguide.ui.FullscreenImageActivity: void onPause()>
<com.battlelancer.seriesguide.api.Action$Builder: void <init>(java.lang.String,int)>
<com.google.api.client.http.GenericUrl: com.google.api.client.util.GenericData clone()>
<java.util.Date: long getTime()>
<de.greenrobot.event.EventBus: de.greenrobot.event.EventBus getDefault()>
<com.google.android.gms.internal.r$a$a: android.os.Bundle a(java.lang.String,java.lang.String,android.os.Bundle)>
<com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity: void access$100(com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity,java.lang.String)>
<com.squareup.okhttp.Cache$CacheRequestImpl$1: void write(byte[],int,int)>
<com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment$2: void onClick(android.view.View)>
<com.battlelancer.seriesguide.appwidget.AppWidget: void onReceive(android.content.Context,android.content.Intent)>
<com.google.api.client.http.HttpResponse: void disconnect()>
<com.google.myjson.internal.bind.TypeAdapters$2: void <init>()>
<com.google.android.gms.internal.he: android.content.Intent aB(java.lang.String)>
<com.google.android.gms.wallet.fragment.SupportWalletFragment: void <init>()>
<android.widget.ProgressBar: void onSizeChanged(int,int,int,int)>
<com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl: void addRequestProperty(java.lang.String,java.lang.String)>
<com.battlelancer.seriesguide.util.ShareUtils: void shareShow(android.app.Activity,int,java.lang.String)>
<com.uwetrottmann.androidutils.AndroidUtils: boolean isJellyBeanOrHigher()>
<android.support.v4.content.ModernAsyncTask$InternalHandler: void <init>()>
<com.google.api.client.util.ArrayMap$EntrySet: void <init>(com.google.api.client.util.ArrayMap)>
<com.google.android.gms.wallet.fragment.SupportWalletFragment$a: void <init>(com.google.android.gms.wallet.fragment.SupportWalletFragment)>
<java.net.URL: java.lang.String toString()>
<com.battlelancer.seriesguide.ui.ShowFragment: void access$100(com.battlelancer.seriesguide.ui.ShowFragment)>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment$1: void <init>(com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment)>
<com.battlelancer.seriesguide.widgets.SlidingTabLayout$TabClickListener: void <init>(com.battlelancer.seriesguide.widgets.SlidingTabLayout,com.battlelancer.seriesguide.widgets.SlidingTabLayout$1)>
<android.view.ViewGroup: void setDescendantFocusability(int)>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: void connect()>
<com.google.gson.stream.JsonWriter: void setIndent(java.lang.String)>
<android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub: android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks)>
<com.squareup.okhttp.internal.spdy.ErrorCode: com.squareup.okhttp.internal.spdy.ErrorCode fromSpdyGoAway(int)>
<android.os.BaseBundle: java.lang.Object get(java.lang.String)>
<com.google.api.client.util.GenericData: com.google.api.client.util.ClassInfo getClassInfo()>
<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder url(java.lang.String)>
<com.squareup.okhttp.Response: com.squareup.okhttp.Protocol protocol()>
<com.battlelancer.seriesguide.ui.OverviewFragment: void onPopulateEpisodeData(android.database.Cursor)>
<com.squareup.picasso.BitmapHunter: android.graphics.Bitmap applyCustomTransformations(java.util.List,android.graphics.Bitmap)>
<com.battlelancer.seriesguide.items.Series: void setActors(java.lang.String)>
<com.battlelancer.seriesguide.ui.ShowFragment: int access$300(com.battlelancer.seriesguide.ui.ShowFragment)>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeWatchedPreviousType: void setEpisodeProperties(com.uwetrottmann.seriesguide.backend.episodes.model.Episode)>
<com.google.android.gms.analytics.u: com.google.android.gms.analytics.u cU()>
<com.squareup.okhttp.Connection: boolean isReadable()>
<com.mobeta.android.dslv.DragSortController: boolean access$000(com.mobeta.android.dslv.DragSortController)>
<com.squareup.okhttp.internal.http.SpdyTransport: boolean canReuseConnection()>
<com.battlelancer.seriesguide.dataliberation.JsonExportTask$ListsQuery: void <clinit>()>
<android.support.v4.app.Fragment: void setHasOptionsMenu(boolean)>
<com.google.android.gms.plus.PlusOneButton$DefaultOnPlusOneClickListener: void onPlusOneClick(android.content.Intent)>
<android.support.v4.view.ViewPager$SavedState: void <clinit>()>
<com.google.myjson.FieldNamingPolicy$1: void <init>(java.lang.String,int)>
<com.google.android.gms.wallet.fragment.WalletFragment: android.app.Fragment a(com.google.android.gms.wallet.fragment.WalletFragment)>
<com.battlelancer.seriesguide.billing.IabResult: boolean isSuccess()>
<com.google.api.client.util.Strings: boolean isNullOrEmpty(java.lang.String)>
<java.util.AbstractQueue: void clear()>
<com.google.api.client.json.JsonParser: com.google.api.client.json.JsonToken startParsingObjectOrArray()>
<com.battlelancer.seriesguide.service.NotificationService: void onNotify(android.database.Cursor,java.util.List,long)>
<com.google.myjson.stream.JsonWriter: void beforeValue(boolean)>
<android.support.v4.app.Fragment: void startActivity(android.content.Intent)>
<com.squareup.picasso.BitmapHunter$4: void <init>(com.squareup.picasso.Transformation)>
<android.app.Activity: void setResult(int,android.content.Intent)>
<org.apache.oltu.oauth2.client.request.OAuthClientRequest$AuthenticationRequestBuilder: void <init>(java.lang.String)>
<com.squareup.okio.ByteString: java.lang.String hex()>
<com.battlelancer.seriesguide.provider.SeriesGuideProvider: com.battlelancer.seriesguide.util.SelectionBuilder buildSelection(android.net.Uri,int)>
<com.battlelancer.seriesguide.util.Utils: boolean isAllowedLargeDataConnection(android.content.Context,boolean)>
<android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void onDestroy()>
<com.battlelancer.seriesguide.ui.dialogs.ListManageDialogFragment$2: void onClick(android.view.View)>
<com.google.android.gms.analytics.ac: void <clinit>()>
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>
<android.widget.FrameLayout: android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.jakewharton.trakt.enumerations.Extended: java.lang.String toString()>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$8: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.google.api.client.googleapis.extensions.android.gms.auth.GooglePlayServicesAvailabilityIOException: com.google.android.gms.auth.UserRecoverableAuthException getCause()>
<com.google.android.apps.dashclock.api.DashClockExtension: void <init>()>
<android.support.v4.app.FragmentTransaction: void <init>()>
<org.apache.http.message.AbstractHttpMessage: void <init>()>
<android.widget.ScrollView: void measureChild(android.view.View,int,int)>
<com.google.myjson.internal.$Gson$Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<com.google.api.client.util.escape.CharEscapers: java.lang.String escapeUriPathWithoutReserved(java.lang.String)>
<android.os.AsyncTask: void <init>()>
<com.squareup.okio.Util: void sneakyThrow2(java.lang.Throwable)>
<java.lang.NullPointerException: void <init>()>
<java.io.PrintWriter: void print(boolean)>
<android.support.v4.content.Loader: void abandon()>
<java.lang.NullPointerException: void <init>(java.lang.String)>
<com.google.gson.internal.bind.TypeAdapters$23: void <init>()>
<com.battlelancer.seriesguide.widgets.SlidingTabLayout: com.battlelancer.seriesguide.widgets.SlidingTabStrip access$200(com.battlelancer.seriesguide.widgets.SlidingTabLayout)>
<android.support.v4.content.IntentCompat$IntentCompatImplHC: android.content.Intent makeMainActivity(android.content.ComponentName)>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)>
<com.google.api.client.http.HttpTransport: com.google.api.client.http.HttpRequest buildRequest()>
<com.squareup.okhttp.internal.http.SpdyTransport: boolean isProhibitedHeader(com.squareup.okhttp.Protocol,com.squareup.okio.ByteString)>
<com.battlelancer.seriesguide.ui.OverviewFragment: void access$300(com.battlelancer.seriesguide.ui.OverviewFragment)>
<com.battlelancer.seriesguide.ui.ShowsActivity$3: void onStatusChanged(int)>
<com.mobeta.android.dslv.DragSortListView: void adjustItem(int,android.view.View,boolean)>
<android.content.ContentValues: void put(java.lang.String,java.lang.String)>
<com.squareup.okhttp.Request: com.squareup.okhttp.Headers access$1200(com.squareup.okhttp.Request)>
<com.google.android.gms.common.GooglePlayServicesUtil: android.content.Context getRemoteContext(android.content.Context)>
<android.support.v4.widget.DrawerLayout: void onRestoreInstanceState(android.os.Parcelable)>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.jakewharton.trakt.enumerations.Extended: void <clinit>()>
<com.battlelancer.seriesguide.getglueapi.GetGlueCheckin$GetGlueCheckInTask: java.lang.Integer doInBackground(java.lang.Void[])>
<com.google.api.client.http.apache.ApacheHttpResponse: int getStatusCode()>
<com.battlelancer.seriesguide.ui.PeopleFragment$2: void <init>(com.battlelancer.seriesguide.ui.PeopleFragment)>
<com.google.android.gms.plus.PlusOneButton: android.view.View a(com.google.android.gms.plus.PlusOneButton)>
<com.battlelancer.seriesguide.util.ServiceUtils: void setUpTraktButton(int,android.view.View,java.lang.String)>
<com.google.android.gms.common.GooglePlayServicesUtil: android.content.Intent c(android.content.Context,int)>
<com.battlelancer.seriesguide.dataliberation.DataLiberationFragment$4: void <init>(com.battlelancer.seriesguide.dataliberation.DataLiberationFragment,android.content.Context)>
<android.view.MotionEvent: int getPointerId(int)>
<android.preference.Preference: void setSummary(java.lang.CharSequence)>
<com.google.android.gms.common.GooglePlayServicesUtil: boolean ey()>
<com.squareup.okhttp.internal.tls.OkHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)>
<com.google.api.client.util.IOUtils: void copy(java.io.InputStream,java.io.OutputStream,boolean)>
<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>
<android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl: boolean metaStateHasModifiers(int,int)>
<com.squareup.okhttp.internal.spdy.Http20Draft12: com.squareup.okhttp.internal.spdy.FrameReader newReader(com.squareup.okio.BufferedSource,boolean)>
<com.google.android.gms.analytics.v$a: void c(java.lang.String,boolean)>
<com.google.api.client.http.GenericUrl: void appendRawPathFromParts(java.lang.StringBuilder)>
<uk.co.senab.photoview.PhotoViewAttacher: void setScaleType(android.widget.ImageView$ScaleType)>
<com.google.api.client.googleapis.MethodOverride: boolean overrideThisMethod(com.google.api.client.http.HttpRequest)>
<com.battlelancer.seriesguide.ui.ShowsActivity: void onUpgrade()>
<android.widget.TextView: void setTextSize(float)>
<com.google.api.client.http.HttpResponse: java.nio.charset.Charset getContentCharset()>
<android.os.BaseBundle: boolean containsKey(java.lang.String)>
<com.battlelancer.seriesguide.ui.PeopleFragment: void refresh()>
<com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type getOwnerType()>
<retrofit.Platform$Android: retrofit.client.Client$Provider defaultClient()>
<com.battlelancer.seriesguide.ui.HelpActivity: void fireTrackerEvent(java.lang.String)>
<com.google.gson.GsonBuilder: void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List)>
<com.squareup.okhttp.Response: com.squareup.okhttp.ResponseBody body()>
<com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection: void <init>(java.net.HttpURLConnection)>
<com.google.myjson.Gson$3: void <init>(com.google.myjson.Gson)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$3: boolean onPreferenceClick(android.preference.Preference)>
<android.support.v4.widget.ScrollerCompat: int getCurrY()>
<java.lang.StringBuilder: java.lang.StringBuilder append(float)>
<android.support.v4.app.DialogFragment: void dismissInternal(boolean)>
<android.content.ContextWrapper: java.io.File getExternalFilesDir(java.lang.String)>
<com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment: void access$100(com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment,boolean,boolean,int)>
<com.google.api.client.http.UriTemplate$CompositeOutput: java.lang.String getEncodedValue(java.lang.String)>
<android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: int getPointerCount(android.view.MotionEvent)>
<android.view.MotionEvent: float getRawX()>
<com.squareup.picasso.UrlConnectionDownloader: void <init>(android.content.Context)>
<android.widget.AbsListView: void setSelectionFromTop(int,int)>
<android.content.ContentProvider: android.content.Context getContext()>
<android.support.v4.widget.DrawerLayout$ViewDragCallback: void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback)>
<uk.co.senab.photoview.PhotoView: void <init>(android.content.Context)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void access$2000(com.squareup.okhttp.internal.spdy.SpdyConnection,int,com.squareup.okhttp.internal.spdy.ErrorCode)>
<com.google.api.client.util.Data: java.util.Map mapOf(java.lang.Object)>
<java.lang.RuntimeException: void <init>(java.lang.String)>
<com.battlelancer.seriesguide.util.EpisodeTools$ShowType: void <init>(android.content.Context,int,int)>
<android.graphics.Color: int green(int)>
<android.view.View: int getPaddingTop()>
<android.view.animation.AlphaAnimation: void <init>(float,float)>
<com.google.android.gms.plus.PlusOneButton$DefaultOnPlusOneClickListener: void <init>(com.google.android.gms.plus.PlusOneButton,com.google.android.gms.plus.PlusOneButton$OnPlusOneClickListener)>
<com.squareup.okhttp.OkHttpClient: java.net.CookieHandler getCookieHandler()>
<android.support.v4.content.IntentCompatHoneycomb: android.content.Intent makeMainActivity(android.content.ComponentName)>
<android.support.v4.app.TaskStackBuilder: android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent)>
<org.apache.oltu.oauth2.client.request.OAuthClientRequest$TokenRequestBuilder: org.apache.oltu.oauth2.client.request.OAuthClientRequest$TokenRequestBuilder setClientSecret(java.lang.String)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Seasons: android.net.Uri buildSeasonsOfShowUri(java.lang.String)>
<android.support.v4.view.ViewConfigurationCompat: void <clinit>()>
<de.greenrobot.event.PendingPostQueue: void <init>()>
<android.support.v4.app.FragmentActivity$1: void <init>(android.support.v4.app.FragmentActivity)>
<android.graphics.drawable.shapes.Shape: void <init>()>
<com.mobeta.android.dslv.DragSortListView$HeightCache: void add(int,int)>
<com.google.api.client.util.ClassInfo: boolean isEnum()>
<java.util.LinkedHashMap: void <init>(int)>
<com.battlelancer.seriesguide.ui.EpisodesFragment: void fireTrackerEventContextMenu(java.lang.String)>
<android.content.Intent: android.net.Uri getData()>
<com.google.android.gms.analytics.ac: com.google.android.gms.analytics.i a(com.google.android.gms.analytics.ac)>
<com.google.android.gms.common.SignInButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.support.v4.widget.ViewDragHelper: boolean isViewUnder(android.view.View,int,int)>
<com.battlelancer.seriesguide.settings.DisplaySettings: boolean isNoReleasedEpisodes(android.content.Context)>
<com.battlelancer.seriesguide.service.TraktFlagService: void stop()>
<com.battlelancer.seriesguide.util.Utils: boolean setLabelValueOrHide(android.view.View,android.widget.TextView,double)>
<com.google.android.gms.analytics.r: void cG()>
<com.google.android.gms.auth.GoogleAuthUtil: boolean ad(java.lang.String)>
<com.battlelancer.seriesguide.adapters.ListsPagerAdapter: void <init>(android.support.v4.app.FragmentManager,android.content.Context)>
<com.battlelancer.seriesguide.adapters.MultiPagerAdapter: void <init>(android.support.v4.app.FragmentManager)>
<com.battlelancer.seriesguide.service.NotificationService: void <clinit>()>
<android.os.BaseBundle: java.lang.String getString(java.lang.String)>
<android.support.v4.widget.DrawerLayout: void requestLayout()>
<android.support.v4.widget.DrawerLayout: boolean hasOpaqueBackground(android.view.View)>
<com.google.myjson.internal.bind.TypeAdapters: com.google.myjson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.myjson.TypeAdapter)>
<android.support.v4.app.BackStackRecord: void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)>
<com.google.android.gms.internal.he: android.net.Uri aC(java.lang.String)>
<com.google.myjson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>
<com.google.api.client.json.gson.GsonFactory: com.google.api.client.json.JsonParser createJsonParser(java.io.InputStream)>
<com.google.api.client.util.escape.PercentEscaper: void <clinit>()>
<android.support.v4.app.Fragment: boolean isHidden()>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential: java.lang.String getToken()>
<com.uwetrottmann.androidutils.AndroidUtils: boolean isNetworkConnected(android.content.Context)>
<com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory()>
<com.google.gson.stream.JsonReader: void skipValue()>
<com.battlelancer.seriesguide.ui.OverviewActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
<com.google.android.gms.analytics.ac: java.util.List A(int)>
<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>
<com.google.android.gms.internal.hj$a: com.google.android.gms.internal.hj M(android.os.IBinder)>
<com.squareup.okhttp.internal.spdy.SpdyConnection$3: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],boolean,int,int,com.squareup.okhttp.internal.spdy.Ping)>
<com.battlelancer.seriesguide.ui.ConnectTraktFinishedFragment$1: void <init>(com.battlelancer.seriesguide.ui.ConnectTraktFinishedFragment)>
<com.battlelancer.seriesguide.dataliberation.DataLiberationFragment: android.os.AsyncTask access$100(com.battlelancer.seriesguide.dataliberation.DataLiberationFragment)>
<uk.co.senab.photoview.PhotoViewAttacher: android.graphics.Matrix access$100(uk.co.senab.photoview.PhotoViewAttacher)>
<android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: void <init>()>
<com.squareup.okhttp.internal.tls.OkHostnameVerifier: void <init>()>
<android.widget.Scroller: void fling(int,int,int,int,int,int,int,int)>
<java.util.concurrent.atomic.AtomicReference: void <init>()>
<java.lang.Object: void wait(long,int)>
<android.webkit.JsPromptResult: void <init>()>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$8: boolean onPreferenceClick(android.preference.Preference)>
<com.google.myjson.internal.bind.TypeAdapters$28: void <init>(java.lang.Class,com.google.myjson.TypeAdapter)>
<android.text.style.CharacterStyle: void <init>()>
<com.google.api.client.http.HttpMediaType: java.nio.charset.Charset getCharsetParameter()>
<com.battlelancer.seriesguide.dataliberation.DataLiberationFragment: android.widget.CheckBox access$200(com.battlelancer.seriesguide.dataliberation.DataLiberationFragment)>
<com.google.myjson.internal.ConstructorConstructor: void <init>(java.util.Map)>
<android.text.format.DateFormat: java.text.DateFormat getTimeFormat(android.content.Context)>
<com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl: void setConnectTimeout(int)>
<android.view.View: void setMeasuredDimension(int,int)>
<com.squareup.okio.Buffer: byte readByte()>
<com.squareup.okhttp.internal.DiskLruCache: void access$100(com.squareup.okhttp.internal.DiskLruCache)>
<com.squareup.okhttp.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>
<com.google.api.client.http.EmptyContent: long getLength()>
<de.greenrobot.event.HandlerPoster: void enqueue(de.greenrobot.event.Subscription,java.lang.Object)>
<com.mobeta.android.dslv.DragSortController: com.mobeta.android.dslv.DragSortListView access$200(com.mobeta.android.dslv.DragSortController)>
<android.support.v4.view.AccessibilityDelegateCompat: void <clinit>()>
<com.mobeta.android.dslv.DragSortListView: int calcItemHeight(int,android.view.View,boolean)>
<com.squareup.okhttp.internal.spdy.Http20Draft12$FrameLogger: void <clinit>()>
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>
<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<com.uwetrottmann.seriesguide.backend.movies.Movies: com.uwetrottmann.seriesguide.backend.movies.Movies$Save save(com.uwetrottmann.seriesguide.backend.movies.model.MovieList)>
<com.squareup.picasso.Utils: java.lang.Object getService(android.content.Context,java.lang.String)>
<com.battlelancer.seriesguide.adapters.SeasonsAdapter$1: void <init>(com.battlelancer.seriesguide.adapters.SeasonsAdapter,int,int)>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink: void write(com.squareup.okio.Buffer,long)>
<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>
<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>
<com.google.android.gms.analytics.r$1: void s(boolean)>
<com.google.api.client.http.apache.ApacheHttpResponse: int getHeaderCount()>
<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator)>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeAction: void <init>(java.lang.String,int)>
<com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>
<com.mobeta.android.dslv.DragSortListView: void dropFloatView()>
<android.widget.AbsListView: int getListPaddingLeft()>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style)>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpRequest setUnsuccessfulResponseHandler(com.google.api.client.http.HttpUnsuccessfulResponseHandler)>
<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>
<com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.battlelancer.seriesguide.billing.IabResult: java.lang.String getMessage()>
<com.google.api.client.json.JsonToken: com.google.api.client.json.JsonToken[] values()>
<android.support.v4.app.Fragment: void onViewStateRestored(android.os.Bundle)>
<com.battlelancer.seriesguide.util.Utils: android.os.AsyncTask executeInOrder(android.os.AsyncTask,java.lang.Object[])>
<com.squareup.picasso.DeferredRequestCreator: void <init>(com.squareup.picasso.RequestCreator,android.widget.ImageView)>
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int)>
<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.HttpEngine recover(java.io.IOException,com.squareup.okio.Sink)>
<com.squareup.okhttp.internal.http.HttpEngine: boolean isRecoverable(java.io.IOException)>
<java.lang.Byte: void <init>(byte)>
<com.google.gson.internal.bind.ArrayTypeAdapter: void <clinit>()>
<com.squareup.okhttp.ConnectionPool: java.util.LinkedList access$000(com.squareup.okhttp.ConnectionPool)>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder: fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder sectionsCount(int)>
<com.battlelancer.seriesguide.ui.ShowsActivity: void onCreate(android.os.Bundle)>
<com.battlelancer.seriesguide.extensions.AmazonExtension: void <init>()>
<java.util.AbstractMap: java.lang.String toString()>
<com.battlelancer.seriesguide.util.tasks.HexagonRemoveMovieFromCollectionTask: void <init>(android.content.Context,int)>
<com.squareup.okhttp.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>
<com.google.gson.internal.bind.TypeAdapters: void <clinit>()>
<com.google.android.gms.analytics.r: void <clinit>()>
<com.google.api.client.util.ArrayMap: java.util.Set entrySet()>
<com.battlelancer.seriesguide.util.EpisodeTools$SeasonWatchedType: void <init>(android.content.Context,int,int,int,int)>
<java.lang.Boolean: void <clinit>()>
<android.content.ContextWrapper: void startActivity(android.content.Intent)>
<android.support.v4.app.LoaderManagerImpl: void updateActivity(android.support.v4.app.FragmentActivity)>
<com.google.android.gms.internal.ho: void <init>(android.content.Context,android.util.AttributeSet)>
<com.battlelancer.seriesguide.ui.BaseActivity: void onStart()>
<com.google.android.gms.common.ErrorDialogFragment: void <init>()>
<com.squareup.okhttp.internal.BitArray$VariableCapacity: void toggle(int)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences: void <clinit>()>
<com.battlelancer.seriesguide.util.TaskManager: com.battlelancer.seriesguide.util.AddShowTask access$002(com.battlelancer.seriesguide.util.TaskManager,com.battlelancer.seriesguide.util.AddShowTask)>
<com.battlelancer.seriesguide.extensions.ExtensionManager: java.util.List getEnabledExtensions()>
<android.support.v4.app.FragmentActivity: void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int)>
<java.util.Arrays: boolean equals(byte[],byte[])>
<java.lang.Math: double sin(double)>
<com.google.gson.internal.Excluder: void <init>()>
<android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl: void <init>()>
<com.google.android.gms.analytics.y: java.lang.String encode(java.lang.String)>
<android.support.v4.widget.DrawerLayout: void cancelChildViewTouch()>
<com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection: void setRequestMethod(java.lang.String)>
<android.widget.TextView: void computeScroll()>
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>
<com.google.api.client.http.HttpMediaType: java.lang.String quoteString(java.lang.String)>
<com.battlelancer.seriesguide.items.SearchResult: void <init>()>
<android.support.v4.app.LoaderManagerImpl: boolean hasRunningLoaders()>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeWatchedType: void <init>(android.content.Context,int,int,int,int,int)>
<com.battlelancer.seriesguide.sync.SgSyncAdapter$SyncType: void <init>(java.lang.String,int,int)>
<java.text.DecimalFormat: void <init>(java.lang.String)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment: void access$200(com.battlelancer.seriesguide.ui.EpisodeDetailsFragment)>
<android.support.v4.app.Fragment$1: void <init>(android.support.v4.app.Fragment)>
<android.appwidget.AppWidgetProvider: void <init>()>
<com.squareup.okhttp.internal.BitArray$VariableCapacity: int offsetOf(int)>
<android.widget.ScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
<android.view.KeyEvent: int getKeyCode()>
<com.google.api.client.http.HttpRequest: boolean handleRedirect(int,com.google.api.client.http.HttpHeaders)>
<com.battlelancer.seriesguide.util.FlagTapeEntryQueue: void add(com.battlelancer.seriesguide.util.FlagTapeEntry)>
<com.google.api.client.util.ArrayMap: java.lang.Object getValue(int)>
<com.google.android.gms.internal.hn: android.view.View c(android.content.Context,int,int)>
<com.mobeta.android.dslv.DragSortController: void onLongPress(android.view.MotionEvent)>
<com.google.api.client.http.apache.ApacheHttpTransport: boolean supportsMethod(java.lang.String)>
<com.squareup.picasso.ContactsPhotoBitmapHunter: void <clinit>()>
<com.google.android.gms.internal.ez$1: void onCancel(android.content.DialogInterface)>
<com.squareup.okhttp.Request: java.lang.String urlString()>
<com.squareup.okio.AsyncTimeout$Watchdog: void <init>()>
<android.graphics.drawable.Drawable: void <init>()>
<com.google.api.client.util.GenericData$EntryIterator: java.lang.Object next()>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment: void fireTrackerEvent(java.lang.String)>
<android.support.v4.app.DialogFragment: void show(android.support.v4.app.FragmentManager,java.lang.String)>
<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.OkHttpClient copyWithDefaults()>
<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.content.ContentValues: void <init>()>
<com.google.gson.LongSerializationPolicy$1: void <init>(java.lang.String,int)>
<de.greenrobot.event.HandlerPoster: void <init>(de.greenrobot.event.EventBus,android.os.Looper,int)>
<com.google.api.client.json.gson.GsonGenerator: void enablePrettyPrint()>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Episodes: android.net.Uri buildEpisodesOfSeasonWithShowUri(java.lang.String)>
<com.google.api.client.http.GenericUrl: java.lang.String toString()>
<android.support.v4.util.LruCache: void evictAll()>
<com.uwetrottmann.getglue.Utils: com.squareup.okhttp.OkHttpClient createOkHttpClient()>
<com.battlelancer.seriesguide.billing.BillingActivity: void access$000(com.battlelancer.seriesguide.billing.BillingActivity,java.lang.String)>
<android.support.v4.widget.ScrollerCompatGingerbread: java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator)>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable: void <init>(android.view.animation.Interpolator,int,int,int[],float,float,float,float,boolean,boolean,fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Callbacks,boolean,android.graphics.drawable.Drawable,boolean)>
<com.google.api.client.http.HttpHeaders: com.google.api.client.http.HttpHeaders setIfUnmodifiedSince(java.lang.String)>
<com.google.gson.stream.JsonReader: java.lang.String nextQuotedValue(char)>
<com.battlelancer.seriesguide.ui.OverviewFragment: int access$200(com.battlelancer.seriesguide.ui.OverviewFragment)>
<com.battlelancer.seriesguide.billing.IabException: void <init>(int,java.lang.String)>
<android.support.v4.util.SparseArrayCompat: java.lang.Object get(int)>
<com.google.gson.stream.JsonReader: java.lang.String nextString()>
<java.util.TreeMap: void <init>()>
<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response stripBody(com.squareup.okhttp.Response)>
<android.app.AlertDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>
<android.content.Intent: void <init>()>
<com.google.api.client.util.DataMap$EntrySet: java.util.Iterator iterator()>
<com.squareup.okhttp.internal.http.OkHeaders: long stringToLong(java.lang.String)>
<com.battlelancer.seriesguide.traktapi.SgTrakt: void <init>(android.content.Context)>
<com.squareup.okhttp.Response: com.squareup.okhttp.Headers headers()>
<com.google.api.client.json.JsonObjectParser$Builder: void <init>(com.google.api.client.json.JsonFactory)>
<com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol get(java.lang.String)>
<com.google.api.client.repackaged.com.google.common.base.Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.squareup.picasso.RequestCreator: void into(android.widget.ImageView)>
<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.battlelancer.seriesguide.ui.QuickCheckInActivity: void <init>()>
<com.battlelancer.seriesguide.ui.EpisodesFragment$2: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<com.crashlytics.android.internal.ab: void <clinit>()>
<android.support.v4.app.FragmentManagerImpl: void showFragment(android.support.v4.app.Fragment,int,int)>
<java.util.concurrent.FutureTask: void run()>
<android.view.MotionEvent: float getY(int)>
<android.support.v4.view.ViewPager: void addFocusables(java.util.ArrayList,int,int)>
<com.battlelancer.seriesguide.util.EpisodeTools: void showCollected(android.content.Context,int,boolean)>
<uk.co.senab.photoview.PhotoViewAttacher: void access$200(uk.co.senab.photoview.PhotoViewAttacher)>
<android.support.v4.view.ViewPager: void sortChildDrawingOrder()>
<com.squareup.okhttp.OkHttpClient: boolean getFollowSslRedirects()>
<com.battlelancer.seriesguide.util.Utils: int resolveAttributeToResourceId(android.content.res.Resources$Theme,int)>
<com.google.api.client.http.HttpResponseException: java.lang.StringBuilder computeMessageBuffer(com.google.api.client.http.HttpResponse)>
<com.squareup.okhttp.internal.spdy.SpdyConnection$4: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],int,java.util.List)>
<com.google.android.gms.common.a: void <init>()>
<java.math.BigDecimal: java.lang.String toString()>
<com.squareup.okhttp.Request: java.net.URL url()>
<com.readystatesoftware.systembartint.SystemBarTintManager$SystemBarConfig: int getNavigationBarHeight()>
<java.net.URL: java.lang.String getProtocol()>
<com.mobeta.android.dslv.DragSortListView: boolean startDrag(int,android.view.View,int,int,int)>
<com.google.android.gms.analytics.r: void cF()>
<com.squareup.okhttp.internal.http.HttpEngine: void maybeCache()>
<com.battlelancer.seriesguide.ui.SearchActivity: void handleIntent(android.content.Intent)>
<com.crashlytics.android.internal.p: void a(android.content.Context)>
<com.google.android.gms.internal.ip: boolean aF(int)>
<com.google.android.gms.common.api.d: void onCancel(android.content.DialogInterface)>
<com.battlelancer.seriesguide.ui.dialogs.MovieCheckInDialogFragment: void <init>()>
<com.battlelancer.seriesguide.ui.ShowFragment: void access$200(com.battlelancer.seriesguide.ui.ShowFragment)>
<com.squareup.picasso.Utils: int getBitmapBytes(android.graphics.Bitmap)>
<com.battlelancer.seriesguide.dataliberation.model.Movie: void <init>()>
<com.mobeta.android.dslv.DragSortListView$DragScroller: void stopScrolling(boolean)>
<com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment: void setStatus(boolean,boolean,int)>
<com.battlelancer.seriesguide.ui.TraktShoutsActivity: void setupActionBar()>
<android.support.v4.app.ActionBarDrawerToggleJellybeanMR2: java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int)>
<android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: boolean isFinished(java.lang.Object)>
<com.squareup.okhttp.internal.http.RetryableSink: void write(com.squareup.okio.Buffer,long)>
<com.battlelancer.seriesguide.extensions.EpisodeActionsHelper: void populateEpisodeActions(android.view.LayoutInflater,android.view.ViewGroup,java.util.List)>
<android.support.v4.util.TimeUtils: int accumField(int,int,boolean,int)>
<com.squareup.okio.RealBufferedSink: com.squareup.okio.BufferedSink writeByte(int)>
<com.squareup.okhttp.Request$Builder: java.lang.Object access$400(com.squareup.okhttp.Request$Builder)>
<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okio.Timeout readTimeout()>
<android.widget.TextView: int getBottomPaddingOffset()>
<android.support.v4.widget.DrawerLayout: void dispatchOnDrawerSlide(android.view.View,float)>
<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<com.squareup.okio.Buffer: int readIntLe()>
<com.google.myjson.internal.$Gson$Types$GenericArrayTypeImpl: int hashCode()>
<android.support.v4.app.Fragment: void performCreate(android.os.Bundle)>
<com.battlelancer.seriesguide.sync.SgSyncAdapter: boolean isSyncActive(android.content.Context,boolean)>
<java.util.ArrayList: void <init>(java.util.Collection)>
<com.google.myjson.stream.JsonReader: void push(int)>
<com.squareup.picasso.Utils: android.content.res.Resources getResources(android.content.Context,com.squareup.picasso.Request)>
<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>
<com.squareup.okio.ByteString: byte[] toByteArray()>
<com.squareup.okhttp.internal.spdy.SpdyStream: void closeLater(com.squareup.okhttp.internal.spdy.ErrorCode)>
<com.battlelancer.seriesguide.service.NotificationService: boolean handleDeleteIntent(android.content.Context,android.content.Intent)>
<android.util.Patterns: void <clinit>()>
<com.google.android.gms.analytics.w: boolean da()>
<com.google.android.gms.auth.UserRecoverableAuthException: void <init>(java.lang.String,android.content.Intent)>
<android.widget.BaseAdapter: void <init>()>
<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove()>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Writer: void pushPromise(int,int,java.util.List)>
<com.battlelancer.seriesguide.sync.SgSyncAdapter: void requestSync(android.content.Context,android.os.Bundle)>
<com.battlelancer.seriesguide.dataliberation.JsonExportTask$MoviesQuery: void <clinit>()>
<com.squareup.okhttp.internal.Platform: java.net.URI toUriLenient(java.net.URL)>
<org.apache.oltu.oauth2.client.request.OAuthClientRequest$AuthenticationRequestBuilder: org.apache.oltu.oauth2.client.request.OAuthClientRequest$AuthenticationRequestBuilder setResponseType(java.lang.String)>
<android.support.v4.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)>
<android.support.v4.util.SparseArrayCompat: void <init>(int)>
<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>
<com.squareup.okhttp.OkHttpClient$1: void addLine(com.squareup.okhttp.Headers$Builder,java.lang.String)>
<android.view.View: int getOverScrollMode()>
<com.squareup.okhttp.internal.http.HttpEngine: boolean validate(com.squareup.okhttp.Response,com.squareup.okhttp.Response)>
<android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: float getX(android.view.MotionEvent,int)>
<com.squareup.okhttp.Cache$CacheResponseBody: com.squareup.okio.BufferedSource source()>
<com.google.myjson.internal.bind.TypeAdapters$10: void <init>()>
<com.battlelancer.seriesguide.ui.ListsFragment: void <init>()>
<retrofit.ErrorHandler: void <clinit>()>
<android.widget.ListView: void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo)>
<com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl: java.io.OutputStream getOutputStream()>
<com.squareup.picasso.RequestCreator: void <init>()>
<android.support.v4.view.ViewCompat$HCViewCompatImpl: long getFrameTime()>
<com.uwetrottmann.androidutils.CheatSheet: boolean showCheatSheet(android.view.View,java.lang.CharSequence)>
<com.readystatesoftware.systembartint.SystemBarTintManager$SystemBarConfig: int getNavigationBarWidth()>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection getConnection()>
<android.view.View: boolean post(java.lang.Runnable)>
<android.support.v4.view.ViewPager: void <clinit>()>
<com.google.appengine.api.urlfetch.URLFetchServiceFactory: com.google.appengine.api.urlfetch.URLFetchService getURLFetchService()>
<android.support.v4.app.NotificationCompat$Builder: void <init>(android.content.Context)>
<java.net.URLConnection: java.net.URL getURL()>
<com.battlelancer.seriesguide.ui.dialogs.AddListDialogFragment: void onCreate(android.os.Bundle)>
<java.net.URL: java.lang.String getHost()>
<butterknife.ButterKnife: void inject(java.lang.Object,android.view.View)>
<com.battlelancer.seriesguide.ui.ShowsFragment: boolean access$202(com.battlelancer.seriesguide.ui.ShowsFragment,boolean)>
<com.google.api.client.util.Throwables: java.lang.RuntimeException propagate(java.lang.Throwable)>
<com.squareup.okhttp.internal.spdy.Http20Draft12: java.util.logging.Logger access$100()>
<com.squareup.okio.RealBufferedSink: com.squareup.okio.BufferedSink emitCompleteSegments()>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeFlagTask: void uploadToHexagon()>
<com.google.android.gms.internal.ip: boolean ge()>
<android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC: void <init>()>
<com.google.android.gms.internal.hj$a$a: com.google.android.gms.dynamic.d a(com.google.android.gms.dynamic.d,int,int)>
<com.battlelancer.seriesguide.ui.ShowsActivity: void access$000(com.battlelancer.seriesguide.ui.ShowsActivity)>
<com.google.api.client.util.ClassInfo: boolean getIgnoreCase()>
<com.battlelancer.seriesguide.widgets.SlidingTabLayout: void scrollToTab(int,int)>
<com.squareup.okhttp.internal.spdy.Spdy3$Reader: void readRstStream(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int)>
<com.squareup.picasso.UrlConnectionDownloader: java.net.HttpURLConnection openConnection(android.net.Uri)>
<retrofit.Platform: retrofit.Platform get()>
<uk.co.senab.photoview.PhotoViewAttacher: void onFling(float,float,float,float)>
<android.view.MotionEvent: void finalize()>
<com.squareup.okhttp.OkHttpClient$1: boolean isReadable(com.squareup.okhttp.Connection)>
<com.squareup.okhttp.internal.Dns$1: void <init>()>
<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity$4: void onClick(android.content.DialogInterface,int)>
<retrofit.RestAdapter$Builder: void ensureSaneDefaults()>
<com.squareup.okio.Buffer: int readInt()>
<android.widget.AdapterView: int getPositionForView(android.view.View)>
<com.google.api.client.http.apache.ApacheHttpResponse: void <init>(org.apache.http.client.methods.HttpRequestBase,org.apache.http.HttpResponse)>
<android.support.v4.app.NotificationCompatJellybean: void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,int,java.lang.CharSequence)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void fireTrackerEvent(java.lang.String)>
<com.google.api.client.util.ArrayMap$EntryIterator: java.lang.Object next()>
<com.battlelancer.seriesguide.settings.TraktCredentials: java.lang.String getPassword()>
<com.battlelancer.seriesguide.adapters.ExtensionsAdapter: void <init>(android.content.Context)>
<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$6: void <init>(android.content.Context,android.preference.Preference,android.preference.Preference,android.preference.Preference,android.preference.Preference)>
<com.google.android.gms.analytics.q: void v(android.content.Context)>
<com.squareup.okhttp.internal.spdy.Spdy3$Writer: void windowUpdate(int,long)>
<com.battlelancer.seriesguide.ui.PersonActivity: void onCreate(android.os.Bundle)>
<android.support.v4.app.LoaderManagerImpl: void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo)>
<android.support.v4.app.FragmentActivity: void supportInvalidateOptionsMenu()>
<com.battlelancer.seriesguide.ui.ShowsFragment: void showDeleteDialog(long)>
<android.app.Fragment: android.os.Bundle getArguments()>
<com.battlelancer.seriesguide.ui.MoviesActivity: void onCreate(android.os.Bundle)>
<com.squareup.picasso.Stats: void dispatchDownloadFinished(long)>
<com.battlelancer.seriesguide.Constants$EpisodeSorting: java.lang.String value()>
<java.net.URLConnection: void setUseCaches(boolean)>
<com.battlelancer.seriesguide.settings.TraktCredentials: boolean ensureCredentials(android.content.Context)>
<com.battlelancer.seriesguide.settings.AdvancedSettings: boolean isAutoBackupEnabled(android.content.Context)>
<java.lang.String: void <init>(char[],int,int)>
<android.support.v4.util.TimeUtils: int formatDurationLocked(long,int)>
<com.battlelancer.seriesguide.util.tasks.HexagonAddMovieToWatchlistTask: void <init>(android.content.Context,int)>
<com.google.api.client.http.UriTemplate$CompositeOutput: com.google.api.client.http.UriTemplate$CompositeOutput[] values()>
<com.google.api.client.http.HttpMediaType: void <clinit>()>
<javax.net.SocketFactory: javax.net.SocketFactory getDefault()>
<com.google.api.client.util.FieldInfo: java.lang.String getName()>
<retrofit.RestAdapter$Builder: retrofit.RestAdapter$Builder setLogLevel(retrofit.RestAdapter$LogLevel)>
<java.lang.Object: void finalize()>
<com.google.api.client.googleapis.extensions.android.accounts.GoogleAccountManager: void <init>(android.content.Context)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Episodes: android.net.Uri buildEpisodeWithShowUri(java.lang.String)>
<com.battlelancer.seriesguide.util.EpisodeTools$FlagType: java.util.List buildEpisodeList()>
<android.support.v4.app.Fragment: void instantiateChildFragmentManager()>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void <clinit>()>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void access$200(com.battlelancer.seriesguide.ui.SeasonsFragment,java.lang.String)>
<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>
<com.battlelancer.seriesguide.util.PeopleListHelper: void populateShowCast(android.content.Context,android.view.LayoutInflater,android.view.ViewGroup,com.uwetrottmann.tmdb.entities.Credits)>
<com.google.myjson.internal.bind.TypeAdapters$7: void <init>()>
<com.google.api.client.util.Data: java.util.Map newMapInstance(java.lang.Class)>
<com.squareup.okhttp.internal.http.OkHeaders: void <clinit>()>
<android.content.ContentUris: long parseId(android.net.Uri)>
<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>
<com.google.myjson.stream.JsonReader: void checkLenient()>
<com.battlelancer.seriesguide.backend.CloudSetupFragment: void onActivityCreated(android.os.Bundle)>
<android.view.View: void setBackgroundColor(int)>
<com.google.myjson.internal.$Gson$Preconditions: void checkArgument(boolean)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: java.util.Map access$1700(com.squareup.okhttp.internal.spdy.SpdyConnection)>
<com.squareup.okio.Segment: void <init>()>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.ResponseBody access$600(com.squareup.okhttp.Response$Builder)>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder: com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer)>
<com.battlelancer.seriesguide.settings.ActivitySettings: boolean isOnlyFavorites(android.content.Context)>
<com.google.api.client.http.HttpRequestFactory: com.google.api.client.http.HttpRequest buildRequest(java.lang.String,com.google.api.client.http.GenericUrl,com.google.api.client.http.HttpContent)>
<com.google.android.gms.analytics.ah: void <init>(org.apache.http.client.HttpClient,com.google.android.gms.analytics.GoogleAnalytics,android.content.Context)>
<android.support.v4.view.ViewPager$ItemInfo: void <init>()>
<java.lang.StringBuilder: void <init>()>
<com.battlelancer.seriesguide.api.SeriesGuideExtension: void <init>(java.lang.String)>
<com.battlelancer.seriesguide.ui.ShowsActivity$1: void onIabSetupFinished(com.battlelancer.seriesguide.billing.IabResult)>
<de.greenrobot.event.AsyncPoster: void <init>(de.greenrobot.event.EventBus)>
<java.io.FileOutputStream: void <init>(java.io.File)>
<android.support.v4.widget.DrawerLayout: void onDetachedFromWindow()>
<com.crashlytics.android.internal.ac: void <init>()>
<com.battlelancer.seriesguide.ui.StatsActivity: void <init>()>
<com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void updateUnwatchedCounts()>
<com.battlelancer.seriesguide.ui.StatsFragment: void cleanupStatsTask()>
<com.squareup.okio.Buffer: short readShortLe()>
<com.squareup.okio.RealBufferedSink: com.squareup.okio.BufferedSink writeShort(int)>
<timber.log.Timber: void e(java.lang.String,java.lang.Object[])>
<com.squareup.picasso.LruCache: android.graphics.Bitmap get(java.lang.String)>
<android.widget.ProgressBar: android.os.Parcelable onSaveInstanceState()>
<com.squareup.okhttp.internal.spdy.PushObserver: void <clinit>()>
<de.greenrobot.event.Subscription: void <init>(java.lang.Object,de.greenrobot.event.SubscriberMethod,int)>
<com.battlelancer.seriesguide.ui.PeopleFragment: void onAttach(android.app.Activity)>
<com.uwetrottmann.seriesguide.backend.movies.MoviesRequest: com.uwetrottmann.seriesguide.backend.movies.MoviesRequest setDisableGZipContent(boolean)>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment$2: void <init>(com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment)>
<android.support.v4.view.KeyEventCompat: void <clinit>()>
<android.view.View: java.lang.Object getTag()>
<com.battlelancer.seriesguide.ui.BaseNavDrawerActivity$DrawerAdapter: void <init>(com.battlelancer.seriesguide.ui.BaseNavDrawerActivity,android.content.Context)>
<com.google.api.client.json.JsonObjectParser$Builder: com.google.api.client.json.JsonObjectParser build()>
<com.mobeta.android.dslv.DragSortController: boolean onSingleTapUp(android.view.MotionEvent)>
<com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity$1: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void pushResetLater(int,com.squareup.okhttp.internal.spdy.ErrorCode)>
<com.battlelancer.seriesguide.ui.MovieDetailsActivity: void onCreate(android.os.Bundle)>
<com.battlelancer.seriesguide.dataliberation.model.Episode: void <init>()>
<com.squareup.okhttp.internal.http.HttpTransport: com.squareup.okio.Source getTransferStream(java.net.CacheRequest)>
<com.battlelancer.seriesguide.util.DBUtils: void applyInSmallBatches(android.content.Context,java.util.ArrayList)>
<com.battlelancer.seriesguide.ui.OverviewFragment$9: void <init>(com.battlelancer.seriesguide.ui.OverviewFragment,int,int,java.lang.String)>
<com.battlelancer.seriesguide.settings.TraktCredentials: void setCredentials(java.lang.String,java.lang.String)>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink: void close()>
<android.graphics.Matrix: void setRotate(float,float,float)>
<android.os.SystemClock: long elapsedRealtime()>
<java.lang.StringBuilder: void setLength(int)>
<android.support.v4.widget.DrawerLayout$ViewDragCallback$1: void run()>
<java.util.LinkedList: void addFirst(java.lang.Object)>
<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSink: com.squareup.okio.Timeout timeout()>
<com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment: void setButtonStates(boolean,boolean)>
<com.google.android.gms.analytics.aa: boolean dp()>
<android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean: android.app.Notification build(android.support.v4.app.NotificationCompat$Builder)>
<retrofit.android.MainThreadExecutor: void <init>()>
<android.webkit.WebView: void loadUrl(java.lang.String)>
<android.widget.PopupMenu: void <init>(android.content.Context,android.view.View)>
<java.lang.ref.Reference: java.lang.Object get()>
<com.battlelancer.seriesguide.ui.BaseNavDrawerActivity: void setDrawerSelectedItem(int)>
<com.google.api.client.http.UrlEncodedParser: void <clinit>()>
<android.content.ContextWrapper: void startActivities(android.content.Intent[],android.os.Bundle)>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: boolean execute(boolean)>
<com.mobeta.android.dslv.DragSortController: int flingHandleHitPosition(android.view.MotionEvent)>
<com.squareup.okhttp.OkHttpClient$1: java.lang.Object getOwner(com.squareup.okhttp.Connection)>
<com.battlelancer.seriesguide.util.Utils: java.lang.String splitAndKitTVDBStrings(java.lang.String)>
<com.battlelancer.seriesguide.widgets.SlidingTabStrip: void <init>(android.content.Context,android.util.AttributeSet)>
<android.support.v4.widget.DrawerLayout: int getDrawerViewAbsoluteGravity(android.view.View)>
<com.google.api.client.util.DataMap$EntrySet: com.google.api.client.util.DataMap$EntryIterator iterator()>
<com.battlelancer.seriesguide.util.TraktTools: java.lang.String buildEpisodeOrShowUrl(int,int,int)>
<android.widget.Scroller: int getCurrX()>
<com.battlelancer.seriesguide.util.Utils: void trackClick(android.content.Context,java.lang.String,java.lang.String)>
<java.util.HashMap: void <init>()>
<com.google.gson.TreeTypeAdapter: com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object)>
<android.widget.LinearLayout: void <init>(android.content.Context)>
<android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>
<com.google.android.gms.analytics.l: void warn(java.lang.String)>
<android.support.v4.app.Fragment: void onActivityCreated(android.os.Bundle)>
<com.google.myjson.TypeAdapter: void <init>()>
<com.google.api.client.json.JsonParser: void skipToKey(java.lang.String)>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Writer: void synStream(boolean,boolean,int,int,java.util.List)>
<com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection: java.io.InputStream getErrorStream()>
<com.squareup.okhttp.Response$Builder: java.lang.String access$300(com.squareup.okhttp.Response$Builder)>
<com.squareup.okhttp.internal.http.HttpEngine: boolean sameConnection(java.net.URL)>
<com.squareup.okhttp.OkHttpClient: java.util.List getProtocols()>
<com.battlelancer.seriesguide.adapters.EpisodesAdapter$2: void <init>(com.battlelancer.seriesguide.adapters.EpisodesAdapter,int,int,long,boolean,boolean)>
<com.battlelancer.seriesguide.ui.SearchFragment: void <init>()>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences: void <init>()>
<com.squareup.picasso.UrlConnectionDownloader: void installCacheIfNeeded(android.content.Context)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void getPreferences()>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response access$800(com.squareup.okhttp.Response$Builder)>
<com.uwetrottmann.getglue.GetGlue: retrofit.RestAdapter getRestAdapter()>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<com.google.gson.stream.JsonWriter: void <init>(java.io.Writer)>
<com.squareup.okhttp.internal.Platform: java.lang.String getPrefix()>
<com.battlelancer.seriesguide.ui.SearchActivity: void <init>()>
<android.graphics.RectF: void <init>()>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment$9: void <init>(com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment)>
<com.battlelancer.seriesguide.billing.IabHelper$1: void <init>(com.battlelancer.seriesguide.billing.IabHelper,com.battlelancer.seriesguide.billing.IabHelper$OnIabSetupFinishedListener)>
<uk.co.senab.photoview.scrollerproxy.PreGingerScroller: int getCurrY()>
<android.app.Notification$Builder: android.app.Notification$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)>
<java.util.Calendar: void set(int,int,int,int,int,int)>
<android.support.v4.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)>
<android.view.View: int getTop()>
<com.squareup.okhttp.internal.http.AuthenticatorAdapter: void <clinit>()>
<com.squareup.okhttp.Request: java.lang.String access$900(com.squareup.okhttp.Request)>
<android.support.v4.app.NotificationCompat: android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000()>
<android.view.View: boolean isFocusable()>
<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<com.squareup.picasso.Utils$PicassoThreadFactory: void <init>()>
<com.jakewharton.trakt.TraktHelper: com.google.gson.GsonBuilder getGsonBuilder()>
<com.battlelancer.seriesguide.ui.HelpActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.battlelancer.seriesguide.ui.OverviewFragment: android.widget.LinearLayout access$1100(com.battlelancer.seriesguide.ui.OverviewFragment)>
<com.battlelancer.seriesguide.util.ShowTools: com.battlelancer.seriesguide.util.ShowTools get(android.content.Context)>
<com.uwetrottmann.seriesguide.backend.shows.model.Show: void <init>()>
<java.util.AbstractCollection: java.lang.String toString()>
<com.google.api.client.http.HttpResponse: java.lang.String getStatusMessage()>
<com.google.api.client.http.HttpMediaType: void <init>(java.lang.String)>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.squareup.okio.Timeout timeout()>
<com.google.android.gms.internal.gz: void onClick(android.content.DialogInterface,int)>
<com.battlelancer.seriesguide.items.SearchResult$1: void <init>()>
<android.os.SystemClock: long uptimeMillis()>
<com.squareup.okhttp.internal.DiskLruCache$Editor: void commit()>
<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>
<com.battlelancer.seriesguide.billing.IabHelper: void <init>(android.content.Context,java.lang.String)>
<com.squareup.okio.RealBufferedSource: java.lang.String readUtf8(long)>
<android.support.v4.app.ActionBarDrawerToggle$SlideDrawable: void <init>(android.support.v4.app.ActionBarDrawerToggle,android.graphics.drawable.Drawable)>
<com.battlelancer.seriesguide.adapters.MoviesCursorAdapter$1: void <init>(com.battlelancer.seriesguide.adapters.MoviesCursorAdapter,int)>
<com.mobeta.android.dslv.DragSortController: boolean onTouch(android.view.View,android.view.MotionEvent)>
<com.google.api.client.http.HttpResponseException$Builder: com.google.api.client.http.HttpResponseException$Builder setMessage(java.lang.String)>
<com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter)>
<com.squareup.picasso.AssetBitmapHunter: void <init>(android.content.Context,com.squareup.picasso.Picasso,com.squareup.picasso.Dispatcher,com.squareup.picasso.Cache,com.squareup.picasso.Stats,com.squareup.picasso.Action)>
<com.google.api.client.util.Types$1: java.util.Iterator iterator()>
<com.google.android.gms.analytics.ah: java.net.URL a(com.google.android.gms.analytics.x)>
<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForPosition(int)>
<com.squareup.okio.Okio: java.util.logging.Logger access$000()>
<android.support.v4.app.NoSaveStateFrameLayout: android.view.ViewGroup wrap(android.view.View)>
<com.battlelancer.seriesguide.backend.CloudSetupFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.battlelancer.seriesguide.ui.ShowsFragment: boolean access$302(com.battlelancer.seriesguide.ui.ShowsFragment,boolean)>
<org.apache.http.message.AbstractHttpMessage: org.apache.http.params.HttpParams getParams()>
<com.google.api.client.repackaged.com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: int size()>
<com.google.api.client.json.JsonFactory: void <init>()>
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>
<android.support.v4.widget.DrawerLayout: int getDrawerLockMode(android.view.View)>
<com.readystatesoftware.systembartint.SystemBarTintManager: void <init>(android.app.Activity)>
<android.app.Dialog: void dismiss()>
<java.lang.Float: boolean isInfinite(float)>
<com.squareup.okhttp.internal.spdy.HpackDraft07: java.util.Map access$200()>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder: void <init>(android.content.Context)>
<android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread: boolean isFinished(java.lang.Object)>
<android.support.v4.app.ShareCompat$IntentBuilder: android.content.Intent createChooserIntent()>
<com.google.gson.FieldNamingPolicy: void <clinit>()>
<android.preference.PreferenceActivity: void addPreferencesFromResource(int)>
<com.squareup.okhttp.Response: java.lang.String access$1400(com.squareup.okhttp.Response)>
<com.jakewharton.trakt.services.RateService$ShowRating: void <init>(int,com.jakewharton.trakt.enumerations.Rating)>
<com.battlelancer.seriesguide.api.SeriesGuideExtension: void onCreate()>
<com.battlelancer.seriesguide.provider.SeriesGuideProvider: boolean applyingBatch()>
<android.widget.ListView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.support.v4.widget.ScrollerCompat: void <init>(android.content.Context,android.view.animation.Interpolator)>
<com.google.android.gms.internal.ho: void c(android.content.res.Resources)>
<com.google.gson.internal.bind.TypeAdapters$25: void <init>()>
<timber.log.Timber$1: void w(java.lang.String,java.lang.Object[])>
<com.google.android.gms.analytics.u$a: void <clinit>()>
<com.jakewharton.trakt.services.CommentService$ShowComment: com.jakewharton.trakt.services.CommentService$ShowComment spoiler(boolean)>
<com.google.api.client.googleapis.services.AbstractGoogleClient: java.lang.String normalizeServicePath(java.lang.String)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$7: void onLoaderReset(android.support.v4.content.Loader)>
<com.battlelancer.seriesguide.ui.ShowsFragment: void onFavoriteShow(int,boolean)>
<android.os.StatFs: int getBlockCount()>
<android.widget.ScrollView: float getTopFadingEdgeStrength()>
<android.widget.TextView: void onVisibilityChanged(android.view.View,int)>
<android.os.AsyncTask: boolean isCancelled()>
<com.battlelancer.seriesguide.ui.TraktShoutsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.google.android.gms.analytics.aj: boolean dJ()>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$EpisodeSearch: java.lang.String getDocId(android.net.Uri)>
<com.battlelancer.seriesguide.ui.OverviewFragment: void fireTrackerEvent(java.lang.String)>
<com.squareup.okhttp.internal.http.OkHeaders: boolean varyMatches(com.squareup.okhttp.Response,com.squareup.okhttp.Headers,com.squareup.okhttp.Request)>
<java.lang.Number: void <init>()>
<com.crashlytics.android.internal.i: void <clinit>()>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void onPause()>
<com.battlelancer.seriesguide.migration.MigrationActivity: void setupViews()>
<java.lang.Math: long min(long,long)>
<com.battlelancer.seriesguide.billing.IabHelper$2$1: void run()>
<com.google.android.gms.wallet.fragment.SupportWalletFragment$c: void <init>(com.google.android.gms.wallet.fragment.SupportWalletFragment,com.google.android.gms.wallet.fragment.SupportWalletFragment$1)>
<android.support.v4.view.GravityCompat$GravityCompatImplBase: void <init>()>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment: void populateShowViews(com.battlelancer.seriesguide.items.SearchResult)>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity: android.os.AsyncTask access$300(com.battlelancer.seriesguide.ui.BackupDeleteActivity)>
<com.battlelancer.seriesguide.ui.SeasonsFragment$2$1: boolean onMenuItemClick(android.view.MenuItem)>
<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>
<com.google.android.gms.plus.internal.g: com.google.android.gms.plus.internal.c K(android.content.Context)>
<com.google.api.client.http.HttpHeaders: com.google.api.client.http.HttpHeaders setUserAgent(java.lang.String)>
<com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment: void <init>()>
<java.util.HashSet: boolean add(java.lang.Object)>
<java.lang.Object: void notifyAll()>
<android.content.ContentValues: void <clinit>()>
<com.google.android.apps.dashclock.api.internal.IExtension$Stub: void <init>()>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1: void <init>()>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void pushRequestLater(int,java.util.List)>
<com.google.api.client.googleapis.json.GoogleJsonResponseException: void <init>(com.google.api.client.http.HttpResponseException$Builder,com.google.api.client.googleapis.json.GoogleJsonError)>
<java.lang.Character: void <clinit>()>
<android.support.v4.app.FragmentManagerImpl$1: void run()>
<com.battlelancer.seriesguide.provider.SeriesGuideDatabase: void rebuildFtsTableImpl(android.database.sqlite.SQLiteDatabase)>
<android.content.ContentResolver: java.lang.Object addStatusChangeListener(int,android.content.SyncStatusObserver)>
<com.uwetrottmann.seriesguide.backend.episodes.Episodes$Builder: com.uwetrottmann.seriesguide.backend.episodes.Episodes build()>
<com.squareup.okhttp.Request$Builder: void <init>()>
<com.google.api.client.googleapis.services.AbstractGoogleClientRequest: com.google.api.client.http.HttpResponse executeUnparsed()>
<com.battlelancer.seriesguide.ui.dialogs.MovieCheckInDialogFragment: com.battlelancer.seriesguide.ui.dialogs.MovieCheckInDialogFragment newInstance(int,java.lang.String,java.lang.String)>
<com.google.myjson.stream.JsonToken: void <clinit>()>
<com.battlelancer.seriesguide.ui.dialogs.AddListDialogFragment: void onStart()>
<com.battlelancer.seriesguide.dataliberation.DataLiberationTools: boolean isAutoBackupAvailable()>
<com.google.api.client.googleapis.MethodOverride: void intercept(com.google.api.client.http.HttpRequest)>
<com.squareup.okhttp.internal.DiskLruCache: java.io.OutputStream access$2000()>
<com.google.myjson.Gson$1: void <init>(com.google.myjson.Gson)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment: com.battlelancer.seriesguide.ui.MovieDetailsFragment newInstance(int)>
<com.google.android.gms.analytics.GoogleAnalytics: void f(android.app.Activity)>
<com.google.api.client.json.JsonGenerator: void serialize(java.lang.Object)>
<com.google.gson.internal.$Gson$Types$WildcardTypeImpl: int hashCode()>
<android.view.FocusFinder: android.view.FocusFinder getInstance()>
<com.battlelancer.seriesguide.billing.Purchase: java.lang.String getDeveloperPayload()>
<com.battlelancer.seriesguide.ui.MoviesSearchFragment$1: void onClick(android.view.View)>
<com.google.android.gms.analytics.c: void cl()>
<android.widget.ScrollView: boolean performAccessibilityAction(int,android.os.Bundle)>
<com.squareup.picasso.ImageViewAction: void <init>(com.squareup.picasso.Picasso,android.widget.ImageView,com.squareup.picasso.Request,boolean,boolean,int,android.graphics.drawable.Drawable,java.lang.String,com.squareup.picasso.Callback)>
<com.squareup.okio.ForwardingSource: void <init>(com.squareup.okio.Source)>
<com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>
<org.apache.http.impl.client.AbstractHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>
<com.google.android.gms.analytics.aj: boolean dG()>
<android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl: void <init>()>
<com.mobeta.android.dslv.DragSortListView: void requestLayout()>
<com.mobeta.android.dslv.DragSortListView: boolean startDrag(int,int,int,int)>
<com.google.api.client.googleapis.json.GoogleJsonResponseException: com.google.api.client.googleapis.json.GoogleJsonResponseException 'from'(com.google.api.client.json.JsonFactory,com.google.api.client.http.HttpResponse)>
<com.google.android.gms.analytics.u$a: void <init>(java.lang.String,int)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences: void fireTrackerEvent(android.content.Context,java.lang.String)>
<butterknife.ButterKnife$Finder: void <clinit>()>
<com.google.myjson.stream.JsonReader: boolean isLiteral(char)>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeType: java.lang.String getSelection()>
<com.google.gson.internal.$Gson$Types$WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>
<com.battlelancer.seriesguide.adapters.MoviesCursorAdapter$1: void onClick(android.view.View)>
<com.squareup.picasso.NetworkBitmapHunter: void <init>(com.squareup.picasso.Picasso,com.squareup.picasso.Dispatcher,com.squareup.picasso.Cache,com.squareup.picasso.Stats,com.squareup.picasso.Action,com.squareup.picasso.Downloader)>
<com.google.api.client.json.JsonParser: java.lang.Object parse(java.lang.reflect.Type,boolean,com.google.api.client.json.CustomizeJsonParser)>
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl: java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat)>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.support.v4.widget.DrawerLayout: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<android.support.v4.view.ViewPager: void enableLayers(boolean)>
<com.squareup.picasso.Picasso: void cancelRequest(android.widget.ImageView)>
<java.io.BufferedInputStream: boolean markSupported()>
<com.battlelancer.seriesguide.items.Series: void <init>()>
<com.squareup.okhttp.internal.spdy.Settings: void merge(com.squareup.okhttp.internal.spdy.Settings)>
<com.squareup.okhttp.internal.http.HttpConnection: void flush()>
<android.support.v4.widget.DrawerLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.gson.stream.JsonReader: void endArray()>
<android.support.v4.app.Fragment: boolean isAdded()>
<android.app.Activity: boolean onSearchRequested()>
<com.battlelancer.seriesguide.ui.ShowsFragment$2: void onClick(android.view.View)>
<android.widget.ListView: void smoothScrollToPosition(int)>
<android.widget.ImageView: void setImageURI(android.net.Uri)>
<android.os.Bundle: void <clinit>()>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment: void onResume()>
<android.support.v4.view.ViewPager: boolean performDrag(float)>
<android.view.View: android.view.View getRootView()>
<android.content.Intent: boolean hasExtra(java.lang.String)>
<com.google.myjson.stream.JsonWriter: void newline()>
<com.battlelancer.seriesguide.billing.IabHelper: void flagStartAsync(java.lang.String)>
<com.uwetrottmann.seriesguide.backend.shows.Shows: void <clinit>()>
<java.lang.AssertionError: void <init>(java.lang.Object)>
<com.battlelancer.seriesguide.ui.ActivityFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.battlelancer.seriesguide.billing.IabHelper: void checkSetupDone(java.lang.String)>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Reader: void readAlternateService(com.squareup.okhttp.internal.spdy.FrameReader$Handler,short,byte,int)>
<com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl: int getHeaderFieldInt(java.lang.String,int)>
<com.google.gson.Gson$2: void <init>(com.google.gson.Gson)>
<com.google.android.gms.analytics.s$e: void <init>(com.google.android.gms.analytics.s)>
<de.greenrobot.event.SubscriberMethodFinder: void <clinit>()>
<java.io.FileOutputStream: void write(byte[],int,int)>
<android.support.v4.app.FragmentManagerImpl: void dispatchResume()>
<com.battlelancer.seriesguide.util.TimeTools: long parseEpisodeReleaseTime(java.lang.String,long,java.lang.String)>
<android.view.ViewGroup$MarginLayoutParams: void <init>(int,int)>
<com.battlelancer.seriesguide.ui.OverviewActivity$1: void <init>(com.battlelancer.seriesguide.ui.OverviewActivity)>
<android.support.v4.app.ActionBarDrawerToggle: void syncState()>
<com.battlelancer.seriesguide.dataliberation.model.ListItem: void <init>()>
<android.graphics.BitmapFactory$Options: void <init>()>
<com.squareup.okhttp.internal.http.HttpEngine: java.lang.String hostHeader(java.net.URL)>
<android.support.v4.app.ListFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
<com.squareup.okhttp.internal.http.HttpConnection: com.squareup.okio.Sink newFixedLengthSink(long)>
<android.os.Handler: void removeCallbacks(java.lang.Runnable)>
<com.squareup.okhttp.internal.DiskLruCache: void completeEdit(com.squareup.okhttp.internal.DiskLruCache$Editor,boolean)>
<android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl: void <init>()>
<retrofit.Platform$Base: java.util.concurrent.Executor defaultCallbackExecutor()>
<android.support.v4.app.ListFragment: void setListAdapter(android.widget.ListAdapter)>
<android.view.animation.DecelerateInterpolator: void <init>()>
<com.battlelancer.seriesguide.ui.dialogs.MovieCheckInDialogFragment: void handleGetGlueToggle(boolean)>
<com.jakewharton.trakt.Trakt: com.jakewharton.trakt.Trakt setApiKey(java.lang.String)>
<com.battlelancer.seriesguide.settings.GetGlueSettings: boolean isAuthTokenExpired(android.content.Context)>
<com.uwetrottmann.androidutils.AndroidUtils: boolean isKitKatOrHigher()>
<android.content.ContextWrapper: void <init>(android.content.Context)>
<com.squareup.okhttp.internal.spdy.NameValueBlockReader: void doneReading()>
<android.view.View: int getScrollX()>
<com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity: void onLoaderReset(android.support.v4.content.Loader)>
<com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSink: com.squareup.okio.Timeout timeout()>
<de.greenrobot.event.EventBus: void postSingleEvent(java.lang.Object,de.greenrobot.event.EventBus$PostingThreadState)>
<com.squareup.okhttp.internal.http.HttpTransport: void <init>(com.squareup.okhttp.internal.http.HttpEngine,com.squareup.okhttp.internal.http.HttpConnection)>
<retrofit.Platform$Android: retrofit.converter.Converter defaultConverter()>
<com.squareup.okio.Okio: com.squareup.okio.AsyncTimeout timeout(java.net.Socket)>
<com.squareup.okhttp.internal.spdy.Http20Draft12: int maxFrameSize()>
<android.support.v4.app.DialogFragment: int getTheme()>
<com.battlelancer.seriesguide.util.PeopleListHelper: void populateMovieCast(android.content.Context,android.view.LayoutInflater,android.view.ViewGroup,com.uwetrottmann.tmdb.entities.Credits)>
<com.battlelancer.seriesguide.util.FlagTapedTask: java.util.List buildEpisodeList(java.util.List)>
<com.battlelancer.seriesguide.ui.QuickCheckInActivity: void onStart()>
<com.google.android.gms.analytics.aa: void D(java.lang.String)>
<com.battlelancer.seriesguide.ui.EpisodesActivity: void onStart()>
<android.widget.ListView: android.widget.ListAdapter getAdapter()>
<android.support.v4.widget.ScrollerCompat: boolean isFinished()>
<com.battlelancer.seriesguide.util.FlagTapeEntry$Flag: void <init>(int,int)>
<android.view.View: int getBottom()>
<com.squareup.okhttp.internal.DiskLruCache$Editor: void <init>(com.squareup.okhttp.internal.DiskLruCache,com.squareup.okhttp.internal.DiskLruCache$Entry)>
<com.squareup.okhttp.Connection: boolean isSpdy()>
<com.battlelancer.seriesguide.ui.ActivityFragment: void onLoaderReset(android.support.v4.content.Loader)>
<com.google.myjson.internal.bind.TypeAdapters: com.google.myjson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.myjson.TypeAdapter)>
<com.google.android.gms.analytics.GoogleAnalytics: void g(android.app.Activity)>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeWatchedPreviousType: android.net.Uri getUri()>
<com.google.myjson.stream.JsonReader: boolean fillBuffer(int)>
<com.squareup.okio.Buffer: byte getByte(long)>
<com.google.myjson.FieldNamingPolicy: void <init>(java.lang.String,int,com.google.myjson.FieldNamingPolicy$1)>
<com.battlelancer.seriesguide.ui.ActivityFragment$ActivityQuery: void <clinit>()>
<android.net.Uri: java.lang.String encode(java.lang.String)>
<com.squareup.okhttp.Handshake: java.util.List localCertificates()>
<android.support.v4.widget.ViewDragHelper: boolean continueSettling(boolean)>
<android.support.v4.app.ListFragment: void onDestroyView()>
<com.google.myjson.stream.MalformedJsonException: void <init>(java.lang.String)>
<android.widget.ProgressBar: void drawableHotspotChanged(float,float)>
<com.google.api.client.util.DateTime: boolean equals(java.lang.Object)>
<com.battlelancer.seriesguide.util.TaskManager: void <init>(android.content.Context)>
<com.battlelancer.seriesguide.ui.AddActivity: void onNewIntent(android.content.Intent)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$7: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<android.support.v4.app.NotificationCompat$BigTextStyle: void <init>()>
<com.uwetrottmann.seriesguide.backend.shows.model.Show: com.uwetrottmann.seriesguide.backend.shows.model.Show setIsHidden(java.lang.Boolean)>
<com.battlelancer.seriesguide.ui.streams.UserMovieStreamFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.squareup.okhttp.internal.http.HttpTransport: void emptyTransferStream()>
<com.squareup.okio.RealBufferedSink: com.squareup.okio.BufferedSink writeUtf8(java.lang.String)>
<com.google.api.client.util.DataMap$Entry: void <init>(com.google.api.client.util.DataMap,com.google.api.client.util.FieldInfo,java.lang.Object)>
<com.battlelancer.seriesguide.util.RemoveShowWorkerFragment: void onActivityCreated(android.os.Bundle)>
<android.support.v4.view.ViewCompat$JBViewCompatImpl: void postInvalidateOnAnimation(android.view.View)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment: void <init>()>
<com.google.android.gms.auth.GooglePlayServicesAvailabilityException: void <init>(int,java.lang.String,android.content.Intent)>
<com.battlelancer.seriesguide.ui.PersonFragment: void onActivityCreated(android.os.Bundle)>
<com.mobeta.android.dslv.DragSortListView$DropAnimator: void onStop()>
<android.widget.LinearLayout: void onMeasure(int,int)>
<com.battlelancer.seriesguide.settings.DisplaySettings: com.battlelancer.seriesguide.Constants$SeasonSorting getSeasonSortOrder(android.content.Context)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment: java.lang.String access$700(com.battlelancer.seriesguide.ui.EpisodeDetailsFragment)>
<com.squareup.picasso.UrlConnectionDownloader$ResponseCacheIcs: java.lang.Object install(android.content.Context)>
<android.support.v4.app.FragmentManagerImpl: void dispatchConfigurationChanged(android.content.res.Configuration)>
<com.battlelancer.seriesguide.ui.StatsFragment$Stats: void <init>()>
<com.google.api.client.util.GenericData: void <init>()>
<com.battlelancer.seriesguide.adapters.EpisodesAdapter: com.battlelancer.seriesguide.adapters.EpisodesAdapter$OnFlagEpisodeListener access$000(com.battlelancer.seriesguide.adapters.EpisodesAdapter)>
<android.widget.TextView: boolean onKeyDown(int,android.view.KeyEvent)>
<com.battlelancer.seriesguide.ui.PeopleFragment: com.battlelancer.seriesguide.ui.PeopleFragment$OnShowPersonListener access$100(com.battlelancer.seriesguide.ui.PeopleFragment)>
<com.squareup.okhttp.internal.DiskLruCache: void renameTo(java.io.File,java.io.File,boolean)>
<com.google.gson.Gson: void <init>(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)>
<android.widget.ListView: void setCacheColorHint(int)>
<com.squareup.okhttp.internal.http.HttpConnection: int access$302(com.squareup.okhttp.internal.http.HttpConnection,int)>
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.jakewharton.trakt.TraktHelper$3: void <init>()>
<com.google.android.apps.dashclock.api.DashClockExtension: void onDestroy()>
<com.squareup.okio.ForwardingSource: long read(com.squareup.okio.Buffer,long)>
<com.squareup.picasso.MarkableInputStream: int read()>
<com.google.android.gms.common.ErrorDialogFragment: void onCancel(android.content.DialogInterface)>
<android.widget.ImageView: void onMeasure(int,int)>
<android.support.v4.util.SimpleArrayMap: int indexOf(java.lang.Object,int)>
<com.google.api.client.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.android.gms.dynamic.g: java.lang.Object G(android.content.Context)>
<android.support.v4.app.LoaderManagerImpl: android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>
<java.lang.Thread: void setName(java.lang.String)>
<com.battlelancer.seriesguide.adapters.MoviesAdapter: void <clinit>()>
<com.squareup.picasso.Action: java.lang.String getKey()>
<android.support.v4.app.NavUtils: void <clinit>()>
<com.battlelancer.seriesguide.ui.HelpActivity: void setupActionBar()>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences: void access$000(android.content.Context,java.lang.String)>
<com.squareup.okhttp.internal.http.HttpConnection: void writeRequestBody(com.squareup.okhttp.internal.http.RetryableSink)>
<java.lang.String: java.lang.String replace(char,char)>
<com.battlelancer.seriesguide.ui.OverviewFragment$3: void <init>(com.battlelancer.seriesguide.ui.OverviewFragment)>
<com.squareup.picasso.MediaStoreBitmapHunter: void <clinit>()>
<com.google.android.gms.analytics.ai$a: void <init>()>
<com.google.api.client.http.UriTemplate$CompositeOutput: void <clinit>()>
<java.lang.RuntimeException: void <init>()>
<com.battlelancer.seriesguide.dataliberation.model.Season: void <init>()>
<com.battlelancer.seriesguide.adapters.EpisodesAdapter: void <init>(android.content.Context,android.database.Cursor,int,com.battlelancer.seriesguide.adapters.EpisodesAdapter$PopupMenuClickListener,com.battlelancer.seriesguide.adapters.EpisodesAdapter$OnFlagEpisodeListener)>
<java.net.URL: java.net.URI toURI()>
<com.battlelancer.seriesguide.util.TraktTools: void rateMovie(android.content.Context,android.support.v4.app.FragmentManager,int)>
<com.squareup.okio.RealBufferedSink: void <init>(com.squareup.okio.Sink)>
<com.battlelancer.seriesguide.util.ServiceUtils$1: void <init>(java.lang.String,java.lang.String,android.content.Context)>
<com.uwetrottmann.seriesguide.backend.episodes.Episodes$Save: void <init>(com.uwetrottmann.seriesguide.backend.episodes.Episodes,com.uwetrottmann.seriesguide.backend.episodes.model.EpisodeList)>
<android.widget.ProgressBar: void onDetachedFromWindow()>
<com.battlelancer.seriesguide.ui.dialogs.RemoveCloudAccountDialogFragment$RemoveHexagonAccountTask: void <init>(android.content.Context)>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationActivity: void onCreate(android.os.Bundle)>
<com.squareup.okhttp.internal.http.HttpEngine: boolean hasResponse()>
<com.google.android.gms.analytics.l: void <init>()>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<com.google.api.client.http.HttpRequest: boolean getFollowRedirects()>
<java.io.File: boolean renameTo(java.io.File)>
<com.squareup.okhttp.Request: java.net.URI uri()>
<android.support.v4.view.ViewCompatJB: void setImportantForAccessibility(android.view.View,int)>
<de.greenrobot.event.PendingPost: void <init>(java.lang.Object,de.greenrobot.event.Subscription)>
<com.google.myjson.reflect.TypeToken: void <init>(java.lang.reflect.Type)>
<android.widget.ScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
<com.google.api.client.http.HttpHeaders: java.lang.String getUserAgent()>
<com.squareup.okhttp.internal.spdy.Http20Draft12$ContinuationSource: void readContinuationHeader()>
<com.squareup.okhttp.Handshake: com.squareup.okhttp.Handshake get(java.lang.String,java.util.List,java.util.List)>
<com.google.android.gms.analytics.q: void <init>(com.google.android.gms.analytics.af)>
<com.google.gson.FieldNamingPolicy$3: void <init>(java.lang.String,int)>
<android.app.Notification$Builder: android.app.Notification$Builder setAutoCancel(boolean)>
<com.google.android.gms.common.AccountPicker: android.content.Intent newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
<com.google.api.client.http.GenericUrl: void <clinit>()>
<com.google.api.client.util.ArrayMap: com.google.api.client.util.ArrayMap create()>
<com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator resizeDimen(int,int)>
<uk.co.senab.photoview.scrollerproxy.GingerScroller: int getCurrY()>
<android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>
<com.google.android.gms.analytics.l: void verbose(java.lang.String)>
<uk.co.senab.photoview.scrollerproxy.ScrollerProxy: uk.co.senab.photoview.scrollerproxy.ScrollerProxy getScroller(android.content.Context)>
<com.uwetrottmann.seriesguide.backend.movies.model.Movie: com.uwetrottmann.seriesguide.backend.movies.model.Movie setIsInCollection(java.lang.Boolean)>
<com.battlelancer.seriesguide.dataliberation.DataLiberationFragment$2: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<java.net.ProtocolException: void <init>(java.lang.String)>
<android.graphics.Matrix: void getValues(float[])>
<com.google.api.client.http.HttpHeaders: void <init>()>
<com.battlelancer.seriesguide.billing.IabResult: int getResponse()>
<com.google.android.gms.analytics.u: void a(com.google.android.gms.analytics.u$a)>
<com.google.api.client.util.ArrayMap$EntryIterator: void <init>(com.google.api.client.util.ArrayMap)>
<com.battlelancer.seriesguide.util.EpisodeTools: void seasonWatched(android.content.Context,int,int,int,int)>
<com.battlelancer.seriesguide.ui.BaseTopActivity: void setupActionBar()>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder,com.squareup.okhttp.internal.spdy.SpdyConnection$1)>
<com.battlelancer.seriesguide.util.FlagTapeEntryQueue: int size()>
<com.battlelancer.seriesguide.billing.BillingActivity: void access$400(com.battlelancer.seriesguide.billing.BillingActivity)>
<com.battlelancer.seriesguide.billing.BillingActivity: void setupActionBar()>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()>
<uk.co.senab.photoview.scrollerproxy.IcsScroller: boolean computeScrollOffset()>
<com.battlelancer.seriesguide.dataliberation.DataLiberationFragment: void access$000(com.battlelancer.seriesguide.dataliberation.DataLiberationFragment,boolean)>
<com.google.api.client.json.gson.GsonParser: void checkNumber()>
<com.google.android.gms.analytics.ac: java.lang.String b(com.google.android.gms.analytics.ac)>
<com.google.api.client.http.javanet.NetHttpRequest: void setTimeout(int,int)>
<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.internal.http.HttpEngine recover(java.io.IOException)>
<com.battlelancer.seriesguide.ui.ShowsActivity$3: void <init>(com.battlelancer.seriesguide.ui.ShowsActivity)>
<com.battlelancer.seriesguide.ui.SeasonsFragment$5: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<android.widget.ProgressBar: void setIndeterminateDrawable(android.graphics.drawable.Drawable)>
<com.squareup.okhttp.Response: int access$1300(com.squareup.okhttp.Response)>
<com.google.api.client.util.StringUtils: void <clinit>()>
<android.support.v4.util.SimpleArrayMap: void allocArrays(int)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$2: void onClick(android.view.View)>
<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle setBigContentTitle(java.lang.CharSequence)>
<com.squareup.okhttp.internal.http.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>
<java.lang.Long: long parseLong(java.lang.String)>
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1: void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl,android.support.v4.view.AccessibilityDelegateCompat)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: com.squareup.okhttp.internal.spdy.SpdyStream getStream(int)>
<com.google.gson.LongSerializationPolicy: void <init>(java.lang.String,int,com.google.gson.LongSerializationPolicy$1)>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment: com.battlelancer.seriesguide.ui.TraktShoutsFragment newInstanceMovie(int)>
<com.squareup.okhttp.Cache$1: void trackResponse(com.squareup.okhttp.internal.http.CacheStrategy)>
<java.util.Calendar: int get(int)>
<com.uwetrottmann.seriesguide.backend.movies.model.MovieList: void <init>()>
<com.squareup.picasso.OkHttpDownloader: void <init>(java.io.File,long)>
<android.webkit.WebView: void clearCache(boolean)>
<com.mobeta.android.dslv.DragSortController: boolean access$100(com.mobeta.android.dslv.DragSortController)>
<com.jakewharton.trakt.services.CommentService$EpisodeComment: com.jakewharton.trakt.services.CommentService$EpisodeComment spoiler(boolean)>
<com.google.api.client.googleapis.services.AbstractGoogleClientRequest: java.lang.Object execute()>
<com.battlelancer.seriesguide.ui.ShowFragment$2: void <init>(com.battlelancer.seriesguide.ui.ShowFragment)>
<com.battlelancer.seriesguide.Analytics: com.google.android.gms.analytics.Tracker getTracker(android.content.Context)>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder header(java.lang.String,java.lang.String)>
<com.squareup.okhttp.internal.http.HttpConnection: void <clinit>()>
<com.squareup.okio.RealBufferedSource: void require(long)>
<android.widget.ScrollView: boolean shouldDelayChildPressedState()>
<java.lang.Short: java.lang.Short valueOf(short)>
<com.google.api.client.json.gson.GsonParser: com.google.api.client.json.JsonToken getCurrentToken()>
<com.squareup.picasso.MarkableInputStream: void setLimit(long)>
<com.battlelancer.seriesguide.dashclock.UpcomingEpisodeSettingsActivity: void <init>()>
<com.squareup.okio.AsyncTimeout: java.io.IOException exit(java.io.IOException)>
<com.squareup.okhttp.internal.http.RequestLine: java.lang.String version(com.squareup.okhttp.Protocol)>
<com.battlelancer.seriesguide.ui.HelpActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>
<com.squareup.picasso.Picasso: android.graphics.Bitmap quickMemoryCacheCheck(java.lang.String)>
<com.battlelancer.seriesguide.backend.CloudSetupFragment$3: void <init>(com.battlelancer.seriesguide.backend.CloudSetupFragment)>
<com.google.android.gms.wallet.fragment.WalletFragment: void <init>()>
<android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC: void <init>(android.support.v4.app.ActionBarDrawerToggle$1)>
<com.squareup.okio.Segment: com.squareup.okio.Segment push(com.squareup.okio.Segment)>
<android.graphics.RectF: float centerY()>
<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<java.util.TreeSet: void <init>()>
<android.widget.TextView: void onWindowFocusChanged(boolean)>
<com.google.api.client.util.Types: boolean isAssignableToOrFrom(java.lang.Class,java.lang.Class)>
<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyConnection access$500(com.squareup.okhttp.internal.spdy.SpdyStream)>
<android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)>
<android.view.View: boolean isLayoutRequested()>
<com.google.api.client.util.GenericData: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.jakewharton.trakt.services.CommentService$EpisodeComment: void <init>(int,int,int,java.lang.String)>
<com.battlelancer.seriesguide.ui.PeopleActivity$MediaType: void <clinit>()>
<com.battlelancer.seriesguide.ui.ShowsActivity: void onStop()>
<com.google.api.client.json.GenericJson: java.lang.String toString()>
<org.apache.http.impl.client.AbstractHttpClient: void setRoutePlanner(org.apache.http.conn.routing.HttpRoutePlanner)>
<android.app.Dialog: void setOnDismissListener(android.content.DialogInterface$OnDismissListener)>
<com.jakewharton.trakt.Trakt: com.jakewharton.trakt.services.RateService rateService()>
<com.battlelancer.seriesguide.ui.dialogs.RemoveCloudAccountDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<java.lang.String: char[] toCharArray()>
<com.mobeta.android.dslv.DragSortListView: android.graphics.Point access$500(com.mobeta.android.dslv.DragSortListView)>
<com.squareup.okhttp.Cache$Entry: void <init>(com.squareup.okhttp.Response)>
<com.battlelancer.seriesguide.util.MovieTools: void watchedMovie(android.content.Context,int)>
<retrofit.RestAdapter$Builder: retrofit.RestAdapter$Builder setConverter(retrofit.converter.Converter)>
<com.battlelancer.seriesguide.billing.Inventory: void addPurchase(com.battlelancer.seriesguide.billing.Purchase)>
<java.net.URL: java.lang.String getUserInfo()>
<android.support.v4.app.BackStackRecord: int commitAllowingStateLoss()>
<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>
<android.support.v4.util.SimpleArrayMap: int size()>
<android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<com.squareup.picasso.Picasso: com.squareup.picasso.RequestCreator load(android.net.Uri)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: com.squareup.okhttp.internal.spdy.SpdyStream newStream(java.util.List,boolean,boolean)>
<com.squareup.okio.Okio: com.squareup.okio.BufferedSink buffer(com.squareup.okio.Sink)>
<de.greenrobot.event.PendingPost: void <clinit>()>
<android.database.ContentObserver: void <init>(android.os.Handler)>
<android.support.v4.app.LoaderManagerImpl: void finishRetain()>
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>
<java.io.BufferedInputStream: int read(byte[],int,int)>
<android.widget.ScrollView: void onMeasure(int,int)>
<android.support.v4.content.CursorLoader: void <init>(android.content.Context)>
<com.squareup.okio.InflaterSource: boolean refill()>
<com.google.myjson.Gson: java.lang.Object fromJson(com.google.myjson.stream.JsonReader,java.lang.reflect.Type)>
<android.graphics.Matrix: void reset()>
<java.util.AbstractMap: java.lang.Object clone()>
<com.uwetrottmann.androidutils.CheatSheet: void setup(android.view.View,int)>
<com.battlelancer.seriesguide.migration.MigrationActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.google.api.client.json.JsonObjectParser: java.util.Set getWrapperKeys()>
<com.google.api.client.util.ClassInfo: com.google.api.client.util.ClassInfo of(java.lang.Class)>
<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Route getRoute()>
<android.view.View$AccessibilityDelegate: void <init>()>
<com.squareup.okio.Buffer: com.squareup.okio.Buffer clone()>
<com.squareup.okhttp.internal.BitArray$VariableCapacity: void clear()>
<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>
<com.battlelancer.seriesguide.dataliberation.DataLiberationFragment$2: void <init>(com.battlelancer.seriesguide.dataliberation.DataLiberationFragment)>
<com.battlelancer.seriesguide.ui.PeopleActivity$PeopleType: void <clinit>()>
<com.google.myjson.internal.bind.ArrayTypeAdapter$1: void <init>()>
<com.squareup.okhttp.internal.http.HttpEngine: void receiveHeaders(com.squareup.okhttp.Headers)>
<de.greenrobot.event.EventBus: void <init>()>
<com.google.api.client.http.HttpResponse: java.lang.String getContentType()>
<android.widget.TextView: boolean onDragEvent(android.view.DragEvent)>
<android.app.Activity: void setTitle(int)>
<java.net.Socket: int getSoTimeout()>
<com.battlelancer.seriesguide.util.TraktTask: com.battlelancer.seriesguide.util.TraktTask collectionAddMovie(int)>
<com.battlelancer.seriesguide.util.ShowTools$ShowsUploadTask: java.lang.Void doInBackground(java.lang.Void[])>
<com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: int hashCode()>
<java.lang.Integer: java.lang.String toString(int)>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: com.squareup.okio.Timeout timeout()>
<com.squareup.okhttp.Connection: void closeIfOwnedBy(java.lang.Object)>
<com.squareup.okhttp.internal.spdy.HeadersMode: boolean failIfStreamPresent()>
<com.google.gson.stream.JsonReader: boolean nextBoolean()>
<com.google.gson.internal.bind.TypeAdapters$9: void <init>()>
<com.battlelancer.seriesguide.provider.SeriesGuideDatabase: long insertSeasons(android.content.ContentValues)>
<com.squareup.picasso.ResourceBitmapHunter: android.graphics.Bitmap decode(com.squareup.picasso.Request)>
<com.battlelancer.seriesguide.ui.ShowsFragment$2: void <init>(com.battlelancer.seriesguide.ui.ShowsFragment)>
<com.squareup.picasso.Stats: void dispatchBitmapDecoded(android.graphics.Bitmap)>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment: com.battlelancer.seriesguide.adapters.ExtensionsAdapter access$400(com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment)>
<com.squareup.okhttp.internal.Util$1: void <init>(java.lang.String,boolean)>
<com.squareup.okhttp.internal.Platform$JettyNegoProvider: java.lang.String access$200(com.squareup.okhttp.internal.Platform$JettyNegoProvider)>
<android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl: int normalizeMetaState(int)>
<com.battlelancer.seriesguide.appwidget.ListWidgetConfigure: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.os.Handler: android.os.Looper getLooper()>
<com.google.android.gms.analytics.ac: void l(long)>
<com.battlelancer.seriesguide.settings.TraktSettings: boolean isSharingWithTrakt(android.content.Context)>
<com.battlelancer.seriesguide.util.FlagTapedTask: android.content.Context access$000(com.battlelancer.seriesguide.util.FlagTapedTask)>
<com.google.android.gms.analytics.s$a: com.google.android.gms.analytics.s$a[] values()>
<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Authenticator getAuthenticator()>
<com.squareup.picasso.Action: java.lang.Object getTarget()>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Reader: void readRstStream(com.squareup.okhttp.internal.spdy.FrameReader$Handler,short,byte,int)>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment$6: void <init>(com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment)>
<com.battlelancer.seriesguide.dataliberation.DataLiberationFragment: void onDestroy()>
<com.squareup.okhttp.Route: java.net.Proxy getProxy()>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void onClick(android.view.View)>
<com.google.android.gms.analytics.v: void <init>(android.content.Context)>
<android.view.KeyEvent: void <clinit>()>
<android.support.v4.content.Loader: boolean isStarted()>
<com.squareup.okhttp.internal.BitArray$FixedCapacity: void set(int)>
<com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment: void onCreate(android.os.Bundle)>
<android.support.v4.widget.ViewDragHelper: boolean isCapturedViewUnder(int,int)>
<com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>
<android.app.Activity: void showDialog(int)>
<com.battlelancer.seriesguide.ui.SeasonsFragment$UpdateUnwatchThread: void notifyContentProvider(android.support.v4.app.FragmentActivity)>
<com.google.api.client.util.FieldInfo: void setFieldValue(java.lang.reflect.Field,java.lang.Object,java.lang.Object)>
<de.greenrobot.event.EventBus: java.util.List findEventTypes(java.lang.Class)>
<java.util.concurrent.locks.ReentrantLock: void <init>()>
<android.support.v4.app.FragmentActivity: void onStop()>
<com.battlelancer.seriesguide.sync.SgSyncAdapter: void requestSyncImmediate(android.content.Context,com.battlelancer.seriesguide.sync.SgSyncAdapter$SyncType,int,boolean)>
<com.google.gson.TreeTypeAdapter$SingleTypeFactory: void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class,com.google.gson.TreeTypeAdapter$1)>
<com.squareup.okhttp.Cache$1: void <init>(com.squareup.okhttp.Cache)>
<com.squareup.okhttp.Response: java.lang.String header(java.lang.String,java.lang.String)>
<uk.co.senab.photoview.PhotoViewAttacher: void setOnLongClickListener(android.view.View$OnLongClickListener)>
<com.battlelancer.seriesguide.ui.PersonFragment: void onDestroyView()>
<com.battlelancer.seriesguide.ui.ConnectTraktFinishedFragment$2: void <init>(com.battlelancer.seriesguide.ui.ConnectTraktFinishedFragment)>
<com.squareup.okhttp.internal.spdy.Spdy3$Reader: void readPing(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int)>
<com.squareup.okhttp.internal.http.RouteSelector: void connectFailed(com.squareup.okhttp.Connection,java.io.IOException)>
<com.battlelancer.seriesguide.util.EpisodeTools: void seasonCollected(android.content.Context,int,int,int,boolean)>
<com.uwetrottmann.seriesguide.backend.movies.Movies$Builder: com.uwetrottmann.seriesguide.backend.movies.Movies$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer)>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.squareup.picasso.Picasso$CleanupThread: void run()>
<com.squareup.okhttp.internal.http.HttpEngine: boolean hasResponseBody()>
<java.lang.Integer: void <init>(int)>
<java.lang.Math: double ceil(double)>
<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>
<android.support.v4.app.ActionBarDrawerToggle: boolean isDrawerIndicatorEnabled()>
<java.io.PrintWriter: void println(int)>
<com.google.gson.internal.bind.SqlDateTypeAdapter$1: void <init>()>
<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder url(java.net.URL)>
<com.uwetrottmann.seriesguide.backend.episodes.model.EpisodeList: com.google.api.client.util.GenericData clone()>
<uk.co.senab.photoview.PhotoViewAttacher: void checkImageViewScaleType()>
<com.battlelancer.seriesguide.provider.SeriesGuideContract: android.net.Uri access$000()>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Seasons: java.lang.String getSeasonId(android.net.Uri)>
<android.os.HandlerThread: void <init>(java.lang.String)>
<android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)>
<com.battlelancer.seriesguide.ui.StatsFragment$Stats: com.battlelancer.seriesguide.ui.StatsFragment$Stats episodesWatched(int)>
<com.google.android.gms.analytics.aj: boolean dE()>
<android.support.v4.view.ViewCompatHC: long getFrameTime()>
<com.google.api.client.util.ArrayValueMap: void <init>(java.lang.Object)>
<com.squareup.picasso.OkHttpDownloader: void <init>(com.squareup.okhttp.OkHttpClient)>
<butterknife.ButterKnife$Finder$1: void <init>(java.lang.String,int)>
<android.widget.TextView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.view.ViewGroup$LayoutParams: void <init>(int,int)>
<com.squareup.okio.Okio: com.squareup.okio.Sink sink(java.net.Socket)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment: void access$300(com.battlelancer.seriesguide.ui.EpisodeDetailsFragment,java.lang.String)>
<com.google.android.gms.analytics.GoogleAnalytics: void setAppOptOut(boolean)>
<com.jakewharton.trakt.TraktHelper$10: void <init>()>
<com.google.android.gms.internal.fd: void <clinit>()>
<com.squareup.okhttp.Connection: boolean isAlive()>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Reader: boolean nextFrame(com.squareup.okhttp.internal.spdy.FrameReader$Handler)>
<android.os.AsyncTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>
<android.app.Notification$InboxStyle: android.app.Notification$InboxStyle addLine(java.lang.CharSequence)>
<com.battlelancer.seriesguide.ui.dialogs.MovieCheckInDialogFragment: void checkInGetGlue(java.lang.String,java.lang.String)>
<com.google.api.client.repackaged.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])>
<com.battlelancer.seriesguide.ui.TvdbAddFragment: void <init>()>
<com.google.api.client.util.escape.CharEscapers: java.lang.String decodeUri(java.lang.String)>
<com.google.android.gms.internal.ii: void <clinit>()>
<java.io.PrintStream: void <init>(java.io.OutputStream)>
<java.util.IdentityHashMap: void <init>()>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential: void <init>(android.content.Context,java.lang.String)>
<com.google.android.gms.analytics.GoogleAnalytics: void dispatchLocalHits()>
<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>
<de.greenrobot.event.ThreadMode: de.greenrobot.event.ThreadMode[] values()>
<android.util.SparseBooleanArray: boolean get(int)>
<com.google.api.client.util.Types: java.lang.reflect.Type getIterableParameter(java.lang.reflect.Type)>
<com.google.myjson.stream.JsonReader: com.google.myjson.stream.JsonToken peek()>
<java.lang.Long: java.lang.Long valueOf(java.lang.String)>
<com.google.api.client.util.escape.PercentEscaper: char[] escape(int)>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setDefaults(int)>
<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)>
<android.view.View: void invalidate()>
<java.util.TreeSet: boolean contains(java.lang.Object)>
<com.battlelancer.seriesguide.adapters.EpisodesAdapter$2: void onClick(android.view.View)>
<android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: int findPointerIndex(android.view.MotionEvent,int)>
<org.apache.oltu.oauth2.common.message.types.GrantType: void <clinit>()>
<android.view.InputEvent: void <init>()>
<java.net.URL: java.net.URLConnection openConnection()>
<com.squareup.okhttp.internal.BitArray$FixedCapacity: void shiftLeft(int)>
<com.squareup.okhttp.internal.http.RetryableSink: void close()>
<com.battlelancer.seriesguide.util.EpisodeTools$FlagType: java.util.List createEpisodeFlags()>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection,com.squareup.okhttp.internal.spdy.SpdyConnection$1)>
<com.battlelancer.seriesguide.util.RemoveShowWorkerFragment: void <init>()>
<com.google.myjson.internal.$Gson$Types$GenericArrayTypeImpl: java.lang.reflect.Type getGenericComponentType()>
<com.battlelancer.seriesguide.dashclock.UpcomingEpisodeExtension: void <init>()>
<com.google.myjson.stream.JsonReader: int nextNonWhitespace(boolean)>
<com.battlelancer.seriesguide.ui.PersonFragment$1: void onLoadFinished(android.support.v4.content.Loader,com.uwetrottmann.tmdb.entities.Person)>
<com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type getRawType()>
<java.lang.StringBuffer: void <init>(java.lang.String)>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Reader: void readLiteralHeaderWithoutIndexingIndexedName(int)>
<com.squareup.okhttp.internal.http.HttpConnection: com.squareup.okio.Source newFixedLengthSource(java.net.CacheRequest,long)>
<android.widget.ListView: void <init>(android.content.Context)>
<de.greenrobot.event.PendingPostQueue: void enqueue(de.greenrobot.event.PendingPost)>
<com.google.api.client.util.Data: boolean isValueOfPrimitiveType(java.lang.Object)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void setIdle(boolean)>
<java.lang.String: void <init>(byte[])>
<com.battlelancer.seriesguide.ui.ShowFragment$5: void <init>(com.battlelancer.seriesguide.ui.ShowFragment,boolean)>
<org.apache.oltu.oauth2.common.utils.OAuthUtils: java.lang.Object instantiateClassWithParameters(java.lang.Class,java.lang.Class[],java.lang.Object[])>
<android.support.v4.app.NavUtilsJB: void navigateUpTo(android.app.Activity,android.content.Intent)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment$5: void onClick(android.view.View)>
<com.battlelancer.seriesguide.ui.AddActivity: void setupViews()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.squareup.okio.Okio$3: void timedOut()>
<android.view.View: void layout(int,int,int,int)>
<org.json.JSONObject: java.lang.String optString(java.lang.String)>
<org.apache.http.entity.AbstractHttpEntity: void setContentType(java.lang.String)>
<com.google.android.gms.analytics.s: void <init>(android.content.Context,com.google.android.gms.analytics.f,com.google.android.gms.analytics.d,com.google.android.gms.analytics.GoogleAnalytics)>
<com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection: void setUseCaches(boolean)>
<java.util.Locale: java.util.Locale getDefault()>
<com.battlelancer.seriesguide.widgets.SlidingTabLayout: com.battlelancer.seriesguide.widgets.SlidingTabLayout$OnTabClickListener access$500(com.battlelancer.seriesguide.widgets.SlidingTabLayout)>
<java.util.ArrayList: void clear()>
<de.greenrobot.event.util.ErrorDialogFragments: void handleOnClick(android.content.DialogInterface,int,android.app.Activity,android.os.Bundle)>
<com.squareup.okhttp.internal.http.HeaderParser: int parseSeconds(java.lang.String)>
<com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment$3: void onClick(android.view.View)>
<com.squareup.okhttp.internal.http.HttpConnection: void closeIfOwnedBy(java.lang.Object)>
<com.uwetrottmann.seriesguide.backend.movies.Movies$Builder: com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer)>
<com.battlelancer.seriesguide.ui.OverviewFragment: void onPopulateShowData(android.database.Cursor)>
<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
<com.squareup.okio.Util: void sneakyRethrow(java.lang.Throwable)>
<uk.co.senab.photoview.PhotoViewAttacher: void setZoomable(boolean)>
<com.google.myjson.stream.JsonToken: void <init>(java.lang.String,int)>
<com.google.gson.stream.JsonReader: void endObject()>
<java.util.zip.Inflater: int getTotalOut()>
<com.google.api.client.util.DataMap$EntryIterator: boolean hasNext()>
<com.battlelancer.seriesguide.settings.AdvancedSettings: int getUpcomingLimitInDays(android.content.Context)>
<android.support.v4.app.ActionBarDrawerToggleHoneycomb: java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int)>
<android.webkit.WebChromeClient: void <init>()>
<android.support.v4.app.NavUtils$NavUtilsImplJB: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)>
<java.lang.String: java.lang.String[] split(java.lang.String,int)>
<com.battlelancer.seriesguide.provider.SeriesGuideProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment: void rateOnTrakt()>
<android.support.v4.app.BackStackRecord$Op: void <init>()>
<com.uwetrottmann.seriesguide.backend.shows.Shows: void <init>(com.uwetrottmann.seriesguide.backend.shows.Shows$Builder)>
<com.squareup.okhttp.internal.spdy.Http20Draft12$ContinuationSource: void <init>(com.squareup.okio.BufferedSource)>
<com.squareup.picasso.BitmapHunter: android.graphics.BitmapFactory$Options createBitmapOptions(com.squareup.picasso.Request)>
<com.battlelancer.seriesguide.ui.AddActivity$AddPagerAdapter: int getCount()>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void access$100(com.battlelancer.seriesguide.ui.SeasonsFragment,boolean)>
<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Headers combine(com.squareup.okhttp.Headers,com.squareup.okhttp.Headers)>
<java.lang.Integer: int parseInt(java.lang.String)>
<com.google.api.client.json.gson.GsonGenerator: void writeEndArray()>
<com.squareup.okio.GzipSource: void consumeHeader()>
<android.support.v4.widget.ScrollerCompat: android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator)>
<android.app.Notification$Builder: android.app.Notification$Builder setVibrate(long[])>
<com.battlelancer.seriesguide.getglueapi.GetGlueAuthActivity$1: void <init>(com.battlelancer.seriesguide.getglueapi.GetGlueAuthActivity,android.support.v4.app.FragmentActivity)>
<java.util.ArrayDeque: void <init>()>
<com.squareup.okio.Okio$1: void <init>(com.squareup.okio.Timeout,java.io.OutputStream)>
<com.squareup.picasso.Picasso: void cancelExistingRequest(java.lang.Object)>
<com.google.android.gms.analytics.af: void <init>()>
<org.apache.oltu.oauth2.common.utils.OAuthUtils: java.lang.String format(java.util.Collection,java.lang.String)>
<java.util.Calendar: void set(int,int)>
<com.battlelancer.seriesguide.ui.SearchActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: boolean draw(java.lang.Object,android.graphics.Canvas)>
<com.battlelancer.seriesguide.ui.ShowFragment$8: void onLoadFinished(android.support.v4.content.Loader,com.uwetrottmann.tmdb.entities.Credits)>
<com.squareup.okhttp.internal.http.SpdyTransport: void flushRequest()>
<com.uwetrottmann.seriesguide.backend.episodes.model.EpisodeList: java.lang.Integer getShowTvdbId()>
<com.battlelancer.seriesguide.items.Series: void setAirsTime(long)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsActivity$EpisodePagerAdapter: void <init>(android.content.Context,android.support.v4.app.FragmentManager,java.util.ArrayList,boolean)>
<dummyMainClass: void dummyMainMethod()>
<android.app.Notification$Builder: android.app.Notification$Builder setContent(android.widget.RemoteViews)>
<com.crashlytics.android.internal.o: void <init>()>
<com.squareup.okhttp.internal.DiskLruCache$1: void run()>
<com.squareup.picasso.RequestCreator: int access$000()>
<android.content.Intent: long getLongExtra(java.lang.String,long)>
<com.squareup.okio.Okio$1: void close()>
<android.widget.ProgressBar: void onAttachedToWindow()>
<android.support.v4.app.ActionBarDrawerToggle$SlideDrawable: void setOffset(float)>
<android.view.ViewGroup: void onAttachedToWindow()>
<java.util.ArrayList: java.lang.Object[] toArray()>
<com.squareup.picasso.Utils: boolean isMain()>
<com.google.android.gms.analytics.Tracker$a$1: void <init>(com.google.android.gms.analytics.Tracker$a,com.google.android.gms.analytics.Tracker)>
<com.battlelancer.seriesguide.util.EpisodeTools$ShowWatchedType: void <init>(android.content.Context,int,int)>
<com.battlelancer.seriesguide.util.EpisodeTools$ShowCollectedType: int getLastWatchedEpisodeTvdbId()>
<android.app.Activity: void onCreate(android.os.Bundle)>
<com.squareup.okio.Buffer: com.squareup.okio.Buffer write(com.squareup.okio.ByteString)>
<com.google.api.client.util.DataMap: com.google.api.client.util.DataMap$EntrySet entrySet()>
<java.net.Socket: java.io.InputStream getInputStream()>
<com.battlelancer.seriesguide.billing.BillingActivity$2: void <init>(com.battlelancer.seriesguide.billing.BillingActivity)>
<com.squareup.okhttp.Response: com.squareup.okhttp.Response$Builder newBuilder()>
<com.google.api.client.http.HttpResponse: java.lang.Object parseAs(java.lang.Class)>
<android.widget.FrameLayout: boolean gatherTransparentRegion(android.graphics.Region)>
<java.lang.ArrayIndexOutOfBoundsException: void <init>()>
<com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics di()>
<com.battlelancer.seriesguide.adapters.TabStripAdapter$TabInfo: void <init>(java.lang.Class,android.os.Bundle,int)>
<com.battlelancer.seriesguide.adapters.SeasonsAdapter: void <init>(android.content.Context,android.database.Cursor,int,com.battlelancer.seriesguide.adapters.SeasonsAdapter$PopupMenuClickListener)>
<android.widget.TextView: int[] onCreateDrawableState(int)>
<com.google.gson.internal.bind.TypeAdapters$21: void <init>()>
<com.squareup.okio.RealBufferedSource: com.squareup.okio.ByteString readByteString(long)>
<com.battlelancer.seriesguide.provider.SeriesGuideDatabase: android.database.Cursor getSuggestions(java.lang.String,android.database.sqlite.SQLiteDatabase)>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Builder: void <init>(java.lang.String,boolean,java.net.Socket)>
<com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment: com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment newInstance(int)>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: java.io.OutputStream getOutputStream()>
<android.view.View$MeasureSpec: int getMode(int)>
<com.battlelancer.seriesguide.ui.PeopleFragment$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<timber.log.Timber$1: void i(java.lang.Throwable,java.lang.String,java.lang.Object[])>
<com.battlelancer.seriesguide.billing.Inventory: java.util.List getAllOwnedSkus(java.lang.String)>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>
<com.squareup.okhttp.internal.http.HttpConnection: com.squareup.okio.Source newUnknownLengthSource(java.net.CacheRequest)>
<java.net.Proxy: void <clinit>()>
<java.util.zip.CRC32: long getValue()>
<java.lang.Throwable: java.lang.String getMessage()>
<android.support.v4.view.ViewPager: boolean canScroll(android.view.View,boolean,int,int,int)>
<com.google.api.client.json.JsonParser: void parseMap(java.lang.reflect.Field,java.util.Map,java.lang.reflect.Type,java.util.ArrayList,com.google.api.client.json.CustomizeJsonParser)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void shutdown(com.squareup.okhttp.internal.spdy.ErrorCode)>
<com.battlelancer.seriesguide.ui.ShowsActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAuthIOException: com.google.android.gms.auth.GoogleAuthException getCause()>
<com.google.api.client.util.DataMap$EntryIterator: java.lang.Object next()>
<com.squareup.okhttp.internal.spdy.Spdy3$Writer: void flush()>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void goAway(int,com.squareup.okhttp.internal.spdy.ErrorCode,com.squareup.okio.ByteString)>
<com.battlelancer.seriesguide.util.LocalOnlyOkHttpDownloader: com.squareup.picasso.Downloader$Response load(android.net.Uri,boolean)>
<android.support.v4.app.FragmentManagerImpl: void dispatchStart()>
<com.squareup.okhttp.internal.spdy.SpdyConnection: boolean access$2102(com.squareup.okhttp.internal.spdy.SpdyConnection,boolean)>
<org.apache.oltu.oauth2.client.request.OAuthClientRequest: java.lang.String getLocationUri()>
<com.battlelancer.seriesguide.settings.NotificationSettings: long getLastCleared(android.content.Context)>
<uk.co.senab.photoview.scrollerproxy.GingerScroller: boolean computeScrollOffset()>
<android.content.ContentValues: void clear()>
<com.jakewharton.trakt.services.RateService$MovieRating: void <init>(int,com.jakewharton.trakt.enumerations.Rating)>
<com.battlelancer.seriesguide.ui.SeasonsFragment$4: void <init>(com.battlelancer.seriesguide.ui.SeasonsFragment)>
<com.squareup.okio.AsyncTimeout$2: long read(com.squareup.okio.Buffer,long)>
<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition()>
<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment$2: void onClick(android.view.View)>
<com.squareup.okhttp.internal.RouteDatabase: void <init>()>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment: void access$100(com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment)>
<com.google.android.gms.analytics.u: java.lang.String cV()>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void onActivityCreated(android.os.Bundle)>
<com.google.api.client.util.escape.PercentEscaper: boolean[] createSafeOctets(java.lang.String)>
<com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment: void onCreate(android.os.Bundle)>
<com.battlelancer.seriesguide.backend.HexagonTools: com.uwetrottmann.seriesguide.backend.shows.Shows getShowsService(android.content.Context)>
<com.google.android.gms.common.GooglePlayServicesUtil: android.app.Dialog getErrorDialog(int,android.app.Activity,int)>
<com.uwetrottmann.seriesguide.backend.movies.Movies$Builder: com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setRootUrl(java.lang.String)>
<com.google.android.gms.analytics.t$2: void <init>(com.google.android.gms.analytics.t)>
<android.support.v4.app.FragmentManagerImpl: void reportBackStackChanged()>
<com.battlelancer.seriesguide.util.Utils: boolean tryStartActivity(android.content.Context,android.content.Intent,boolean)>
<android.support.v4.app.NotificationCompat: void <clinit>()>
<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<com.squareup.okhttp.Headers: java.util.Date getDate(java.lang.String)>
<com.google.android.gms.plus.PlusOneButton: int b(com.google.android.gms.plus.PlusOneButton)>
<android.view.View: boolean isInTouchMode()>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential: android.content.Intent newChooseAccountIntent()>
<com.google.android.gms.internal.ii: int aC(int)>
<android.app.Fragment: void setArguments(android.os.Bundle)>
<android.widget.FrameLayout: void jumpDrawablesToCurrentState()>
<android.util.SparseArray: int size()>
<com.battlelancer.seriesguide.extensions.ExtensionManager: void handlePublishedAction(java.lang.String,com.battlelancer.seriesguide.api.Action)>
<com.battlelancer.seriesguide.util.Utils: void trackContextMenu(android.content.Context,java.lang.String,java.lang.String)>
<com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity$4: void onClick(android.view.View)>
<android.view.accessibility.AccessibilityNodeInfo: void <init>()>
<com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment$CheckForRemovalTask: com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment$CheckForRemovalTask$CheckForRemovalCompleteEvent doInBackground(java.lang.Integer[])>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>
<com.jakewharton.trakt.TraktHelper$18: void <init>()>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()>
<com.squareup.okio.RealBufferedSource: void <init>(com.squareup.okio.Source,com.squareup.okio.Buffer)>
<java.lang.Boolean: void <init>(boolean)>
<com.google.myjson.JsonSyntaxException: void <init>(java.lang.Throwable)>
<android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)>
<com.google.api.client.http.json.JsonHttpContent: void writeTo(java.io.OutputStream)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>
<com.battlelancer.seriesguide.ui.ConnectTraktFragment$2: void <init>(com.battlelancer.seriesguide.ui.ConnectTraktFragment)>
<com.google.api.client.http.apache.ApacheHttpResponse: java.lang.String getReasonPhrase()>
<android.widget.OverScroller: void startScroll(int,int,int,int,int)>
<com.uwetrottmann.seriesguide.backend.episodes.model.Episode: void <init>()>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: void setRequestProperty(java.lang.String,java.lang.String)>
<android.support.v4.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.support.v4.content.Loader: void stopLoading()>
<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSink: void <init>(com.squareup.okhttp.internal.http.HttpConnection,com.squareup.okhttp.internal.http.HttpConnection$1)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void access$800(com.battlelancer.seriesguide.ui.SeasonsFragment,long,int)>
<com.google.api.client.http.javanet.NetHttpResponse: java.io.InputStream getContent()>
<com.google.gson.internal.bind.TypeAdapters$12: void <init>()>
<com.battlelancer.seriesguide.ui.StatsActivity: void setupActionBar()>
<java.util.ArrayList: java.util.Iterator iterator()>
<com.battlelancer.seriesguide.sync.SgSyncAdapter: boolean isTimeForSync(android.content.Context,long)>
<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.tonicartos.widget.stickygridheaders.StickyGridHeadersGridView: void measureHeader()>
<com.battlelancer.seriesguide.settings.DisplaySettings: boolean isVeryHighDensityScreen(android.content.Context)>
<java.util.zip.Deflater: int deflate(byte[],int,int,int)>
<com.squareup.okhttp.internal.spdy.Http20Draft12: short readPadding(com.squareup.okio.BufferedSource,byte)>
<com.battlelancer.seriesguide.ui.dialogs.ListManageDialogFragment: void onCreate(android.os.Bundle)>
<com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl: void connect()>
<android.content.res.Configuration: void <init>()>
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)>
<android.os.Binder: void finalize()>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpRequest setInterceptor(com.google.api.client.http.HttpExecuteInterceptor)>
<com.battlelancer.seriesguide.ui.StatsFragment: void onStop()>
<com.google.myjson.internal.bind.TypeAdapters$5: void <init>()>
<com.battlelancer.seriesguide.loaders.AvailableExtensionsLoader: void <init>(android.content.Context)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<com.battlelancer.seriesguide.migration.MigrationActivity: void access$200(com.battlelancer.seriesguide.migration.MigrationActivity,boolean)>
<retrofit.client.UrlConnectionClient: void <init>()>
<com.google.api.client.http.LowLevelHttpRequest: com.google.api.client.util.StreamingContent getStreamingContent()>
<com.battlelancer.seriesguide.ui.OverviewFragment$11: void onLoadFinished(android.support.v4.content.Loader,java.util.List)>
<com.google.gson.internal.bind.TypeAdapters$13: void <init>()>
<com.google.api.client.googleapis.extensions.android.gms.auth.GooglePlayServicesAvailabilityIOException: com.google.android.gms.auth.GoogleAuthException getCause()>
<android.support.v4.app.TaskStackBuilder: void startActivities(android.os.Bundle)>
<retrofit.RestAdapter$Builder: retrofit.RestAdapter$Builder setRequestInterceptor(retrofit.RequestInterceptor)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences: boolean onOptionsItemSelected(android.view.MenuItem)>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder: void initValues(android.content.Context)>
<com.google.android.gms.analytics.s: void <init>(android.content.Context,com.google.android.gms.analytics.f)>
<org.apache.http.impl.client.DefaultHttpClient: void <init>()>
<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.support.v4.app.NoSaveStateFrameLayout: void <init>(android.content.Context)>
<com.battlelancer.seriesguide.settings.ActivitySettings: boolean isInfiniteActivity(android.content.Context)>
<com.google.gson.internal.bind.MapTypeAdapterFactory: void <init>(com.google.gson.internal.ConstructorConstructor,boolean)>
<android.support.v4.app.FragmentActivity: void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View)>
<com.mobeta.android.dslv.DragSortController: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<android.support.v4.widget.ViewDragHelper: boolean checkTouchSlop(int)>
<com.squareup.okhttp.internal.http.HttpEngine: void sendRequest()>
<android.provider.MediaStore$Video$Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory$Options)>
<com.google.api.client.util.Types$1$1: boolean hasNext()>
<com.battlelancer.seriesguide.Constants$EpisodeSorting: java.lang.String toString()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<com.battlelancer.seriesguide.ui.ActivityFragment: void updateEpisodeCollectionState(int,int,int,int,boolean)>
<org.json.JSONArray: int length()>
<java.net.ProxySelector: java.net.ProxySelector getDefault()>
<com.battlelancer.seriesguide.ui.ShowsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.google.android.gms.analytics.GoogleAnalytics: void b(com.google.android.gms.analytics.GoogleAnalytics$a)>
<android.util.Log: int w(java.lang.String,java.lang.String)>
<java.util.concurrent.atomic.AtomicBoolean: void <init>()>
<com.battlelancer.seriesguide.billing.BillingActivity$1: void <init>(com.battlelancer.seriesguide.billing.BillingActivity)>
<com.squareup.okhttp.internal.http.HttpEngine$1: com.squareup.okio.BufferedSource source()>
<android.support.v4.content.IntentCompat: android.content.Intent makeMainActivity(android.content.ComponentName)>
<android.app.Activity: void finish()>
<com.squareup.okhttp.internal.http.HttpConnection: void closeOnIdle()>
<com.battlelancer.seriesguide.ui.OverviewActivity: void onCreate(android.os.Bundle)>
<com.google.myjson.JsonIOException: void <init>(java.lang.Throwable)>
<com.squareup.okhttp.internal.spdy.Http20Draft12: void <clinit>()>
<com.battlelancer.seriesguide.util.TimeTools: long getCurrentTime(android.content.Context)>
<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>
<com.squareup.okhttp.internal.RouteDatabase: void connected(com.squareup.okhttp.Route)>
<com.google.api.client.util.GenericData: java.lang.Object get(java.lang.Object)>
<android.support.v4.util.ContainerHelpers: int idealIntArraySize(int)>
<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okio.Source getTransferStream(java.net.CacheRequest)>
<com.battlelancer.seriesguide.util.DBUtils: com.battlelancer.seriesguide.items.Series getShow(android.content.Context,int)>
<android.support.v4.widget.DrawerLayout: boolean onKeyDown(int,android.view.KeyEvent)>
<com.battlelancer.seriesguide.util.FlagTapedTask$2: void <clinit>()>
<java.security.Signature: java.security.Signature getInstance(java.lang.String)>
<com.squareup.okhttp.ConnectionPool: com.squareup.okhttp.ConnectionPool getDefault()>
<android.animation.ValueAnimator: long getFrameDelay()>
<android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
<com.squareup.okhttp.internal.Platform: com.squareup.okhttp.internal.Platform findPlatform()>
<com.google.android.gms.analytics.aa: com.google.android.gms.analytics.Logger getLogger()>
<retrofit.RestAdapter$LogLevel: void <clinit>()>
<com.google.api.client.googleapis.extensions.android.gms.auth.UserRecoverableAuthIOException: void <init>(com.google.android.gms.auth.UserRecoverableAuthException)>
<com.battlelancer.seriesguide.provider.SeriesGuideProvider: com.battlelancer.seriesguide.provider.SeriesGuideDatabase access$000(com.battlelancer.seriesguide.provider.SeriesGuideProvider)>
<android.content.ContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>
<com.google.myjson.LongSerializationPolicy: void <clinit>()>
<com.google.api.client.http.HttpHeaders: com.google.api.client.util.GenericData clone()>
<android.content.Intent: android.content.Intent addCategory(java.lang.String)>
<java.lang.ref.WeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>
<java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<com.google.android.gms.analytics.s$1: long currentTimeMillis()>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setVibrate(long[])>
<com.readystatesoftware.systembartint.SystemBarTintManager$SystemBarConfig: void <init>(android.app.Activity,boolean,boolean)>
<android.support.v4.widget.ViewDragHelper: int computeSettleDuration(android.view.View,int,int,int,int)>
<com.google.gson.stream.JsonReader: void checkLenient()>
<com.battlelancer.seriesguide.billing.BillingActivity: com.battlelancer.seriesguide.billing.IabHelper access$300(com.battlelancer.seriesguide.billing.BillingActivity)>
<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder removeAll(java.lang.String)>
<com.google.android.gms.analytics.ae: java.lang.String dw()>
<com.squareup.okio.RealBufferedSource: void skip(long)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment: void access$500(com.battlelancer.seriesguide.ui.EpisodeDetailsFragment)>
<com.mobeta.android.dslv.DragSortListView$DropAnimator: void onStart()>
<android.app.Application: void <init>()>
<android.support.v4.view.KeyEventCompatHoneycomb: int normalizeMetaState(int)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Movies: void <clinit>()>
<com.battlelancer.seriesguide.sync.SgSyncAdapter: void requestSyncIfTime(android.content.Context)>
<com.google.android.gms.analytics.ah: void M(java.lang.String)>
<java.util.zip.Inflater: void setDictionary(byte[])>
<retrofit.Platform: boolean access$300()>
<com.battlelancer.seriesguide.ui.ShowsFragment: void access$400(com.battlelancer.seriesguide.ui.ShowsFragment,int,boolean)>
<com.google.api.client.http.UrlEncodedParser: java.lang.Object parseValue(java.lang.reflect.Type,java.util.List,java.lang.String)>
<com.battlelancer.seriesguide.util.TaskManager: void tryNextEpisodeUpdateTask()>
<java.io.File: boolean exists()>
<java.lang.StringBuilder: int length()>
<com.google.api.client.util.Data: java.util.Collection newCollectionInstance(java.lang.reflect.Type)>
<com.google.api.client.json.gson.GsonFactory: com.google.api.client.json.JsonParser createJsonParser(java.io.InputStream,java.nio.charset.Charset)>
<android.widget.TextView: void onAttachedToWindow()>
<com.google.gson.Gson: com.google.gson.TypeAdapter floatAdapter(boolean)>
<java.net.URL: void <init>(java.net.URL,java.lang.String)>
<com.squareup.okhttp.internal.http.HttpEngine: void connect(com.squareup.okhttp.Request)>
<com.google.android.gms.common.GooglePlayServicesUtil: android.app.Dialog getErrorDialog(int,android.app.Activity,int,android.content.DialogInterface$OnCancelListener)>
<com.google.api.client.util.escape.PercentEscaper: java.lang.String escape(java.lang.String)>
<android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<com.google.api.client.http.apache.ApacheHttpResponse: java.lang.String getContentType()>
<android.support.v4.widget.ViewDragHelper: boolean settleCapturedViewAt(int,int)>
<com.battlelancer.seriesguide.util.ServiceUtils: void performWebSearch(android.content.Context,java.lang.String,java.lang.String)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void writeWindowUpdateLater(int,long)>
<android.app.Dialog: android.content.Context getContext()>
<com.battlelancer.seriesguide.billing.IabHelper$2: void <init>(com.battlelancer.seriesguide.billing.IabHelper,boolean,java.util.List,com.battlelancer.seriesguide.billing.IabHelper$QueryInventoryFinishedListener,android.os.Handler)>
<com.google.android.gms.dynamic.e: com.google.android.gms.dynamic.d h(java.lang.Object)>
<android.support.v4.app.FragmentManagerImpl: void dispatchCreate()>
<com.uwetrottmann.seriesguide.backend.movies.Movies$Save: void <init>(com.uwetrottmann.seriesguide.backend.movies.Movies,com.uwetrottmann.seriesguide.backend.movies.model.MovieList)>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Reader: void readWindowUpdate(com.squareup.okhttp.internal.spdy.FrameReader$Handler,short,byte,int)>
<com.google.myjson.internal.bind.TypeAdapters: void <clinit>()>
<com.google.android.gms.analytics.aa: void B(java.lang.String)>
<com.google.api.client.googleapis.services.AbstractGoogleClient$Builder: java.lang.String getRootUrl()>
<com.jakewharton.trakt.enumerations.Rating: void <clinit>()>
<com.battlelancer.seriesguide.api.Action: void <init>(java.lang.String,android.content.Intent,int,com.battlelancer.seriesguide.api.Action$1)>
<com.battlelancer.seriesguide.util.TimeTools: void applyCanadaCorrections(java.util.Calendar)>
<com.google.android.gms.analytics.c$a: void <init>(com.google.android.gms.analytics.c)>
<fr.castorflex.android.smoothprogressbar.SmoothProgressBar: void onDraw(android.graphics.Canvas)>
<com.google.api.client.json.gson.GsonParser: short getShortValue()>
<com.battlelancer.seriesguide.billing.BillingActivity$5: void onQueryInventoryFinished(com.battlelancer.seriesguide.billing.IabResult,com.battlelancer.seriesguide.billing.Inventory)>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity$ImportDatabaseTask: void <init>(com.battlelancer.seriesguide.ui.BackupDeleteActivity,com.battlelancer.seriesguide.ui.BackupDeleteActivity$1)>
<android.content.ContentProvider: void <init>()>
<android.view.View: boolean isInEditMode()>
<android.support.v4.widget.ScrollerCompat: int getFinalY()>
<android.content.BroadcastReceiver: void <init>()>
<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder)>
<android.view.View: void saveHierarchyState(android.util.SparseArray)>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest: com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest setDisableGZipContent(boolean)>
<com.battlelancer.seriesguide.ui.dialogs.CheckInDialogFragment: void checkInGetGlue(java.lang.String,java.lang.String)>
<com.squareup.okhttp.internal.http.AuthenticatorAdapter: com.squareup.okhttp.Request authenticateProxy(java.net.Proxy,com.squareup.okhttp.Response)>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: void checkNotClosed()>
<com.squareup.okhttp.internal.http.SpdyTransport$SpdySource: boolean discardStream()>
<android.content.IntentFilter: void addCategory(java.lang.String)>
<com.battlelancer.seriesguide.sync.SgSyncService: void onCreate()>
<com.uwetrottmann.getglue.GetGlue: org.apache.oltu.oauth2.client.request.OAuthClientRequest getAccessTokenRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.battlelancer.seriesguide.billing.IabHelper: void launchSubscriptionPurchaseFlow(android.app.Activity,java.lang.String,int,com.battlelancer.seriesguide.billing.IabHelper$OnIabPurchaseFinishedListener,java.lang.String)>
<com.google.api.client.json.gson.GsonGenerator: void <init>(com.google.api.client.json.gson.GsonFactory,com.google.gson.stream.JsonWriter)>
<com.battlelancer.seriesguide.util.ServiceUtils$5: void onClick(android.view.View)>
<android.content.ContentProviderResult: void <clinit>()>
<java.io.PrintWriter: void print(java.lang.Object)>
<com.battlelancer.seriesguide.ui.AddActivity$AddPagerAdapter: void <init>(android.support.v4.app.FragmentManager,android.content.Context)>
<java.lang.Character: void <init>(char)>
<com.squareup.okhttp.OkHttpClient$1: void setProtocol(com.squareup.okhttp.Connection,com.squareup.okhttp.Protocol)>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder: fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder speed(float)>
<com.squareup.okhttp.internal.spdy.Settings: int get(int)>
<com.mobeta.android.dslv.DragSortListView$SmoothAnimator: void cancel()>
<com.squareup.okio.ByteString: com.squareup.okio.ByteString of(byte[])>
<com.battlelancer.seriesguide.util.ShortcutUtils: void createShortcut(android.content.Context,java.lang.String,java.lang.String,int)>
<java.lang.String: boolean contains(java.lang.CharSequence)>
<java.net.Socket: boolean isInputShutdown()>
<android.graphics.Point: void <init>()>
<java.util.logging.Level: void <clinit>()>
<com.squareup.okio.Buffer: com.squareup.okio.Buffer writeInt(int)>
<com.battlelancer.seriesguide.ui.ListsFragment: void onClick(android.view.View)>
<com.squareup.picasso.Stats$StatsHandler: void <init>(android.os.Looper,com.squareup.picasso.Stats)>
<com.battlelancer.seriesguide.ui.ShowsActivity: void onPause()>
<com.mobeta.android.dslv.DragSortController: void <init>(com.mobeta.android.dslv.DragSortListView,int,int,int)>
<com.jakewharton.trakt.services.MovieService$Movies: void <init>(com.jakewharton.trakt.services.MovieService$SeenMovie)>
<com.squareup.okhttp.internal.DiskLruCache: void <init>(java.io.File,int,int,long)>
<com.jakewharton.trakt.TraktHelper$2: void <init>()>
<android.app.Notification$BigPictureStyle: void <init>(android.app.Notification$Builder)>
<com.squareup.okhttp.OkHttpClient: void setConnectTimeout(long,java.util.concurrent.TimeUnit)>
<com.battlelancer.seriesguide.ui.MovieDetailsActivity: void <clinit>()>
<com.google.api.client.json.JsonParser: java.lang.Object parseValue(java.lang.reflect.Field,java.lang.reflect.Type,java.util.ArrayList,java.lang.Object,com.google.api.client.json.CustomizeJsonParser,boolean)>
<com.google.api.client.http.HttpMediaType: com.google.api.client.http.HttpMediaType setSubType(java.lang.String)>
<android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>
<com.google.android.gms.analytics.r: void setLocalDispatchPeriod(int)>
<retrofit.Platform$Base$1: void <init>(retrofit.Platform$Base,retrofit.client.Client)>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void alternateService(int,java.lang.String,com.squareup.okio.ByteString,java.lang.String,int,long)>
<com.google.api.client.json.JsonObjectParser: void <init>(com.google.api.client.json.JsonObjectParser$Builder)>
<com.battlelancer.seriesguide.ui.OverviewFragment$5: void <init>(com.battlelancer.seriesguide.ui.OverviewFragment)>
<java.text.DateFormatSymbols: java.lang.String[] getWeekdays()>
<com.google.api.client.json.JsonObjectParser$Builder: com.google.api.client.json.JsonObjectParser$Builder setWrapperKeys(java.util.Collection)>
<com.battlelancer.seriesguide.util.TraktSummaryTask: com.battlelancer.seriesguide.util.TraktSummaryTask episode(int,int,int,int)>
<com.battlelancer.seriesguide.ui.EpisodesActivity$2: void <init>(com.battlelancer.seriesguide.ui.EpisodesActivity)>
<com.battlelancer.seriesguide.ui.FullscreenImageActivity: uk.co.senab.photoview.PhotoView access$000(com.battlelancer.seriesguide.ui.FullscreenImageActivity)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences: void onStart()>
<com.google.android.gms.analytics.ae: void u(android.content.Context)>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeCollectedType: void setEpisodeProperties(com.uwetrottmann.seriesguide.backend.episodes.model.Episode)>
<java.lang.String: java.lang.String substring(int)>
<com.squareup.okhttp.internal.http.AuthenticatorAdapter: void <init>()>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Reader: java.util.List readHeaderBlock(short,short,byte,int)>
<com.battlelancer.seriesguide.backend.CloudSetupFragment: void onPause()>
<java.lang.Math: int min(int,int)>
<org.apache.oltu.oauth2.client.request.OAuthClientRequest$TokenRequestBuilder: org.apache.oltu.oauth2.client.request.OAuthClientRequest$TokenRequestBuilder setGrantType(org.apache.oltu.oauth2.common.message.types.GrantType)>
<android.support.v4.view.ViewPager: void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)>
<java.util.IdentityHashMap: java.util.Set entrySet()>
<com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>
<com.google.gson.internal.bind.TypeAdapters$2: void <init>()>
<com.mobeta.android.dslv.DragSortListView$HeightCache: void <init>(com.mobeta.android.dslv.DragSortListView,int)>
<com.google.android.gms.internal.ip: boolean gc()>
<java.lang.Thread: java.lang.Thread currentThread()>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,int,float,int,float)>
<org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>
<android.widget.EdgeEffect: void <init>(android.content.Context)>
<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>
<android.widget.TextView: void drawableHotspotChanged(float,float)>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence)>
<com.battlelancer.seriesguide.util.ServiceUtils$3: void onClick(android.view.View)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences: void setupNotifiationSettings(android.content.Context,android.preference.Preference,android.preference.Preference,android.preference.Preference,android.preference.Preference,android.preference.Preference)>
<com.squareup.okhttp.Request: void <init>(com.squareup.okhttp.Request$Builder,com.squareup.okhttp.Request$1)>
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment)>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<com.battlelancer.seriesguide.ui.ConnectTraktFragment$1: void onClick(android.view.View)>
<java.util.concurrent.atomic.AtomicInteger: void set(int)>
<android.support.v4.app.FragmentActivity$2: android.view.View findViewById(int)>
<java.lang.Character: boolean isSupplementaryCodePoint(int)>
<java.lang.Thread: void setDaemon(boolean)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment: void access$200(com.battlelancer.seriesguide.ui.MovieDetailsFragment,java.lang.String)>
<com.squareup.picasso.BitmapHunter$4: void run()>
<com.google.api.client.http.HttpRequest: boolean isLoggingEnabled()>
<retrofit.Platform$Base$2: void <init>(retrofit.Platform$Base)>
<android.support.v4.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)>
<android.widget.Scroller: boolean isFinished()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>
<com.battlelancer.seriesguide.extensions.EpisodeActionsHelper$1: void onClick(android.view.View)>
<android.support.v4.app.ActionBarDrawerToggle$SlideDrawable: void setPosition(float)>
<android.app.Service: void stopSelf()>
<com.squareup.okhttp.internal.spdy.Spdy3$Reader: boolean nextFrame(com.squareup.okhttp.internal.spdy.FrameReader$Handler)>
<com.mobeta.android.dslv.DragSortListView: float access$1600(com.mobeta.android.dslv.DragSortListView)>
<com.jakewharton.trakt.services.MovieService$MovieCheckin: void <init>(int,java.lang.String,java.lang.String)>
<java.io.File: java.lang.String getAbsolutePath()>
<com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection: void setReadTimeout(int)>
<com.squareup.okhttp.Connection: void setTimeouts(int,int)>
<android.widget.AbsListView$LayoutParams: void <init>(int,int)>
<java.util.HashMap: boolean isEmpty()>
<com.squareup.okhttp.internal.spdy.NameValueBlockReader: void <init>(com.squareup.okio.BufferedSource)>
<android.widget.ProgressBar: boolean isIndeterminate()>
<com.battlelancer.seriesguide.util.FlagTapeEntryQueue: com.battlelancer.seriesguide.util.FlagTapeEntry peek()>
<android.support.v4.view.ViewCompat$JBViewCompatImpl: void <init>()>
<com.battlelancer.seriesguide.backend.CloudSetupFragment$1: void <init>(com.battlelancer.seriesguide.backend.CloudSetupFragment)>
<com.squareup.okhttp.Cache$CacheRequestImpl: void abort()>
<org.apache.oltu.oauth2.client.request.OAuthClientRequest$TokenRequestBuilder: org.apache.oltu.oauth2.client.request.OAuthClientRequest$TokenRequestBuilder setClientId(java.lang.String)>
<java.io.BufferedInputStream: void mark(int)>
<com.squareup.okhttp.internal.http.HttpConnection$AbstractSource: void cacheWrite(com.squareup.okio.Buffer,long)>
<com.uwetrottmann.getglue.GetGlue: com.uwetrottmann.getglue.services.SearchService searchService()>
<com.squareup.okio.Buffer: void write(com.squareup.okio.Buffer,long)>
<com.squareup.okhttp.Request: java.lang.String access$700(com.squareup.okhttp.Request)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$8: void <init>(android.content.Context)>
<android.content.ContentResolver: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>
<com.squareup.okhttp.Request: com.squareup.okhttp.Request$Builder newBuilder()>
<com.squareup.okhttp.Request$Builder: java.lang.String access$100(com.squareup.okhttp.Request$Builder)>
<android.support.v4.widget.DrawerLayout: boolean onKeyUp(int,android.view.KeyEvent)>
<android.widget.RemoteViews: void addView(int,android.widget.RemoteViews)>
<com.google.android.gms.wallet.fragment.SupportWalletFragment$c: void <init>(com.google.android.gms.wallet.fragment.SupportWalletFragment)>
<com.squareup.okhttp.Cache$1: com.squareup.okhttp.Response get(com.squareup.okhttp.Request)>
<com.battlelancer.seriesguide.loaders.PersonLoader: void <init>(android.content.Context,int)>
<android.support.v4.widget.ScrollerCompatGingerbread: int getCurrX(java.lang.Object)>
<com.squareup.picasso.ContactsPhotoBitmapHunter: android.graphics.Bitmap decodeStream(java.io.InputStream,com.squareup.picasso.Request)>
<com.google.android.gms.analytics.Tracker$a: void setSessionTimeout(long)>
<com.google.android.gms.analytics.ah: boolean dx()>
<com.battlelancer.seriesguide.backend.CloudSetupFragment: void onCreate(android.os.Bundle)>
<retrofit.Platform$Base: void <init>()>
<java.io.StringReader: void <init>(java.lang.String)>
<com.google.gson.stream.JsonWriter: void flush()>
<com.google.android.gms.analytics.l: void setLogLevel(int)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment$8: void onClick(android.view.View)>
<com.battlelancer.seriesguide.extensions.ExtensionManager: void setEnabledExtensions(java.util.List)>
<java.util.WeakHashMap: boolean containsKey(java.lang.Object)>
<com.battlelancer.seriesguide.ui.EpisodesFragment: void onFlagEpisodeWatched(int,int,boolean)>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder: fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder separatorLength(int)>
<java.net.URLConnection: void setDoOutput(boolean)>
<com.google.android.gms.analytics.GoogleAnalytics: void reportActivityStop(android.app.Activity)>
<de.greenrobot.event.util.ErrorDialogFragments$Honeycomb: void <init>()>
<android.support.v4.content.WakefulBroadcastReceiver: void <init>()>
<android.database.Observable: void <init>()>
<com.battlelancer.seriesguide.util.Utils: void loadPosterBackground(android.content.Context,android.widget.ImageView,java.lang.String)>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Builder: com.squareup.okhttp.internal.spdy.SpdyConnection$Builder protocol(com.squareup.okhttp.Protocol)>
<java.util.Collections: java.util.List unmodifiableList(java.util.List)>
<com.battlelancer.seriesguide.util.EpisodeTools: boolean isSkipped(int)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void access$700(com.battlelancer.seriesguide.ui.SeasonsFragment,long,int,boolean)>
<android.widget.ProgressBar: void jumpDrawablesToCurrentState()>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity$3: void onClick(android.content.DialogInterface,int)>
<com.battlelancer.seriesguide.ui.MoviesActivity: void <init>()>
<com.battlelancer.seriesguide.dataliberation.DataLiberationFragment$3: void onClick(android.view.View)>
<android.support.v4.view.ViewPager: boolean pageRight()>
<com.battlelancer.seriesguide.ui.PeopleFragment$1: void showPerson(android.view.View,int)>
<android.util.SparseIntArray: void delete(int)>
<com.squareup.okio.RealBufferedSink: com.squareup.okio.BufferedSink write(byte[])>
<com.battlelancer.seriesguide.dashclock.UpcomingEpisodeSettingsActivity$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean access$200(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink)>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<com.google.api.client.util.ByteStreams: long copy(java.io.InputStream,java.io.OutputStream)>
<com.battlelancer.seriesguide.adapters.ExtensionsAdapter$1: void <init>(com.battlelancer.seriesguide.adapters.ExtensionsAdapter,com.battlelancer.seriesguide.extensions.ExtensionManager$Extension,int)>
<com.squareup.picasso.BitmapHunter$1: void <init>()>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: void waitUntilReadable()>
<com.google.android.gms.analytics.ac: java.util.List B(int)>
<com.squareup.okhttp.CacheControl: boolean noCache()>
<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>
<com.squareup.okhttp.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>
<java.util.concurrent.locks.ReentrantLock: void lock()>
<com.squareup.okio.ByteString: int size()>
<android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.squareup.okio.RealBufferedSource: com.squareup.okio.Timeout timeout()>
<com.battlelancer.seriesguide.billing.BillingActivity$6: void <init>(com.battlelancer.seriesguide.billing.BillingActivity)>
<com.battlelancer.seriesguide.util.DBUtils$UnwatchedQuery: void <clinit>()>
<com.google.android.gms.analytics.GoogleAnalytics: int P(java.lang.String)>
<com.google.android.gms.analytics.ae: java.lang.String getValue(java.lang.String)>
<android.support.v4.widget.ScrollerCompatGingerbread: boolean isFinished(java.lang.Object)>
<java.io.FilterOutputStream: void close()>
<android.widget.FrameLayout: void <init>(android.content.Context)>
<com.squareup.okio.Okio: com.squareup.okio.Sink sink(java.io.OutputStream,com.squareup.okio.Timeout)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment$6: void onClick(android.view.View)>
<android.support.v4.app.Fragment: void performResume()>
<com.battlelancer.seriesguide.billing.BillingActivity: void onActivityResult(int,int,android.content.Intent)>
<com.squareup.okhttp.Request: com.squareup.okhttp.Headers headers()>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment$4: void onClick(android.view.View)>
<com.squareup.okhttp.Headers: void <init>(com.squareup.okhttp.Headers$Builder,com.squareup.okhttp.Headers$1)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void access$2300(com.squareup.okhttp.internal.spdy.SpdyConnection,boolean,int,int,com.squareup.okhttp.internal.spdy.Ping)>
<com.battlelancer.seriesguide.ui.FirstRunFragment$2: void <init>(com.battlelancer.seriesguide.ui.FirstRunFragment)>
<android.support.v4.util.SparseArrayCompat: void <init>()>
<android.support.v4.widget.ViewDragHelper$2: void <init>(android.support.v4.widget.ViewDragHelper)>
<com.squareup.picasso.MarkableInputStream: void <init>(java.io.InputStream,int)>
<retrofit.Platform$Android$2: void <init>(retrofit.Platform$Android)>
<java.lang.Exception: void <init>(java.lang.String)>
<com.uwetrottmann.androidutils.GenericSimpleLoader: void onStartLoading()>
<com.squareup.picasso.Downloader$Response: void <init>(java.io.InputStream,boolean,long)>
<java.io.PrintWriter: void println()>
<android.support.v4.widget.ViewDragHelper: void captureChildView(android.view.View,int)>
<com.battlelancer.seriesguide.billing.BillingActivity$5: void <init>(com.battlelancer.seriesguide.billing.BillingActivity)>
<com.google.android.gms.dynamic.g: void <init>(java.lang.String)>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment$3: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)>
<com.squareup.okhttp.Cache: void access$300(com.squareup.okhttp.Cache)>
<com.battlelancer.seriesguide.ui.OverviewFragment$8: void run()>
<android.util.SparseIntArray: int size()>
<uk.co.senab.photoview.PhotoViewAttacher: boolean hasDrawable(android.widget.ImageView)>
<com.squareup.okhttp.internal.http.RetryableSink: void <init>(int)>
<com.battlelancer.seriesguide.billing.SkuDetails: java.lang.String getSku()>
<com.battlelancer.seriesguide.util.FlagTapedTask$1: void <init>(com.battlelancer.seriesguide.util.FlagTapedTask,com.battlelancer.seriesguide.util.FlagTapedTask$Callback)>
<android.app.Notification$Builder: android.app.Notification$Builder setUsesChronometer(boolean)>
<com.google.api.client.http.UriTemplate: void <clinit>()>
<com.battlelancer.seriesguide.ui.ShowsFragment$1: void onClick(android.view.View)>
<com.uwetrottmann.seriesguide.backend.shows.Shows$Builder: com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer)>
<com.google.android.gms.analytics.ac: com.google.android.gms.analytics.n cr()>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void <init>(android.support.v4.app.LoaderManagerImpl,int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>
<java.lang.Thread: void <init>(java.lang.String)>
<com.mobeta.android.dslv.DragSortListView: void adjustOnReorder()>
<com.battlelancer.seriesguide.settings.TraktCredentials: java.lang.String getUsername()>
<com.battlelancer.seriesguide.util.SystemUiHiderHoneycomb: void hide()>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: void <init>(com.squareup.okhttp.internal.spdy.SpdyStream,long)>
<com.battlelancer.seriesguide.adapters.ListsPagerAdapter: void onListsChanged()>
<android.widget.ImageView: void setVisibility(int)>
<java.util.ArrayList: boolean isEmpty()>
<com.battlelancer.seriesguide.ui.FullscreenImageActivity: void onCreate(android.os.Bundle)>
<com.battlelancer.seriesguide.ui.ListsActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.battlelancer.seriesguide.items.SearchResult: void <clinit>()>
<com.squareup.okhttp.Handshake: com.squareup.okhttp.Handshake get(javax.net.ssl.SSLSession)>
<com.squareup.okhttp.internal.DiskLruCache: void delete()>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment: void populateMovieCreditsViews(com.uwetrottmann.tmdb.entities.Credits)>
<com.battlelancer.seriesguide.service.TraktFlagService: void <init>()>
<com.battlelancer.seriesguide.ui.OverviewActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.support.v4.app.FragmentManagerImpl$2: void run()>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<com.squareup.okhttp.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)>
<java.util.HashMap: void <init>(java.util.Map)>
<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>
<com.battlelancer.seriesguide.ui.EpisodesActivity: com.battlelancer.seriesguide.ui.EpisodeDetailsActivity$EpisodePagerAdapter access$400(com.battlelancer.seriesguide.ui.EpisodesActivity)>
<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int)>
<com.google.api.client.http.HttpResponseException$Builder: com.google.api.client.http.HttpResponseException$Builder setStatusMessage(java.lang.String)>
<java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object)>
<com.mobeta.android.dslv.DragSortController: void setSortEnabled(boolean)>
<android.support.v4.app.ListFragment$1: void <init>(android.support.v4.app.ListFragment)>
<com.google.android.gms.analytics.t: void a(java.lang.Runnable)>
<com.google.gson.TypeAdapter: void <init>()>
<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.battlelancer.seriesguide.util.LocalOnlyOkHttpDownloader: void <init>(android.content.Context)>
<com.battlelancer.seriesguide.getglueapi.GetGlueCheckin$GetGlueCheckInTask: java.lang.Object doInBackground(java.lang.Object[])>
<com.squareup.okhttp.Connection: java.lang.Object getOwner()>
<android.support.v4.app.NotificationCompat$InboxStyle: android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence)>
<com.battlelancer.seriesguide.ui.PersonFragment$1: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<android.view.GestureDetector: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)>
<com.google.android.gms.common.GooglePlayServicesUtil: boolean showErrorDialogFragment(int,android.app.Activity,int)>
<com.google.android.gms.internal.ii: int aB(int)>
<com.battlelancer.seriesguide.util.TaskManager$1: void <init>(com.battlelancer.seriesguide.util.TaskManager,java.util.List,boolean,boolean)>
<com.mobeta.android.dslv.DragSortListView$HeightCache: int get(int)>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder networkResponse(com.squareup.okhttp.Response)>
<com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity$3: void <init>(com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity)>
<android.widget.AbsListView: void setOnScrollListener(android.widget.AbsListView$OnScrollListener)>
<uk.co.senab.photoview.PhotoView: android.widget.ImageView$ScaleType getScaleType()>
<com.squareup.okhttp.internal.spdy.SpdyStream: void waitForIo()>
<com.jakewharton.trakt.TraktHelper$17: void <init>()>
<android.support.v4.content.IntentCompat$IntentCompatImplBase: void <init>()>
<com.google.android.gms.dynamic.e: void <init>(java.lang.Object)>
<com.google.gson.stream.JsonReader: int getLineNumber()>
<com.battlelancer.seriesguide.ui.EpisodesFragment: long access$602(com.battlelancer.seriesguide.ui.EpisodesFragment,long)>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment$2: void onClick(android.view.View)>
<android.support.v4.widget.ViewDragHelper: void cancel()>
<com.squareup.okhttp.internal.spdy.Spdy3: com.squareup.okhttp.internal.spdy.FrameReader newReader(com.squareup.okio.BufferedSource,boolean)>
<com.squareup.okhttp.Connection: void makeTunnel(com.squareup.okhttp.Request,int,int)>
<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>
<com.battlelancer.seriesguide.billing.BillingActivity$1: void onIabSetupFinished(com.battlelancer.seriesguide.billing.IabResult)>
<android.widget.ImageView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.view.View: int getRight()>
<android.widget.ListView: boolean onKeyUp(int,android.view.KeyEvent)>
<com.battlelancer.seriesguide.ui.ShowFragment: void onPause()>
<android.widget.ListView: void setSelection(int)>
<android.app.Notification$Builder: android.app.Notification$Builder setSubText(java.lang.CharSequence)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$9: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<com.squareup.okhttp.internal.spdy.Http20Draft12: java.io.IOException ioException(java.lang.String,java.lang.Object[])>
<android.widget.TextView: void onScreenStateChanged(int)>
<com.battlelancer.seriesguide.appwidget.ListWidgetProvider: android.widget.RemoteViews buildRemoteViews(android.content.Context,android.appwidget.AppWidgetManager,int)>
<com.squareup.okhttp.internal.http.RetryableSink: void <init>()>
<android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: void setSize(java.lang.Object,int,int)>
<com.battlelancer.seriesguide.util.RemoveShowWorkerFragment: com.battlelancer.seriesguide.util.RemoveShowWorkerFragment newInstance(int)>
<com.google.android.gms.analytics.x: void R(java.lang.String)>
<com.squareup.picasso.Request$Builder: com.squareup.picasso.Request build()>
<com.google.gson.stream.JsonReader: int peekKeyword()>
<com.battlelancer.seriesguide.dataliberation.DataLiberationFragment: android.widget.Button access$400(com.battlelancer.seriesguide.dataliberation.DataLiberationFragment)>
<com.battlelancer.seriesguide.util.TaskManager: android.content.Context access$100(com.battlelancer.seriesguide.util.TaskManager)>
<com.battlelancer.seriesguide.ui.OverviewFragment: void onActivityCreated(android.os.Bundle)>
<android.support.v4.app.Fragment: void <init>()>
<de.greenrobot.event.ThreadMode: void <init>(java.lang.String,int)>
<com.squareup.okhttp.internal.spdy.Header: boolean equals(java.lang.Object)>
<uk.co.senab.photoview.PhotoViewAttacher: int getImageViewHeight(android.widget.ImageView)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void writeData(int,boolean,com.squareup.okio.Buffer,long)>
<com.google.android.gms.auth.GoogleAuthUtil: void z(android.content.Context)>
<com.mobeta.android.dslv.DragSortListView$RemoveAnimator: void onStop()>
<com.google.api.client.http.javanet.NetHttpTransport: boolean supportsMethod(java.lang.String)>
<de.greenrobot.event.NoSubscriberEvent: void <init>(de.greenrobot.event.EventBus,java.lang.Object)>
<com.google.myjson.FieldNamingPolicy: void <clinit>()>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.battlelancer.seriesguide.items.MovieDetails: com.uwetrottmann.tmdb.entities.Movie tmdbMovie()>
<java.util.TreeSet: java.lang.Object first()>
<com.battlelancer.seriesguide.ui.ShowFragment: void access$900(com.battlelancer.seriesguide.ui.ShowFragment,com.uwetrottmann.tmdb.entities.Credits)>
<com.squareup.okio.AsyncTimeout: boolean exit()>
<com.battlelancer.seriesguide.ui.ListsActivity: void onCreate(android.os.Bundle)>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment$2: void onClick(android.view.View)>
<com.battlelancer.seriesguide.util.Utils: java.lang.String toSHA1(java.lang.String)>
<com.battlelancer.seriesguide.ui.dialogs.AddListDialogFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.battlelancer.seriesguide.loaders.GetGlueObjectLoader: void <init>(java.lang.String,android.content.Context)>
<com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator centerCrop()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>
<com.battlelancer.seriesguide.backend.settings.HexagonSettings: boolean hasCompletedSetup(android.content.Context)>
<com.google.android.gms.plus.PlusOneDummyView: com.google.android.gms.plus.PlusOneDummyView$d jT()>
<java.math.BigInteger: int intValue()>
<uk.co.senab.photoview.PhotoViewAttacher$FlingRunnable: void <init>(uk.co.senab.photoview.PhotoViewAttacher,android.content.Context)>
<com.google.api.client.util.ArrayValueMap$ArrayValue: java.lang.Object toArray()>
<de.greenrobot.event.AsyncPoster: void run()>
<com.squareup.picasso.FileBitmapHunter: android.graphics.Bitmap decode(com.squareup.picasso.Request)>
<android.widget.ImageView: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.support.v4.app.ActivityOptionsCompat: void <init>()>
<com.battlelancer.seriesguide.ui.BaseActivity: boolean onAutoBackup()>
<com.battlelancer.seriesguide.util.SelectionBuilder: void assertTable()>
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl: java.lang.Object newAccessiblityDelegateDefaultImpl()>
<com.squareup.okhttp.internal.http.HttpTransport: void writeRequestBody(com.squareup.okhttp.internal.http.RetryableSink)>
<com.squareup.okhttp.internal.Util: void <clinit>()>
<org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment: void access$000(com.battlelancer.seriesguide.ui.TraktShoutsFragment)>
<com.jakewharton.trakt.enumerations.Extended: void <init>(java.lang.String,int,java.lang.String)>
<com.google.api.client.googleapis.MethodOverride: void <init>()>
<com.google.myjson.internal.bind.TypeAdapters$9: void <init>()>
<com.squareup.okhttp.internal.http.HttpConnection: com.squareup.okhttp.Connection access$800(com.squareup.okhttp.internal.http.HttpConnection)>
<android.widget.ScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)>
<com.squareup.okio.GzipSource: void close()>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Writer: void headers(boolean,int,java.util.List)>
<java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<com.battlelancer.seriesguide.ui.ShowsFragment$1: void <init>(com.battlelancer.seriesguide.ui.ShowsFragment)>
<android.support.v4.widget.ScrollerCompatGingerbread: void abortAnimation(java.lang.Object)>
<android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC: java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int)>
<com.battlelancer.seriesguide.ui.BaseTopActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void writeSynResetLater(int,com.squareup.okhttp.internal.spdy.ErrorCode)>
<com.google.android.gms.analytics.w: java.lang.String db()>
<com.google.api.client.util.Preconditions: void checkArgument(boolean)>
<com.squareup.okhttp.Connection: void upgradeToTls(com.squareup.okhttp.Request,int,int)>
<com.battlelancer.seriesguide.migration.MigrationActivity$1: void onClick(android.view.View)>
<android.support.v4.view.MotionEventCompatEclair: float getY(android.view.MotionEvent,int)>
<com.crashlytics.android.internal.x: void onActivityStarted(android.app.Activity)>
<com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.squareup.okio.GzipSource: long read(com.squareup.okio.Buffer,long)>
<com.mobeta.android.dslv.DragSortListView: int access$1800(com.mobeta.android.dslv.DragSortListView,int,android.view.View,boolean)>
<com.mobeta.android.dslv.DragSortListView: void clearPositions()>
<android.widget.ImageView: void onRtlPropertiesChanged(int)>
<com.battlelancer.seriesguide.ui.ShowFragment: void onDestroyView()>
<uk.co.senab.photoview.gestures.EclairGestureDetector: float getActiveX(android.view.MotionEvent)>
<com.squareup.okhttp.internal.spdy.HeadersMode: boolean failIfHeadersPresent()>
<com.squareup.okhttp.internal.http.StatusLine: com.squareup.okhttp.internal.http.StatusLine get(com.squareup.okhttp.Response)>
<com.battlelancer.seriesguide.ui.SeasonsFragment$2$1: void <init>(com.battlelancer.seriesguide.ui.SeasonsFragment$2)>
<android.support.v4.view.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)>
<com.squareup.okio.ByteString: int hashCode()>
<android.support.v4.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>
<com.battlelancer.seriesguide.util.tasks.BaseHexagonMovieTask: java.lang.Void doInBackground(java.lang.Void[])>
<android.view.View: android.view.View findViewById(int)>
<com.google.gson.stream.JsonWriter: void setLenient(boolean)>
<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a()>
<android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl: void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)>
<android.database.DataSetObservable: void notifyChanged()>
<android.widget.PopupMenu: void setOnMenuItemClickListener(android.widget.PopupMenu$OnMenuItemClickListener)>
<com.jakewharton.trakt.TraktHelper$11: void <init>()>
<android.os.Handler: boolean sendMessage(android.os.Message)>
<com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity$3: void onClick(android.view.View)>
<com.battlelancer.seriesguide.ui.ShowsActivity: boolean handleViewIntents()>
<com.uwetrottmann.androidutils.AndroidUtils: boolean isJellyBeanMR1OrHigher()>
<com.battlelancer.seriesguide.ui.ShowsActivity: com.battlelancer.seriesguide.billing.IabHelper access$100(com.battlelancer.seriesguide.ui.ShowsActivity)>
<android.app.Activity: void startActivities(android.content.Intent[])>
<android.support.v4.widget.DrawerLayout: void requestDisallowInterceptTouchEvent(boolean)>
<com.battlelancer.seriesguide.ui.ListsActivity: void setupViews()>
<com.battlelancer.seriesguide.ui.EpisodesActivity: void access$300(com.battlelancer.seriesguide.ui.EpisodesActivity)>
<com.mobeta.android.dslv.DragSortController: int startFlingPosition(android.view.MotionEvent)>
<com.battlelancer.seriesguide.ui.SearchFragment$SearchQuery: void <clinit>()>
<com.google.api.client.http.HttpHeaders: com.google.api.client.http.HttpHeaders clone()>
<com.google.api.client.http.HttpTransport: void <clinit>()>
<com.battlelancer.seriesguide.billing.BillingActivity: void onDestroy()>
<com.battlelancer.seriesguide.adapters.PeopleAdapter: void <init>(android.content.Context)>
<android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)>
<com.battlelancer.seriesguide.ui.PeopleActivity: void <init>()>
<android.view.GestureDetector: void setIsLongpressEnabled(boolean)>
<com.jakewharton.trakt.enumerations.Rating: com.jakewharton.trakt.enumerations.Rating[] values()>
<com.google.api.client.http.UrlEncodedContent: com.google.api.client.http.UrlEncodedContent setData(java.lang.Object)>
<butterknife.ButterKnife$Finder$2: void <init>(java.lang.String,int)>
<android.support.v4.content.Loader: void <init>(android.content.Context)>
<com.squareup.okhttp.internal.spdy.Http20Draft12$FrameLogger: java.lang.String formatFlags(byte,byte)>
<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
<java.text.DateFormat: java.util.Date parse(java.lang.String)>
<android.widget.Scroller: int getFinalX()>
<com.squareup.okhttp.internal.DiskLruCache: void access$2200(com.squareup.okhttp.internal.DiskLruCache,com.squareup.okhttp.internal.DiskLruCache$Editor,boolean)>
<java.util.concurrent.ConcurrentLinkedQueue: boolean isEmpty()>
<java.util.zip.Deflater: int deflate(byte[],int,int)>
<com.squareup.okhttp.internal.spdy.Spdy3$Writer: void close()>
<com.google.api.client.http.apache.ApacheHttpRequest: void <init>(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpRequestBase)>
<timber.log.Timber: void plant(timber.log.Timber$Tree)>
<com.battlelancer.seriesguide.ui.FullscreenImageActivity$2: void <init>(com.battlelancer.seriesguide.ui.FullscreenImageActivity)>
<android.support.v4.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>
<org.apache.http.client.methods.HttpDelete: void <init>(java.lang.String)>
<android.view.accessibility.AccessibilityEvent: void <clinit>()>
<com.google.android.gms.analytics.aj: int getSessionTimeout()>
<com.battlelancer.seriesguide.Constants$EpisodeSorting: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String)>
<com.squareup.okhttp.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.security.cert.X509Certificate)>
<android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
<com.squareup.okio.Util: int reverseBytesInt(int)>
<android.support.v4.content.ModernAsyncTask$4: void <clinit>()>
<android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)>
<android.app.Activity: void setContentView(android.view.View)>
<com.battlelancer.seriesguide.ui.ShowsFragment: void schedulePeriodicDataRefresh(boolean)>
<android.support.v4.view.ViewPager: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.squareup.okio.ByteString: java.lang.String utf8()>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<com.squareup.okhttp.internal.http.HttpConnection$AbstractSource: void <init>(com.squareup.okhttp.internal.http.HttpConnection,java.net.CacheRequest)>
<uk.co.senab.photoview.scrollerproxy.PreGingerScroller: void <init>(android.content.Context)>
<com.squareup.okhttp.internal.http.HttpConnection: boolean isClosed()>
<com.google.myjson.stream.JsonReader: void <clinit>()>
<com.squareup.okhttp.internal.http.HttpEngine: void <clinit>()>
<com.battlelancer.seriesguide.ui.OverviewFragment: void onLoaderReset(android.support.v4.content.Loader)>
<android.support.v4.app.FragmentActivity: void onResumeFragments()>
<com.squareup.okhttp.Response: java.lang.String message()>
<de.greenrobot.event.EventBus: void post(java.lang.Object)>
<com.google.android.gms.dynamic.d$a: void <init>()>
<retrofit.Utils$SynchronousExecutor: void <init>()>
<com.google.android.gms.analytics.s: void cP()>
<com.battlelancer.seriesguide.util.DBUtils: android.database.Cursor getUpcomingEpisodes(android.content.Context)>
<android.support.v4.widget.DrawerLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.api.client.json.GenericJson: void <init>()>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient: com.google.api.client.json.JsonFactory getJsonFactory()>
<android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>
<com.google.api.client.repackaged.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<com.battlelancer.seriesguide.ui.ShowsFragment: void access$500(com.battlelancer.seriesguide.ui.ShowsFragment,java.lang.String)>
<java.util.LinkedList: void <init>()>
<com.battlelancer.seriesguide.util.FlagTapedTask$1: void postFailure(boolean)>
<com.squareup.okhttp.Headers$Builder: java.util.List access$000(com.squareup.okhttp.Headers$Builder)>
<com.google.api.client.http.HttpHeaders: com.google.api.client.http.HttpHeaders set(java.lang.String,java.lang.Object)>
<com.battlelancer.seriesguide.ui.PeopleFragment: void <init>()>
<com.battlelancer.seriesguide.ui.BaseActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.tonicartos.widget.stickygridheaders.StickyGridHeadersGridView$1: void <init>(com.tonicartos.widget.stickygridheaders.StickyGridHeadersGridView)>
<android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence)>
<android.view.View: void draw(android.graphics.Canvas)>
<android.accounts.AbstractAccountAuthenticator: android.os.IBinder getIBinder()>
<android.support.v4.widget.EdgeEffectCompat: void finish()>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void pushHeadersLater(int,java.util.List,boolean)>
<android.os.Handler: android.os.Message obtainMessage(int,int,int)>
<com.uwetrottmann.seriesguide.backend.episodes.model.Episode: com.uwetrottmann.seriesguide.backend.episodes.model.Episode setSeasonNumber(java.lang.Integer)>
<android.util.SparseArray: void <init>()>
<com.google.gson.LongSerializationPolicy: void <init>(java.lang.String,int)>
<android.widget.TextView: boolean hasOverlappingRendering()>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment: int access$100(com.battlelancer.seriesguide.ui.MovieDetailsFragment)>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<android.app.Notification$Builder: android.app.Notification$Builder setLights(int,int,int)>
<com.google.myjson.stream.JsonReader: void endArray()>
<com.battlelancer.seriesguide.util.ConnectTraktTask: java.lang.Integer doInBackground(java.lang.String[])>
<com.battlelancer.seriesguide.ui.SeasonsFragment$4: java.lang.Object doInBackground(java.lang.Object[])>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<com.squareup.okio.AsyncTimeout: boolean cancelScheduledTimeout(com.squareup.okio.AsyncTimeout)>
<android.support.v4.widget.CursorAdapter: android.database.Cursor getCursor()>
<java.util.zip.Inflater: void end()>
<java.lang.Character: char toUpperCase(char)>
<com.battlelancer.seriesguide.ui.ShowFragment: void onResume()>
<com.battlelancer.seriesguide.extensions.EpisodeActionsHelper$1: void <init>(android.content.Intent)>
<com.battlelancer.seriesguide.ui.AddFragment$AddAdapter: void <init>(android.content.Context,int,java.util.List,android.view.View$OnClickListener)>
<android.support.v4.content.AsyncTaskLoader: void onForceLoad()>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment: void onPause()>
<com.squareup.okhttp.internal.DiskLruCache: void deleteIfExists(java.io.File)>
<com.battlelancer.seriesguide.dataliberation.JsonExportTask: void addListItems(com.battlelancer.seriesguide.dataliberation.model.List)>
<com.google.api.client.http.HttpResponse: com.google.api.client.http.HttpHeaders getHeaders()>
<android.support.v4.app.DialogFragment: void setStyle(int,int)>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment: com.battlelancer.seriesguide.ui.TraktShoutsFragment newInstanceEpisode(int,int,int)>
<com.battlelancer.seriesguide.ui.SearchActivity: void onShowEpisodeDetails(java.lang.String)>
<android.support.v4.app.TaskStackBuilder: android.support.v4.app.TaskStackBuilder create(android.content.Context)>
<com.battlelancer.seriesguide.billing.IabHelper: void logWarn(java.lang.String)>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection: int getResponseCode()>
<android.support.v4.view.ViewCompatGingerbread: int getOverScrollMode(android.view.View)>
<com.squareup.okhttp.Response: void <init>(com.squareup.okhttp.Response$Builder)>
<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<com.google.android.gms.internal.gz: void <init>(android.app.Activity,android.content.Intent,int)>
<android.widget.EdgeEffect: void setSize(int,int)>
<com.battlelancer.seriesguide.ui.PeopleFragment$4: void onLoaderReset(android.support.v4.content.Loader)>
<java.lang.reflect.Modifier: boolean isStatic(int)>
<com.google.myjson.FieldNamingPolicy$4: void <init>(java.lang.String,int)>
<com.google.gson.DefaultDateTypeAdapter: void <init>(java.lang.String)>
<android.view.animation.Animation: void finalize()>
<com.battlelancer.seriesguide.util.EpisodeTools$SeasonCollectedType: int getLastWatchedEpisodeTvdbId()>
<com.uwetrottmann.seriesguide.backend.episodes.Episodes$Builder: com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setRootUrl(java.lang.String)>
<com.google.android.gms.analytics.t: void run()>
<android.widget.OverScroller: boolean computeScrollOffset()>
<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>
<java.io.StringReader: int read(char[],int,int)>
<com.battlelancer.seriesguide.getglueapi.GetGlueAuthActivity$2: void <init>(com.battlelancer.seriesguide.getglueapi.GetGlueAuthActivity,android.support.v4.app.FragmentActivity)>
<com.battlelancer.seriesguide.ui.BaseNavDrawerActivity: boolean toggleDrawer(android.view.MenuItem)>
<com.battlelancer.seriesguide.ui.ShowsActivity$3$1: void <init>(com.battlelancer.seriesguide.ui.ShowsActivity$3)>
<com.battlelancer.seriesguide.ui.HelpActivity$1: void <init>(com.battlelancer.seriesguide.ui.HelpActivity,com.battlelancer.seriesguide.ui.BaseActivity)>
<java.util.HashSet: boolean isEmpty()>
<com.battlelancer.seriesguide.dataliberation.JsonImportTask: void addListToDatabase(com.battlelancer.seriesguide.dataliberation.model.List)>
<com.squareup.okhttp.internal.spdy.Huffman$Node: int access$100(com.squareup.okhttp.internal.spdy.Huffman$Node)>
<com.squareup.okhttp.internal.Platform$JdkWithJettyBootPlatform: void setProtocols(javax.net.ssl.SSLSocket,java.util.List)>
<com.google.api.client.json.gson.GsonParser$1: void <clinit>()>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Writer: void frameHeader(int,int,byte,byte)>
<com.mobeta.android.dslv.DragSortListView$DragSortTracker: void flush()>
<android.support.v4.widget.ViewDragHelper: int getEdgeSize()>
<com.squareup.okhttp.Address: java.net.Proxy getProxy()>
<android.support.v4.app.Fragment: android.os.Bundle getArguments()>
<com.battlelancer.seriesguide.ui.dialogs.ListManageDialogFragment$2: void <init>(com.battlelancer.seriesguide.ui.dialogs.ListManageDialogFragment)>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient: void <init>(com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder)>
<com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment$ListsQuery: void <clinit>()>
<com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment: void onStart()>
<android.widget.TextView: int getLeftPaddingOffset()>
<com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl: int getResponseCode()>
<com.squareup.okhttp.internal.spdy.Huffman$Node: void <init>(int,int)>
<com.squareup.okio.Base64: byte[] decode(java.lang.String)>
<android.support.v4.widget.DrawerLayout$ViewDragCallback: void setDragger(android.support.v4.widget.ViewDragHelper)>
<com.battlelancer.seriesguide.ui.ShowFragment: void fireTrackerEvent(java.lang.String)>
<com.battlelancer.seriesguide.ui.EpisodesActivity: void setCurrentPage(int)>
<com.google.android.gms.analytics.u: void <clinit>()>
<java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>
<android.app.Activity: boolean requestWindowFeature(int)>
<com.google.api.client.util.GenericData: com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object)>
<com.battlelancer.seriesguide.util.TmdbTools: void <clinit>()>
<com.battlelancer.seriesguide.ui.SeasonsFragment$5: void <init>(com.battlelancer.seriesguide.ui.SeasonsFragment)>
<com.google.api.client.util.FieldInfo: com.google.api.client.util.FieldInfo of(java.lang.reflect.Field)>
<android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>
<com.uwetrottmann.getglue.GetGlue: org.apache.oltu.oauth2.client.request.OAuthClientRequest getAuthorizationRequest(java.lang.String,java.lang.String)>
<com.battlelancer.seriesguide.ui.EpisodesActivity$1: void <init>(com.battlelancer.seriesguide.ui.EpisodesActivity)>
<com.squareup.okio.RealBufferedSource: long indexOf(byte)>
<android.app.Activity: android.content.ComponentName getComponentName()>
<com.battlelancer.seriesguide.settings.DisplaySettings: boolean isVeryLargeScreen(android.content.Context)>
<com.battlelancer.seriesguide.util.TraktSummaryTask: void <clinit>()>
<com.squareup.picasso.Utils: int calculateMemoryCacheSize(android.content.Context)>
<com.battlelancer.seriesguide.ui.dialogs.CheckInDialogFragment: void onStart()>
<android.util.SparseBooleanArray: void <init>()>
<com.google.api.client.googleapis.GoogleUtils: void <clinit>()>
<java.util.ArrayList: int hashCode()>
<android.widget.TextView: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>
<android.support.v4.app.NotificationCompatIceCreamSandwich: android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)>
<com.google.api.client.http.apache.ApacheHttpTransport: void <init>(org.apache.http.client.HttpClient)>
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>
<com.google.api.client.json.gson.GsonGenerator: void writeNumber(long)>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.GenericUrl getUrl()>
<com.battlelancer.seriesguide.util.DBUtils$LastWatchedEpisodeQuery: void <clinit>()>
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment)>
<com.google.android.gms.common.GooglePlayServicesUtil: boolean b(int,android.app.Activity,android.support.v4.app.Fragment,int,android.content.DialogInterface$OnCancelListener)>
<com.battlelancer.seriesguide.settings.DisplaySettings: java.lang.String getThemeIndex(android.content.Context)>
<com.google.api.client.http.HttpHeaders: com.google.api.client.http.HttpHeaders setIfRange(java.lang.String)>
<com.google.api.client.http.HttpMediaType: java.lang.String getSubType()>
<com.google.api.client.util.DataMap$Entry: java.lang.String getKey()>
<com.battlelancer.seriesguide.util.TmdbTools: java.lang.String buildRatingValue(java.lang.Double)>
<android.widget.EdgeEffect: boolean isFinished()>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment: void access$600(com.battlelancer.seriesguide.ui.EpisodeDetailsFragment)>
<com.squareup.okhttp.Request: java.util.List headers(java.lang.String)>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment: android.support.v4.app.LoaderManager$LoaderCallbacks access$100(com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment)>
<com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment$1: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<java.lang.String: void <init>(char[])>
<java.lang.ref.ReferenceQueue: void <init>()>
<android.widget.RemoteViews: void setEmptyView(int,int)>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeWatchedPreviousType: java.util.List getEpisodesForTrakt()>
<java.util.ArrayList: void ensureCapacity(int)>
<java.lang.Double: java.lang.Double valueOf(double)>
<android.support.v4.view.ViewCompat: int getOverScrollMode(android.view.View)>
<com.google.api.client.json.gson.GsonGenerator: void writeFieldName(java.lang.String)>
<com.google.gson.reflect.TypeToken: java.lang.reflect.Type getType()>
<com.battlelancer.seriesguide.util.DBUtils: void applyBatch(android.content.Context,java.util.ArrayList)>
<com.battlelancer.seriesguide.util.TraktTask: com.jakewharton.trakt.entities.Response doInBackground(java.lang.Void[])>
<java.io.InputStream: void mark(int)>
<com.google.api.client.json.JsonParser$1: void <clinit>()>
<com.google.gson.internal.bind.TimeTypeAdapter: void <clinit>()>
<com.google.gson.internal.bind.TypeAdapters$3: void <init>()>
<java.util.Calendar: long getTimeInMillis()>
<com.battlelancer.seriesguide.ui.FullscreenImageActivity: void <init>()>
<com.google.myjson.stream.JsonReader: void close()>
<com.google.gson.internal.bind.TypeAdapters$24: void <init>()>
<com.battlelancer.seriesguide.util.Utils: void loadPoster(android.content.Context,android.widget.ImageView,java.lang.String)>
<com.squareup.picasso.Utils: byte[] toByteArray(java.io.InputStream)>
<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.Response$Builder readNameValueBlock(java.util.List,com.squareup.okhttp.Protocol)>
<com.google.gson.stream.JsonReader: java.lang.String nextName()>
<android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase: void <init>()>
<com.battlelancer.seriesguide.util.ServiceUtils: long calculateApiDiskCacheSize(java.io.File)>
<com.squareup.picasso.RequestCreator$1: void run()>
<android.app.Notification$Builder: android.app.Notification$Builder setProgress(int,int,boolean)>
<android.support.v4.content.ModernAsyncTask$3: void <init>(android.support.v4.content.ModernAsyncTask,java.util.concurrent.Callable)>
<com.squareup.okhttp.internal.DiskLruCache$Entry: java.io.IOException invalidLengths(java.lang.String[])>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void <init>()>
<com.squareup.okio.DeflaterSink: void <init>(com.squareup.okio.BufferedSink,java.util.zip.Deflater)>
<com.squareup.okio.InflaterSource: void <init>(com.squareup.okio.Source,java.util.zip.Inflater)>
<android.support.v4.app.Fragment: void startActivityForResult(android.content.Intent,int)>
<android.support.v4.util.SimpleArrayMap: java.lang.Object valueAt(int)>
<com.squareup.okhttp.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>
<com.google.android.gms.analytics.ab: java.lang.String dq()>
<android.view.MotionEvent: int findPointerIndex(int)>
<com.google.api.client.util.Types: java.lang.Object toArray(java.util.Collection,java.lang.Class)>
<timber.log.Timber$1: void d(java.lang.String,java.lang.Object[])>
<com.google.api.client.http.GenericUrl: java.lang.String build()>
<com.squareup.okhttp.internal.http.SpdyTransport$SpdySource: void close()>
<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>
<com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.Logger getLogger()>
<retrofit.Platform$Base: java.util.concurrent.Executor defaultHttpExecutor()>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Builder: com.squareup.okhttp.Protocol access$000(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder)>
<android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
<java.lang.Double: double parseDouble(java.lang.String)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.view.VelocityTracker: android.view.VelocityTracker obtain()>
<com.battlelancer.seriesguide.util.Utils: boolean hasUnlockKeyInstalled(android.content.Context)>
<com.google.api.client.http.HttpResponse: com.google.api.client.http.HttpRequest getRequest()>
<java.lang.IllegalStateException: void <init>()>
<com.battlelancer.seriesguide.ui.dialogs.ListManageDialogFragment: com.battlelancer.seriesguide.interfaces.OnListsChangedListener access$000(com.battlelancer.seriesguide.ui.dialogs.ListManageDialogFragment)>
<com.squareup.okhttp.Cache: java.net.CacheRequest put(com.squareup.okhttp.Response)>
<com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl: java.lang.String getHeaderField(java.lang.String)>
<com.battlelancer.seriesguide.sync.SgSyncAdapter: void requestSyncIfConnected(android.content.Context,com.battlelancer.seriesguide.sync.SgSyncAdapter$SyncType,int)>
<com.google.api.client.json.gson.GsonGenerator: void writeNumber(int)>
<com.battlelancer.seriesguide.widgets.SlidingTabLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.api.client.http.HttpMediaType: boolean equalsIgnoreParameters(com.google.api.client.http.HttpMediaType)>
<com.squareup.okhttp.internal.http.OkHeaders: boolean hasVaryAll(com.squareup.okhttp.Response)>
<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>
<com.battlelancer.seriesguide.dataliberation.DataLiberationFragment: android.widget.Button access$300(com.battlelancer.seriesguide.dataliberation.DataLiberationFragment)>
<com.battlelancer.seriesguide.ui.ConnectTraktFragment: void <init>()>
<java.net.URL: java.lang.String getRef()>
<com.google.api.client.util.Data: java.lang.Object clone(java.lang.Object)>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Reader: void readSettings(com.squareup.okhttp.internal.spdy.FrameReader$Handler,short,byte,int)>
<com.battlelancer.seriesguide.util.tasks.HexagonAddMovieToWatchlistTask: void setMovieProperties(com.uwetrottmann.seriesguide.backend.movies.model.Movie)>
<com.google.api.client.util.DataMap$EntryIterator: java.util.Map$Entry next()>
<com.google.android.gms.analytics.ai$a: void c(java.lang.String,java.lang.String)>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity: android.os.AsyncTask access$302(com.battlelancer.seriesguide.ui.BackupDeleteActivity,android.os.AsyncTask)>
<java.math.BigDecimal: int intValue()>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Writer: void settings(com.squareup.okhttp.internal.spdy.Settings)>
<com.google.android.gms.dynamic.a$1: void <init>(com.google.android.gms.dynamic.a)>
<com.battlelancer.seriesguide.ui.ListsFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.support.v4.widget.DrawerLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.support.v4.view.AccessibilityDelegateCompatIcs$1: void <init>(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge)>
<org.apache.oltu.oauth2.common.exception.OAuthSystemException: void <init>(java.lang.Throwable)>
<android.util.Log: int v(java.lang.String,java.lang.String)>
<com.battlelancer.seriesguide.SeriesGuideApplication: void onCreate()>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Handshake access$400(com.squareup.okhttp.Response$Builder)>
<com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.Tracker a(com.google.android.gms.analytics.Tracker)>
<com.google.gson.stream.JsonWriter: void <clinit>()>
<com.google.android.gms.plus.internal.g: android.view.View a(android.content.Context,int,int,java.lang.String,int)>
<com.uwetrottmann.seriesguide.backend.shows.model.ShowList: com.google.api.client.json.GenericJson clone()>
<java.lang.Enum: int ordinal()>
<com.battlelancer.seriesguide.provider.SeriesGuideDatabase: long insertShows(android.content.ContentValues)>
<com.google.api.client.json.JsonParser: java.lang.Object parse(java.lang.Class,com.google.api.client.json.CustomizeJsonParser)>
<fr.castorflex.android.smoothprogressbar.SmoothProgressBarUtils: android.graphics.drawable.Drawable generateDrawableWithColors(int[],float)>
<android.support.v4.view.ViewPager: void populate(int)>
<android.support.v4.app.NotificationCompat$InboxStyle: void <init>()>
<com.squareup.okhttp.Request: java.lang.String header(java.lang.String)>
<android.graphics.Matrix: boolean postScale(float,float)>
<uk.co.senab.photoview.gestures.CupcakeGestureDetector: float getActiveY(android.view.MotionEvent)>
<com.battlelancer.seriesguide.ui.SeasonsFragment$UpdateUnwatchThread: void run()>
<android.os.Bundle: void <init>()>
<android.support.v4.widget.DrawerLayout: float getDrawerViewOffset(android.view.View)>
<com.squareup.okhttp.OkHttpClient$1: void recycle(com.squareup.okhttp.ConnectionPool,com.squareup.okhttp.Connection)>
<com.squareup.picasso.Request: boolean hasSize()>
<com.battlelancer.seriesguide.ui.SearchFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>
<com.battlelancer.seriesguide.util.SystemUiHider: com.battlelancer.seriesguide.util.SystemUiHider getInstance(android.app.Activity,android.view.View,int)>
<com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment: com.battlelancer.seriesguide.util.ConnectTraktTask access$202(com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment,com.battlelancer.seriesguide.util.ConnectTraktTask)>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool(java.util.concurrent.ThreadFactory)>
<com.squareup.okhttp.internal.http.RetryableSink: long contentLength()>
<android.widget.ProgressBar: void onVisibilityChanged(android.view.View,int)>
<java.util.concurrent.ConcurrentHashMap: void <init>()>
<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okhttp.Response$Builder readResponseHeaders()>
<android.support.v4.app.ActionBarDrawerToggle$SlideDrawable: void <init>(android.support.v4.app.ActionBarDrawerToggle,android.graphics.drawable.Drawable,android.support.v4.app.ActionBarDrawerToggle$1)>
<android.preference.Preference: java.lang.String getKey()>
<android.support.v4.widget.EdgeEffectCompatIcs: boolean draw(java.lang.Object,android.graphics.Canvas)>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: void setReadTimeout(int)>
<com.battlelancer.seriesguide.ui.ShowsActivity: void onNewIntent(android.content.Intent)>
<android.util.SparseIntArray: int get(int,int)>
<com.battlelancer.seriesguide.ui.PeopleActivity: void showPerson(android.view.View,int)>
<com.uwetrottmann.androidutils.GenericSimpleLoader: void onReleaseResources(java.lang.Object)>
<com.battlelancer.seriesguide.ui.MoviesSearchFragment$1: void <init>(com.battlelancer.seriesguide.ui.MoviesSearchFragment)>
<com.squareup.okhttp.Request: java.lang.String method()>
<com.battlelancer.seriesguide.settings.AppSettings: int getLastVersionCode(android.content.Context)>
<android.support.v4.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)>
<android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb: void <init>()>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment: void onPause()>
<com.squareup.okhttp.Request$Builder: void <init>(com.squareup.okhttp.Request,com.squareup.okhttp.Request$1)>
<com.battlelancer.seriesguide.dataliberation.DataLiberationFragment: void onCreate(android.os.Bundle)>
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>
<com.squareup.okhttp.internal.spdy.Header: int hashCode()>
<com.google.android.gms.analytics.aj: double dH()>
<com.google.android.gms.internal.hn: void <init>()>
<com.google.android.gms.analytics.w: boolean dh()>
<com.battlelancer.seriesguide.util.LatestEpisodeUpdateTask: void <init>(android.content.Context)>
<com.google.android.gms.internal.r$a$a: void <init>(android.os.IBinder)>
<com.battlelancer.seriesguide.ui.FullscreenImageActivity$1: void onSuccess()>
<com.squareup.okio.AsyncTimeout$2: void close()>
<com.squareup.picasso.Utils: com.squareup.picasso.Downloader createDefaultDownloader(android.content.Context)>
<android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl: int getLayoutDirection(android.view.View)>
<android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>
<com.google.api.client.extensions.android.http.AndroidHttp: com.google.api.client.http.HttpTransport newCompatibleTransport()>
<android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl: void <init>()>
<com.squareup.okhttp.internal.spdy.SpdyStream: boolean closeInternal(com.squareup.okhttp.internal.spdy.ErrorCode)>
<com.google.android.gms.analytics.c: com.google.android.gms.internal.fe cm()>
<com.battlelancer.seriesguide.ui.StatsFragment: void onActivityCreated(android.os.Bundle)>
<com.uwetrottmann.androidutils.AndroidUtils: boolean isWifiConnected(android.content.Context)>
<com.squareup.picasso.Downloader$Response: android.graphics.Bitmap getBitmap()>
<com.squareup.okhttp.internal.DiskLruCache$Editor: void <init>(com.squareup.okhttp.internal.DiskLruCache,com.squareup.okhttp.internal.DiskLruCache$Entry,com.squareup.okhttp.internal.DiskLruCache$1)>
<com.battlelancer.seriesguide.adapters.MoviesAdapter: void <init>(android.content.Context,com.battlelancer.seriesguide.adapters.MoviesAdapter$PopupMenuClickListener)>
<android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)>
<com.squareup.okhttp.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,int,int,boolean)>
<android.support.v4.app.NotificationCompat$InboxStyle: android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence)>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Reader: void readConnectionPreface()>
<android.app.Activity: void setProgressBarIndeterminateVisibility(boolean)>
<com.squareup.okhttp.internal.http.HttpDate: java.util.Date parse(java.lang.String)>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Reader: void close()>
<android.view.ViewGroup: void <init>(android.content.Context)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$6: boolean onPreferenceClick(android.preference.Preference)>
<android.support.v4.widget.DrawerLayout$ViewDragCallback: void onViewDragStateChanged(int)>
<com.squareup.okhttp.Response: com.squareup.okhttp.Response networkResponse()>
<java.lang.String: boolean matches(java.lang.String)>
<com.google.api.client.util.FieldInfo: java.lang.Class getType()>
<com.battlelancer.seriesguide.ui.MovieDetailsActivity: void setupActionBar()>
<retrofit.RestAdapter$RestHandler: void <init>(retrofit.RestAdapter,java.util.Map)>
<android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)>
<android.graphics.Canvas: void translate(float,float)>
<com.battlelancer.seriesguide.ui.BaseNavDrawerActivity: void onPostCreate(android.os.Bundle)>
<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>
<java.util.IdentityHashMap: java.util.Collection values()>
<android.support.v4.view.ViewPager: boolean pageLeft()>
<android.support.v4.app.NotificationCompat$BigTextStyle: android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence)>
<com.google.myjson.internal.$Gson$Types$GenericArrayTypeImpl: void <init>(java.lang.reflect.Type)>
<com.battlelancer.seriesguide.ui.BaseSettingsFragment$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: com.squareup.okio.Timeout timeout()>
<com.battlelancer.seriesguide.util.EpisodeTools$ShowType: java.util.List getEpisodesForTrakt()>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Writer: void data(boolean,int,com.squareup.okio.Buffer,int)>
<com.google.gson.Gson$3: void <init>(com.google.gson.Gson)>
<android.support.v4.content.ModernAsyncTask: void onPreExecute()>
<android.view.InputEvent: void <clinit>()>
<com.battlelancer.seriesguide.settings.GetGlueSettings: java.lang.String getAuthToken(android.content.Context)>
<com.battlelancer.seriesguide.extensions.GooglePlayExtension: void <init>()>
<com.google.android.gms.analytics.Tracker: void <init>(java.lang.String,com.google.android.gms.analytics.TrackerHandler,android.content.Context)>
<com.squareup.okhttp.internal.DiskLruCache$Entry: long access$1200(com.squareup.okhttp.internal.DiskLruCache$Entry)>
<android.support.v4.widget.DrawerLayout: boolean isDrawerVisible(android.view.View)>
<android.support.v4.widget.DrawerLayout$ViewDragCallback: boolean tryCaptureView(android.view.View,int)>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeCollectedType: int getLastWatchedEpisodeTvdbId()>
<com.google.api.client.repackaged.com.google.common.base.Throwables: void propagateIfPossible(java.lang.Throwable)>
<com.battlelancer.seriesguide.ui.ShowsActivity$2: void onQueryInventoryFinished(com.battlelancer.seriesguide.billing.IabResult,com.battlelancer.seriesguide.billing.Inventory)>
<android.support.v4.widget.DrawerLayout$ViewDragCallback: void closeOtherDrawer()>
<android.view.View: boolean isFocusableInTouchMode()>
<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>
<android.graphics.RectF: void set(float,float,float,float)>
<com.battlelancer.seriesguide.util.SelectionBuilder: void <init>()>
<com.battlelancer.seriesguide.ui.FirstRunFragment: boolean hasSeenFirstRunFragment(android.content.Context)>
<com.battlelancer.seriesguide.util.FlagTapedTask$1$1: void run()>
<java.lang.Object: java.lang.String toString()>
<com.google.android.gms.internal.hp: java.lang.String a(java.lang.String,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,java.lang.String)>
<android.support.v4.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Episodes: void <clinit>()>
<com.squareup.okhttp.internal.spdy.Spdy3$Writer: void connectionPreface()>
<com.squareup.okhttp.internal.http.AuthenticatorAdapter: com.squareup.okhttp.Request authenticate(java.net.Proxy,com.squareup.okhttp.Response)>
<android.support.v4.view.ViewCompat$GBViewCompatImpl: void <init>()>
<android.support.v4.app.FragmentManagerImpl: void attachFragment(android.support.v4.app.Fragment,int,int)>
<android.support.v4.view.ViewPager$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<com.battlelancer.seriesguide.util.DBUtils: void markNextEpisode(android.content.Context,int,int)>
<com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl: java.lang.String getContentType()>
<com.battlelancer.seriesguide.ui.ShowFragment$1: void onClick(android.view.View)>
<android.graphics.Canvas: void rotate(float)>
<com.battlelancer.seriesguide.util.TimeTools: java.lang.String formatToLocalReleaseDay(android.content.Context,int,java.util.Date)>
<com.squareup.picasso.Picasso: void submit(com.squareup.picasso.Action)>
<com.battlelancer.seriesguide.util.TaskManager: boolean isAddTaskRunning()>
<com.squareup.okhttp.internal.DiskLruCache$Editor: boolean access$2302(com.squareup.okhttp.internal.DiskLruCache$Editor,boolean)>
<com.jakewharton.trakt.Trakt: com.jakewharton.trakt.Trakt setAuthentication(java.lang.String,java.lang.String)>
<java.io.IOException: void <init>(java.lang.String)>
<android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<com.google.android.gms.internal.ii: boolean aD(int)>
<com.google.api.client.util.ArrayMap: java.lang.Object valueAtDataIndex(int)>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity: void onCancelTasks()>
<org.apache.http.client.methods.HttpTrace: void <init>(java.lang.String)>
<com.battlelancer.seriesguide.ui.SeasonsFragment$2: void onClick(android.view.View)>
<android.view.KeyEvent: boolean metaStateHasNoModifiers(int)>
<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.uwetrottmann.seriesguide.backend.movies.model.MovieList: com.google.api.client.util.GenericData clone()>
<com.google.api.client.googleapis.extensions.android.gms.auth.UserRecoverableAuthIOException: java.lang.Throwable getCause()>
<com.squareup.okhttp.internal.Util: void closeAll(java.io.Closeable,java.io.Closeable)>
<android.widget.LinearLayout: int getBaseline()>
<android.view.animation.AccelerateDecelerateInterpolator: void <init>()>
<android.support.v4.content.ModernAsyncTask: boolean cancel(boolean)>
<com.google.api.client.http.javanet.NetHttpTransport: com.google.api.client.http.LowLevelHttpRequest buildRequest(java.lang.String,java.lang.String)>
<android.support.v4.app.FragmentManagerImpl: void dispatchStop()>
<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>
<android.support.v4.view.ViewPager: android.os.Parcelable onSaveInstanceState()>
<android.support.v4.view.ViewPager: void completeScroll(boolean)>
<com.battlelancer.seriesguide.util.ShowTools: void uploadShowAsync(com.uwetrottmann.seriesguide.backend.shows.model.Show)>
<com.squareup.okhttp.internal.http.HttpConnection: com.squareup.okio.BufferedSource access$900(com.squareup.okhttp.internal.http.HttpConnection)>
<com.battlelancer.seriesguide.ui.OverviewFragment: void onToggleShowFavorited(android.view.View)>
<android.content.IntentFilter: void <clinit>()>
<uk.co.senab.photoview.gestures.CupcakeGestureDetector: void <init>(android.content.Context)>
<com.squareup.okio.Okio$1: void write(com.squareup.okio.Buffer,long)>
<java.net.HttpRetryException: void <init>(java.lang.String,int)>
<com.battlelancer.seriesguide.ui.BaseNavDrawerActivity: void <init>()>
<java.util.LinkedList: boolean add(java.lang.Object)>
<org.apache.http.message.BasicHttpRequest: void <init>(org.apache.http.RequestLine)>
<com.battlelancer.seriesguide.ui.StatsFragment$Stats: com.battlelancer.seriesguide.ui.StatsFragment$Stats episodesWatchedRuntime(long)>
<java.lang.Integer: java.lang.String toString(int,int)>
<java.io.PrintWriter: void <init>(java.io.Writer)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment$3: void onClick(android.view.View)>
<org.json.JSONArray: void <init>(java.util.Collection)>
<android.app.Activity: android.content.Intent getParentActivityIntent()>
<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>
<android.content.ContextWrapper: android.content.Context createPackageContext(java.lang.String,int)>
<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)>
<com.squareup.okio.AsyncTimeout$Watchdog: void run()>
<android.support.v4.view.ViewConfigurationCompatFroyo: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>
<com.squareup.okhttp.internal.DiskLruCache$Entry: void setLengths(java.lang.String[])>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Reader: void readPriority(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int)>
<com.google.android.gms.dynamic.h: void <init>(android.support.v4.app.Fragment)>
<java.util.AbstractList: java.util.List subList(int,int)>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Reader: void clearReferenceSet()>
<com.squareup.okhttp.internal.Util: boolean skipAll(com.squareup.okio.Source,int)>
<android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl: void startTracking(android.view.KeyEvent)>
<java.util.concurrent.locks.ReentrantLock: void unlock()>
<android.support.v4.widget.DrawerLayout: java.lang.String gravityToString(int)>
<com.battlelancer.seriesguide.adapters.PeopleAdapter: void setData(java.util.List)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: int getShowId()>
<com.google.api.client.googleapis.services.AbstractGoogleClientRequest$1: void <init>(com.google.api.client.googleapis.services.AbstractGoogleClientRequest,com.google.api.client.http.HttpResponseInterceptor,com.google.api.client.http.HttpRequest)>
<com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment: void onActivityCreated(android.os.Bundle)>
<com.mobeta.android.dslv.DragSortListView: int calcItemHeight(int,int)>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)>
<retrofit.RestAdapter$Builder: void <init>()>
<com.google.myjson.internal.bind.TypeAdapters$14: void <init>()>
<com.squareup.okio.Buffer: boolean exhausted()>
<android.widget.ScrollView: void requestDisallowInterceptTouchEvent(boolean)>
<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okio.Sink getSink()>
<com.battlelancer.seriesguide.ui.OverviewFragment: void onLoadTraktRatings(boolean)>
<com.battlelancer.seriesguide.widgets.SlidingTabStrip: int setColorAlpha(int,byte)>
<uk.co.senab.photoview.PhotoViewAttacher: android.widget.ImageView$ScaleType getScaleType()>
<com.squareup.okhttp.internal.DiskLruCache$Entry: java.lang.String getLengths()>
<com.mobeta.android.dslv.DragSortController: int viewIdHitPosition(android.view.MotionEvent,int)>
<com.jakewharton.trakt.services.MovieService$SeenMovie: void <init>(int)>
<com.squareup.picasso.AssetBitmapHunter: void <clinit>()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence)>
<com.squareup.okhttp.Response: void <init>(com.squareup.okhttp.Response$Builder,com.squareup.okhttp.Response$1)>
<android.support.v4.app.FragmentActivity: java.lang.String viewToString(android.view.View)>
<com.google.api.client.util.ArrayMap$EntryIterator: java.util.Map$Entry next()>
<com.google.myjson.stream.JsonReader: void beginArray()>
<android.os.Handler: void removeMessages(int,java.lang.Object)>
<android.support.v4.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>
<android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase: void abortAnimation(java.lang.Object)>
<de.greenrobot.event.BackgroundPoster: void enqueue(de.greenrobot.event.Subscription,java.lang.Object)>
<com.mobeta.android.dslv.DragSortController: void <init>(com.mobeta.android.dslv.DragSortListView,int,int,int,int)>
<com.squareup.picasso.BitmapHunter: android.graphics.Bitmap transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int)>
<com.squareup.okhttp.Response: com.squareup.okhttp.Response access$2000(com.squareup.okhttp.Response)>
<android.appwidget.AppWidgetProvider: void onDisabled(android.content.Context)>
<com.google.android.gms.analytics.t$1: void <init>(com.google.android.gms.analytics.t,java.util.Map)>
<org.apache.oltu.oauth2.client.OAuthClient: void <init>(org.apache.oltu.oauth2.client.HttpClient)>
<android.support.v4.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity: android.app.ProgressDialog getProgressDialog(int)>
<com.google.api.client.http.LowLevelHttpRequest: void setStreamingContent(com.google.api.client.util.StreamingContent)>
<android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.api.client.json.gson.GsonGenerator: void writeNumber(java.math.BigDecimal)>
<java.lang.StringBuffer: java.lang.String toString()>
<com.battlelancer.seriesguide.util.tasks.BaseHexagonMovieTask: java.lang.Object doInBackground(java.lang.Object[])>
<java.lang.Class: java.lang.Class getEnclosingClass()>
<android.support.v4.widget.DrawerLayout$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>
<com.squareup.okio.ForwardingSource: com.squareup.okio.Timeout timeout()>
<com.google.android.apps.dashclock.api.DashClockExtension: void <clinit>()>
<com.squareup.okhttp.internal.DiskLruCache$Editor: boolean[] access$1500(com.squareup.okhttp.internal.DiskLruCache$Editor)>
<android.content.ContextWrapper: void startActivities(android.content.Intent[])>
<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder add(java.lang.String,java.lang.String)>
<android.widget.TextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.support.v4.widget.ViewDragHelper$Callback: int getOrderedChildIndex(int)>
<com.battlelancer.seriesguide.settings.DisplaySettings: boolean isNoWatchedEpisodes(android.content.Context)>
<android.widget.ProgressBar: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.view.View: int getImportantForAccessibility()>
<org.apache.oltu.oauth2.common.parameters.QueryParameterApplier: void <init>()>
<com.google.api.client.http.HttpResponseException$Builder: void <init>(int,java.lang.String,com.google.api.client.http.HttpHeaders)>
<com.battlelancer.seriesguide.ui.TvdbAddFragment: void access$000(com.battlelancer.seriesguide.ui.TvdbAddFragment)>
<android.text.SpannableStringBuilder: void <init>()>
<com.battlelancer.seriesguide.ui.StatsFragment$Stats: void <init>(com.battlelancer.seriesguide.ui.StatsFragment$1)>
<com.battlelancer.seriesguide.util.FlagTapedTask: void execute(com.battlelancer.seriesguide.util.FlagTapedTask$Callback)>
<android.support.v4.app.NavUtilsJB: java.lang.String getParentActivityName(android.content.pm.ActivityInfo)>
<com.squareup.picasso.Utils: void log(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.squareup.picasso.Utils$BitmapHoneycombMR1: int getByteCount(android.graphics.Bitmap)>
<android.support.v4.view.ViewPager: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<com.squareup.okio.Timeout: long deadlineNanoTime()>
<android.content.ContextWrapper: boolean deleteFile(java.lang.String)>
<com.battlelancer.seriesguide.provider.SeriesGuideProvider: android.content.UriMatcher buildUriMatcher(android.content.Context)>
<retrofit.Endpoints$FixedEndpoint: void <init>(java.lang.String,java.lang.String)>
<com.google.android.gms.analytics.s: void cN()>
<java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>
<com.jakewharton.trakt.services.MovieService$Movie: void <init>(int)>
<com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator noFade()>
<android.widget.BaseAdapter: void notifyDataSetChanged()>
<com.squareup.okhttp.internal.spdy.SpdyConnection: com.squareup.okhttp.internal.spdy.Ping access$2200(com.squareup.okhttp.internal.spdy.SpdyConnection,int)>
<android.widget.ScrollView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.support.v4.util.LruCache: java.lang.Object create(java.lang.Object)>
<com.crashlytics.android.internal.D: void <init>()>
<com.google.android.gms.common.GooglePlayServicesUtil: void z(android.content.Context)>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout: void <init>(com.squareup.okhttp.internal.spdy.SpdyStream)>
<android.widget.ListView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.content.Context: java.lang.CharSequence getText(int)>
<timber.log.Timber: void i(java.lang.String,java.lang.Object[])>
<com.squareup.okhttp.CacheControl: boolean onlyIfCached()>
<com.battlelancer.seriesguide.ui.PersonActivity: void setupActionBar()>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment$4: void <init>(com.battlelancer.seriesguide.ui.EpisodeDetailsFragment,int)>
<com.squareup.okhttp.internal.http.SpdyTransport: void emptyTransferStream()>
<com.uwetrottmann.seriesguide.backend.episodes.model.EpisodeList: void <init>()>
<android.support.v4.app.NotificationCompat$Style: void <init>()>
<com.battlelancer.seriesguide.items.Series: void setGenres(java.lang.String)>
<android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase: java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int)>
<android.support.v4.app.NotificationCompatJellybean: android.app.Notification build()>
<com.battlelancer.seriesguide.util.PeopleListHelper: java.util.List transformCastToPersonList(java.util.List)>
<com.google.api.client.repackaged.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>
<com.squareup.picasso.Utils$OkHttpLoaderCreator: com.squareup.picasso.Downloader create(android.content.Context)>
<com.battlelancer.seriesguide.util.DBUtils: java.lang.String buildNextEpisodeSelection(boolean,boolean)>
<android.support.v4.widget.DrawerLayout$ViewDragCallback$1: void <init>(android.support.v4.widget.DrawerLayout$ViewDragCallback)>
<android.app.Activity: void onPause()>
<android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity: android.widget.TextView access$200(com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity)>
<java.util.zip.Inflater: boolean needsInput()>
<android.support.v4.app.Fragment: android.view.View getView()>
<com.crashlytics.android.internal.z: java.io.File getFilesDir()>
<android.support.v4.app.Fragment: void performStop()>
<java.util.concurrent.SynchronousQueue: void <init>()>
<com.squareup.okhttp.internal.spdy.Spdy3: void <clinit>()>
<com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl: void setRequestMethod(java.lang.String)>
<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder addLine(java.lang.String)>
<com.squareup.okhttp.internal.http.OkHeaders: java.lang.String buildCookieHeader(java.util.List)>
<com.battlelancer.seriesguide.ui.EpisodesFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.google.api.client.http.AbstractHttpContent: void <init>(com.google.api.client.http.HttpMediaType)>
<android.support.v4.widget.DrawerLayout$ViewDragCallback: void <init>(android.support.v4.widget.DrawerLayout,int)>
<android.widget.TextView: void onScrollChanged(int,int,int,int)>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment$3: void <init>(com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment)>
<android.graphics.Matrix: boolean postTranslate(float,float)>
<android.app.Notification$Builder: android.app.Notification$Builder setWhen(long)>
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: java.lang.Object newAccessiblityDelegateDefaultImpl()>
<com.mobeta.android.dslv.SimpleFloatViewManager: android.view.View onCreateFloatView(int)>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<org.apache.http.params.HttpConnectionParams: void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)>
<com.battlelancer.seriesguide.util.SystemUiHiderBase: void hide()>
<com.google.android.gms.analytics.ae: void <clinit>()>
<android.app.Activity: void onResume()>
<java.util.LinkedList: boolean addAll(java.util.Collection)>
<java.lang.String: java.lang.String trim()>
<android.support.v4.view.KeyEventCompat: boolean hasModifiers(android.view.KeyEvent,int)>
<com.google.android.gms.common.GooglePlayServicesRepairableException: void <init>(int,java.lang.String,android.content.Intent)>
<android.app.Activity: void runOnUiThread(java.lang.Runnable)>
<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder headers(com.squareup.okhttp.Headers)>
<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>
<com.battlelancer.seriesguide.util.EpisodeTools$SeasonType: java.util.List getEpisodesForTrakt()>
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int)>
<com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getToken(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle)>
<com.battlelancer.seriesguide.ui.ListsActivity: void onStart()>
<com.squareup.okhttp.OkHttpClient: void <clinit>()>
<com.battlelancer.seriesguide.util.FlagTapeEntryQueue: com.battlelancer.seriesguide.util.FlagTapeEntryQueue getInstance(android.content.Context)>
<android.widget.ProgressBar: void <init>(android.content.Context)>
<android.support.v4.widget.DrawerLayout$ViewDragCallback: int clampViewPositionVertical(android.view.View,int,int)>
<de.greenrobot.event.EventBus: void unregister(java.lang.Object)>
<com.squareup.okio.SegmentPool: void <clinit>()>
<java.util.Calendar: java.util.Calendar getInstance()>
<android.support.v4.util.SparseArrayCompat: void <clinit>()>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment: void <init>()>
<android.widget.AbsListView: void requestLayout()>
<com.battlelancer.seriesguide.extensions.ExtensionManager$EpisodeActionReceivedEvent: void <init>(int)>
<com.squareup.okhttp.internal.DiskLruCache: com.squareup.okhttp.internal.DiskLruCache$Snapshot get(java.lang.String)>
<com.squareup.okhttp.Cache: java.net.CacheRequest access$000(com.squareup.okhttp.Cache,com.squareup.okhttp.Response)>
<com.battlelancer.seriesguide.util.TimeTools: java.lang.String formatToDate(android.content.Context,java.util.Date)>
<com.squareup.okhttp.Cache$CacheResponseBody$1: void close()>
<com.battlelancer.seriesguide.util.PeopleListHelper: void populateCast(android.content.Context,android.view.LayoutInflater,android.view.ViewGroup,com.uwetrottmann.tmdb.entities.Credits,com.battlelancer.seriesguide.ui.PeopleActivity$MediaType)>
<com.google.android.gms.analytics.s$c: void <init>(com.google.android.gms.analytics.s,com.google.android.gms.analytics.s$1)>
<android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)>
<android.view.animation.AnimationSet: void <init>(boolean)>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential: com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential usingAudience(android.content.Context,java.lang.String)>
<com.battlelancer.seriesguide.ui.FullscreenImageActivity: com.battlelancer.seriesguide.util.SystemUiHider access$100(com.battlelancer.seriesguide.ui.FullscreenImageActivity)>
<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>
<com.squareup.okhttp.internal.spdy.IncomingStreamHandler$1: void <init>()>
<android.view.View: void setOnLongClickListener(android.view.View$OnLongClickListener)>
<android.view.View: void setFocusable(boolean)>
<com.google.android.gms.analytics.Tracker: boolean dz()>
<android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>
<org.apache.oltu.oauth2.client.OAuthClient: org.apache.oltu.oauth2.client.response.OAuthAccessTokenResponse accessToken(org.apache.oltu.oauth2.client.request.OAuthClientRequest,java.lang.String,java.lang.Class)>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment$3: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<com.google.android.gms.common.GooglePlayServicesUtil: void <clinit>()>
<com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity$4: void <init>(com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity,android.content.Context)>
<android.support.v4.view.ViewPager: void initViewPager()>
<com.battlelancer.seriesguide.ui.MoviesSearchFragment: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
<com.mobeta.android.dslv.DragSortListView: void adjustAllItems()>
<com.google.android.gms.analytics.c: void connect()>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder: fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder gradients(boolean)>
<com.battlelancer.seriesguide.ui.StatsFragment$StatsTask: void <init>(com.battlelancer.seriesguide.ui.StatsFragment)>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean access$202(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink,boolean)>
<com.squareup.picasso.AssetBitmapHunter: android.graphics.Bitmap decode(com.squareup.picasso.Request)>
<com.google.api.client.util.LoggingStreamingContent: void writeTo(java.io.OutputStream)>
<com.squareup.picasso.Dispatcher: void dispatchCancel(com.squareup.picasso.Action)>
<com.battlelancer.seriesguide.util.TimeTools: void applyCustomCorrections(java.util.Calendar,int,java.lang.String)>
<com.battlelancer.seriesguide.util.DBUtils: long updateLatestEpisode(android.content.Context,java.lang.Integer)>
<com.squareup.picasso.Request$Builder: void <init>(android.net.Uri,int)>
<com.battlelancer.seriesguide.adapters.TabStripAdapter: void addTab(int,java.lang.Class,android.os.Bundle)>
<java.util.ArrayList: void <init>(int)>
<com.google.android.gms.common.GooglePlayServicesUtil: java.lang.String d(android.content.Context,int)>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity: java.io.File getBackupFolder()>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment$1: void onClick(android.view.View)>
<java.lang.Object: void notify()>
<com.google.api.client.googleapis.services.AbstractGoogleClient: com.google.api.client.http.HttpRequestFactory getRequestFactory()>
<uk.co.senab.photoview.PhotoViewAttacher: void resetMatrix()>
<com.google.android.gms.analytics.HitBuilders$EventBuilder: void <init>()>
<com.battlelancer.seriesguide.ui.MoviesSearchFragment: void search()>
<java.io.Reader: int read(char[])>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Shows: android.net.Uri buildShowUri(int)>
<android.view.accessibility.AccessibilityEvent: int getEventType()>
<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>
<com.battlelancer.seriesguide.billing.Purchase: java.lang.String getToken()>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: long read(com.squareup.okio.Buffer,long)>
<android.support.v4.widget.DrawerLayout: void onLayout(boolean,int,int,int,int)>
<com.battlelancer.seriesguide.util.TmdbTools: java.lang.String buildProfileImageUrl(android.content.Context,java.lang.String,com.battlelancer.seriesguide.util.TmdbTools$ProfileImageSize)>
<com.squareup.okhttp.internal.spdy.SpdyConnection$7: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],int,com.squareup.okhttp.internal.spdy.ErrorCode)>
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)>
<android.widget.ListView: int getDividerHeight()>
<com.squareup.picasso.BitmapHunter: void calculateInSampleSize(int,int,android.graphics.BitmapFactory$Options)>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter open(int,java.lang.String)>
<com.google.android.gms.common.GooglePlayServicesUtil: boolean showErrorDialogFragment(int,android.app.Activity,int,android.content.DialogInterface$OnCancelListener)>
<java.io.BufferedWriter: void write(int)>
<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String,com.crashlytics.android.internal.i)>
<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m,java.lang.String)>
<android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri,boolean)>
<com.crashlytics.android.internal.b: void <init>(com.crashlytics.android.internal.m)>
<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<com.squareup.okhttp.internal.http.SpdyTransport: void <clinit>()>
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>
<com.google.api.client.http.LowLevelHttpRequest: void setContentType(java.lang.String)>
<com.battlelancer.seriesguide.api.SeriesGuideExtension: void loadSubscriptions()>
<android.support.v4.widget.ViewDragHelper: void setDragState(int)>
<com.google.android.gms.plus.PlusOneButton: void setOnPlusOneClickListener(com.google.android.gms.plus.PlusOneButton$OnPlusOneClickListener)>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setPriority(int)>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment: void onCreate(android.os.Bundle)>
<android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>
<de.greenrobot.event.EventBus: void subscribe(java.lang.Object,de.greenrobot.event.SubscriberMethod,boolean,int)>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Writer: void writeHeaders(java.util.List)>
<com.google.android.gms.common.UserRecoverableException: void <init>(java.lang.String,android.content.Intent)>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<android.widget.TextView: int computeVerticalScrollExtent()>
<android.support.v4.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>
<com.battlelancer.seriesguide.ui.ActivityFragment: void <init>()>
<com.google.android.gms.internal.he: android.content.Intent fA()>
<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>
<com.battlelancer.seriesguide.ui.dialogs.ListManageDialogFragment$1: void onClick(android.view.View)>
<retrofit.Platform$AppEngine: void <init>()>
<com.squareup.okhttp.Response: com.squareup.okhttp.Request access$1100(com.squareup.okhttp.Response)>
<android.view.View: int getVisibility()>
<android.support.v4.app.FragmentManagerImpl$5: void <init>(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.Fragment)>
<com.battlelancer.seriesguide.dataliberation.JsonImportTask: java.lang.Object doInBackground(java.lang.Object[])>
<android.support.v4.widget.ViewDragHelper: void reportNewEdgeDrags(float,float,int)>
<com.squareup.okhttp.Cache: void abortQuietly(com.squareup.okhttp.internal.DiskLruCache$Editor)>
<de.greenrobot.event.ThreadMode: void <clinit>()>
<com.battlelancer.seriesguide.util.EpisodeTools$FlagType: void storeLastEpisode()>
<com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment: void onActivityCreated(android.os.Bundle)>
<com.battlelancer.seriesguide.ui.PeopleFragment: void onCreate(android.os.Bundle)>
<java.io.InterruptedIOException: void <init>()>
<com.google.myjson.internal.bind.TypeAdapters$24: void <init>()>
<com.battlelancer.seriesguide.ui.ShowFragment$ShowQuery: void <clinit>()>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>
<uk.co.senab.photoview.Compat: void postOnAnimationJellyBean(android.view.View,java.lang.Runnable)>
<com.squareup.okhttp.CacheControl: boolean noStore()>
<com.google.gson.Gson: void <init>()>
<java.io.FileNotFoundException: void <init>(java.lang.String)>
<com.squareup.okhttp.internal.Platform$Android: void <init>(java.lang.Class,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)>
<com.google.gson.Gson: com.google.gson.TypeAdapter doubleAdapter(boolean)>
<com.google.android.gms.common.a: android.os.IBinder ew()>
<android.support.v4.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<java.net.URLConnection: java.lang.String getContentType()>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment: void shout()>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment: void <init>()>
<java.io.ByteArrayOutputStream: void write(int)>
<com.google.android.gms.plus.PlusOneDummyView$b: boolean isValid()>
<com.google.api.client.util.ArrayMap: void setData(int,java.lang.Object,java.lang.Object)>
<com.google.api.client.util.ClassInfo: void <init>(java.lang.Class,boolean)>
<com.squareup.okio.Buffer: int read(byte[],int,int)>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
<com.squareup.okhttp.internal.http.CacheStrategy$Factory: void <init>(long,com.squareup.okhttp.Request,com.squareup.okhttp.Response)>
<com.google.android.gms.dynamic.c$a: void <init>()>
<android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>
<com.google.api.client.http.apache.ApacheHttpResponse: java.io.InputStream getContent()>
<com.battlelancer.seriesguide.adapters.BaseShowsAdapter: void <init>(android.content.Context,android.database.Cursor,int)>
<android.support.v4.view.ViewPager: void onRestoreInstanceState(android.os.Parcelable)>
<android.provider.MediaStore$Images$Thumbnails: void <clinit>()>
<com.battlelancer.seriesguide.ui.ShowsActivity: void setUpActionBar()>
<com.battlelancer.seriesguide.settings.WidgetSettings: int getWidgetListType(android.content.Context,int)>
<com.battlelancer.seriesguide.extensions.ExtensionManager: void enableExtension(android.content.ComponentName)>
<android.support.v4.app.LoaderManagerImpl: android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>
<com.google.gson.internal.ConstructorConstructor: void <init>(java.util.Map)>
<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSink: void <init>(com.squareup.okhttp.internal.http.HttpConnection)>
<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a(android.app.Activity)>
<com.google.android.gms.analytics.r$2: void <init>(com.google.android.gms.analytics.r)>
<com.squareup.okhttp.OkUrlFactory: java.net.HttpURLConnection open(java.net.URL,java.net.Proxy)>
<com.google.api.client.googleapis.services.AbstractGoogleClient$Builder: void <init>(com.google.api.client.http.HttpTransport,java.lang.String,java.lang.String,com.google.api.client.util.ObjectParser,com.google.api.client.http.HttpRequestInitializer)>
<android.support.v4.widget.DrawerLayout: void <init>(android.content.Context)>
<com.google.myjson.internal.bind.TimeTypeAdapter$1: void <init>()>
<com.battlelancer.seriesguide.appwidget.ListWidgetService: void <init>()>
<com.squareup.okio.AsyncTimeout: com.squareup.okio.Source source(com.squareup.okio.Source)>
<com.squareup.okhttp.OkHttpClient: void setReadTimeout(long,java.util.concurrent.TimeUnit)>
<com.battlelancer.seriesguide.appwidget.ListWidgetService$ListRemoteViewsFactory: void <init>(com.battlelancer.seriesguide.appwidget.ListWidgetService,android.content.Context,android.content.Intent)>
<android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: int findPointerIndex(android.view.MotionEvent,int)>
<com.battlelancer.seriesguide.service.NotificationService: void resetLastEpisodeAirtime(android.content.SharedPreferences)>
<android.support.v4.view.ViewPager: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
<android.support.v4.app.FragmentPagerAdapter: void <init>(android.support.v4.app.FragmentManager)>
<java.util.logging.Logger: void <clinit>()>
<java.lang.Double: java.lang.Double valueOf(java.lang.String)>
<android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>
<android.view.ViewGroup$MarginLayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<java.lang.Class: java.lang.String toString()>
<android.app.Dialog: void hide()>
<android.os.BaseBundle: int getInt(java.lang.String,int)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>
<com.squareup.okio.Util: short reverseBytesShort(short)>
<uk.co.senab.photoview.PhotoViewAttacher$AnimatedZoomRunnable: void <init>(uk.co.senab.photoview.PhotoViewAttacher,float,float,float,float)>
<com.battlelancer.seriesguide.extensions.EpisodeActionsHelper$2: void onClick(android.view.View)>
<com.google.android.gms.analytics.HitBuilders$EventBuilder: com.google.android.gms.analytics.HitBuilders$EventBuilder setAction(java.lang.String)>
<com.google.api.client.util.Data: boolean isNull(java.lang.Object)>
<com.squareup.okio.Okio$2: void <init>(com.squareup.okio.Timeout,java.io.InputStream)>
<android.support.v4.widget.DrawerLayout: void computeScroll()>
<com.google.api.client.http.LowLevelHttpRequest: void setContentEncoding(java.lang.String)>
<com.battlelancer.seriesguide.ui.ConnectTraktFinishedFragment: void <init>()>
<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>
<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Connection close()>
<com.google.api.client.http.HttpResponseException$Builder: com.google.api.client.http.HttpResponseException$Builder setContent(java.lang.String)>
<android.view.ViewGroup: boolean hasFocus()>
<com.squareup.okhttp.internal.spdy.SpdyStream: boolean isOpen()>
<java.lang.ThreadLocal: java.lang.Object get()>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void onResume()>
<org.json.JSONObject: void <clinit>()>
<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: void readChunkSize()>
<com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl: java.io.InputStream getInputStream()>
<android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread: int getCurrX(java.lang.Object)>
<com.battlelancer.seriesguide.util.TraktTask: com.battlelancer.seriesguide.util.TraktTask collectionRemoveMovie(int)>
<com.battlelancer.seriesguide.util.Utils: java.lang.String getEpisodeNumber(android.content.Context,int,int)>
<android.widget.ListView: android.widget.Adapter getAdapter()>
<com.battlelancer.seriesguide.extensions.ExtensionManager: void clearEpisodeActionsCache()>
<android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
<com.squareup.okhttp.internal.http.OkHeaders$1: void <init>()>
<com.crashlytics.android.internal.p: boolean isInitialized()>
<com.squareup.okio.Okio$2: com.squareup.okio.Timeout timeout()>
<com.google.gson.stream.JsonReader: int getColumnNumber()>
<com.squareup.okio.Okio$2: void close()>
<java.lang.Double: void <clinit>()>
<android.util.TypedValue: void <init>()>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences: void onStop()>
<uk.co.senab.photoview.PhotoViewAttacher$AnimatedZoomRunnable: void run()>
<java.math.BigDecimal: int hashCode()>
<com.mobeta.android.dslv.R$styleable: void <clinit>()>
<com.battlelancer.seriesguide.ui.ActivityFragment: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<com.squareup.okio.GzipSource: com.squareup.okio.Timeout timeout()>
<com.squareup.okhttp.internal.DiskLruCache$Entry: void <init>(com.squareup.okhttp.internal.DiskLruCache,java.lang.String)>
<com.jakewharton.trakt.services.ShowService$Episodes$Episode: void <init>(int,int)>
<com.google.api.client.util.GenericData$EntrySet: void <init>(com.google.api.client.util.GenericData)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$7: void onLoadFinished(android.support.v4.content.Loader,com.battlelancer.seriesguide.items.MovieDetails)>
<com.uwetrottmann.seriesguide.backend.shows.ShowsRequest: com.google.api.client.googleapis.services.AbstractGoogleClient getAbstractGoogleClient()>
<com.google.api.client.util.DataMap$EntryIterator: void <init>(com.google.api.client.util.DataMap)>
<android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)>
<android.graphics.Matrix: void set(android.graphics.Matrix)>
<com.squareup.okhttp.internal.http.RouteSelector: com.squareup.okhttp.Route nextPostponed()>
<com.battlelancer.seriesguide.util.EpisodeTools$FlagType: void <init>(android.content.Context,int)>
<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.ConnectionPool getConnectionPool()>
<android.view.DragEvent: void <clinit>()>
<com.google.myjson.internal.bind.TypeAdapters$25: void <init>()>
<java.util.TreeSet: boolean isEmpty()>
<com.google.android.gms.analytics.r: void dispatchLocalHits()>
<android.widget.RemoteViews: void <clinit>()>
<android.widget.TextView: void setMinHeight(int)>
<com.google.api.client.http.HttpRequest: int getContentLoggingLimit()>
<android.support.v4.util.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<com.google.api.client.json.JsonGenerator: void <init>()>
<com.squareup.okhttp.internal.spdy.SpdyStream: void access$900(com.squareup.okhttp.internal.spdy.SpdyStream)>
<com.google.android.gms.analytics.o: java.lang.String x(int)>
<com.battlelancer.seriesguide.ui.ConnectTraktFragment: void onStart()>
<com.google.api.client.json.gson.GsonParser: java.math.BigDecimal getDecimalValue()>
<com.battlelancer.seriesguide.ui.ListsFragment$ListItemAdapter: void <init>(com.battlelancer.seriesguide.ui.ListsFragment,android.content.Context,android.database.Cursor,int)>
<com.battlelancer.seriesguide.billing.Inventory: void <init>()>
<com.google.android.gms.analytics.ac: int ds()>
<android.graphics.Matrix$ScaleToFit: void <clinit>()>
<com.uwetrottmann.seriesguide.backend.episodes.EpisodesRequest: com.uwetrottmann.seriesguide.backend.episodes.EpisodesRequest setDisableGZipContent(boolean)>
<android.support.v4.app.ActionBarDrawerToggle: void setActionBarUpIndicator(android.graphics.drawable.Drawable,int)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void addBytesToWriteWindow(long)>
<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
<android.app.Notification$Builder: android.app.Notification$Builder setLargeIcon(android.graphics.Bitmap)>
<com.battlelancer.seriesguide.ui.dialogs.CheckInDialogFragment: void handleGetGlueToggle(boolean)>
<com.battlelancer.seriesguide.ui.dialogs.MovieCheckInDialogFragment: boolean setupCheckInGetGlue()>
<org.json.JSONArray: java.lang.String toString()>
<com.mobeta.android.dslv.DragSortListView: int getShuffleEdge(int,int)>
<android.app.Notification$Builder: android.app.Notification build()>
<com.google.myjson.stream.JsonWriter: boolean isLenient()>
<android.webkit.JsResult: void cancel()>
<com.battlelancer.seriesguide.util.EpisodeTools: void validateFlags(int)>
<com.battlelancer.seriesguide.ui.ConnectTraktFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<android.support.v4.widget.ViewDragHelper: void setMinVelocity(float)>
<com.squareup.okhttp.internal.http.HttpConnection: com.squareup.okio.BufferedSink access$200(com.squareup.okhttp.internal.http.HttpConnection)>
<com.squareup.okhttp.internal.spdy.SpdyStream: boolean isLocallyInitiated()>
<com.battlelancer.seriesguide.backend.HexagonTools: com.uwetrottmann.seriesguide.backend.movies.Movies getMoviesService(android.content.Context)>
<com.squareup.okhttp.CacheControl: int maxAgeSeconds()>
<android.support.v4.widget.EdgeEffectCompatIcs: void setSize(java.lang.Object,int,int)>
<com.battlelancer.seriesguide.ui.ShowFragment: void onActivityCreated(android.os.Bundle)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>
<com.google.gson.stream.JsonWriter: void beforeValue(boolean)>
<android.support.v4.widget.ViewDragHelper: void <init>(android.content.Context,android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback)>
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: boolean canScrollHorizontally(android.view.View,int)>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder set(java.lang.String,java.lang.String)>
<android.view.View: void requestLayout()>
<uk.co.senab.photoview.PhotoViewAttacher: boolean checkMatrixBounds()>
<android.support.v4.app.FragmentManagerImpl: void enqueueAction(java.lang.Runnable,boolean)>
<com.google.api.client.util.escape.PercentEscaper: int nextEscapeIndex(java.lang.CharSequence,int,int)>
<com.battlelancer.seriesguide.ui.OverviewFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<java.util.Calendar: void setTimeInMillis(long)>
<android.widget.Button: void <init>(android.content.Context)>
<android.support.v4.app.BackStackRecord: void addOp(android.support.v4.app.BackStackRecord$Op)>
<android.widget.Scroller: void <init>(android.content.Context)>
<com.battlelancer.seriesguide.util.PeopleListHelper: void addShowAllView(android.view.LayoutInflater,android.view.ViewGroup,android.view.View$OnClickListener)>
<com.battlelancer.seriesguide.ui.StatsFragment$Stats: com.battlelancer.seriesguide.ui.StatsFragment$Stats showsContinuing(int)>
<com.battlelancer.seriesguide.ui.streams.FriendsMovieStreamFragment: void <init>()>
<com.battlelancer.seriesguide.billing.IabHelper: void logDebug(java.lang.String)>
<com.squareup.okhttp.internal.http.RouteSelector: void resetNextTlsVersion()>
<com.google.android.gms.analytics.ac: java.lang.String v(java.util.Map)>
<android.widget.ListView: void onFinishInflate()>
<com.squareup.okio.DeflaterSink: void close()>
<com.google.api.client.util.DateTime: void <init>(boolean,long,java.lang.Integer)>
<com.battlelancer.seriesguide.ui.OverviewFragment$11: void <init>(com.battlelancer.seriesguide.ui.OverviewFragment)>
<com.jakewharton.trakt.services.MovieService$MovieCheckin: void <init>(int,java.lang.String,java.lang.String,java.lang.String)>
<com.battlelancer.seriesguide.util.TimeTools: java.lang.String formatToRelativeLocalReleaseTime(android.content.Context,java.util.Date)>
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>
<android.database.SQLException: void <init>()>
<java.util.AbstractMap: void <init>()>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void onLoaderReset(android.support.v4.content.Loader)>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpRequest setResponseInterceptor(com.google.api.client.http.HttpResponseInterceptor)>
<com.google.gson.internal.bind.TypeAdapters$31: void <init>(java.lang.Class,com.google.gson.TypeAdapter)>
<android.view.animation.AccelerateDecelerateInterpolator: float getInterpolation(float)>
<java.util.Arrays: void fill(int[],int)>
<com.squareup.okio.InflaterSource: long read(com.squareup.okio.Buffer,long)>
<com.battlelancer.seriesguide.service.NotificationService: void <init>()>
<com.battlelancer.seriesguide.util.TimeTools: void setUserOffset(android.content.Context,java.util.Calendar)>
<java.lang.Short: void <clinit>()>
<com.squareup.okhttp.Cache$CacheResponseBody$1: void <init>(com.squareup.okhttp.Cache$CacheResponseBody,com.squareup.okio.Source,com.squareup.okhttp.internal.DiskLruCache$Snapshot)>
<android.widget.EdgeEffect: void onRelease()>
<java.lang.Throwable: void printStackTrace()>
<android.view.View: void setVisibility(int)>
<com.battlelancer.seriesguide.ui.dialogs.RemoveCloudAccountDialogFragment$1: void onClick(android.content.DialogInterface,int)>
<com.battlelancer.seriesguide.util.TraktTask: com.battlelancer.seriesguide.util.TraktTask checkInEpisode(int,int,int,java.lang.String)>
<android.support.v4.util.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)>
<com.squareup.okio.Buffer: java.lang.String readString(long,java.nio.charset.Charset)>
<com.google.android.gms.analytics.Tracker: void setScreenName(java.lang.String)>
<android.widget.TextView: void setTypeface(android.graphics.Typeface)>
<com.google.api.client.json.gson.GsonGenerator: void writeString(java.lang.String)>
<android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase: int getCurrX(java.lang.Object)>
<com.google.android.gms.analytics.aj: boolean dK()>
<com.squareup.okio.Buffer: void flush()>
<com.google.myjson.Gson$FutureTypeAdapter: void <init>()>
<com.google.api.client.http.EmptyContent: java.lang.String getType()>
<com.google.android.gms.analytics.GoogleAnalytics: void dj()>
<com.squareup.okhttp.internal.http.CacheStrategy: void <init>(com.squareup.okhttp.Request,com.squareup.okhttp.Response)>
<com.squareup.okhttp.Cache: void access$200(com.squareup.okhttp.Cache,com.squareup.okhttp.Response,com.squareup.okhttp.Response)>
<android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>
<android.util.Log: boolean isLoggable(java.lang.String,int)>
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)>
<com.squareup.okhttp.internal.spdy.Spdy3$Reader: java.io.IOException ioException(java.lang.String,java.lang.Object[])>
<com.squareup.okhttp.Response$Builder: int access$200(com.squareup.okhttp.Response$Builder)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$3: void onClick(android.view.View)>
<com.battlelancer.seriesguide.getglueapi.GetGlueAuthActivity: void onCreate(android.os.Bundle)>
<com.google.myjson.stream.JsonWriter: com.google.myjson.stream.JsonWriter open(int,java.lang.String)>
<com.battlelancer.seriesguide.adapters.GetGlueObjectAdapter: void <clinit>()>
<java.io.PrintWriter: void println(java.lang.Object)>
<com.battlelancer.seriesguide.ui.StatsFragment$StatsTask: com.battlelancer.seriesguide.ui.StatsFragment$Stats doInBackground(java.lang.Void[])>
<org.apache.oltu.oauth2.client.request.OAuthClientRequest: java.util.Map getHeaders()>
<com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>
<com.battlelancer.seriesguide.ui.ShowFragment: android.database.Cursor access$402(com.battlelancer.seriesguide.ui.ShowFragment,android.database.Cursor)>
<com.squareup.okhttp.internal.http.SpdyTransport: void writeRequestBody(com.squareup.okhttp.internal.http.RetryableSink)>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeAction: com.battlelancer.seriesguide.util.EpisodeTools$EpisodeAction[] values()>
<com.squareup.okio.ByteString: com.squareup.okio.ByteString decodeBase64(java.lang.String)>
<com.battlelancer.seriesguide.ui.OverviewFragment$9: void onClick(android.view.View)>
<com.google.android.gms.common.SignInButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.mobeta.android.dslv.DragSortListView: void updateScrollStarts()>
<org.apache.oltu.oauth2.common.message.types.ResponseType: void <init>(java.lang.String,int,java.lang.String)>
<android.support.v4.os.ParcelableCompat$CompatCreator: void <init>(android.support.v4.os.ParcelableCompatCreatorCallbacks)>
<com.google.api.client.json.GenericJson: com.google.api.client.util.GenericData clone()>
<com.google.api.client.json.JsonParser: java.lang.Object parseAndClose(java.lang.Class,com.google.api.client.json.CustomizeJsonParser)>
<com.google.gson.stream.JsonWriter: void writeDeferredName()>
<android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2: void <init>()>
<android.support.v4.content.IntentCompat$IntentCompatImplHC: void <init>()>
<com.google.gson.FieldNamingPolicy: void <init>(java.lang.String,int,com.google.gson.FieldNamingPolicy$1)>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Reader: void readIndexedHeader(int)>
<android.support.v4.app.TaskStackBuilder: void <init>(android.content.Context)>
<android.widget.FrameLayout: void setVisibility(int)>
<com.squareup.okhttp.internal.http.HttpEngine: void writingRequestHeaders()>
<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.View: int[] getDrawableState()>
<com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment$2: void <init>(com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment)>
<android.content.Intent: android.content.Intent setFlags(int)>
<com.crashlytics.android.internal.B: void <init>(com.crashlytics.android.internal.m)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences: void setupBasicSettings(android.app.Activity,android.content.Intent,android.preference.Preference,android.preference.Preference,android.preference.Preference,android.preference.Preference,android.preference.Preference,android.preference.Preference)>
<android.view.ScaleGestureDetector: boolean onTouchEvent(android.view.MotionEvent)>
<android.support.v4.widget.DrawerLayout: void onAttachedToWindow()>
<android.support.v4.util.SimpleArrayMap: int indexOfNull()>
<android.view.View: void onDraw(android.graphics.Canvas)>
<com.google.android.gms.plus.PlusOneDummyView$a: void <init>(android.content.Context,com.google.android.gms.plus.PlusOneDummyView$1)>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void finishRetain()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>
<com.squareup.picasso.LruCache: void <init>(int)>
<com.squareup.okhttp.internal.spdy.SpdyStream: void <init>(int,com.squareup.okhttp.internal.spdy.SpdyConnection,boolean,boolean,java.util.List)>
<android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: int getPointerId(android.view.MotionEvent,int)>
<android.support.v4.app.FragmentActivity: void onDestroy()>
<android.support.v4.widget.ViewDragHelper: android.view.View getCapturedView()>
<com.battlelancer.seriesguide.util.PeopleListHelper: void populateShowCrew(android.content.Context,android.view.LayoutInflater,android.view.ViewGroup,com.uwetrottmann.tmdb.entities.Credits)>
<com.battlelancer.seriesguide.widgets.SlidingTabLayout: void <init>(android.content.Context)>
<android.view.View: void getLocationOnScreen(int[])>
<com.google.android.gms.internal.ho: void b(android.content.res.Resources,int,int)>
<com.squareup.okhttp.OkHttpClient$1: void <init>()>
<com.google.api.client.googleapis.services.AbstractGoogleClient$Builder: com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setRootUrl(java.lang.String)>
<android.widget.OverScroller: void forceFinished(boolean)>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment$4: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<com.google.android.gms.analytics.t: void p(java.util.Map)>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void priority(int,int,int,boolean)>
<com.squareup.okhttp.internal.spdy.HeadersMode: boolean failIfHeadersAbsent()>
<com.battlelancer.seriesguide.ui.OverviewFragment$10: void onSuccess()>
<java.util.Timer: void cancel()>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpContent getContent()>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.squareup.picasso.PicassoDrawable: void <init>(android.content.Context,android.graphics.Bitmap,android.graphics.drawable.Drawable,com.squareup.picasso.Picasso$LoadedFrom,boolean,boolean)>
<com.crashlytics.android.internal.A: void <init>()>
<android.support.v4.widget.ViewDragHelper: boolean checkTouchSlop(int,int)>
<android.widget.ScrollView: void requestLayout()>
<com.google.android.gms.common.SignInButton: void setStyle(int,int)>
<com.battlelancer.seriesguide.enums.TraktAction: void <init>(java.lang.String,int)>
<java.io.OutputStream: void <init>()>
<android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl: boolean metaStateHasNoModifiers(int)>
<com.uwetrottmann.seriesguide.backend.episodes.Episodes$Builder: com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setServicePath(java.lang.String)>
<com.battlelancer.seriesguide.util.TraktTask: com.jakewharton.trakt.entities.Response doMovieAction(com.jakewharton.trakt.Trakt)>
<uk.co.senab.photoview.PhotoViewAttacher: android.graphics.Matrix getDrawMatrix()>
<android.widget.ScrollView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<com.battlelancer.seriesguide.backend.CloudSetupFragment$2: void <init>(com.battlelancer.seriesguide.backend.CloudSetupFragment)>
<com.google.android.gms.analytics.r$1: void <init>(com.google.android.gms.analytics.r)>
<com.mobeta.android.dslv.DragSortListView$DropAnimator: int getTargetY()>
<com.google.api.client.json.gson.GsonGenerator: void writeNumber(java.math.BigInteger)>
<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: com.squareup.okhttp.Headers getHeaders()>
<com.battlelancer.seriesguide.ui.StatsFragment$Stats: com.battlelancer.seriesguide.ui.StatsFragment$Stats shows(int)>
<com.battlelancer.seriesguide.ui.PeopleFragment: void access$200(com.battlelancer.seriesguide.ui.PeopleFragment,boolean)>
<com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment: void access$300(com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment)>
<com.battlelancer.seriesguide.provider.SeriesGuideProvider$1: void <init>(com.battlelancer.seriesguide.provider.SeriesGuideProvider)>
<java.util.AbstractCollection: boolean isEmpty()>
<com.google.api.client.googleapis.services.AbstractGoogleClient: void <init>(com.google.api.client.googleapis.services.AbstractGoogleClient$Builder)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$8: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity: android.widget.EditText access$000(com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity)>
<android.support.v4.app.LoaderManagerImpl: void <init>(java.lang.String,android.support.v4.app.FragmentActivity,boolean)>
<com.squareup.okhttp.internal.http.CacheStrategy$Factory: boolean isFreshnessLifetimeHeuristic()>
<com.readystatesoftware.systembartint.SystemBarTintManager$SystemBarConfig: int getInternalDimensionSize(android.content.res.Resources,java.lang.String)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment: void onStart()>
<com.battlelancer.seriesguide.provider.SeriesGuideProvider: java.lang.String getType(android.net.Uri)>
<com.google.android.gms.dynamic.g$a: void <init>(java.lang.String,java.lang.Throwable)>
<com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator resize(int,int)>
<com.google.gson.internal.bind.TypeAdapters$17: void <init>()>
<java.io.BufferedInputStream: int read()>
<android.content.Intent: void <init>(java.lang.String)>
<android.widget.ImageButton: void <init>(android.content.Context)>
<com.google.api.client.http.HttpResponse: java.io.InputStream getContent()>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool()>
<com.battlelancer.seriesguide.Constants$EpisodeSorting: com.battlelancer.seriesguide.Constants$EpisodeSorting fromValue(java.lang.String)>
<android.widget.ScrollView: void onOverScrolled(int,int,boolean,boolean)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$7: void <init>(android.content.Context)>
<java.util.TreeMap: java.lang.Object remove(java.lang.Object)>
<com.google.android.gms.analytics.v$a: void a(java.lang.String,int)>
<com.squareup.okhttp.internal.DiskLruCache: void checkNotClosed()>
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>
<com.squareup.okhttp.internal.spdy.Settings: boolean isSet(int)>
<com.squareup.okio.Buffer: com.squareup.okio.Buffer writeString(java.lang.String,java.nio.charset.Charset)>
<android.support.v4.view.ViewCompat$ICSViewCompatImpl: boolean canScrollHorizontally(android.view.View,int)>
<com.battlelancer.seriesguide.util.AddShowTask: void <init>(android.content.Context,java.util.List,boolean,boolean)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Seasons: android.net.Uri buildSeasonUri(java.lang.String)>
<com.battlelancer.seriesguide.ui.ShowsFragment$ShowsAdapter$2: void <init>(com.battlelancer.seriesguide.ui.ShowsFragment$ShowsAdapter,boolean,boolean,int,int)>
<com.google.api.client.json.JsonFactory: java.lang.String toString(java.lang.Object,boolean)>
<android.support.v4.widget.DrawerLayout: void dispatchOnDrawerClosed(android.view.View)>
<com.battlelancer.seriesguide.ui.dialogs.CheckInDialogFragment: void setupButtonFixGetGlue(android.view.View)>
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl: void <init>()>
<com.google.api.client.http.json.JsonHttpContent: com.google.api.client.http.json.JsonHttpContent setWrapperKey(java.lang.String)>
<android.support.v4.app.ListFragment: void <init>()>
<com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity: void setupViews()>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>
<com.battlelancer.seriesguide.ui.EpisodesActivity: int access$600(com.battlelancer.seriesguide.ui.EpisodesActivity,int)>
<java.lang.AssertionError: void <init>()>
<android.view.View: android.os.IBinder getWindowToken()>
<com.google.android.gms.analytics.g: void <init>(android.content.Context)>
<com.squareup.okhttp.internal.http.RequestLine: java.lang.String requestPath(java.net.URL)>
<com.squareup.okhttp.internal.DiskLruCache: boolean access$200(com.squareup.okhttp.internal.DiskLruCache)>
<com.google.gson.internal.bind.TypeAdapters$29: void <init>(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)>
<com.google.myjson.internal.bind.TypeAdapters$13: void <init>()>
<com.battlelancer.seriesguide.backend.HexagonTools: com.uwetrottmann.seriesguide.backend.episodes.Episodes getEpisodesService(android.content.Context)>
<android.app.Activity: android.view.MenuInflater getMenuInflater()>
<com.squareup.okhttp.Cache$Entry: boolean matches(com.squareup.okhttp.Request,com.squareup.okhttp.Response)>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: void setProtocols(java.lang.String,boolean)>
<java.util.ArrayList: boolean add(java.lang.Object)>
<com.google.android.gms.internal.hn: com.google.android.gms.internal.hj N(android.os.IBinder)>
<com.google.android.gms.analytics.ac: void a(java.lang.String[])>
<android.support.v4.app.FragmentManager: void <init>()>
<java.util.zip.Deflater: void end()>
<org.apache.http.entity.AbstractHttpEntity: void <init>()>
<de.greenrobot.event.EventBus: void unubscribeByEventType(java.lang.Object,java.lang.Class)>
<com.battlelancer.seriesguide.appwidget.ListWidgetPreferenceFragment: com.battlelancer.seriesguide.appwidget.ListWidgetPreferenceFragment newInstance(int)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsActivity: void setCustomTheme()>
<com.squareup.picasso.MediaStoreBitmapHunter$PicassoKind: void <init>(java.lang.String,int,int,int,int)>
<java.lang.reflect.Array: int getLength(java.lang.Object)>
<com.uwetrottmann.androidutils.GenericSimpleLoader: void <init>(android.content.Context)>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment: com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment newInstanceEpisode(int,int,int)>
<android.support.v4.app.FragmentManagerImpl: void dispatchReallyStop()>
<org.apache.http.client.methods.HttpRequestBase: void setURI(java.net.URI)>
<com.google.api.client.http.HttpMediaType: boolean equalsIgnoreParameters(java.lang.String,java.lang.String)>
<com.battlelancer.seriesguide.util.TimeTools: java.lang.String formatToLocalReleaseDay(java.util.Date)>
<android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: float getX(android.view.MotionEvent,int)>
<com.battlelancer.seriesguide.adapters.MoviesCursorAdapter: com.battlelancer.seriesguide.adapters.MoviesCursorAdapter$PopupMenuClickListener access$000(com.battlelancer.seriesguide.adapters.MoviesCursorAdapter)>
<com.squareup.okio.Timeout$1: void <init>()>
<android.support.v4.app.NavUtils$NavUtilsImplJB: android.content.Intent getParentActivityIntent(android.app.Activity)>
<android.graphics.Matrix: void finalize()>
<retrofit.Utils: void validateServiceClass(java.lang.Class)>
<com.battlelancer.seriesguide.appwidget.ListWidgetConfigure: void onUpdateWidget()>
<com.google.android.gms.analytics.r: void a(android.content.Context,com.google.android.gms.analytics.f)>
<android.widget.TextView: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>
<com.google.android.gms.plus.PlusOneDummyView$c: boolean isValid()>
<com.google.android.gms.analytics.s: void cQ()>
<com.google.myjson.Gson$5: void <init>(com.google.myjson.Gson)>
<com.squareup.okio.AsyncTimeout$1: com.squareup.okio.Timeout timeout()>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter name(java.lang.String)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment: void onDestroyView()>
<com.google.gson.stream.JsonWriter: void string(java.lang.String)>
<android.app.Notification$Builder: android.app.Notification$Builder setOngoing(boolean)>
<android.support.v4.view.ViewPager: void requestParentDisallowInterceptTouchEvent(boolean)>
<android.support.v4.app.NavUtils$NavUtilsImplJB: java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo)>
<com.battlelancer.seriesguide.ui.ShowFragment: java.lang.String access$800(com.battlelancer.seriesguide.ui.ShowFragment)>
<android.view.KeyEvent: int getAction()>
<android.support.v4.app.ActivityOptionsCompatJB: void <init>(android.app.ActivityOptions)>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<android.graphics.Canvas: void <init>()>
<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>
<android.support.v4.content.WakefulBroadcastReceiver: void <clinit>()>
<android.widget.TextView: float getLeftFadingEdgeStrength()>
<com.battlelancer.seriesguide.billing.Base64: void <clinit>()>
<com.battlelancer.seriesguide.ui.EpisodesFragment$1: void <init>(com.battlelancer.seriesguide.ui.EpisodesFragment,int,int,long)>
<com.google.api.client.util.LoggingStreamingContent: void <init>(com.google.api.client.util.StreamingContent,java.util.logging.Logger,java.util.logging.Level,int)>
<butterknife.ButterKnife$Finder: void <init>(java.lang.String,int,butterknife.ButterKnife$1)>
<com.battlelancer.seriesguide.billing.IabHelper: int getResponseCodeFromBundle(android.os.Bundle)>
<android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)>
<com.battlelancer.seriesguide.service.TraktFlagService: void onCreate()>
<com.battlelancer.seriesguide.ui.ShowsActivity: void onStart()>
<com.squareup.okhttp.internal.NamedRunnable: void <init>(java.lang.String,java.lang.Object[])>
<android.support.v4.content.Loader: void deliverResult(java.lang.Object)>
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: void postOnAnimation(android.view.View,java.lang.Runnable)>
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>
<com.uwetrottmann.seriesguide.backend.shows.Shows: com.uwetrottmann.seriesguide.backend.shows.Shows$Save save(com.uwetrottmann.seriesguide.backend.shows.model.ShowList)>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment$1: void <init>(com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment)>
<java.lang.String: java.lang.String intern()>
<com.crashlytics.android.internal.y: void <clinit>()>
<com.mobeta.android.dslv.DragSortListView: void doDragFloatView(boolean)>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder: com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setRootUrl(java.lang.String)>
<android.support.v4.app.DialogFragment: void onActivityCreated(android.os.Bundle)>
<com.battlelancer.seriesguide.util.ServiceUtils: void setUpTvdbButton(int,int,int,android.view.View,java.lang.String)>
<com.google.api.client.http.HttpRequest: void <init>(com.google.api.client.http.HttpTransport,java.lang.String)>
<com.battlelancer.seriesguide.ui.EpisodesActivity: int getPositionForEpisode(int)>
<com.google.api.client.http.AbstractHttpContent: long computeLength(com.google.api.client.http.HttpContent)>
<com.battlelancer.seriesguide.ui.ShowsActivity: void onResume()>
<com.squareup.okhttp.internal.tls.DistinguishedNameParser: java.lang.String escapedAV()>
<com.jakewharton.trakt.Trakt$1: void <init>(com.jakewharton.trakt.Trakt)>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder: fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder backgroundDrawable(android.graphics.drawable.Drawable)>
<com.battlelancer.seriesguide.ui.AddFragment$1: void <init>(com.battlelancer.seriesguide.ui.AddFragment)>
<android.support.v4.view.ViewPager: void setScrollState(int)>
<uk.co.senab.photoview.log.LoggerDefault: void <init>()>
<com.battlelancer.seriesguide.ui.EpisodesActivity: android.support.v4.view.ViewPager access$100(com.battlelancer.seriesguide.ui.EpisodesActivity)>
<android.support.v4.app.LoaderManagerImpl: void doStart()>
<android.support.v4.content.Loader: void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener)>
<android.widget.TextView: boolean isPaddingOffsetRequired()>
<android.content.Intent: android.content.Intent setType(java.lang.String)>
<com.battlelancer.seriesguide.loaders.ShowCreditsLoader: void <init>(android.content.Context,int,boolean)>
<com.google.android.gms.internal.gz: void <init>(android.support.v4.app.Fragment,android.content.Intent,int)>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder: fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder interpolator(android.view.animation.Interpolator)>
<com.squareup.picasso.Picasso: void <init>(android.content.Context,com.squareup.picasso.Dispatcher,com.squareup.picasso.Cache,com.squareup.picasso.Picasso$Listener,com.squareup.picasso.Picasso$RequestTransformer,com.squareup.picasso.Stats,boolean,boolean)>
<android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: void finish(java.lang.Object)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment: void onToggleWatched()>
<com.google.android.gms.common.GooglePlayServicesUtil: byte[] au(java.lang.String)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Lists: void <clinit>()>
<android.util.SparseBooleanArray: void append(int,boolean)>
<com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment: void onStart()>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Writer: void goAway(int,com.squareup.okhttp.internal.spdy.ErrorCode,byte[])>
<android.widget.TextView: boolean onCheckIsTextEditor()>
<com.google.api.client.util.DataMap: void <init>(java.lang.Object,boolean)>
<com.squareup.okio.Buffer: com.squareup.okio.Segment writableSegment(int)>
<android.support.v4.app.Fragment: void setRetainInstance(boolean)>
<com.battlelancer.seriesguide.dataliberation.JsonExportTask: void addSeasons(com.battlelancer.seriesguide.dataliberation.model.Show)>
<com.battlelancer.seriesguide.ui.ShowsFragment: void updateEmptyView()>
<com.google.api.client.http.LowLevelHttpRequest: long getContentLength()>
<com.battlelancer.seriesguide.backend.CloudSetupFragment: void access$100(com.battlelancer.seriesguide.backend.CloudSetupFragment)>
<com.battlelancer.seriesguide.ui.OverviewActivity: java.util.ArrayList getActiveFragments()>
<android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread: void <init>()>
<java.lang.Object: int hashCode()>
<java.util.Collections: void sort(java.util.List,java.util.Comparator)>
<com.battlelancer.seriesguide.billing.Security: java.security.PublicKey generatePublicKey(java.lang.String)>
<android.preference.Preference: android.content.Context getContext()>
<android.os.HandlerThread: void run()>
<android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: boolean onRelease(java.lang.Object)>
<com.battlelancer.seriesguide.ui.ShowsActivity: void registerEventBus()>
<android.widget.RemoteViews: void removeAllViews(int)>
<com.google.api.client.googleapis.extensions.android.gms.auth.UserRecoverableAuthIOException: com.google.android.gms.auth.GoogleAuthException getCause()>
<java.io.OutputStream: void flush()>
<org.json.JSONTokener: java.lang.Object nextValue()>
<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>
<com.battlelancer.seriesguide.dataliberation.DataLiberationFragment: android.os.AsyncTask access$102(com.battlelancer.seriesguide.dataliberation.DataLiberationFragment,android.os.AsyncTask)>
<com.jakewharton.trakt.Trakt: com.jakewharton.trakt.services.ShowService showService()>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeAction: void <clinit>()>
<com.battlelancer.seriesguide.ui.ShowsActivity: void disposeIabHelper()>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Writer: void <init>(com.squareup.okio.BufferedSink,boolean)>
<com.battlelancer.seriesguide.ui.PeopleActivity$MediaType: java.lang.String toString()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.myjson.internal.$Gson$Types$WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>
<com.squareup.okhttp.CacheControl: int sMaxAgeSeconds()>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: void setRequestMethod(java.lang.String)>
<android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb: android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle)>
<android.support.v4.widget.DrawerLayout: void dispatchOnDrawerOpened(android.view.View)>
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>
<com.google.android.gms.analytics.HitBuilders$EventBuilder: com.google.android.gms.analytics.HitBuilders$EventBuilder setCategory(java.lang.String)>
<android.support.v4.content.AsyncTaskLoader: void <init>(android.content.Context)>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment$10: void <init>(com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment)>
<com.google.api.client.http.UriTemplate$CompositeOutput: java.lang.String getOutputPrefix()>
<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder: fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder colors(int[])>
<android.support.v4.app.FragmentActivity: void onBackPressed()>
<com.battlelancer.seriesguide.util.FlagTapeEntryQueue: void startService()>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Protocol access$100(com.squareup.okhttp.Response$Builder)>
<android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread: boolean computeScrollOffset(java.lang.Object)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences: void resetAndRunNotificationsService(android.content.Context)>
<com.battlelancer.seriesguide.ui.FullscreenImageActivity: void onDetachedFromWindow()>
<com.google.api.client.http.json.JsonHttpContent: void <init>(com.google.api.client.json.JsonFactory,java.lang.Object)>
<com.uwetrottmann.seriesguide.backend.movies.model.Movie: void <init>()>
<java.util.AbstractSet: void <init>()>
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: void <init>()>
<org.apache.oltu.oauth2.client.request.OAuthClientRequest: void <init>(java.lang.String)>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response access$700(com.squareup.okhttp.Response$Builder)>
<java.io.InputStream: void reset()>
<com.squareup.okhttp.internal.spdy.SpdyStream: void receiveFin()>
<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Headers$Builder access$200(com.squareup.okhttp.Request$Builder)>
<com.squareup.okhttp.Connection: void <init>(com.squareup.okhttp.ConnectionPool,com.squareup.okhttp.Route)>
<com.mobeta.android.dslv.DragSortListView: int access$1300(com.mobeta.android.dslv.DragSortListView)>
<android.os.Handler: boolean hasMessages(int)>
<android.graphics.Color: int argb(int,int,int,int)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Episodes: android.net.Uri buildEpisodesOfSeasonUri(java.lang.String)>
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>
<java.net.Socket: boolean isClosed()>
<de.greenrobot.event.PendingPost: de.greenrobot.event.PendingPost obtainPendingPost(de.greenrobot.event.Subscription,java.lang.Object)>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter)>
<android.support.v4.app.FragmentManagerImpl: void popBackStack()>
<com.squareup.okhttp.internal.DiskLruCache: com.squareup.okhttp.internal.DiskLruCache$Editor access$1600(com.squareup.okhttp.internal.DiskLruCache,java.lang.String,long)>
<com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: int hashCode()>
<com.squareup.picasso.Stats: void <init>(com.squareup.picasso.Cache)>
<com.squareup.okhttp.internal.http.HttpTransport: com.squareup.okhttp.Response$Builder readResponseHeaders()>
<com.jakewharton.trakt.TraktHelper$8: void <init>()>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.FragmentTransaction beginTransaction()>
<java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<com.squareup.okhttp.internal.DiskLruCache$Entry: long access$1202(com.squareup.okhttp.internal.DiskLruCache$Entry,long)>
<com.battlelancer.seriesguide.appwidget.ListWidgetProvider: void <init>()>
<com.battlelancer.seriesguide.settings.NotificationSettings: long getNextToNotifyAbout(android.content.Context)>
<com.google.api.client.http.HttpResponseException$Builder: com.google.api.client.http.HttpResponseException$Builder setStatusCode(int)>
<com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver: void register()>
<android.graphics.RectF: float height()>
<com.readystatesoftware.systembartint.SystemBarTintManager$SystemBarConfig: int getNavigationBarWidth(android.content.Context)>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment: void <init>()>
<com.google.android.gms.analytics.h: java.lang.Object a(com.google.android.gms.analytics.h)>
<android.support.v4.view.ViewPager: int getChildDrawingOrder(int,int)>
<com.squareup.okhttp.internal.tls.DistinguishedNameParser: java.lang.String findMostSpecific(java.lang.String)>
<com.battlelancer.seriesguide.billing.IabHelper: boolean handleActivityResult(int,int,android.content.Intent)>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeFlagTask: void <init>(android.content.Context,com.battlelancer.seriesguide.util.EpisodeTools$FlagType)>
<com.squareup.okhttp.internal.DiskLruCache$Editor$FaultHidingOutputStream: void <init>(com.squareup.okhttp.internal.DiskLruCache$Editor,java.io.OutputStream)>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void ping(boolean,int,int)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$1: void <init>(com.battlelancer.seriesguide.ui.MovieDetailsFragment)>
<com.google.android.gms.analytics.ac: void a(java.util.Map,java.util.Collection)>
<com.squareup.okhttp.Response: com.squareup.okhttp.Headers access$1600(com.squareup.okhttp.Response)>
<com.battlelancer.seriesguide.util.TaskManager: void performAddTask(com.battlelancer.seriesguide.items.SearchResult)>
<com.battlelancer.seriesguide.provider.SeriesGuideProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.widget.ListView: void layoutChildren()>
<com.battlelancer.seriesguide.util.PeopleListHelper: android.view.View createPersonView(android.content.Context,android.view.LayoutInflater,android.view.ViewGroup,java.lang.String,java.lang.String,java.lang.String)>
<com.squareup.okhttp.OkHttpClient: int getConnectTimeout()>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Reader: void adjustHeaderTableByteCount()>
<com.battlelancer.seriesguide.dataliberation.DataLiberationFragment$1: void onClick(android.view.View)>
<com.battlelancer.seriesguide.adapters.MoviesAdapter$1: void <init>(com.battlelancer.seriesguide.adapters.MoviesAdapter,int)>
<com.google.android.apps.dashclock.api.DashClockExtension: android.os.IBinder onBind(android.content.Intent)>
<com.squareup.okio.Buffer: com.squareup.okio.Timeout timeout()>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential: java.lang.String getSelectedAccountName()>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$9: void onLoadFinished(android.support.v4.content.Loader,com.uwetrottmann.tmdb.entities.Credits)>
<android.support.v4.widget.ScrollerCompatGingerbread: int getFinalX(java.lang.Object)>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment$2: void <init>(com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment)>
<com.jakewharton.trakt.TraktHelper$12: void <init>()>
<com.battlelancer.seriesguide.ui.ListsFragment$ListItemAdapter$PopupMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>
<com.battlelancer.seriesguide.ui.PeopleFragment: void setActivatedPosition(int)>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment: void checkIn()>
<com.battlelancer.seriesguide.loaders.EpisodeActionsLoader: void <init>(android.content.Context,int)>
<com.google.gson.Gson: com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy)>
<java.util.concurrent.CountDownLatch: void <init>(int)>
<com.google.api.client.http.UrlEncodedContent: void <init>(java.lang.Object)>
<java.lang.String: int length()>
<com.squareup.okhttp.ConnectionPool: void share(com.squareup.okhttp.Connection)>
<com.battlelancer.seriesguide.ui.ConnectTraktFragment$2: void onClick(android.view.View)>
<android.support.v4.app.FragmentManagerImpl: void startPendingDeferredFragments()>
<com.battlelancer.seriesguide.util.tasks.BaseHexagonMovieTask: void <init>(android.content.Context,int)>
<android.graphics.Matrix: void <init>()>
<android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl: void <init>()>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: java.lang.String responseSourceHeader(com.squareup.okhttp.Response)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void access$1300(com.squareup.okhttp.internal.spdy.SpdyConnection,int,java.util.List,boolean)>
<com.battlelancer.seriesguide.ui.OverviewFragment$6: void <init>(com.battlelancer.seriesguide.ui.OverviewFragment)>
<android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
<android.support.v4.util.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb: android.app.Notification build(android.support.v4.app.NotificationCompat$Builder)>
<com.squareup.okhttp.internal.http.HttpDate$1: void <init>()>
<org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()>
<com.squareup.picasso.RequestCreator: void <clinit>()>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder: fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable build()>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity$ImportDatabaseTask: void <init>(com.battlelancer.seriesguide.ui.BackupDeleteActivity)>
<com.squareup.okhttp.internal.BitArray$VariableCapacity: int checkInput(int)>
<com.battlelancer.seriesguide.util.Utils: boolean setLabelValueOrHide(android.view.View,android.widget.TextView,java.lang.String)>
<de.greenrobot.event.AsyncPoster: void enqueue(de.greenrobot.event.Subscription,java.lang.Object)>
<com.google.android.gms.analytics.h: com.google.android.gms.analytics.h cv()>
<android.app.Activity: void onActivityResult(int,int,android.content.Intent)>
<com.google.api.client.http.AbstractHttpContent: void <init>(java.lang.String)>
<com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder centerCrop()>
<android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: float getY(android.view.MotionEvent,int)>
<com.mobeta.android.dslv.DragSortController: boolean startDrag(int,int,int)>
<com.squareup.picasso.Action: com.squareup.picasso.Request getRequest()>
<com.google.myjson.internal.$Gson$Types: void <clinit>()>
<com.squareup.okhttp.internal.spdy.Header: java.lang.String toString()>
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment: com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment$OnAddShowListener access$100(com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment)>
<com.battlelancer.seriesguide.ui.OverviewFragment: void onEpisodeWatched()>
<android.support.v4.view.MotionEventCompat: void <clinit>()>
<com.battlelancer.seriesguide.sync.SgSyncAdapter: void setSyncAutomatically(android.content.Context,boolean)>
<android.support.v4.app.ShareCompat$IntentBuilder: void <init>(android.app.Activity)>
<com.battlelancer.seriesguide.dataliberation.JsonExportTask: void <init>(android.content.Context,com.battlelancer.seriesguide.interfaces.OnTaskProgressListener,com.battlelancer.seriesguide.interfaces.OnTaskFinishedListener,boolean,boolean)>
<com.battlelancer.seriesguide.ui.FirstRunFragment$2: void onClick(android.view.View)>
<android.os.BaseBundle: void <init>()>
<android.app.Activity: void onStop()>
<android.provider.MediaStore$Video$Thumbnails: void <clinit>()>
<java.util.HashMap: java.util.Collection values()>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment$3: void onLoadFinished(android.support.v4.content.Loader,com.battlelancer.seriesguide.dataliberation.model.Show)>
<com.squareup.okio.RealBufferedSink: void write(com.squareup.okio.Buffer,long)>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Writer: void <init>(com.squareup.okio.Buffer)>
<com.google.api.client.http.GenericUrl: java.net.URL toURL(java.lang.String)>
<android.support.v4.app.NotificationCompatJellybean: void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean)>
<com.squareup.picasso.Picasso: void enqueueAndSubmit(com.squareup.picasso.Action)>
<com.uwetrottmann.seriesguide.backend.episodes.model.Episode: com.uwetrottmann.seriesguide.backend.episodes.model.Episode setIsInCollection(java.lang.Boolean)>
<android.widget.ListView: void onSizeChanged(int,int,int,int)>
<com.battlelancer.seriesguide.ui.MovieDetailsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<com.battlelancer.seriesguide.ui.BaseNavDrawerActivity: void onConfigurationChanged(android.content.res.Configuration)>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int)>
<com.battlelancer.seriesguide.adapters.GetGlueObjectAdapter: void <init>(android.content.Context)>
<com.google.api.client.util.GenericData$EntryIterator: boolean hasNext()>
<android.view.View: int getMeasuredHeight()>
<com.squareup.okhttp.internal.tls.DistinguishedNameParser: char getEscaped()>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment$6: void <init>(com.battlelancer.seriesguide.ui.EpisodeDetailsFragment)>
<com.readystatesoftware.systembartint.SystemBarTintManager$SystemBarConfig: int getPixelInsetTop(boolean)>
<com.battlelancer.seriesguide.ui.ShowFragment$4: void <init>(com.battlelancer.seriesguide.ui.ShowFragment)>
<com.battlelancer.seriesguide.ui.OverviewFragment: void onLoadImage(java.lang.String)>
<android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)>
<com.google.api.client.http.HttpHeaders: java.lang.String getLocation()>
<android.support.v4.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>
<com.battlelancer.seriesguide.ui.MoviesSearchFragment: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
<com.squareup.okhttp.internal.Util: void closeQuietly(java.net.Socket)>
<com.battlelancer.seriesguide.ui.ShowFragment: void createShortcut()>
<com.squareup.picasso.Utils: java.io.File createDefaultCacheDir(android.content.Context)>
<android.support.v4.view.AccessibilityDelegateCompat: java.lang.Object getBridge()>
<org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>
<com.squareup.okhttp.internal.http.SpdyTransport$SpdySource: void <init>(com.squareup.okhttp.internal.spdy.SpdyStream,java.net.CacheRequest)>
<com.battlelancer.seriesguide.ui.OverviewFragment: void access$100(com.battlelancer.seriesguide.ui.OverviewFragment,java.lang.String)>
<com.mobeta.android.dslv.DragSortListView$RemoveAnimator: void onStart()>
<uk.co.senab.photoview.PhotoViewAttacher$1: void <init>(uk.co.senab.photoview.PhotoViewAttacher)>
<android.support.v4.app.NavUtils: android.content.Intent getParentActivityIntent(android.app.Activity)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: boolean access$300(com.battlelancer.seriesguide.ui.SeasonsFragment)>
<java.util.HashMap: java.util.Set keySet()>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient: com.google.api.client.json.JsonObjectParser getObjectParser()>
<com.google.myjson.internal.$Gson$Types$WildcardTypeImpl: int hashCode()>
<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>
<com.squareup.okhttp.OkHttpClient: java.net.ProxySelector getProxySelector()>
<com.battlelancer.seriesguide.util.DBUtils: void updateUnwatchedCount(android.content.Context,java.lang.String)>
<com.google.api.client.http.javanet.NetHttpResponse: int getHeaderCount()>
<com.google.android.gms.analytics.Tracker$a: long dy()>
<retrofit.client.OkClient: void <init>(com.squareup.okhttp.OkHttpClient)>
<java.io.PrintWriter: void println(boolean)>
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header[] getAllHeaders()>
<com.google.api.client.http.javanet.NetHttpResponse: java.lang.String getContentEncoding()>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<org.json.JSONArray: void <init>(java.lang.String)>
<com.readystatesoftware.systembartint.SystemBarTintManager$SystemBarConfig: int getActionBarHeight(android.content.Context)>
<com.squareup.okhttp.Headers: java.lang.String name(int)>
<java.io.EOFException: void <init>(java.lang.String)>
<com.battlelancer.seriesguide.util.ServiceUtils$2: void onClick(android.view.View)>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.battlelancer.seriesguide.util.TraktTask: com.battlelancer.seriesguide.util.TraktTask unwatchlistMovie(int)>
<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>
<com.battlelancer.seriesguide.ui.EpisodesActivity: void setupActionBar(com.battlelancer.seriesguide.items.Series)>
<android.app.Activity: void startActivities(android.content.Intent[],android.os.Bundle)>
<com.battlelancer.seriesguide.ui.FirstRunFragment: void setFirstRunDismissed()>
<com.squareup.okhttp.internal.http.StatusLine: com.squareup.okhttp.internal.http.StatusLine parse(java.lang.String)>
<com.squareup.picasso.Dispatcher: void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats)>
<com.battlelancer.seriesguide.util.EpisodeTools$SeasonType: void <init>(android.content.Context,int,int,int,int)>
<com.google.android.gms.analytics.Tracker: void enableExceptionReporting(boolean)>
<com.google.myjson.stream.JsonWriter: void beforeName()>
<android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl: float getYVelocity(android.view.VelocityTracker,int)>
<java.util.Random: int nextInt(int)>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment: void launchFixGetGlueCheckInActivity(android.view.View,int)>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence)>
<android.util.SparseIntArray: void <init>(int)>
<com.battlelancer.seriesguide.ui.OverviewFragment: android.widget.ImageView access$1000(com.battlelancer.seriesguide.ui.OverviewFragment)>
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
<com.google.android.gms.analytics.t: void cl()>
<com.battlelancer.seriesguide.ui.ShowFragment$8: void onLoaderReset(android.support.v4.content.Loader)>
<java.io.StringWriter: java.lang.String toString()>
<org.apache.oltu.oauth2.common.utils.OAuthUtils: void <clinit>()>
<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Request tunnelRequest(com.squareup.okhttp.Connection,com.squareup.okhttp.Request)>
<com.google.gson.internal.bind.TypeAdapters$27: void <init>(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter)>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder removeHeader(java.lang.String)>
<com.google.myjson.internal.bind.TypeAdapters: com.google.myjson.TypeAdapterFactory newFactory(java.lang.Class,com.google.myjson.TypeAdapter)>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment: java.util.List access$002(com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment,java.util.List)>
<android.support.v4.widget.DrawerLayout$ViewDragCallback: void removeCallbacks()>
<com.squareup.okhttp.internal.spdy.Http20Draft12: short access$300(com.squareup.okio.BufferedSource,byte)>
<com.squareup.okhttp.OkHttpClient$1: void setTimeouts(com.squareup.okhttp.Connection,int,int)>
<android.support.v4.app.Fragment: void setArguments(android.os.Bundle)>
<java.lang.StringBuilder: java.lang.StringBuilder append(double)>
<com.battlelancer.seriesguide.util.TimeTools: java.lang.String formatToLocalReleaseTime(android.content.Context,java.util.Date)>
<java.lang.String: byte[] getBytes()>
<android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase: boolean computeScrollOffset(java.lang.Object)>
<com.battlelancer.seriesguide.ui.dialogs.AddListDialogFragment$1: void <init>(com.battlelancer.seriesguide.ui.dialogs.AddListDialogFragment)>
<android.support.v4.app.NotificationCompatJellybean: void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence)>
<android.support.v4.widget.EdgeEffectCompatIcs: void finish(java.lang.Object)>
<com.battlelancer.seriesguide.util.SelectionBuilder: java.lang.String getSelection()>
<com.battlelancer.seriesguide.backend.CloudSetupFragment$4: void <init>(com.battlelancer.seriesguide.backend.CloudSetupFragment)>
<com.google.api.client.http.javanet.NetHttpResponse: java.lang.String getHeaderName(int)>
<android.support.v4.content.Loader: void onForceLoad()>
<com.squareup.picasso.ResourceBitmapHunter: void <init>(android.content.Context,com.squareup.picasso.Picasso,com.squareup.picasso.Dispatcher,com.squareup.picasso.Cache,com.squareup.picasso.Stats,com.squareup.picasso.Action)>
<com.battlelancer.seriesguide.util.ParserUtils: java.lang.String sanitizeId(java.lang.String)>
<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<com.google.android.gms.common.GooglePlayServicesUtil: byte[] a(android.content.pm.PackageInfo,byte[][])>
<com.battlelancer.seriesguide.getglueapi.GetGlueCheckin$GetGlueCheckInTask: void <init>(java.lang.String,java.lang.String,android.content.Context)>
<com.battlelancer.seriesguide.ui.FirstRunFragment$3: void <init>(com.battlelancer.seriesguide.ui.FirstRunFragment)>
<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>
<com.google.myjson.stream.JsonWriter: boolean isHtmlSafe()>
<com.battlelancer.seriesguide.util.Utils: boolean hasAccessToX(android.content.Context)>
<com.squareup.okio.Okio: com.squareup.okio.BufferedSource buffer(com.squareup.okio.Source)>
<android.support.v4.app.FragmentManagerImpl: void dispatchDestroyView()>
<com.battlelancer.seriesguide.Constants$SeasonSorting: java.lang.String toString()>
<com.battlelancer.seriesguide.adapters.SearchResultsAdapter: void <init>(android.content.Context,android.database.Cursor,int)>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment: void access$000(com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment,com.jakewharton.trakt.enumerations.Rating)>
<com.google.api.client.util.escape.CharEscapers: java.lang.String escapeUriPath(java.lang.String)>
<android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl: float getYVelocity(android.view.VelocityTracker,int)>
<com.google.gson.stream.JsonToken: void <clinit>()>
<android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>
<com.battlelancer.seriesguide.ui.ConnectTraktActivity: void setupActionBar()>
<com.jakewharton.trakt.TraktHelper$14: void <init>()>
<com.google.api.client.googleapis.services.AbstractGoogleClient: java.lang.String getBaseUrl()>
<com.uwetrottmann.seriesguide.backend.shows.ShowsRequest: void <init>(com.uwetrottmann.seriesguide.backend.shows.Shows,java.lang.String,java.lang.String,java.lang.Object,java.lang.Class)>
<retrofit.client.OkClient: com.squareup.okhttp.OkHttpClient generateDefaultOkHttp()>
<android.support.v4.app.Fragment: void onResume()>
<com.google.android.gms.analytics.o: java.lang.String u(int)>
<com.google.android.gms.internal.hm: void az(java.lang.String)>
<com.battlelancer.seriesguide.provider.SeriesGuideProvider$1: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<android.support.v4.app.LoaderManagerImpl: java.lang.String toString()>
<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>
<com.battlelancer.seriesguide.util.EpisodeTools: boolean isEpisodeExists(android.content.Context,int)>
<android.support.v4.widget.DrawerLayout: void onMeasure(int,int)>
<com.google.android.gms.analytics.t$4: void <init>(com.google.android.gms.analytics.t)>
<android.support.v4.app.Fragment: void onHiddenChanged(boolean)>
<com.battlelancer.seriesguide.ui.ShowsFragment$ShowsAdapter$PopupMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>
<com.battlelancer.seriesguide.util.EpisodeTools: boolean isUnwatched(int)>
<com.jakewharton.trakt.TraktHelper: void <clinit>()>
<com.google.android.gms.wallet.fragment.SupportWalletFragment$c: void onClick(android.view.View)>
<java.io.PrintWriter: void print(java.lang.String)>
<com.battlelancer.seriesguide.ui.BaseNavDrawerActivity: void openDrawer()>
<android.support.v4.content.ContextCompatHoneycomb: void startActivities(android.content.Context,android.content.Intent[])>
<com.battlelancer.seriesguide.items.Series: void setNextEpisode(long)>
<com.google.api.client.http.HttpResponseException$Builder: void <init>(com.google.api.client.http.HttpResponse)>
<com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void windowUpdate(int,long)>
<android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: boolean onRelease(java.lang.Object)>
<com.jakewharton.trakt.TraktHelper$16: void <init>()>
<java.util.LinkedHashMap: void <init>()>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment: com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment newInstanceShow(int)>
<com.battlelancer.seriesguide.provider.SeriesGuideProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<java.net.URI: java.net.URI create(java.lang.String)>
<com.google.api.client.http.EmptyContent: boolean retrySupported()>
<uk.co.senab.photoview.PhotoViewAttacher: android.widget.ImageView getImageView()>
<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder removeHeader(java.lang.String)>
<com.google.api.client.util.Types: java.lang.Class getRawClass(java.lang.reflect.ParameterizedType)>
<com.battlelancer.seriesguide.sync.SgSyncAdapter$SyncType: void <clinit>()>
<android.graphics.Matrix: boolean preScale(float,float)>
<com.squareup.okhttp.internal.RouteDatabase: boolean shouldPostpone(com.squareup.okhttp.Route)>
<com.battlelancer.seriesguide.util.TraktTask: com.battlelancer.seriesguide.util.TraktTask unwatchedMovie(int)>
<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback)>
<uk.co.senab.photoview.gestures.FroyoGestureDetector: void <init>(android.content.Context)>
<com.google.android.gms.common.GooglePlayServicesUtil: android.content.Intent Z(int)>
<com.battlelancer.seriesguide.settings.AdvancedSettings: boolean isSubscribedToX(android.content.Context)>
<com.squareup.okhttp.internal.http.SpdyTransport: java.util.List writeNameValueBlock(com.squareup.okhttp.Request,com.squareup.okhttp.Protocol,java.lang.String)>
<com.battlelancer.seriesguide.ui.PeopleFragment: void access$500(com.battlelancer.seriesguide.ui.PeopleFragment)>
<com.squareup.picasso.Picasso$1: void <init>(android.os.Looper)>
<com.google.api.client.json.gson.GsonFactory: com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.OutputStream,java.nio.charset.Charset)>
<com.jakewharton.trakt.enumerations.Rating: com.jakewharton.trakt.enumerations.Rating fromValue(java.lang.String)>
<com.squareup.tape.InMemoryObjectQueue: void remove()>
<com.squareup.okhttp.internal.DiskLruCache: void <clinit>()>
<com.squareup.picasso.Picasso$RequestTransformer: void <clinit>()>
<android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase: void <init>()>
<com.battlelancer.seriesguide.util.SystemUiHiderBase: void <init>(android.app.Activity,android.view.View,int)>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setSmallIcon(int)>
<com.battlelancer.seriesguide.ui.ShowsFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.battlelancer.seriesguide.ui.SeasonsFragment$1: void onClick(android.view.View)>
<com.google.api.client.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>
<android.support.v4.app.ActivityOptionsCompatJB: android.os.Bundle toBundle()>
<com.uwetrottmann.seriesguide.backend.movies.Movies: void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)>
<android.support.v4.view.ViewPager: int[] access$400()>
<android.support.v4.view.VelocityTrackerCompatHoneycomb: float getYVelocity(android.view.VelocityTracker,int)>
<com.squareup.okhttp.internal.http.RequestLine: boolean includeAuthorityInRequestLine(com.squareup.okhttp.Request,java.net.Proxy$Type)>
<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: void close()>
<java.io.File: boolean mkdirs()>
<com.google.api.client.http.EmptyContent: void writeTo(java.io.OutputStream)>
<com.squareup.okhttp.OkHttpClient$1: void connect(com.squareup.okhttp.Connection,int,int,int,com.squareup.okhttp.Request)>
<org.apache.http.params.HttpProtocolParams: void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion)>
<android.app.Activity: boolean isFinishing()>
<com.google.api.client.json.gson.GsonFactory: com.google.api.client.json.JsonParser createJsonParser(java.io.Reader)>
<uk.co.senab.photoview.PhotoViewAttacher: void update()>
<android.view.Gravity: int getAbsoluteGravity(int,int)>
<uk.co.senab.photoview.PhotoViewAttacher: boolean onTouch(android.view.View,android.view.MotionEvent)>
<com.battlelancer.seriesguide.ui.MoviesActivity: void onStart()>
<com.squareup.okio.Buffer: java.io.InputStream inputStream()>
<com.battlelancer.seriesguide.ui.ConnectTraktActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.gson.internal.$Gson$Types: java.lang.Class getRawType(java.lang.reflect.Type)>
<com.google.api.client.util.GenericData$Flags: void <clinit>()>
<android.support.v4.widget.DrawerLayout: void updateDrawerState(int,int,android.view.View)>
<com.battlelancer.seriesguide.ui.OverviewFragment: void loadEpisodeActionsDelayed()>
<android.content.ContextWrapper: java.io.File getCacheDir()>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpRequest setParser(com.google.api.client.util.ObjectParser)>
<com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl: java.io.InputStream getErrorStream()>
<com.battlelancer.seriesguide.util.TraktTools$1: void <clinit>()>
<java.util.TreeSet: void clear()>
<android.view.accessibility.AccessibilityNodeInfo: void <clinit>()>
<android.view.ViewGroup$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<com.battlelancer.seriesguide.adapters.TraktCommentsAdapter: void setData(java.util.List)>
<com.squareup.okhttp.internal.spdy.ErrorCode: com.squareup.okhttp.internal.spdy.ErrorCode fromHttp2(int)>
<com.google.api.client.http.UriTemplate: java.lang.String getListPropertyValue(java.lang.String,java.util.Iterator,boolean,com.google.api.client.http.UriTemplate$CompositeOutput)>
<java.util.LinkedList: java.lang.Object peek()>
<com.google.api.client.util.LoggingOutputStream: com.google.api.client.util.LoggingByteArrayOutputStream getLogStream()>
<com.google.api.client.json.gson.GsonParser: void <init>(com.google.api.client.json.gson.GsonFactory,com.google.gson.stream.JsonReader)>
<android.support.v4.view.ViewPager$3: void run()>
<com.squareup.okhttp.internal.BitArray$VariableCapacity: void <init>(com.squareup.okhttp.internal.BitArray$FixedCapacity,com.squareup.okhttp.internal.BitArray$1)>
<com.battlelancer.seriesguide.ui.FirstRunFragment$3: void onClick(android.view.View)>
<com.battlelancer.seriesguide.ui.OverviewFragment: void onCheckIn()>
<java.util.AbstractMap: void clear()>
<com.google.gson.internal.bind.TypeAdapters$30: void <init>(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)>
<com.squareup.okhttp.OkHttpClient$1: void closeIfOwnedBy(com.squareup.okhttp.Connection,java.lang.Object)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<android.content.Context: java.lang.String getString(int)>
<com.battlelancer.seriesguide.util.FlagTapedTask$1$2: void run()>
<android.widget.ScrollView: int computeVerticalScrollOffset()>
<java.util.LinkedHashSet: void <init>(java.util.Collection)>
<com.squareup.okhttp.Response: com.squareup.okhttp.Request request()>
<com.battlelancer.seriesguide.ui.OverviewFragment: void rateOnTrakt()>
<com.google.api.client.util.GenericData$EntrySet: java.util.Iterator iterator()>
<com.squareup.okio.Buffer: java.lang.String readUtf8(long)>
<com.google.api.client.util.ArrayValueMap$ArrayValue: void addValue(java.lang.Class,java.lang.Object)>
<com.squareup.okhttp.Cache: void trackResponse(com.squareup.okhttp.internal.http.CacheStrategy)>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.ScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeWatchedPreviousType: void <init>(android.content.Context,int,long)>
<com.uwetrottmann.seriesguide.backend.shows.Shows$Builder: void <init>(com.google.api.client.http.HttpTransport,com.google.api.client.json.JsonFactory,com.google.api.client.http.HttpRequestInitializer)>
<com.squareup.okhttp.internal.spdy.Http20Draft12: java.io.IOException access$200(java.lang.String,java.lang.Object[])>
<com.battlelancer.seriesguide.util.MovieTools: void addMovieAsync(android.content.Context,int,com.battlelancer.seriesguide.util.MovieTools$AddMovieTask$AddTo)>
<com.squareup.okhttp.internal.Internal: void <init>()>
<android.webkit.JsResult: void <init>()>
<com.battlelancer.seriesguide.api.Action$Builder: com.battlelancer.seriesguide.api.Action build()>
<com.google.gson.stream.JsonReader: void <init>(java.io.Reader)>
<com.google.android.gms.dynamic.a: void <init>()>
<android.support.v4.content.Loader$ForceLoadContentObserver: void <init>(android.support.v4.content.Loader)>
<com.google.api.client.googleapis.services.AbstractGoogleClientRequest: com.google.api.client.googleapis.services.AbstractGoogleClientRequest setDisableGZipContent(boolean)>
<com.squareup.okhttp.internal.Dns: void <clinit>()>
<android.graphics.Rect: void <init>()>
<com.battlelancer.seriesguide.billing.Base64: byte[] decode(byte[],int,int)>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: void setConnectTimeout(int)>
<com.battlelancer.seriesguide.ui.ShowsActivity: boolean onKeyLongPress(int,android.view.KeyEvent)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: boolean access$000(com.battlelancer.seriesguide.ui.SeasonsFragment)>
<com.google.api.client.util.DateTime: java.lang.String toStringRfc3339()>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment: void onStop()>
<com.battlelancer.seriesguide.items.Series: void setRating(java.lang.String)>
<com.battlelancer.seriesguide.util.SelectionBuilder: com.battlelancer.seriesguide.util.SelectionBuilder table(java.lang.String)>
<android.support.v4.app.NotificationCompatJellybean: void addAction(int,java.lang.CharSequence,android.app.PendingIntent)>
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
<java.lang.Thread: boolean interrupted()>
<com.squareup.picasso.RequestCreator$1: void <init>(java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.CountDownLatch)>
<com.google.api.client.util.ArrayMap$Entry: int hashCode()>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment: void populateMovieViews()>
<android.support.v4.app.Fragment: void onDetach()>
<java.net.Socket: boolean isOutputShutdown()>
<com.battlelancer.seriesguide.util.EpisodeTools$ShowType: android.content.ContentValues getContentValues()>
<com.squareup.okio.Buffer: long completeSegmentByteCount()>
<com.squareup.okhttp.internal.DiskLruCache: java.io.File access$1900(com.squareup.okhttp.internal.DiskLruCache)>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<com.battlelancer.seriesguide.util.TraktSummaryTask: java.lang.Object doInBackground(java.lang.Object[])>
<com.squareup.okio.Timeout: com.squareup.okio.Timeout timeout(long,java.util.concurrent.TimeUnit)>
<com.squareup.okhttp.internal.spdy.NameValueBlockReader: int access$000(com.squareup.okhttp.internal.spdy.NameValueBlockReader)>
<com.battlelancer.seriesguide.ui.dialogs.AddListDialogFragment: void <init>()>
<com.battlelancer.seriesguide.adapters.EpisodesAdapter$1: void onClick(android.view.View)>
<com.battlelancer.seriesguide.util.TraktTask: java.lang.Object doInBackground(java.lang.Object[])>
<android.app.Notification$Builder: android.app.Notification$Builder setDefaults(int)>
<com.battlelancer.seriesguide.ui.ShowsActivity$ShowsTabPageAdapter: void <init>(android.support.v4.app.FragmentManager,android.content.Context,android.support.v4.view.ViewPager,com.battlelancer.seriesguide.widgets.SlidingTabLayout)>
<com.battlelancer.seriesguide.ui.OverviewFragment: com.battlelancer.seriesguide.ui.OverviewFragment newInstance(int)>
<com.battlelancer.seriesguide.ui.ShowsActivity: void fireTrackerEvent(java.lang.String)>
<com.battlelancer.seriesguide.billing.IabHelper: int queryPurchases(com.battlelancer.seriesguide.billing.Inventory,java.lang.String)>
<android.support.v4.app.NavUtils$NavUtilsImplBase: java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo)>
<android.support.v4.util.SimpleArrayMap: java.lang.Object removeAt(int)>
<com.google.android.gms.analytics.ac: void a(java.util.Map,long,java.lang.String,java.util.Collection)>
<com.google.android.gms.common.GooglePlayServicesUtil: boolean b(android.content.res.Resources)>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest: void <init>(com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient,java.lang.String,java.lang.String,java.lang.Object,java.lang.Class)>
<com.battlelancer.seriesguide.ui.OverviewFragment$EpisodeQuery: void <clinit>()>
<java.io.OutputStreamWriter: void write(java.lang.String,int,int)>
<com.squareup.picasso.OkHttpDownloader: java.net.HttpURLConnection openConnection(android.net.Uri)>
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: long getFrameTime()>
<android.os.BaseBundle: int getInt(java.lang.String)>
<android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase: void <init>()>
<com.battlelancer.seriesguide.items.MovieDetails: com.jakewharton.trakt.entities.Movie traktMovie()>
<com.battlelancer.seriesguide.ui.EpisodesFragment: void onFlagEpisodeCollected(int,int,boolean)>
<com.crashlytics.android.Crashlytics: void start(android.content.Context)>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment: void onDestroyView()>
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.squareup.okhttp.Response: com.squareup.okhttp.Response access$1800(com.squareup.okhttp.Response)>
<com.squareup.okhttp.internal.spdy.NameValueBlockReader: com.squareup.okio.ByteString readByteString()>
<android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread: int getCurrY(java.lang.Object)>
<com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection: java.lang.String getResponseMessage()>
<java.util.AbstractSet: int hashCode()>
<com.google.api.client.util.ArrayMap$EntrySet: java.util.Iterator iterator()>
<android.app.Activity: void <clinit>()>
<com.squareup.okhttp.Connection: boolean clearOwner()>
<com.google.api.client.util.Types: java.lang.IllegalArgumentException handleExceptionForNewInstance(java.lang.Exception,java.lang.Class)>
<com.squareup.okhttp.internal.spdy.Http20Draft12: com.squareup.okhttp.internal.spdy.FrameWriter newWriter(com.squareup.okio.BufferedSink,boolean)>
<android.support.v4.util.LogWriter: void <init>(java.lang.String)>
<java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>
<com.google.android.gms.auth.GoogleAuthUtil: void invalidateToken(android.content.Context,java.lang.String)>
<com.uwetrottmann.androidutils.AndroidUtils: void executeOnPool(android.os.AsyncTask,java.lang.Object[])>
<com.google.api.client.repackaged.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>
<android.os.Handler: boolean post(java.lang.Runnable)>
<com.battlelancer.seriesguide.ui.ConnectTraktFragment$1: void <init>(com.battlelancer.seriesguide.ui.ConnectTraktFragment)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void onFlagShowCollected(boolean)>
<android.os.Handler: boolean sendEmptyMessage(int)>
<com.google.android.gms.dynamic.a$5: void onClick(android.view.View)>
<com.squareup.okhttp.internal.spdy.SpdyStream: void cancelStreamIfNecessary()>
<com.google.api.client.http.GenericUrl: void addQueryParams(java.util.Set,java.lang.StringBuilder)>
<com.battlelancer.seriesguide.sync.SgSyncService: void <init>()>
<com.battlelancer.seriesguide.ui.ActivityFragment: void updateEpisodeWatchedState(int,int,int,int,boolean)>
<com.battlelancer.seriesguide.items.Series: void setStatus(int)>
<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>
<com.squareup.okhttp.ConnectionPool$1: void <init>(com.squareup.okhttp.ConnectionPool)>
<com.battlelancer.seriesguide.ui.ShowsFragment: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<com.squareup.okio.RealBufferedSource: boolean exhausted()>
<com.crashlytics.android.internal.ab: int a(android.content.Context,java.lang.String,java.lang.String)>
<com.google.api.client.json.JsonObjectParser: void initializeParser(com.google.api.client.json.JsonParser)>
<com.google.gson.stream.JsonReader: void <clinit>()>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity: void setupActionBar()>
<java.io.OutputStreamWriter: void write(int)>
<com.battlelancer.seriesguide.ui.ShowFragment$6: void onClick(android.view.View)>
<com.battlelancer.seriesguide.ui.FirstRunFragment: void <init>()>
<android.widget.HorizontalScrollView: void setFillViewport(boolean)>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment: java.util.List access$000(com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment)>
<com.squareup.okio.Buffer$2: int read(byte[],int,int)>
<com.battlelancer.seriesguide.util.EpisodeTools: boolean isCollected(int)>
<android.app.IntentService: void onCreate()>
<com.battlelancer.seriesguide.util.EpisodeTools$SeasonType: android.net.Uri getUri()>
<com.battlelancer.seriesguide.util.MovieTools: java.lang.Boolean isMovieInList(android.content.Context,int,java.lang.String)>
<uk.co.senab.photoview.scrollerproxy.GingerScroller: boolean isFinished()>
<android.content.Context: java.lang.String getString(int,java.lang.Object[])>
<com.google.android.gms.analytics.Tracker: void <init>(java.lang.String,com.google.android.gms.analytics.TrackerHandler,com.google.android.gms.analytics.h,com.google.android.gms.analytics.ae,com.google.android.gms.analytics.g,com.google.android.gms.analytics.ad,android.content.Context)>
<com.battlelancer.seriesguide.util.TimeTools: boolean isUnsupportedCountryOrUs(java.lang.String)>
<uk.co.senab.photoview.gestures.CupcakeGestureDetector: float getActiveX(android.view.MotionEvent)>
<de.greenrobot.event.EventBus$1: void <init>(de.greenrobot.event.EventBus)>
<com.battlelancer.seriesguide.util.tasks.HexagonAddMovieToCollectionTask: void <init>(android.content.Context,int)>
<com.battlelancer.seriesguide.ui.FullscreenImageActivity: void setupActionBar()>
<com.battlelancer.seriesguide.billing.Purchase: java.lang.String getSku()>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment$1: void onClick(android.view.View)>
<android.support.v4.widget.CursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>
<retrofit.client.OkClient: void <init>()>
<android.app.Activity: void openContextMenu(android.view.View)>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>
<com.battlelancer.seriesguide.ui.BaseNavDrawerActivity: boolean isDrawerOpen()>
<com.battlelancer.seriesguide.ui.EpisodesFragment: void onResume()>
<com.battlelancer.seriesguide.ui.AddFragment: void <init>()>
<com.squareup.okhttp.Cache$1: void update(com.squareup.okhttp.Response,com.squareup.okhttp.Response)>
<com.battlelancer.seriesguide.ui.EpisodesFragment: void onPopupMenuClick(android.view.View,int,int,long,boolean,boolean)>
<android.widget.FrameLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.battlelancer.seriesguide.items.MovieDetails: void <init>()>
<com.squareup.okhttp.internal.Dns$1: java.net.InetAddress[] getAllByName(java.lang.String)>
<java.util.concurrent.CopyOnWriteArrayList: void <init>()>
<java.io.BufferedWriter: void flush()>
<com.battlelancer.seriesguide.util.SelectionBuilder: void mapColumns(java.lang.String[])>
<com.google.android.gms.common.GooglePlayServicesUtil: java.lang.String e(android.content.Context,int)>
<com.battlelancer.seriesguide.ui.EpisodesFragment: int access$502(com.battlelancer.seriesguide.ui.EpisodesFragment,int)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment: void changeEpisodeFlag(int)>
<android.content.Intent: java.lang.String toUri(int)>
<java.util.concurrent.AbstractExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>
<com.battlelancer.seriesguide.ui.EpisodesFragment: void onClick(android.view.View)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Episodes: android.net.Uri buildEpisodeUri(int)>
<android.widget.TextView: float getRightFadingEdgeStrength()>
<com.google.api.client.util.GenericData: void <init>(java.util.EnumSet)>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: void <clinit>()>
<com.crashlytics.android.internal.v: com.crashlytics.android.internal.u a(java.lang.Class)>
<android.os.Bundle: void putBoolean(java.lang.String,boolean)>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment$5: void <init>(com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment)>
<com.google.api.client.util.DataMap: java.util.Set entrySet()>
<com.squareup.okio.AsyncTimeout$1: void flush()>
<com.battlelancer.seriesguide.util.FlagTapedTask: java.util.List access$600(java.util.List)>
<com.squareup.okhttp.internal.Util: java.util.List immutableList(java.lang.Object[])>
<com.google.android.gms.analytics.ac: void cq()>
<android.support.v4.app.TaskStackBuilder: void <clinit>()>
<com.battlelancer.seriesguide.ui.EpisodesActivity: void onCreate(android.os.Bundle)>
<butterknife.ButterKnife: java.lang.reflect.Method findInjectorForClass(java.lang.Class)>
<android.widget.FrameLayout: void drawableHotspotChanged(float,float)>
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
<retrofit.RestAdapter$Builder: retrofit.RestAdapter$Builder setClient(retrofit.client.Client$Provider)>
<uk.co.senab.photoview.PhotoViewAttacher$FlingRunnable: void cancelFling()>
<java.lang.Character: boolean isLowSurrogate(char)>
<com.battlelancer.seriesguide.ui.StatsFragment: void onDestroyView()>
<com.mobeta.android.dslv.DragSortListView$DropAnimator: void onUpdate(float,float)>
<com.battlelancer.seriesguide.util.PeopleListHelper$OnPersonClickListener: void <init>(com.battlelancer.seriesguide.ui.PeopleActivity$MediaType,int,com.battlelancer.seriesguide.ui.PeopleActivity$PeopleType)>
<com.battlelancer.seriesguide.ui.EpisodesFragment: void onDestroy()>
<com.uwetrottmann.seriesguide.backend.movies.model.MovieList: com.uwetrottmann.seriesguide.backend.movies.model.MovieList clone()>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity: void onDestroy()>
<android.view.AbsSavedState: void <clinit>()>
<com.google.api.client.json.gson.GsonGenerator: void writeEndObject()>
<android.app.ProgressDialog: void <init>(android.content.Context)>
<com.jakewharton.trakt.services.RateService$EpisodeRating: void <init>(int,int,int,com.jakewharton.trakt.enumerations.Rating)>
<com.google.api.client.util.ClassInfo: com.google.api.client.util.FieldInfo getFieldInfo(java.lang.String)>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Writer: void flush()>
<android.support.v4.app.Fragment: android.support.v4.app.LoaderManager getLoaderManager()>
<com.battlelancer.seriesguide.ui.BaseActivity: void updateShowDelayed(int)>
<android.support.v4.app.NavUtils$NavUtilsImplJB: void <init>()>
<com.uwetrottmann.seriesguide.backend.shows.Shows$Builder: com.uwetrottmann.seriesguide.backend.shows.Shows build()>
<com.battlelancer.seriesguide.ui.BaseTopActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
<android.support.v4.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)>
<com.battlelancer.seriesguide.util.TaskManager: void tryBackupTask()>
<com.squareup.okhttp.internal.http.HttpConnection: void <init>(com.squareup.okhttp.ConnectionPool,com.squareup.okhttp.Connection,java.net.Socket)>
<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>
<com.squareup.okhttp.ConnectionPool: com.squareup.okhttp.Connection get(com.squareup.okhttp.Address)>
<android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>
<org.json.JSONObject: long optLong(java.lang.String)>
<com.battlelancer.seriesguide.util.EpisodeTools$SeasonWatchedType: int getLastWatchedEpisodeTvdbId()>
<com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator unfit()>
<com.squareup.okhttp.Connection: int recycleCount()>
<com.squareup.okio.Timeout: void throwIfReached()>
<com.battlelancer.seriesguide.ui.EpisodesFragment: int getShowId()>
<com.battlelancer.seriesguide.ui.OverviewActivity: void setupViews(android.os.Bundle)>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder headers(com.squareup.okhttp.Headers)>
<java.lang.Enum: void <init>(java.lang.String,int)>
<com.google.android.gms.internal.hn: java.lang.Object d(android.os.IBinder)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Lists: java.lang.String getId(android.net.Uri)>
<uk.co.senab.photoview.Compat: void postOnAnimation(android.view.View,java.lang.Runnable)>
<retrofit.Platform$Base: void <init>(retrofit.Platform$1)>
<com.squareup.okhttp.Cache$CacheRequestImpl: void <init>(com.squareup.okhttp.Cache,com.squareup.okhttp.internal.DiskLruCache$Editor)>
<com.google.myjson.internal.bind.TypeAdapters$26: void <init>()>
<android.support.v4.view.ViewCompat$KitKatViewCompatImpl: void <init>()>
<com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl: void setDoOutput(boolean)>
<android.widget.ArrayAdapter: java.lang.Object getItem(int)>
<com.uwetrottmann.seriesguide.backend.movies.model.MovieList: com.uwetrottmann.seriesguide.backend.movies.model.MovieList setMovies(java.util.List)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment$2: void onClick(android.view.View)>
<com.battlelancer.seriesguide.ui.streams.StreamFragment: void <init>()>
<com.battlelancer.seriesguide.ui.SearchActivity: void fireTrackerEvent(java.lang.String)>
<com.google.myjson.stream.JsonWriter: void push(int)>
<android.support.v4.app.BackStackRecord: int commitInternal(boolean)>
<com.battlelancer.seriesguide.settings.TmdbSettings: java.lang.String getImageBaseUrl(android.content.Context)>
<com.battlelancer.seriesguide.billing.IabHelper: void startSetup(com.battlelancer.seriesguide.billing.IabHelper$OnIabSetupFinishedListener)>
<java.util.AbstractSet: boolean equals(java.lang.Object)>
<com.google.api.client.http.HttpRequestFactory: void <init>(com.google.api.client.http.HttpTransport,com.google.api.client.http.HttpRequestInitializer)>
<android.support.v4.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>
<java.util.LinkedList: java.util.ListIterator listIterator(int)>
<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.squareup.picasso.Request: java.lang.String plainId()>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity: void onCreate(android.os.Bundle)>
<com.google.gson.internal.$Gson$Types: void <clinit>()>
<com.squareup.okio.RealBufferedSink: com.squareup.okio.Buffer buffer()>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity: void <init>()>
<com.google.api.client.json.gson.GsonParser: byte getByteValue()>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment: void updateCheckInButtonState()>
<com.squareup.okhttp.ConnectionPool: int access$200(com.squareup.okhttp.ConnectionPool)>
<com.google.api.client.json.JsonFactory: java.lang.String toString(java.lang.Object)>
<android.app.Notification$InboxStyle: void <init>(android.app.Notification$Builder)>
<com.battlelancer.seriesguide.ui.ConnectTraktFinishedFragment$2: void onClick(android.view.View)>
<com.mobeta.android.dslv.DragSortListView$RemoveAnimator: void <init>(com.mobeta.android.dslv.DragSortListView,float,int)>
<com.battlelancer.seriesguide.util.PeopleListHelper$OnPersonClickListener: void <init>(com.battlelancer.seriesguide.ui.PeopleActivity$MediaType,int,com.battlelancer.seriesguide.ui.PeopleActivity$PeopleType,int)>
<com.battlelancer.seriesguide.ui.ActivityFragment$1: void <init>(com.battlelancer.seriesguide.ui.ActivityFragment,long,int,int,int,int)>
<com.battlelancer.seriesguide.backend.HexagonTools: com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential getAccountCredential(android.content.Context)>
<com.battlelancer.seriesguide.settings.DisplaySettings: boolean isLargeScreen(android.content.Context)>
<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.Notification$Builder: android.app.Notification$Builder setSound(android.net.Uri,int)>
<com.squareup.tape.InMemoryObjectQueue: int size()>
<com.battlelancer.seriesguide.items.Series: java.lang.String getTitle()>
<com.squareup.okhttp.Connection: void setProtocol(com.squareup.okhttp.Protocol)>
<com.squareup.picasso.ContentStreamBitmapHunter: android.graphics.Bitmap decodeContentStream(com.squareup.picasso.Request)>
<com.battlelancer.seriesguide.adapters.EpisodesAdapter$1: void <init>(com.battlelancer.seriesguide.adapters.EpisodesAdapter,int,int)>
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String)>
<android.support.v4.app.NavUtils$NavUtilsImplBase: void <init>()>
<timber.log.Timber: void d(java.lang.String,java.lang.Object[])>
<com.uwetrottmann.seriesguide.backend.shows.Shows$Builder: com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setServicePath(java.lang.String)>
<com.battlelancer.seriesguide.api.Action: void <init>(java.lang.String,android.content.Intent,int)>
<android.support.v4.app.Fragment: void performStart()>
<com.google.android.gms.analytics.ae: void <init>(android.content.Context)>
<com.google.api.client.googleapis.services.AbstractGoogleClient: com.google.api.client.googleapis.services.GoogleClientRequestInitializer getGoogleClientRequestInitializer()>
<com.squareup.okhttp.internal.DiskLruCache$Editor$FaultHidingOutputStream: void close()>
<com.google.api.client.util.DateTime: void <init>(long)>
<com.squareup.okhttp.Connection: com.squareup.okhttp.Protocol getProtocol()>
<com.google.myjson.stream.JsonReader: int peekNumber()>
<com.battlelancer.seriesguide.ui.OverviewFragment: void access$000(com.battlelancer.seriesguide.ui.OverviewFragment,android.view.View)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment$1: void <init>(com.battlelancer.seriesguide.ui.EpisodeDetailsFragment)>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment: void onCreate(android.os.Bundle)>
<android.widget.PopupMenu: void inflate(int)>
<com.squareup.okio.Buffer: com.squareup.okio.Buffer copyTo(java.io.OutputStream,long,long)>
<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>
<com.battlelancer.seriesguide.api.Action$Builder: com.battlelancer.seriesguide.api.Action$Builder viewIntent(android.content.Intent)>
<com.squareup.okhttp.internal.http.OkHeaders: java.util.Map toMultimap(com.squareup.okhttp.Headers,java.lang.String)>
<com.battlelancer.seriesguide.dashclock.UpcomingEpisodeSettingsActivity: void bindPreferenceSummaryToValue(android.preference.Preference)>
<android.support.v4.content.ModernAsyncTask$WorkerRunnable: void <init>()>
<de.greenrobot.event.EventBus$2: void <clinit>()>
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: void setImportantForAccessibility(android.view.View,int)>
<com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment: void onActivityCreated(android.os.Bundle)>
<android.app.Notification$Builder: android.app.Notification$Builder setContentInfo(java.lang.CharSequence)>
<com.uwetrottmann.seriesguide.backend.episodes.model.Episode: com.uwetrottmann.seriesguide.backend.episodes.model.Episode setWatchedFlag(java.lang.Integer)>
<java.util.concurrent.atomic.AtomicInteger: int get()>
<com.google.api.client.util.Data: java.lang.Object parsePrimitiveValue(java.lang.reflect.Type,java.lang.String)>
<java.lang.Integer: java.lang.String toBinaryString(int)>
<com.uwetrottmann.seriesguide.backend.episodes.model.EpisodeList: com.uwetrottmann.seriesguide.backend.episodes.model.EpisodeList setEpisodes(java.util.List)>
<android.support.v4.view.ViewCompat: void setLayerType(android.view.View,int,android.graphics.Paint)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$4: void <init>(android.app.Activity)>
<android.support.v4.app.DialogFragment: void onDetach()>
<java.lang.Thread: void <init>(java.lang.Runnable)>
<java.util.LinkedHashMap: void <init>(int,float,boolean)>
<com.google.api.client.http.GZipEncoding: void encode(com.google.api.client.util.StreamingContent,java.io.OutputStream)>
<com.battlelancer.seriesguide.ui.ShowFragment$4: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
<com.battlelancer.seriesguide.items.Series: void setImdbId(java.lang.String)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Movies: java.lang.String getId(android.net.Uri)>
<com.squareup.okhttp.internal.spdy.HeadersMode: void <clinit>()>
<com.squareup.okio.Okio$2: long read(com.squareup.okio.Buffer,long)>
<android.widget.TextView: void setEnabled(boolean)>
<org.apache.oltu.oauth2.client.request.OAuthClientRequest$AuthenticationRequestBuilder: org.apache.oltu.oauth2.client.request.OAuthClientRequest$AuthenticationRequestBuilder setClientId(java.lang.String)>
<com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment: void showListsDialog(int,int,android.support.v4.app.FragmentManager)>
<com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl: void setReadTimeout(int)>
<com.battlelancer.seriesguide.settings.AdvancedSettings: void setSubscriptionState(android.content.Context,boolean)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$ListItems: java.lang.String getId(android.net.Uri)>
<android.support.v4.app.ActionBarDrawerToggle: void <init>(android.app.Activity,android.support.v4.widget.DrawerLayout,int,int,int)>
<com.battlelancer.seriesguide.ui.dialogs.AddListDialogFragment: com.battlelancer.seriesguide.ui.dialogs.AddListDialogFragment newInstance()>
<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>
<android.app.Fragment: void <init>()>
<com.google.api.client.json.GenericJson: com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object)>
<com.battlelancer.seriesguide.ui.ShowFragment$4: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.battlelancer.seriesguide.widgets.SlidingTabLayout: android.support.v4.view.ViewPager access$600(com.battlelancer.seriesguide.widgets.SlidingTabLayout)>
<com.battlelancer.seriesguide.util.EpisodeTools: boolean isWatched(int)>
<android.support.v4.app.ListFragment: android.widget.ListView getListView()>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.battlelancer.seriesguide.ui.OverviewFragment: void access$400(com.battlelancer.seriesguide.ui.OverviewFragment)>
<com.battlelancer.seriesguide.adapters.MoviesAdapter$1: void onClick(android.view.View)>
<com.battlelancer.seriesguide.util.SystemUiHiderHoneycomb$1: void <init>(com.battlelancer.seriesguide.util.SystemUiHiderHoneycomb)>
<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.RouteDatabase access$000(com.squareup.okhttp.OkHttpClient)>
<com.battlelancer.seriesguide.util.MovieTools: void unwatchedMovie(android.content.Context,int)>
<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>
<android.view.View: void setEnabled(boolean)>
<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle setSummaryText(java.lang.CharSequence)>
<android.support.v4.content.CursorLoader: void deliverResult(android.database.Cursor)>
<android.widget.Scroller: void forceFinished(boolean)>
<com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl: void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])>
<com.uwetrottmann.seriesguide.backend.episodes.EpisodesRequest: com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient getAbstractGoogleClient()>
<android.support.v4.app.TaskStackBuilder: void startActivities()>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment: void setupViews()>
<android.app.DialogFragment: void show(android.app.FragmentManager,java.lang.String)>
<android.view.animation.LinearInterpolator: void <init>()>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable: void <init>(android.view.animation.Interpolator,int,int,int[],float,float,float,float,boolean,boolean,fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Callbacks,boolean,android.graphics.drawable.Drawable,boolean,fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$1)>
<com.squareup.okio.RealBufferedSource$1: int read()>
<java.lang.Thread: boolean holdsLock(java.lang.Object)>
<com.battlelancer.seriesguide.ui.ShowsFragment$ShowsAdapter: void <init>(com.battlelancer.seriesguide.ui.ShowsFragment,android.content.Context,android.database.Cursor,int,int,int)>
<com.battlelancer.seriesguide.getglueapi.GetGlueAuthActivity: boolean fetchAndStoreTokens(android.content.Context,java.lang.String)>
<com.squareup.okhttp.Cache$CacheRequestImpl: java.io.OutputStream getBody()>
<android.content.pm.Signature: void <clinit>()>
<java.text.Format: java.lang.String format(java.lang.Object)>
<com.squareup.okio.RealBufferedSink: void flush()>
<com.squareup.okhttp.internal.DiskLruCache: void readJournalLine(java.lang.String)>
<com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl: void setUseCaches(boolean)>
<com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)>
<com.battlelancer.seriesguide.billing.IabHelper: void logError(java.lang.String)>
<com.battlelancer.seriesguide.ui.ShowsFragment$3: void <init>(com.battlelancer.seriesguide.ui.ShowsFragment)>
<android.view.View: void setClickable(boolean)>
<com.squareup.okhttp.internal.http.SpdyTransport: com.squareup.okio.Sink createRequestBody(com.squareup.okhttp.Request)>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Reader: void clearHeaderTable()>
<com.google.api.client.http.GenericUrl: boolean appendParam(boolean,java.lang.StringBuilder,java.lang.String,java.lang.Object)>
<android.support.v4.content.CursorLoader: void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.mobeta.android.dslv.DragSortListView: void layoutChildren()>
<android.widget.ProgressBar: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.TextView: void onRestoreInstanceState(android.os.Parcelable)>
<com.squareup.okhttp.internal.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)>
<com.battlelancer.seriesguide.adapters.EpisodesAdapter: com.battlelancer.seriesguide.adapters.EpisodesAdapter$PopupMenuClickListener access$100(com.battlelancer.seriesguide.adapters.EpisodesAdapter)>
<com.battlelancer.seriesguide.sync.SgSyncAdapter: boolean isSyncAutomatically(android.content.Context)>
<com.squareup.okio.Buffer: long size()>
<com.battlelancer.seriesguide.sync.AccountUtils: boolean isAccountExists(android.content.Context)>
<com.battlelancer.seriesguide.AnalyticsTree: void <init>()>
<android.content.Intent: android.content.Intent makeMainActivity(android.content.ComponentName)>
<com.battlelancer.seriesguide.migration.MigrationActivity: void <init>()>
<android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread: void abortAnimation(java.lang.Object)>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Reader: void readHeaders(com.squareup.okhttp.internal.spdy.FrameReader$Handler,short,byte,int)>
<android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)>
<com.battlelancer.seriesguide.ui.dialogs.AddListDialogFragment$2: void <init>(com.battlelancer.seriesguide.ui.dialogs.AddListDialogFragment)>
<com.google.api.client.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])>
<android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>
<java.lang.Math: int abs(int)>
<com.battlelancer.seriesguide.extensions.ExtensionManager: void disableExtension(android.content.ComponentName)>
<java.util.concurrent.FutureTask: boolean cancel(boolean)>
<com.squareup.okhttp.internal.spdy.Spdy3$Reader: void readWindowUpdate(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int)>
<android.widget.ImageView$ScaleType: void <init>(java.lang.String,int)>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: int getResponseCode()>
<android.support.v4.util.TimeUtils: int printField(char[],int,char,int,boolean,int)>
<com.battlelancer.seriesguide.util.RemoveShowWorkerFragment$RemoveShowTask: void <init>(com.battlelancer.seriesguide.util.RemoveShowWorkerFragment,android.content.Context)>
<android.graphics.Canvas: void restoreToCount(int)>
<android.text.format.DateUtils: void <clinit>()>
<com.readystatesoftware.systembartint.SystemBarTintManager$SystemBarConfig: boolean hasNavBar(android.content.Context)>
<android.widget.TextView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<com.google.android.gms.internal.he: android.content.Intent aD(java.lang.String)>
<com.google.android.gms.plus.PlusOneDummyView$b: android.graphics.drawable.Drawable getDrawable(int)>
<android.view.animation.AccelerateInterpolator: void <init>()>
<com.google.api.client.util.ArrayValueMap: void setValues()>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences: void onBuildHeaders(java.util.List)>
<uk.co.senab.photoview.scrollerproxy.PreGingerScroller: boolean computeScrollOffset()>
<com.google.android.gms.plus.PlusOneDummyView: void <init>(android.content.Context,int)>
<com.battlelancer.seriesguide.util.ServiceUtils$1: void onClick(android.view.View)>
<com.google.api.client.http.GenericUrl: void setRawPath(java.lang.String)>
<com.battlelancer.seriesguide.ui.dialogs.MovieCheckInDialogFragment: void checkInTrakt(java.lang.String)>
<com.battlelancer.seriesguide.appwidget.AppWidget: void <init>()>
<com.battlelancer.seriesguide.ui.ActivityFragment: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>
<com.battlelancer.seriesguide.api.SeriesGuideExtension: void loadLastAction()>
<com.battlelancer.seriesguide.ui.PeopleFragment: void setProgressVisibility(boolean)>
<com.battlelancer.seriesguide.dataliberation.JsonExportTask: void addEpisodes(com.battlelancer.seriesguide.dataliberation.model.Season)>
<com.battlelancer.seriesguide.enums.TraktAction: com.battlelancer.seriesguide.enums.TraktAction valueOf(java.lang.String)>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment$4: void <init>(com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment,android.content.SharedPreferences)>
<com.battlelancer.seriesguide.dataliberation.DataLiberationFragment$1: void <init>(com.battlelancer.seriesguide.dataliberation.DataLiberationFragment,android.content.Context)>
<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout access$1100(com.squareup.okhttp.internal.spdy.SpdyStream)>
<com.battlelancer.seriesguide.ui.PeopleFragment$3: void onClick(android.view.View)>
<android.view.ContextThemeWrapper: void <init>()>
<com.readystatesoftware.systembartint.SystemBarTintManager$SystemBarConfig: int getPixelInsetBottom()>
<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>
<com.battlelancer.seriesguide.ui.StatsFragment: void onStart()>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment: void <init>()>
<com.squareup.okio.Okio: com.squareup.okio.Source source(java.io.InputStream,com.squareup.okio.Timeout)>
<com.google.android.gms.analytics.o: java.lang.String w(int)>
<com.uwetrottmann.seriesguide.backend.shows.ShowsRequest: com.uwetrottmann.seriesguide.backend.shows.Shows getAbstractGoogleClient()>
<com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso$Builder downloader(com.squareup.picasso.Downloader)>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void reportStart()>
<com.squareup.okhttp.Connection: boolean isConnected()>
<com.google.api.client.json.gson.GsonParser: int getIntValue()>
<android.support.v4.view.MotionEventCompatEclair: int findPointerIndex(android.view.MotionEvent,int)>
<com.google.android.gms.analytics.x: java.lang.String dk()>
<android.view.MotionEvent: void <clinit>()>
<com.uwetrottmann.seriesguide.backend.episodes.Episodes: void <clinit>()>
<java.util.HashMap: boolean containsKey(java.lang.Object)>
<com.battlelancer.seriesguide.ui.ShowsFragment: void fireTrackerEventContext(java.lang.String)>
<retrofit.RestAdapter$LogLevel: void <init>(java.lang.String,int)>
<com.google.api.client.http.EmptyContent: void <init>()>
<com.google.android.gms.analytics.HitBuilders$EventBuilder: com.google.android.gms.analytics.HitBuilders$EventBuilder setLabel(java.lang.String)>
<com.battlelancer.seriesguide.adapters.GetGlueObjectAdapter: void setData(java.util.List)>
<com.battlelancer.seriesguide.appwidget.ListWidgetProvider: void onDisabled(android.content.Context)>
<butterknife.ButterKnife: void reset(java.lang.Object)>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment$5: void <init>(com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment)>
<com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()>
<java.util.HashMap: java.lang.Object remove(java.lang.Object)>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential$RequestHandler: boolean handleResponse(com.google.api.client.http.HttpRequest,com.google.api.client.http.HttpResponse,boolean)>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder message(java.lang.String)>
<com.squareup.okhttp.internal.http.HttpTransport: void writeRequestHeaders(com.squareup.okhttp.Request)>
<com.google.myjson.stream.JsonWriter: int peek()>
<com.battlelancer.seriesguide.sync.SgAuthenticationService: android.os.IBinder onBind(android.content.Intent)>
<java.lang.StringBuffer: void <init>()>
<android.support.v4.app.FragmentManagerImpl: void checkStateLoss()>
<com.google.android.gms.common.SupportErrorDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<android.support.v4.app.Fragment: void onCreate(android.os.Bundle)>
<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<com.battlelancer.seriesguide.widgets.SlidingTabLayout$TabClickListener: void onClick(android.view.View)>
<com.battlelancer.seriesguide.billing.Base64: byte[] decode(java.lang.String)>
<android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.battlelancer.seriesguide.dataliberation.JsonExportTask$ListItemsQuery: void <clinit>()>
<com.google.api.client.http.UriTemplate$CompositeOutput: int getVarNameStartIndex()>
<com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity: void <init>()>
<android.app.Activity: void onBackPressed()>
<android.widget.ScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<java.lang.Object: boolean equals(java.lang.Object)>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: java.lang.String getHeaderField(java.lang.String)>
<android.support.v4.app.FragmentActivity: void onResume()>
<android.support.v4.view.ViewCompat$ICSViewCompatImpl: void <init>()>
<android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich: void <init>()>
<android.support.v4.widget.ScrollerCompatGingerbread: int getCurrY(java.lang.Object)>
<com.battlelancer.seriesguide.ui.BaseNavDrawerActivity$DrawerItem: void <init>(com.battlelancer.seriesguide.ui.BaseNavDrawerActivity,java.lang.String,int)>
<com.battlelancer.seriesguide.ui.FullscreenImageActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<uk.co.senab.photoview.Compat: int getPointerIndex(int)>
<com.battlelancer.seriesguide.dataliberation.DataLiberationFragment$4: void onClick(android.view.View)>
<com.battlelancer.seriesguide.util.FlagTapeEntry: void <init>(com.battlelancer.seriesguide.util.EpisodeTools$EpisodeAction,int,java.util.List,boolean)>
<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View)>
<com.squareup.okhttp.OkHttpClient$1: com.squareup.okhttp.internal.InternalCache internalCache(com.squareup.okhttp.OkHttpClient)>
<com.battlelancer.seriesguide.backend.CloudSetupFragment: void checkGooglePlayServicesAvailable()>
<android.support.v4.app.DialogFragment: void onStop()>
<java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<android.app.Activity: void onDetachedFromWindow()>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter close(int,int,java.lang.String)>
<com.google.gson.internal.bind.TypeAdapters$28: void <init>(java.lang.Class,com.google.gson.TypeAdapter)>
<com.battlelancer.seriesguide.adapters.TabStripAdapter: int getCount()>
<com.google.api.client.util.DataMap$Entry: boolean equals(java.lang.Object)>
<com.google.android.gms.analytics.StandardExceptionParser: void <init>(android.content.Context,java.util.Collection)>
<com.squareup.okhttp.internal.spdy.Http20Draft12: short lengthWithoutPadding(short,byte,short)>
<org.apache.oltu.oauth2.common.utils.OAuthUtils: java.lang.String saveStreamAsString(java.io.InputStream)>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment: void onStart()>
<com.squareup.okio.DeflaterSink: com.squareup.okio.Timeout timeout()>
<org.apache.oltu.oauth2.common.utils.OAuthUtils: boolean isEmpty(java.lang.String)>
<com.google.android.gms.analytics.t: void cq()>
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>
<android.support.v4.view.ViewPager: void scrollToItem(int,boolean,int,boolean)>
<com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver: void <init>(com.squareup.picasso.Dispatcher)>
<com.google.api.client.http.HttpResponse: java.lang.String parseAsString()>
<com.crashlytics.android.internal.u: void <init>()>
<android.widget.ArrayAdapter: void addAll(java.util.Collection)>
<com.battlelancer.seriesguide.util.DBUtils: int getUncollectedEpisodesOfShow(android.content.Context,java.lang.String)>
<com.google.api.client.googleapis.MethodOverride: void <init>(boolean)>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void execute()>
<com.google.api.client.util.ArrayMap: void <init>()>
<com.google.api.client.http.GenericUrl: com.google.api.client.http.GenericUrl clone()>
<android.widget.Scroller: int getFinalY()>
<android.view.View: void restoreHierarchyState(android.util.SparseArray)>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder: com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setServicePath(java.lang.String)>
<com.google.api.client.http.HttpHeaders: com.google.api.client.http.HttpHeaders setAuthorization(java.util.List)>
<android.view.View: int getPaddingLeft()>
<com.mobeta.android.dslv.DragSortListView: void removeItem(int)>
<com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment$3: void onClick(android.view.View)>
<java.net.Authenticator$RequestorType: void <clinit>()>
<com.squareup.picasso.Utils: int getResourceId(android.content.res.Resources,com.squareup.picasso.Request)>
<uk.co.senab.photoview.gestures.FroyoGestureDetector: boolean isScaling()>
<com.battlelancer.seriesguide.items.Series: void setContentRating(java.lang.String)>
<com.squareup.okhttp.Handshake: java.util.List peerCertificates()>
<com.battlelancer.seriesguide.migration.MigrationActivity: void setupActionBar()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>
<com.squareup.picasso.Dispatcher$DispatcherHandler: void <init>(android.os.Looper,com.squareup.picasso.Dispatcher)>
<com.battlelancer.seriesguide.adapters.SeasonsAdapter: com.battlelancer.seriesguide.adapters.SeasonsAdapter$PopupMenuClickListener access$000(com.battlelancer.seriesguide.adapters.SeasonsAdapter)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$ListItems: void <clinit>()>
<android.widget.ImageView: void jumpDrawablesToCurrentState()>
<com.squareup.okhttp.Credentials: java.lang.String basic(java.lang.String,java.lang.String)>
<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>
<com.squareup.okhttp.internal.http.HttpConnection$AbstractSource: void unexpectedEndOfInput()>
<com.squareup.okhttp.internal.DiskLruCache$1: void <init>(com.squareup.okhttp.internal.DiskLruCache)>
<android.support.v4.view.ViewCompat: int getImportantForAccessibility(android.view.View)>
<java.util.TreeMap: void <init>(java.util.Comparator)>
<com.google.myjson.stream.JsonWriter: void string(java.lang.String)>
<com.squareup.okhttp.internal.BitArray$FixedCapacity: void clear()>
<com.squareup.okhttp.Cache$CacheRequestImpl$1: void <init>(com.squareup.okhttp.Cache$CacheRequestImpl,java.io.OutputStream,com.squareup.okhttp.Cache,com.squareup.okhttp.internal.DiskLruCache$Editor)>
<android.view.View: int getPaddingRight()>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void access$1000(com.squareup.okhttp.internal.spdy.SpdyConnection,com.squareup.okhttp.internal.spdy.ErrorCode,com.squareup.okhttp.internal.spdy.ErrorCode)>
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
<com.crashlytics.android.internal.v: void a(android.content.Context,com.crashlytics.android.internal.u[])>
<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeType: android.net.Uri getUri()>
<com.battlelancer.seriesguide.billing.IabException: void <init>(com.battlelancer.seriesguide.billing.IabResult,java.lang.Exception)>
<com.battlelancer.seriesguide.dataliberation.DataLiberationFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.google.api.client.http.HttpHeaders: void serializeHeaders(com.google.api.client.http.HttpHeaders,java.lang.StringBuilder,java.lang.StringBuilder,java.util.logging.Logger,com.google.api.client.http.LowLevelHttpRequest,java.io.Writer)>
<com.uwetrottmann.seriesguide.backend.shows.model.Show: com.uwetrottmann.seriesguide.backend.shows.model.Show setTvtagId(java.lang.String)>
<com.google.myjson.internal.bind.TypeAdapters$3: void <init>()>
<com.squareup.okhttp.internal.spdy.NameValueBlockReader: int access$002(com.squareup.okhttp.internal.spdy.NameValueBlockReader,int)>
<com.google.api.client.util.GenericData: com.google.api.client.util.GenericData clone()>
<com.squareup.okhttp.Headers$Builder: void <init>()>
<retrofit.converter.GsonConverter: void <init>(com.google.gson.Gson,java.lang.String)>
<com.battlelancer.seriesguide.ui.PeopleFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.FieldNamingStrategy,com.google.gson.internal.Excluder)>
<com.google.android.gms.analytics.GoogleAnalytics: void reportActivityStart(android.app.Activity)>
<android.support.v4.widget.ScrollerCompatGingerbread: int getFinalY(java.lang.Object)>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment$3: void onLoaderReset(android.support.v4.content.Loader)>
<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>
<android.support.v4.app.Fragment: void initState()>
<org.apache.http.HttpVersion: void <clinit>()>
<android.support.v4.content.ModernAsyncTask$WorkerRunnable: void <init>(android.support.v4.content.ModernAsyncTask$1)>
<android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>
<java.util.Arrays: void sort(java.lang.Object[])>
<com.battlelancer.seriesguide.service.TraktFlagService: int onStartCommand(android.content.Intent,int,int)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()>
<com.squareup.okhttp.internal.Platform$JettyNegoProvider: void <init>(java.util.List)>
<com.google.android.gms.common.AccountPicker: android.content.Intent a(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,boolean)>
<android.app.Notification$BigTextStyle: void <init>(android.app.Notification$Builder)>
<android.support.v4.util.ContainerHelpers: void <clinit>()>
<com.google.gson.stream.JsonReader: void push(int)>
<com.google.api.client.http.HttpMediaType: java.lang.String getParameter(java.lang.String)>
<android.support.v4.view.PagerAdapter: void <init>()>
<com.squareup.okhttp.internal.spdy.Settings: int getHeaderTableSize()>
<com.battlelancer.seriesguide.sync.AccountUtils: void removeAccount(android.content.Context)>
<com.battlelancer.seriesguide.ui.ShowsFragment$ShowsAdapter$1: void <init>(com.battlelancer.seriesguide.ui.ShowsFragment$ShowsAdapter,int,boolean)>
<android.support.v4.widget.ViewDragHelper: float clampMag(float,float,float)>
<com.battlelancer.seriesguide.ui.dialogs.AddListDialogFragment$1: void onClick(android.view.View)>
<com.squareup.picasso.UrlConnectionDownloader: void <clinit>()>
<com.google.android.gms.analytics.r: boolean a(com.google.android.gms.analytics.r)>
<android.widget.ImageView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.mobeta.android.dslv.DragSortController: int dragHandleHitPosition(android.view.MotionEvent)>
<java.io.StringReader: void close()>
<java.util.Locale: void <clinit>()>
<com.battlelancer.seriesguide.billing.BillingActivity: void setupViews()>
<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>
<com.squareup.picasso.Stats: void dispatchCacheMiss()>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Builder: com.squareup.okhttp.internal.spdy.IncomingStreamHandler access$300(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder)>
<com.google.android.gms.plus.PlusOneDummyView$c: void <init>(android.content.Context)>
<android.accounts.Account: void <clinit>()>
<android.support.v4.app.NotificationCompat$NotificationCompatImplBase: void <init>()>
<com.squareup.okhttp.internal.Platform$JdkWithJettyBootPlatform: void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class)>
<com.google.myjson.stream.JsonReader$1: void <init>()>
<com.google.api.client.http.HttpMediaType: java.lang.String getType()>
<com.battlelancer.seriesguide.ui.SeasonsFragment$1$1: void <init>(com.battlelancer.seriesguide.ui.SeasonsFragment$1)>
<com.battlelancer.seriesguide.util.Utils: boolean isConnected(android.content.Context,boolean)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void access$400(com.battlelancer.seriesguide.ui.SeasonsFragment,boolean)>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean access$300(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource)>
<java.util.Arrays: int hashCode(long[])>
<android.graphics.Canvas: int save()>
<com.google.android.gms.dynamic.g$a: void <init>(java.lang.String)>
<java.net.UnknownHostException: void <init>(java.lang.String)>
<android.widget.ScrollView: void draw(android.graphics.Canvas)>
<android.graphics.Bitmap: void <clinit>()>
<uk.co.senab.photoview.scrollerproxy.ScrollerProxy: void <init>()>
<com.squareup.okhttp.Request$Builder: void <init>(com.squareup.okhttp.Request)>
<com.squareup.picasso.Request: boolean needsTransformation()>
<com.squareup.okhttp.internal.http.RouteSelector: boolean hasNextProxy()>
<com.squareup.okhttp.internal.Platform$Android: void setProtocols(javax.net.ssl.SSLSocket,java.util.List)>
<com.squareup.okhttp.internal.Platform: void untagSocket(java.net.Socket)>
<com.battlelancer.seriesguide.util.DBUtils: boolean isShowExists(android.content.Context,int)>
<android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl: int normalizeMetaState(int)>
<com.squareup.okhttp.internal.http.HttpEngine: java.io.InputStream getResponseBodyBytes()>
<com.battlelancer.seriesguide.util.ShowTools: void <init>(android.content.Context)>
<java.io.ByteArrayOutputStream: void <init>()>
<com.mobeta.android.dslv.DragSortListView$RemoveAnimator: void onUpdate(float,float)>
<com.battlelancer.seriesguide.settings.NotificationSettings: boolean isNotificationsEnabled(android.content.Context)>
<android.preference.PreferenceFragment: void <init>()>
<android.view.View: int getHeight()>
<com.battlelancer.seriesguide.util.TraktTask$1: void <clinit>()>
<android.os.AsyncTask: void <clinit>()>
<android.widget.ProgressBar: void setInterpolator(android.view.animation.Interpolator)>
<com.squareup.okhttp.internal.spdy.Spdy3: com.squareup.okhttp.internal.spdy.FrameWriter newWriter(com.squareup.okio.BufferedSink,boolean)>
<com.battlelancer.seriesguide.provider.SeriesGuideProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.google.android.gms.common.SupportErrorDialogFragment: void <init>()>
<com.squareup.picasso.Picasso: com.squareup.picasso.Request transformRequest(com.squareup.picasso.Request)>
<com.squareup.okhttp.Cache: void trackConditionalCacheHit()>
<com.google.api.client.util.ArrayValueMap$ArrayValue: void <init>(java.lang.Class)>
<org.json.JSONArray: java.lang.String optString(int,java.lang.String)>
<com.google.api.client.json.gson.GsonParser: com.google.api.client.json.JsonFactory getFactory()>
<com.google.myjson.stream.JsonReader: int peekKeyword()>
<com.squareup.okhttp.Protocol: void <clinit>()>
<com.battlelancer.seriesguide.ui.ConnectTraktActivity: void <init>()>
<com.google.api.client.googleapis.services.AbstractGoogleClientRequest$1: void interceptResponse(com.google.api.client.http.HttpResponse)>
<com.google.android.gms.analytics.ExceptionReporter: java.lang.Thread$UncaughtExceptionHandler cD()>
<com.mobeta.android.dslv.DragSortController: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<com.google.api.client.util.ArrayMap: void ensureCapacity(int)>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAuthIOException: void <init>(com.google.android.gms.auth.GoogleAuthException)>
<android.support.v4.app.ActivityCompatHoneycomb: void invalidateOptionsMenu(android.app.Activity)>
<com.battlelancer.seriesguide.ui.AddActivity: void onCreate(android.os.Bundle)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$EpisodeSearch: void <clinit>()>
<com.battlelancer.seriesguide.util.TraktSummaryTask$RatingsWrapper: void <init>()>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment: java.util.List access$200(com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment)>
<android.view.ViewGroup: void onDetachedFromWindow()>
<com.squareup.okhttp.internal.DiskLruCache$Entry: boolean access$602(com.squareup.okhttp.internal.DiskLruCache$Entry,boolean)>
<com.google.api.client.json.gson.GsonParser: java.lang.String getCurrentName()>
<com.google.api.client.http.HttpTransport: com.google.api.client.http.HttpRequestFactory createRequestFactory(com.google.api.client.http.HttpRequestInitializer)>
<com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: void <init>(java.lang.reflect.Type)>
<com.jakewharton.trakt.Trakt: com.jakewharton.trakt.services.AccountService accountService()>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment: android.widget.EditText access$000(com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment)>
<com.google.api.client.json.JsonFactory: java.io.ByteArrayOutputStream toByteStream(java.lang.Object,boolean)>
<com.squareup.okhttp.internal.http.RouteSelector: java.lang.String nextTlsVersion()>
<com.crashlytics.android.internal.ab: boolean a(android.content.Context,java.lang.String,boolean)>
<com.battlelancer.seriesguide.util.DBUtils: void rebuildFtsTable(android.content.Context)>
<com.mobeta.android.dslv.DragSortListView$DragSortTracker: void startTracking()>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment$10: void <init>(com.battlelancer.seriesguide.ui.EpisodeDetailsFragment)>
<com.google.myjson.internal.bind.TypeAdapters$31: void <init>(java.lang.Class,com.google.myjson.TypeAdapter)>
<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeType: android.content.ContentValues getContentValues()>
<com.battlelancer.seriesguide.settings.TraktCredentials: void removePassword()>
<com.battlelancer.seriesguide.util.ServiceUtils: com.jakewharton.trakt.Trakt getTrakt(android.content.Context)>
<com.battlelancer.seriesguide.ui.TraktShoutsActivity: void onCreate(android.os.Bundle)>
<retrofit.Platform$AppEngine: retrofit.client.Client$Provider defaultClient()>
<com.battlelancer.seriesguide.backend.CloudSetupActivity: void setupActionBar()>
<com.google.api.client.http.HttpTransport: void <init>()>
<com.google.android.gms.analytics.s$2: void <init>(com.google.android.gms.analytics.s)>
<android.support.v4.view.ViewPager: void onSizeChanged(int,int,int,int)>
<com.squareup.okhttp.internal.Util: int getEffectivePort(java.net.URL)>
<com.google.android.gms.dynamic.h: com.google.android.gms.dynamic.h a(android.support.v4.app.Fragment)>
<android.support.v4.app.ListFragment$2: void <init>(android.support.v4.app.ListFragment)>
<com.google.gson.Gson$5: void <init>(com.google.gson.Gson)>
<com.squareup.picasso.AssetBitmapHunter: android.graphics.Bitmap decodeAsset(java.lang.String)>
<android.widget.ImageView: void setImageResource(int)>
<com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<com.squareup.okhttp.internal.http.HttpConnection: int access$300(com.squareup.okhttp.internal.http.HttpConnection)>
<com.squareup.okio.Util: void checkOffsetAndCount(long,long,long)>
<com.squareup.okhttp.internal.RouteDatabase: void failed(com.squareup.okhttp.Route)>
<java.util.TimerTask: void <init>()>
<com.readystatesoftware.systembartint.SystemBarTintManager: com.readystatesoftware.systembartint.SystemBarTintManager$SystemBarConfig getConfig()>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>
<android.view.View: android.content.Context getContext()>
<java.io.ByteArrayInputStream: void <init>(byte[])>
<com.crashlytics.android.internal.p: java.lang.String getName()>
<com.squareup.okhttp.CacheControl: boolean isPublic()>
<com.crashlytics.android.internal.n: void <init>()>
<uk.co.senab.photoview.PhotoView: void setImageURI(android.net.Uri)>
<com.squareup.okio.ForwardingSource: void close()>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void pushPromise(int,int,java.util.List)>
<java.math.BigInteger: void <clinit>()>
<de.greenrobot.event.PendingPostQueue: de.greenrobot.event.PendingPost poll()>
<java.util.zip.CRC32: void <init>()>
<com.google.api.client.util.DataMap$Entry: int hashCode()>
<java.util.zip.Deflater: boolean needsInput()>
<com.google.api.client.googleapis.services.AbstractGoogleClientRequest: com.google.api.client.http.HttpRequest buildHttpRequest(boolean)>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder: fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder progressiveStart(boolean)>
<com.squareup.okhttp.internal.spdy.ErrorCode: void <init>(java.lang.String,int,int,int,int)>
<com.google.android.gms.common.SupportErrorDialogFragment: void show(android.support.v4.app.FragmentManager,java.lang.String)>
<java.util.zip.Deflater: void setInput(byte[],int,int)>
<com.squareup.okhttp.OkHttpClient: void <init>()>
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl: void <init>()>
<android.support.v4.app.NavUtils$NavUtilsImplJB: android.content.Intent superGetParentActivityIntent(android.app.Activity)>
<java.lang.Class: boolean desiredAssertionStatus()>
<java.io.PrintWriter: void flush()>
<com.battlelancer.seriesguide.ui.dialogs.CheckInDialogFragment: com.battlelancer.seriesguide.ui.dialogs.CheckInDialogFragment newInstance(android.content.Context,int)>
<com.google.api.client.http.apache.ApacheHttpTransport: com.google.api.client.http.LowLevelHttpRequest buildRequest(java.lang.String,java.lang.String)>
<android.view.inputmethod.EditorInfo: void <clinit>()>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Writer: void close()>
<com.uwetrottmann.seriesguide.backend.movies.MoviesRequest: void <init>(com.uwetrottmann.seriesguide.backend.movies.Movies,java.lang.String,java.lang.String,java.lang.Object,java.lang.Class)>
<java.io.PrintWriter: void <init>(java.io.OutputStream)>
<uk.co.senab.photoview.PhotoViewAttacher: boolean isSupportedScaleType(android.widget.ImageView$ScaleType)>
<android.support.v4.app.NavUtils$NavUtilsImplBase: void navigateUpTo(android.app.Activity,android.content.Intent)>
<com.battlelancer.seriesguide.util.FlagTapedTask: void <clinit>()>
<com.google.myjson.Gson$FutureTypeAdapter: void setDelegate(com.google.myjson.TypeAdapter)>
<uk.co.senab.photoview.PhotoViewAttacher: void <clinit>()>
<org.apache.http.client.methods.HttpOptions: void <init>(java.lang.String)>
<android.content.UriMatcher: int match(android.net.Uri)>
<android.widget.LinearLayout: void onDraw(android.graphics.Canvas)>
<com.squareup.okhttp.internal.http.HttpConnection: void readHeaders(com.squareup.okhttp.Headers$Builder)>
<com.squareup.okhttp.internal.http.SpdyTransport: void writeRequestHeaders(com.squareup.okhttp.Request)>
<com.battlelancer.seriesguide.dataliberation.JsonExportTask: java.lang.Object doInBackground(java.lang.Object[])>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment: int getEmptyMessageResId()>
<com.google.api.client.http.GZipEncoding$1: void <init>(com.google.api.client.http.GZipEncoding,java.io.OutputStream)>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpHeaders getResponseHeaders()>
<com.battlelancer.seriesguide.util.FlagTapedTask: int access$400(com.battlelancer.seriesguide.util.FlagTapedTask)>
<com.squareup.okhttp.Cache$1: void trackConditionalCacheHit()>
<android.support.v4.widget.DrawerLayout$ViewDragCallback: boolean onEdgeLock(int)>
<com.mobeta.android.dslv.DragSortListView: int adjustScroll(int,android.view.View,int,int)>
<com.battlelancer.seriesguide.util.MovieTools$AddMovieTask: void <init>(android.content.Context,com.battlelancer.seriesguide.util.MovieTools$AddMovieTask$AddTo)>
<com.battlelancer.seriesguide.util.SelectionBuilder: java.lang.String[] getSelectionArgs()>
<com.google.api.client.repackaged.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>
<com.squareup.okhttp.internal.DiskLruCache: com.squareup.okhttp.internal.DiskLruCache open(java.io.File,int,int,long)>
<com.squareup.okhttp.internal.BitArray$FixedCapacity: boolean get(int)>
<com.crashlytics.android.internal.v: com.crashlytics.android.internal.v a(com.crashlytics.android.internal.v,android.app.Activity)>
<android.support.v4.view.ViewPager: void populate()>
<com.squareup.okio.RealBufferedSink: com.squareup.okio.Timeout timeout()>
<org.apache.http.client.methods.HttpRequestBase: void <init>()>
<com.battlelancer.seriesguide.billing.BillingActivity: java.lang.String getPublicKey()>
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>
<android.text.style.StyleSpan: void <init>(int)>
<com.tonicartos.widget.stickygridheaders.StickyGridHeadersGridView: void <init>(android.content.Context)>
<com.google.android.gms.analytics.ac$1: void <init>(com.google.android.gms.analytics.ac)>
<android.support.v4.view.GravityCompatJellybeanMr1: int getAbsoluteGravity(int,int)>
<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>
<com.battlelancer.seriesguide.ui.MovieDetailsActivity: void <init>()>
<com.battlelancer.seriesguide.ui.dialogs.ListManageDialogFragment$CharAndDigitInputFilter: void <init>()>
<com.google.android.gms.common.GooglePlayServicesUtil: boolean a(android.content.res.Resources)>
<android.text.SpannableStringBuilder: int length()>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void data(boolean,int,com.squareup.okio.BufferedSource,int)>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment: void onResume()>
<com.google.api.client.http.GenericUrl: com.google.api.client.http.GenericUrl set(java.lang.String,java.lang.Object)>
<com.google.android.gms.analytics.s: void cK()>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence)>
<com.battlelancer.seriesguide.billing.SkuDetails: void <init>(java.lang.String,java.lang.String)>
<com.squareup.okhttp.internal.spdy.Spdy3$Reader: void readSynReply(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int)>
<com.google.gson.stream.JsonReader: void nextNull()>
<com.crashlytics.android.internal.j: void <init>()>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Episodes: android.net.Uri buildEpisodeWithShowUri(int)>
<android.preference.PreferenceActivity: void loadHeadersFromResource(int,java.util.List)>
<com.battlelancer.seriesguide.ui.ShowsFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>
<java.lang.Class: java.lang.Class getComponentType()>
<com.battlelancer.seriesguide.adapters.ActivitySlowAdapter$1: void onClick(android.view.View)>
<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>
<android.support.v4.widget.DrawerLayout$ViewDragCallback: void onEdgeDragStarted(int,int)>
<com.battlelancer.seriesguide.ui.dialogs.AddListDialogFragment: void showAddListDialog(android.support.v4.app.FragmentManager)>
<com.battlelancer.seriesguide.ui.OverviewFragment: int getShowId()>
<com.google.myjson.Gson: void toJson(java.lang.Object,java.lang.reflect.Type,com.google.myjson.stream.JsonWriter)>
<com.google.api.client.util.escape.CharEscapers: java.lang.String escapeUriQuery(java.lang.String)>
<com.battlelancer.seriesguide.Constants$SeasonSorting: java.lang.String value()>
<com.google.android.gms.analytics.v$a: com.google.android.gms.analytics.w cX()>
<com.battlelancer.seriesguide.ui.SearchActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.squareup.okhttp.internal.tls.OkHostnameVerifier: boolean verifyHostName(java.lang.String,java.lang.String)>
<android.support.v4.util.LruCache: int sizeOf(java.lang.Object,java.lang.Object)>
<java.lang.Thread: void sleep(long)>
<com.squareup.okhttp.internal.http.HttpConnection$UnknownLengthSource: com.squareup.okio.Timeout timeout()>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$5: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<com.battlelancer.seriesguide.extensions.ExtensionManager: void setDefaultEnabledExtensions()>
<android.view.View: void setImportantForAccessibility(int)>
<com.squareup.okhttp.internal.DiskLruCache: void access$300(com.squareup.okhttp.internal.DiskLruCache)>
<com.battlelancer.seriesguide.util.EpisodeTools$SeasonWatchedType: void setEpisodeProperties(com.uwetrottmann.seriesguide.backend.episodes.model.Episode)>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Reader: void insertIntoHeaderTable(int,com.squareup.okhttp.internal.spdy.Header)>
<android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment,int,int)>
<com.squareup.picasso.BitmapHunter: void <init>(com.squareup.picasso.Picasso,com.squareup.picasso.Dispatcher,com.squareup.picasso.Cache,com.squareup.picasso.Stats,com.squareup.picasso.Action)>
<com.squareup.okhttp.Connection: void connect(int,int,int,com.squareup.okhttp.Request)>
<com.squareup.okhttp.internal.spdy.Spdy3$Writer: void writeNameValueBlockToBuffer(java.util.List)>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpRequest setUrl(com.google.api.client.http.GenericUrl)>
<com.squareup.okhttp.internal.spdy.Http20Draft12$ContinuationSource: com.squareup.okio.Timeout timeout()>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationActivity: void <init>()>
<android.view.MotionEvent: void <init>()>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences: void setupSharingSettings(android.content.Context,android.preference.Preference,android.preference.Preference)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment: void onToggleCollected()>
<com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity: java.lang.String access$300(com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity)>
<android.support.v4.view.ViewPager: void onSecondaryPointerUp(android.view.MotionEvent)>
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.api.client.googleapis.extensions.android.gms.auth.GooglePlayServicesAvailabilityIOException: java.lang.Throwable getCause()>
<com.battlelancer.seriesguide.ui.MovieDetailsActivity: void setCustomTheme()>
<android.content.Intent: android.content.ComponentName resolveActivity(android.content.pm.PackageManager)>
<timber.log.Timber: void i(java.lang.Throwable,java.lang.String,java.lang.Object[])>
<java.lang.System: long currentTimeMillis()>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: java.io.InputStream getErrorStream()>
<com.mobeta.android.dslv.DragSortController: void setRemoveEnabled(boolean)>
<android.support.v4.app.DialogFragment: int show(android.support.v4.app.FragmentTransaction,java.lang.String)>
<com.squareup.okhttp.OkHttpClient: javax.net.SocketFactory getSocketFactory()>
<android.content.Intent: android.content.Intent putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)>
<java.util.zip.Inflater: void <init>(boolean)>
<com.google.api.client.http.GZipEncoding: void <init>()>
<com.squareup.okhttp.internal.spdy.SpdyStream: void receiveHeaders(java.util.List,com.squareup.okhttp.internal.spdy.HeadersMode)>
<com.tonicartos.widget.stickygridheaders.StickyGridHeadersGridView: void scrollChanged(int)>
<com.google.api.client.http.GenericUrl: void <init>(java.net.URL)>
<android.os.Bundle: boolean getBoolean(java.lang.String)>
<android.support.v4.widget.ViewDragHelper: void clearMotionHistory(int)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: boolean access$1100(com.squareup.okhttp.internal.spdy.SpdyConnection,int)>
<android.view.View: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>
<com.google.api.client.json.JsonParser: void parseArray(java.lang.reflect.Field,java.util.Collection,java.lang.reflect.Type,java.util.ArrayList,com.google.api.client.json.CustomizeJsonParser)>
<com.battlelancer.seriesguide.sync.AccountUtils: void <clinit>()>
<java.lang.System: int identityHashCode(java.lang.Object)>
<com.squareup.okhttp.internal.BitArray$VariableCapacity: int shiftOf(int)>
<android.support.v4.widget.EdgeEffectCompat: boolean onPull(float)>
<com.google.api.client.http.UriTemplate: java.util.Map getMap(java.lang.Object)>
<java.net.Socket: void setSoTimeout(int)>
<android.widget.TextView: void setSelected(boolean)>
<android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread: void <init>()>
<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<com.google.gson.reflect.TypeToken: void <init>(java.lang.reflect.Type)>
<com.google.myjson.stream.JsonWriter: void setIndent(java.lang.String)>
<android.support.v4.view.ViewCompat: void <clinit>()>
<com.squareup.okhttp.internal.spdy.Settings: com.squareup.okhttp.internal.spdy.Settings set(int,int,int)>
<com.squareup.okhttp.internal.http.RouteSelector: java.net.Proxy nextProxy()>
<android.widget.ListView: void dispatchDraw(android.graphics.Canvas)>
<com.battlelancer.seriesguide.backend.CloudSetupFragment: void setProgressLock(boolean)>
<android.os.Handler: void <init>(android.os.Looper)>
<com.google.myjson.FieldNamingPolicy$5: void <init>(java.lang.String,int)>
<com.squareup.okio.RealBufferedSink: com.squareup.okio.BufferedSink write(byte[],int,int)>
<com.google.android.gms.analytics.GoogleAnalytics: void setDryRun(boolean)>
<com.google.android.gms.analytics.ah: org.apache.http.HttpEntityEnclosingRequest e(java.lang.String,java.lang.String)>
<com.readystatesoftware.systembartint.SystemBarTintManager$SystemBarConfig: float getSmallestWidthDp(android.app.Activity)>
<com.battlelancer.seriesguide.billing.IabHelper$2$1: void <init>(com.battlelancer.seriesguide.billing.IabHelper$2,com.battlelancer.seriesguide.billing.IabResult,com.battlelancer.seriesguide.billing.Inventory)>
<com.battlelancer.seriesguide.ui.EpisodesFragment$2: void onLoaderReset(android.support.v4.content.Loader)>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Reader: boolean isStaticHeader(int)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void access$500(com.battlelancer.seriesguide.ui.SeasonsFragment,long,int,boolean)>
<com.squareup.picasso.Utils: long calculateDiskCacheSize(java.io.File)>
<com.squareup.okio.Timeout: boolean hasDeadline()>
<com.battlelancer.seriesguide.ui.ListsFragment$ListItemAdapter$PopupMenuItemClickListener: void <init>(com.battlelancer.seriesguide.ui.ListsFragment$ListItemAdapter,java.lang.String,int,int)>
<android.widget.TextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
<android.support.v4.widget.ViewDragHelper: int clampMag(int,int,int)>
<org.apache.http.HttpHost: java.lang.String toHostString()>
<android.support.v4.app.ActivityOptionsCompatJB: android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int)>
<com.google.android.gms.plus.PlusOneDummyView$b: void <init>(android.content.Context)>
<com.google.api.client.http.apache.ApacheHttpResponse: void disconnect()>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void ackSettings()>
<com.google.android.gms.dynamic.a$5: void <init>(android.content.Context,int)>
<com.google.api.client.util.LoggingInputStream: void close()>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$5: void <init>(android.app.Activity,android.content.Intent)>
<android.widget.TextView: int computeHorizontalScrollRange()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>
<com.battlelancer.seriesguide.provider.SeriesGuideProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<com.google.myjson.Gson$FutureTypeAdapter: java.lang.Object read(com.google.myjson.stream.JsonReader)>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.readystatesoftware.systembartint.SystemBarTintManager: java.lang.String access$100()>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Reader: void readPushPromise(com.squareup.okhttp.internal.spdy.FrameReader$Handler,short,byte,int)>
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>
<com.squareup.okhttp.internal.http.RetryableSink: void flush()>
<com.squareup.okhttp.Protocol: void <init>(java.lang.String,int,java.lang.String)>
<com.google.api.client.http.AbstractHttpContent: java.nio.charset.Charset getCharset()>
<com.mobeta.android.dslv.DragSortListView$DropAnimator: void <init>(com.mobeta.android.dslv.DragSortListView,float,int)>
<com.google.api.client.util.ClassInfo: java.lang.reflect.Field getField(java.lang.String)>
<com.squareup.okio.RealBufferedSource: com.squareup.okio.Buffer buffer()>
<com.squareup.picasso.BitmapHunter: com.squareup.picasso.BitmapHunter forRequest(android.content.Context,com.squareup.picasso.Picasso,com.squareup.picasso.Dispatcher,com.squareup.picasso.Cache,com.squareup.picasso.Stats,com.squareup.picasso.Action,com.squareup.picasso.Downloader)>
<com.battlelancer.seriesguide.ui.EpisodesActivity: void updateEpisodeList()>
<android.support.v4.app.FragmentActivity: void onNewIntent(android.content.Intent)>
<android.app.Application: void onCreate()>
<com.battlelancer.seriesguide.ui.ActivityFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.graphics.Rect: void <clinit>()>
<com.uwetrottmann.seriesguide.backend.episodes.Episodes: void <init>(com.uwetrottmann.seriesguide.backend.episodes.Episodes$Builder)>
<com.squareup.okio.Buffer: void <init>()>
<android.support.v4.widget.DrawerLayout$SavedState: void <init>(android.os.Parcelable)>
<java.util.HashSet: void <init>(java.util.Collection)>
<com.google.android.gms.common.api.d: void <init>()>
<com.squareup.okhttp.internal.DiskLruCache: com.squareup.okio.BufferedSink access$000(com.squareup.okhttp.internal.DiskLruCache)>
<java.lang.Double: void <init>(double)>
<com.squareup.picasso.Request$Builder: boolean hasImage()>
<com.google.android.gms.internal.ll$a: void <init>()>
<com.squareup.picasso.Downloader$Response: long getContentLength()>
<android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase: int getFinalX(java.lang.Object)>
<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>
<java.lang.Class: java.lang.Class getSuperclass()>
<android.widget.ScrollView: void <init>(android.content.Context)>
<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>
<com.jakewharton.trakt.enumerations.Rating: void <init>(java.lang.String,int,java.lang.String)>
<android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase: void startScroll(java.lang.Object,int,int,int,int,int)>
<com.google.android.gms.analytics.ah: void a(com.google.android.gms.analytics.ab,java.net.URL,boolean)>
<com.google.android.gms.common.SupportErrorDialogFragment: void onCancel(android.content.DialogInterface)>
<android.graphics.Paint$Style: void <init>(java.lang.String,int)>
<android.widget.TextView: void onLayout(boolean,int,int,int,int)>
<java.io.FilterOutputStream: void flush()>
<com.battlelancer.seriesguide.util.ServiceUtils: void searchYoutube(android.content.Context,java.lang.String,java.lang.String)>
<android.util.Base64: java.lang.String encodeToString(byte[],int)>
<java.util.concurrent.LinkedBlockingQueue: void <init>()>
<java.io.StringReader: int read()>
<retrofit.Platform: void <clinit>()>
<android.widget.TextView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.tonicartos.widget.stickygridheaders.StickyGridHeadersGridView: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>
<java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment$1: void <init>(com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment)>
<com.squareup.okhttp.Connection: void incrementRecycleCount()>
<com.squareup.picasso.BitmapHunter: boolean requiresInSampleSize(android.graphics.BitmapFactory$Options)>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential: com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential setSelectedAccountName(java.lang.String)>
<android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)>
<android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: java.lang.Object newEdgeEffect(android.content.Context)>
<android.widget.ImageView: void drawableStateChanged()>
<com.google.android.gms.plus.PlusOneButton: void C(android.content.Context)>
<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okio.Source getSource()>
<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>
<com.battlelancer.seriesguide.ui.PersonFragment: void access$000(com.battlelancer.seriesguide.ui.PersonFragment,boolean)>
<android.widget.ScrollView: void onLayout(boolean,int,int,int,int)>
<com.squareup.picasso.FileBitmapHunter: int getFileExifRotation(android.net.Uri)>
<com.google.api.client.util.Types$1: void <init>(java.lang.Object)>
<java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$ListItems: java.lang.String generateListItemIdWildcard(int,int)>
<com.google.gson.stream.JsonReader: void beginObject()>
<com.battlelancer.seriesguide.util.TraktSummaryTask: void <init>(android.content.Context,android.view.View,boolean)>
<com.google.android.gms.analytics.l: void error(java.lang.String)>
<com.battlelancer.seriesguide.backend.CloudSetupFragment: void updateViewStates()>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment$1: void <init>(com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment)>
<retrofit.client.ApacheClient: void <init>(org.apache.http.client.HttpClient)>
<com.squareup.okhttp.internal.spdy.Spdy3$Writer: void sendDataFrame(int,int,com.squareup.okio.Buffer,int)>
<com.mobeta.android.dslv.DragSortListView: int access$800(com.mobeta.android.dslv.DragSortListView)>
<android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)>
<java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>
<com.squareup.okio.Segment: com.squareup.okio.Segment pop()>
<com.jakewharton.trakt.Trakt: void <init>()>
<com.battlelancer.seriesguide.ui.PersonFragment: com.battlelancer.seriesguide.ui.PersonFragment newInstance(int)>
<android.view.ScaleGestureDetector: void <init>(android.content.Context,android.view.ScaleGestureDetector$OnScaleGestureListener)>
<java.util.Arrays: java.util.List asList(java.lang.Object[])>
<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSink: void flush()>
<java.util.ArrayList: boolean equals(java.lang.Object)>
<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>
<java.util.HashSet: boolean remove(java.lang.Object)>
<android.support.v4.content.Loader: void onAbandon()>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment$5: void onClick(android.view.View)>
<android.widget.ProgressBar: void onDraw(android.graphics.Canvas)>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeType: java.util.List getEpisodesForHexagon()>
<com.google.android.gms.common.AccountPicker: android.content.Intent a(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,boolean,int,int)>
<com.battlelancer.seriesguide.backend.CloudSetupFragment: void signOut()>
<com.battlelancer.seriesguide.ui.ListsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.view.View: int getPaddingBottom()>
<com.google.android.gms.analytics.aj: void <init>()>
<com.squareup.okhttp.internal.http.CacheStrategy$Factory: long cacheResponseAge()>
<com.google.android.gms.analytics.ai$a: void c(java.lang.String,boolean)>
<com.squareup.okio.SegmentPool: com.squareup.okio.Segment take()>
<java.lang.Object: java.lang.Class getClass()>
<android.support.v4.content.Loader: void startLoading()>
<java.io.ByteArrayOutputStream: java.lang.String toString()>
<android.widget.TextView: boolean onTouchEvent(android.view.MotionEvent)>
<timber.log.Timber$1: void <init>()>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment: void onRate(com.jakewharton.trakt.enumerations.Rating)>
<com.google.android.gms.analytics.k: com.google.android.gms.analytics.j a(android.content.res.XmlResourceParser)>
<com.battlelancer.seriesguide.util.Utils: void updateTheme(java.lang.String)>
<com.battlelancer.seriesguide.ui.OverviewFragment: void onEpisodeSkipped()>
<com.battlelancer.seriesguide.ui.OverviewFragment: void access$500(com.battlelancer.seriesguide.ui.OverviewFragment)>
<com.squareup.okio.SegmentPool: void recycle(com.squareup.okio.Segment)>
<com.battlelancer.seriesguide.ui.ActivityFragment: void checkInEpisode(int)>
<android.support.v4.app.ActionBarDrawerToggle: void onConfigurationChanged(android.content.res.Configuration)>
<com.squareup.okhttp.internal.http.CacheStrategy: boolean isCacheable(com.squareup.okhttp.Response,com.squareup.okhttp.Request)>
<com.squareup.okio.Buffer$2: void <init>(com.squareup.okio.Buffer)>
<java.lang.StringBuilder: void <init>(int)>
<java.net.URLConnection: int getHeaderFieldInt(java.lang.String,int)>
<com.squareup.okio.Buffer: short readShort()>
<org.apache.oltu.oauth2.common.message.types.GrantType: void <init>(java.lang.String,int,java.lang.String)>
<android.os.AsyncTask$Status: void <init>(java.lang.String,int)>
<com.google.android.gms.analytics.GoogleAnalytics: boolean isDryRunEnabled()>
<com.squareup.okio.Okio: com.squareup.okio.Sink sink(java.io.OutputStream)>
<android.content.Intent: android.content.Intent setAction(java.lang.String)>
<com.squareup.okhttp.internal.http.SpdyTransport: void <init>(com.squareup.okhttp.internal.http.HttpEngine,com.squareup.okhttp.internal.spdy.SpdyConnection)>
<com.battlelancer.seriesguide.ui.AddActivity: void onResume()>
<android.support.v4.widget.DrawerLayout$LayoutParams: void <init>(int,int)>
<java.util.Timer: void schedule(java.util.TimerTask,long)>
<com.google.gson.internal.bind.SqlDateTypeAdapter: void <clinit>()>
<com.google.android.gms.common.GooglePlayServicesRepairableException: int getConnectionStatusCode()>
<com.google.api.client.util.Data: void deepCopy(java.lang.Object,java.lang.Object)>
<com.google.android.gms.analytics.v$a: void <init>()>
<com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment$2: void onClick(android.view.View)>
<android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl: int metaStateFilterDirectionalModifiers(int,int,int,int,int)>
<com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection: java.io.OutputStream getOutputStream()>
<com.google.api.client.json.gson.GsonParser: java.lang.String getText()>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void access$1200(com.squareup.okhttp.internal.spdy.SpdyConnection,int,com.squareup.okio.BufferedSource,int,boolean)>
<com.battlelancer.seriesguide.provider.SeriesGuideProvider: void shutdown()>
<android.support.v4.widget.DrawerLayout$LayoutParams: void <init>(android.support.v4.widget.DrawerLayout$LayoutParams)>
<java.net.Socket: void <init>(java.net.Proxy)>
<retrofit.RestAdapter: java.lang.Object create(java.lang.Class)>
<com.mobeta.android.dslv.DragSortListView$DragSortTracker: void stopTracking()>
<android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>
<com.google.api.client.http.javanet.NetHttpResponse: java.lang.String getStatusLine()>
<com.google.api.client.http.GenericUrl: com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object)>
<com.squareup.okhttp.Headers: java.util.List values(java.lang.String)>
<android.widget.TextView: void onStartTemporaryDetach()>
<de.greenrobot.event.SubscriberMethod: void <init>(java.lang.reflect.Method,de.greenrobot.event.ThreadMode,java.lang.Class)>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpRequest setRequestMethod(java.lang.String)>
<java.math.BigInteger: boolean equals(java.lang.Object)>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: void <init>(java.net.URL,com.squareup.okhttp.OkHttpClient)>
<com.battlelancer.seriesguide.util.TraktTask: void <init>(android.content.Context)>
<android.util.Log: int i(java.lang.String,java.lang.String)>
<android.widget.ScrollView: void requestChildFocus(android.view.View,android.view.View)>
<android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: void <init>()>
<com.battlelancer.seriesguide.provider.SeriesGuideProvider: void <init>()>
<com.google.api.client.util.Types: java.lang.Class getRawArrayComponentType(java.util.List,java.lang.reflect.Type)>
<com.battlelancer.seriesguide.dataliberation.JsonExportTask: int exportLists(java.io.File)>
<java.lang.Double: boolean isInfinite(double)>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<java.io.InputStream: long skip(long)>
<com.google.api.client.util.IOUtils: long computeLength(com.google.api.client.util.StreamingContent)>
<com.crashlytics.android.Crashlytics: com.crashlytics.android.Crashlytics getInstance()>
<com.google.android.gms.analytics.h: boolean a(com.google.android.gms.analytics.h,boolean)>
<android.graphics.drawable.ColorDrawable: void <init>(int)>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity$ExportDatabaseTask: void <init>(com.battlelancer.seriesguide.ui.BackupDeleteActivity,com.battlelancer.seriesguide.ui.BackupDeleteActivity$1)>
<retrofit.android.AndroidLog: void <init>(java.lang.String)>
<com.google.android.gms.analytics.g: void <clinit>()>
<com.battlelancer.seriesguide.ui.PeopleFragment$3: void <init>(com.battlelancer.seriesguide.ui.PeopleFragment)>
<com.battlelancer.seriesguide.util.ShowTools$ShowsUploadTask: java.lang.Object doInBackground(java.lang.Object[])>
<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>
<com.squareup.okhttp.internal.spdy.Settings: boolean persistValue(int)>
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>
<java.lang.Float: void <init>(float)>
<com.google.api.client.http.HttpHeaders: java.lang.Object getFirstHeaderValue(java.util.List)>
<com.google.myjson.LongSerializationPolicy$1: void <init>(java.lang.String,int)>
<android.support.v4.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>
<com.squareup.okio.Buffer: long read(com.squareup.okio.Buffer,long)>
<android.view.View: int getLayoutDirection()>
<com.squareup.picasso.BitmapHunter$3: void run()>
<com.squareup.picasso.MarkableInputStream: int read(byte[])>
<com.squareup.okio.DeflaterSink: void flush()>
<uk.co.senab.photoview.Compat: int getPointerIndexEclair(int)>
<com.mobeta.android.dslv.DragSortController: int startDragPosition(android.view.MotionEvent)>
<java.lang.Byte: java.lang.Byte valueOf(byte)>
<com.squareup.okio.DeflaterSink: void <init>(com.squareup.okio.Sink,java.util.zip.Deflater)>
<com.squareup.okhttp.Protocol: java.lang.String toString()>
<com.squareup.okhttp.internal.DiskLruCache$Entry: void <init>(com.squareup.okhttp.internal.DiskLruCache,java.lang.String,com.squareup.okhttp.internal.DiskLruCache$1)>
<com.squareup.tape.InMemoryObjectQueue: void <init>()>
<com.battlelancer.seriesguide.util.LocalOnlyOkHttpDownloader: java.io.File createDefaultCacheDir(android.content.Context)>
<com.battlelancer.seriesguide.enums.TraktAction: void <clinit>()>
<android.support.v4.os.ParcelableCompatCreatorHoneycombMR2: void <init>(android.support.v4.os.ParcelableCompatCreatorCallbacks)>
<retrofit.Endpoints: retrofit.Endpoint newFixedEndpoint(java.lang.String)>
<com.battlelancer.seriesguide.ui.AddActivity: void <init>()>
<com.battlelancer.seriesguide.ui.PeopleFragment: int access$400(com.battlelancer.seriesguide.ui.PeopleFragment)>
<com.battlelancer.seriesguide.ui.dialogs.AddListDialogFragment: void onAttach(android.app.Activity)>
<android.appwidget.AppWidgetManager: void <init>()>
<android.support.v4.widget.DrawerLayout$ViewDragCallback: void onViewReleased(android.view.View,float,float)>
<com.squareup.okio.RealBufferedSource: void close()>
<com.squareup.okhttp.ConnectionPool: void <clinit>()>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeWatchedType: int getLastWatchedEpisodeTvdbId()>
<android.support.v4.app.Fragment: void performPause()>
<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.google.gson.internal.bind.TypeAdapters$1: void <init>()>
<android.widget.ProgressBar: void setVisibility(int)>
<com.battlelancer.seriesguide.util.Utils: void trackAction(android.content.Context,java.lang.String,java.lang.String)>
<java.util.zip.Deflater: void finish()>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<android.view.View: void setDrawingCacheEnabled(boolean)>
<com.google.myjson.internal.bind.SqlDateTypeAdapter$1: void <init>()>
<com.squareup.okhttp.Request$Builder: java.net.URL access$500(com.squareup.okhttp.Request$Builder)>
<java.lang.String: java.lang.String toLowerCase()>
<uk.co.senab.photoview.gestures.CupcakeGestureDetector: boolean onTouchEvent(android.view.MotionEvent)>
<com.battlelancer.seriesguide.util.ServiceUtils$6: void onClick(android.view.View)>
<java.io.BufferedInputStream: void reset()>
<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<com.google.api.client.util.ArrayMap: java.lang.Object getKey(int)>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpRequest setEncoding(com.google.api.client.http.HttpEncoding)>
<java.math.BigInteger: java.lang.String toString()>
<com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getSslSocketFactory()>
<com.google.api.client.util.ArrayMap$Entry: java.lang.Object getValue()>
<com.battlelancer.seriesguide.ui.dialogs.AddListDialogFragment$2: void onClick(android.view.View)>
<com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.google.android.gms.analytics.t: void init()>
<com.google.gson.internal.$Gson$Types: void checkNotPrimitive(java.lang.reflect.Type)>
<de.greenrobot.event.EventBus: void postToSubscription(de.greenrobot.event.Subscription,java.lang.Object,boolean)>
<android.view.KeyEvent: void startTracking()>
<com.google.api.client.http.javanet.NetHttpResponse: java.lang.String getContentType()>
<com.google.myjson.internal.bind.TypeAdapters$21: void <init>()>
<com.squareup.okhttp.Cache: void update(com.squareup.okhttp.Response,com.squareup.okhttp.Response)>
<com.battlelancer.seriesguide.appwidget.ListWidgetConfigure: void onCreate(android.os.Bundle)>
<com.battlelancer.seriesguide.util.TmdbTools$ProfileImageSize: void <clinit>()>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Episodes: java.lang.String getEpisodeId(android.net.Uri)>
<org.apache.oltu.oauth2.common.message.types.ResponseType: void <clinit>()>
<com.squareup.picasso.PicassoDrawable: void setBitmap(android.widget.ImageView,android.content.Context,android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom,boolean,boolean)>
<android.content.Context: void <init>()>
<com.battlelancer.seriesguide.dataliberation.DataLiberationActivity: void setupActionBar()>
<org.apache.http.client.methods.HttpRequestBase: void abort()>
<com.google.gson.GsonBuilder: void <init>()>
<com.squareup.okhttp.internal.http.CacheStrategy: void <init>(com.squareup.okhttp.Request,com.squareup.okhttp.Response,com.squareup.okhttp.internal.http.CacheStrategy$1)>
<com.battlelancer.seriesguide.util.FlagTapedTask: android.os.Handler access$700()>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long,int)>
<java.io.File: boolean delete()>
<android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2: java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int)>
<android.widget.ListView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Shows: void <clinit>()>
<com.battlelancer.seriesguide.ui.ShowsActivity: void hideProgressDialog()>
<android.support.v4.widget.ViewDragHelper: float distanceInfluenceForSnapDuration(float)>
<com.google.android.gms.analytics.g: void u(android.content.Context)>
<android.app.Dialog: void setOwnerActivity(android.app.Activity)>
<java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>
<com.squareup.okhttp.internal.Util: com.squareup.okhttp.internal.http.RetryableSink emptySink()>
<android.app.Dialog: void setContentView(android.view.View)>
<android.graphics.Matrix$ScaleToFit: void <init>(java.lang.String,int)>
<com.google.android.gms.analytics.t: java.util.concurrent.LinkedBlockingQueue ct()>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$3: void <init>(com.battlelancer.seriesguide.ui.MovieDetailsFragment,boolean)>
<com.battlelancer.seriesguide.ui.FirstRunFragment$1: void onClick(android.view.View)>
<com.google.android.gms.auth.GoogleAuthUtil: void <clinit>()>
<com.squareup.okhttp.Response: int code()>
<com.battlelancer.seriesguide.extensions.ExtensionManager: void <clinit>()>
<com.google.api.client.util.FieldInfo: com.google.api.client.util.FieldInfo of(java.lang.Enum)>
<android.app.Notification: void <init>()>
<com.battlelancer.seriesguide.ui.OverviewFragment: void access$600(com.battlelancer.seriesguide.ui.OverviewFragment)>
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: void <init>()>
<com.squareup.picasso.PicassoDrawable: void setPlaceholder(android.widget.ImageView,int,android.graphics.drawable.Drawable)>
<android.support.v4.view.ViewPager: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
<uk.co.senab.photoview.DefaultOnDoubleTapListener: void setPhotoViewAttacher(uk.co.senab.photoview.PhotoViewAttacher)>
<com.squareup.okio.Timeout: void <clinit>()>
<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder header(java.lang.String,java.lang.String)>
<com.google.api.client.util.Types: java.lang.Object newInstance(java.lang.Class)>
<com.google.api.client.json.gson.GsonParser: java.math.BigInteger getBigIntegerValue()>
<com.battlelancer.seriesguide.util.TimeTools: void <clinit>()>
<android.graphics.RectF: float centerX()>
<android.app.Dialog: void setOnCancelListener(android.content.DialogInterface$OnCancelListener)>
<com.battlelancer.seriesguide.dataliberation.JsonExportTask$ShowsQuery: void <clinit>()>
<com.battlelancer.seriesguide.thetvdbapi.TheTVDB: java.lang.String buildPosterUrl(java.lang.String)>
<java.util.zip.Deflater: void <init>()>
<com.squareup.okio.Buffer$2: int read()>
<java.text.DateFormat: java.text.DateFormat getDateInstance(int)>
<com.battlelancer.seriesguide.ui.ShowFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<android.support.v4.view.ViewPager$2: void <init>()>
<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: java.lang.String getResponseMessage()>
<com.google.myjson.stream.JsonWriter: com.google.myjson.stream.JsonWriter close(int,int,java.lang.String)>
<com.squareup.okhttp.Handshake: void <init>(java.lang.String,java.util.List,java.util.List)>
<com.battlelancer.seriesguide.ui.PersonFragment: void populatePersonViews(com.uwetrottmann.tmdb.entities.Person)>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter nullValue()>
<android.view.animation.AccelerateInterpolator: void <init>(float)>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential: void initialize(com.google.api.client.http.HttpRequest)>
<com.squareup.picasso.BitmapHunter: void calculateInSampleSize(int,int,int,int,android.graphics.BitmapFactory$Options)>
<com.mobeta.android.dslv.DragSortListView: int getChildHeight(int,android.view.View,boolean)>
<uk.co.senab.photoview.PhotoViewAttacher: float getValue(android.graphics.Matrix,int)>
<com.google.api.client.googleapis.services.AbstractGoogleClient: java.lang.String normalizeRootUrl(java.lang.String)>
<com.google.android.gms.analytics.y: java.lang.String a(com.google.android.gms.analytics.x,long)>
<android.support.v4.app.Fragment: java.lang.String toString()>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment$3: void <init>(com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>
<com.uwetrottmann.seriesguide.backend.shows.Shows$Builder: com.uwetrottmann.seriesguide.backend.shows.Shows$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer)>
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>
<android.support.v4.view.ViewCompatJellybeanMr1: int getLayoutDirection(android.view.View)>
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest: com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient getAbstractGoogleClient()>
<com.battlelancer.seriesguide.billing.BillingActivity: void access$100(com.battlelancer.seriesguide.billing.BillingActivity)>
<com.battlelancer.seriesguide.ui.ShowFragment$2: void onClick(android.view.View)>
<com.google.api.client.http.UrlEncodedParser: void parse(java.lang.String,java.lang.Object)>
<android.widget.OverScroller: int getCurrX()>
<java.lang.String: java.lang.String toUpperCase()>
<java.io.OutputStreamWriter: void close()>
<android.support.v4.view.ViewPager: void drawableStateChanged()>
<android.support.v4.app.NotificationCompat$BigTextStyle: android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence)>
<android.support.v4.widget.DrawerLayout$ViewDragCallback: void onViewPositionChanged(android.view.View,int,int,int,int)>
<android.widget.FrameLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.google.gson.internal.bind.TypeAdapters$15: void <init>()>
<com.battlelancer.seriesguide.util.LocalOnlyOkHttpDownloader: long calculateDiskCacheSize(java.io.File)>
<com.battlelancer.seriesguide.ui.OverviewFragment$7: void onClick(android.view.View)>
<com.google.gson.internal.bind.TypeAdapters$26: void <init>()>
<com.google.api.client.http.apache.ApacheHttpTransport: org.apache.http.params.HttpParams newDefaultHttpParams()>
<java.util.Arrays: int hashCode(java.lang.Object[])>
<com.squareup.picasso.ContactsPhotoBitmapHunter: void <init>(android.content.Context,com.squareup.picasso.Picasso,com.squareup.picasso.Dispatcher,com.squareup.picasso.Cache,com.squareup.picasso.Stats,com.squareup.picasso.Action)>
<android.database.DataSetObserver: void <init>()>
<android.content.ContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)>
<com.squareup.okhttp.internal.spdy.NameValueBlockReader$2: int inflate(byte[],int,int)>
<com.squareup.okio.Okio$1: void flush()>
<com.battlelancer.seriesguide.billing.BillingActivity: void setWaitMode(boolean)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: com.squareup.okhttp.internal.spdy.SpdyStream newStream(int,java.util.List,boolean,boolean)>
<android.support.v4.app.Fragment: void <clinit>()>
<com.squareup.okhttp.internal.DiskLruCache: void trimToSize()>
<com.squareup.okhttp.internal.Util: java.util.List immutableList(java.util.List)>
<uk.co.senab.photoview.gestures.CupcakeGestureDetector: void setOnGestureListener(uk.co.senab.photoview.gestures.OnGestureListener)>
<android.support.v4.widget.ViewDragHelper: void ensureMotionHistorySizeForId(int)>
<com.squareup.okhttp.internal.http.CacheStrategy$Factory: long computeFreshnessLifetime()>
<java.lang.String: boolean equals(java.lang.Object)>
<uk.co.senab.photoview.scrollerproxy.PreGingerScroller: void fling(int,int,int,int,int,int,int,int,int,int)>
<android.support.v4.widget.CursorAdapter$MyDataSetObserver: void <init>(android.support.v4.widget.CursorAdapter)>
<com.battlelancer.seriesguide.ui.SeasonsFragment$3: void <init>(com.battlelancer.seriesguide.ui.SeasonsFragment,int,int)>
<android.support.v4.app.Fragment: void onDestroyView()>
<android.app.Activity: void startActivity(android.content.Intent,android.os.Bundle)>
<com.squareup.okhttp.internal.Util: void checkOffsetAndCount(long,long,long)>
<com.mobeta.android.dslv.DragSortController: int access$400(com.mobeta.android.dslv.DragSortController)>
<android.support.v4.app.FragmentManagerImpl: void performPendingDeferredStart(android.support.v4.app.Fragment)>
<com.google.gson.internal.bind.DateTypeAdapter$1: void <init>()>
<android.support.v4.content.AsyncTaskLoader$LoadTask: void <init>(android.support.v4.content.AsyncTaskLoader)>
<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<com.battlelancer.seriesguide.loaders.MovieLoader: void <init>(android.content.Context,int)>
<com.battlelancer.seriesguide.ui.PeopleFragment$4: void onLoadFinished(android.support.v4.content.Loader,com.uwetrottmann.tmdb.entities.Credits)>
<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>
<com.squareup.okio.Buffer: void readFully(byte[])>
<com.battlelancer.seriesguide.provider.SeriesGuideContract: void <clinit>()>
<com.battlelancer.seriesguide.ui.OverviewFragment$1: void onClick(android.view.View)>
<com.squareup.okhttp.internal.http.OkHeaders: boolean isEndToEnd(java.lang.String)>
<com.squareup.okio.InflaterSource: com.squareup.okio.Timeout timeout()>
<java.io.FileOutputStream: void <init>(java.io.File,boolean)>
<java.util.HashSet: java.util.Iterator iterator()>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.Number)>
<com.google.gson.internal.$Gson$Types: void access$000(java.lang.reflect.Type)>
<com.google.android.gms.analytics.Tracker: void a(com.google.android.gms.analytics.aj)>
<com.battlelancer.seriesguide.util.ServiceUtils: void searchGooglePlay(java.lang.String,java.lang.String,android.content.Context)>
<android.view.ViewGroup: int getDescendantFocusability()>
<java.lang.Double: java.lang.String toString(double)>
<com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSource: long read(com.squareup.okio.Buffer,long)>
<com.google.api.client.http.apache.ApacheHttpRequest: void setTimeout(int,int)>
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl: java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat)>
<android.support.v4.content.Loader: boolean isReset()>
<com.squareup.okhttp.internal.http.HttpMethod: void <clinit>()>
<com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment: void onLoaderReset(android.support.v4.content.Loader)>
<com.google.android.gms.internal.et: void <clinit>()>
<android.os.Handler: void removeMessages(int)>
<android.view.View: void onSizeChanged(int,int,int,int)>
<com.squareup.okhttp.internal.DiskLruCache: com.squareup.okhttp.internal.DiskLruCache$Editor edit(java.lang.String,long)>
<com.google.gson.internal.$Gson$Types$WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>
<com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()>
<com.battlelancer.seriesguide.settings.AppSettings: boolean isGaAppOptOut(android.content.Context)>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.squareup.okhttp.internal.spdy.Huffman$Node: void <init>()>
<android.view.View: void sendAccessibilityEvent(int)>
<com.battlelancer.seriesguide.ui.EpisodesFragment: void access$000(com.battlelancer.seriesguide.ui.EpisodesFragment,java.lang.String)>
<com.battlelancer.seriesguide.billing.BillingActivity: void complain(java.lang.String)>
<com.squareup.okio.ByteString: com.squareup.okio.ByteString toAsciiLowercase()>
<com.google.api.client.util.Types: boolean isArray(java.lang.reflect.Type)>
<android.support.v4.widget.DrawerLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()>
<android.util.SparseArray: void clear()>
<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>
<java.lang.Short: java.lang.Short valueOf(java.lang.String)>
<com.battlelancer.seriesguide.provider.SeriesGuideProvider: android.net.Uri insertInTransaction(android.net.Uri,android.content.ContentValues)>
<com.squareup.okhttp.internal.http.RouteSelector: boolean hasNextPostponed()>
<com.google.myjson.FieldNamingPolicy$2: void <init>(java.lang.String,int)>
<android.preference.Preference: void setEnabled(boolean)>
<com.google.myjson.internal.$Gson$Types$WildcardTypeImpl: void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[])>
<android.support.v4.view.ViewPager: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.widget.ImageView: void onAttachedToWindow()>
<com.google.android.gms.analytics.ExceptionReporter: void <init>(com.google.android.gms.analytics.Tracker,java.lang.Thread$UncaughtExceptionHandler,android.content.Context)>
<android.support.v4.view.ViewPager: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl: java.lang.String getResponseMessage()>
<com.google.android.gms.analytics.z: boolean do()>
<com.uwetrottmann.seriesguide.backend.episodes.EpisodesRequest: com.uwetrottmann.seriesguide.backend.episodes.Episodes getAbstractGoogleClient()>
<com.google.android.apps.dashclock.api.DashClockExtension$1: void <init>(com.google.android.apps.dashclock.api.DashClockExtension)>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Reader: void readHeaders()>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$9: void onLoaderReset(android.support.v4.content.Loader)>
<com.google.api.client.util.DataMap$Entry: java.lang.Object getValue()>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Reader$1: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection$Reader,java.lang.String,java.lang.Object[],com.squareup.okhttp.internal.spdy.SpdyStream)>
<com.battlelancer.seriesguide.ui.dialogs.ListManageDialogFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.battlelancer.seriesguide.extensions.ExtensionManager: void loadSubscriptions()>
<android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB: void <init>(android.support.v4.app.ActivityOptionsCompatJB)>
<com.squareup.okhttp.internal.spdy.Spdy3: void <init>()>
<com.battlelancer.seriesguide.migration.MigrationActivity: android.widget.ProgressBar access$100(com.battlelancer.seriesguide.migration.MigrationActivity)>
<android.util.DisplayMetrics: void <init>()>
<com.google.api.client.http.HttpHeaders: void addHeader(java.util.logging.Logger,java.lang.StringBuilder,java.lang.StringBuilder,com.google.api.client.http.LowLevelHttpRequest,java.lang.String,java.lang.Object,java.io.Writer)>
<java.util.HashSet: boolean contains(java.lang.Object)>
<java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>
<com.google.api.client.http.HttpResponseException: void <init>(com.google.api.client.http.HttpResponseException$Builder)>
<com.google.android.gms.analytics.x: void <init>(java.lang.String,long,long)>
<java.lang.Byte: java.lang.Byte valueOf(java.lang.String)>
<android.widget.TextView: void onRtlPropertiesChanged(int)>
<java.util.WeakHashMap: void <init>()>
<com.google.android.gms.analytics.ac: android.content.Context c(com.google.android.gms.analytics.ac)>
<java.util.WeakHashMap: java.lang.Object remove(java.lang.Object)>
<com.battlelancer.seriesguide.util.ServiceUtils$5: void <init>(java.lang.String,java.lang.String)>
<java.lang.String: java.lang.String[] split(java.lang.String)>
<android.widget.FrameLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
<uk.co.senab.photoview.PhotoView: void setOnLongClickListener(android.view.View$OnLongClickListener)>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment$9: void onClick(android.view.View)>
<java.lang.Float: boolean isNaN(float)>
<com.battlelancer.seriesguide.util.EpisodeTools: java.lang.String[] access$000()>
<android.content.AbstractThreadedSyncAdapter: void <init>(android.content.Context,boolean)>
<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.api.client.googleapis.services.AbstractGoogleClientRequest: void <init>(com.google.api.client.googleapis.services.AbstractGoogleClient,java.lang.String,java.lang.String,com.google.api.client.http.HttpContent,java.lang.Class)>
<android.view.View: int getDefaultSize(int,int)>
<com.battlelancer.seriesguide.items.Series: void setLastEdit(long)>
<android.widget.TextView: void onFinishTemporaryDetach()>
<com.google.api.client.util.Types: java.lang.reflect.ParameterizedType getSuperParameterizedType(java.lang.reflect.Type,java.lang.Class)>
<com.google.api.client.util.Preconditions: void checkArgument(boolean,java.lang.Object)>
<com.squareup.okhttp.Cache$Entry: void <init>(java.io.InputStream)>
<com.google.myjson.stream.JsonWriter: com.google.myjson.stream.JsonWriter endArray()>
<android.support.v4.widget.DrawerLayout: void closeDrawers(boolean)>
<com.google.api.client.http.GenericUrl: java.lang.String buildRelativeUrl()>
<com.mobeta.android.dslv.DragSortListView: int access$900(com.mobeta.android.dslv.DragSortListView)>
<com.google.android.gms.internal.hm: void a(boolean,java.lang.String,java.lang.Object[])>
<com.squareup.okhttp.internal.tls.DistinguishedNameParser: java.lang.String hexAV()>
<com.battlelancer.seriesguide.billing.BillingActivity$4: void <init>(com.battlelancer.seriesguide.billing.BillingActivity)>
<com.battlelancer.seriesguide.util.RemoveShowWorkerFragment: void onCreate(android.os.Bundle)>
<com.battlelancer.seriesguide.dataliberation.JsonExportTask: void writeJsonStreamShows(java.io.OutputStream,android.database.Cursor)>
<com.squareup.okhttp.ConnectionPool: void <init>(int,long)>
<com.mobeta.android.dslv.DragSortListView: void access$1900(com.mobeta.android.dslv.DragSortListView)>
<android.widget.ImageView: void onDraw(android.graphics.Canvas)>
<com.squareup.okhttp.internal.DiskLruCache: void processJournal()>
<com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment: void onDestroyView()>
<com.readystatesoftware.systembartint.SystemBarTintManager: void setupNavBarView(android.content.Context,android.view.ViewGroup)>
<com.google.api.client.http.UriTemplate: java.lang.String getMapPropertyValue(java.lang.String,java.util.Map,boolean,com.google.api.client.http.UriTemplate$CompositeOutput)>
<com.battlelancer.seriesguide.util.FlagTapedTask: com.jakewharton.trakt.services.ShowService access$500(com.battlelancer.seriesguide.util.FlagTapedTask)>
<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>
<com.squareup.okio.Okio$3: void <init>(java.net.Socket)>
<android.widget.ArrayAdapter: void clear()>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$9: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<com.battlelancer.seriesguide.util.PeopleListHelper: void populateCrew(android.content.Context,android.view.LayoutInflater,android.view.ViewGroup,com.uwetrottmann.tmdb.entities.Credits,com.battlelancer.seriesguide.ui.PeopleActivity$MediaType)>
<android.support.v4.app.ShareCompat$IntentBuilder: void combineArrayExtra(java.lang.String,java.util.ArrayList)>
<com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment: void <init>()>
<com.google.myjson.FieldNamingPolicy$3: void <init>(java.lang.String,int)>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent)>
<com.google.gson.internal.bind.TypeAdapters$22: void <init>()>
<com.squareup.okhttp.internal.spdy.SpdyConnection$1: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],int,com.squareup.okhttp.internal.spdy.ErrorCode)>
<com.google.api.client.util.escape.UnicodeEscaper: int codePointAt(java.lang.CharSequence,int,int)>
<com.google.myjson.internal.$Gson$Types: int hashCodeOrZero(java.lang.Object)>
<com.google.api.client.util.escape.UnicodeEscaper: java.lang.String escapeSlow(java.lang.String,int)>
<android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: boolean draw(java.lang.Object,android.graphics.Canvas)>
<android.support.v4.widget.ViewDragHelper$Callback: int getViewVerticalDragRange(android.view.View)>
<com.battlelancer.seriesguide.ui.FirstRunFragment: void access$000(com.battlelancer.seriesguide.ui.FirstRunFragment,java.lang.String)>
<android.app.Activity: void startActivity(android.content.Intent)>
<com.jakewharton.trakt.TraktHelper$5: void <init>()>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity$2: void onClick(android.view.View)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment: void onActivityCreated(android.os.Bundle)>
<com.squareup.okhttp.Route: boolean requiresTunnel()>
<com.google.android.gms.internal.hm: java.lang.Object f(java.lang.Object)>
<com.battlelancer.seriesguide.provider.SeriesGuideDatabase: long insertMovies(android.content.ContentValues)>
<com.uwetrottmann.seriesguide.backend.movies.Movies$Builder: com.uwetrottmann.seriesguide.backend.movies.Movies$Builder setRootUrl(java.lang.String)>
<retrofit.converter.GsonConverter: void <init>(com.google.gson.Gson)>
<com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection: void setConnectTimeout(int)>
<com.google.api.client.util.DateTime: java.lang.String toString()>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void settings(boolean,com.squareup.okhttp.internal.spdy.Settings)>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newDelete(android.net.Uri)>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean access$102(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource,boolean)>
<android.widget.TextView: boolean onTrackballEvent(android.view.MotionEvent)>
<com.battlelancer.seriesguide.ui.BaseActivity$1: void <init>(com.battlelancer.seriesguide.ui.BaseActivity,android.content.Context,int)>
<com.battlelancer.seriesguide.ui.BaseTopActivity: void onCreate(android.os.Bundle)>
<java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>
<android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread: java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator)>
<android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.battlelancer.seriesguide.ui.EpisodesFragment: void loadSortOrder()>
<com.squareup.okio.RealBufferedSource: short readShortLe()>
<com.google.android.gms.plus.internal.c$a: com.google.android.gms.plus.internal.c bl(android.os.IBinder)>
<com.squareup.okio.Buffer: com.squareup.okio.Buffer write(byte[])>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment$2: void <init>(com.battlelancer.seriesguide.ui.EpisodeDetailsFragment)>
<com.squareup.okio.Segment: com.squareup.okio.Segment split(int)>
<com.battlelancer.seriesguide.util.EpisodeTools: void episodeWatchedPrevious(android.content.Context,int,long)>
<android.support.v4.content.IntentCompat$IntentCompatImplBase: android.content.Intent makeMainActivity(android.content.ComponentName)>
<com.squareup.okhttp.internal.BitArray$VariableCapacity: void growToSize(int)>
<com.battlelancer.seriesguide.api.SeriesGuideExtension: android.content.SharedPreferences getSharedPreferences(android.content.Context,java.lang.String)>
<android.support.v4.view.ViewPager$SavedState: void <init>(android.os.Parcelable)>
<android.support.v4.util.TimeUtils: void <clinit>()>
<com.battlelancer.seriesguide.widgets.SlidingTabStrip: void <init>(android.content.Context)>
<org.apache.oltu.oauth2.client.request.OAuthClientRequest$AuthenticationRequestBuilder: org.apache.oltu.oauth2.client.request.OAuthClientRequest$AuthenticationRequestBuilder setScope(java.lang.String)>
<android.view.View: boolean hasWindowFocus()>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment: void access$400(com.battlelancer.seriesguide.ui.EpisodeDetailsFragment)>
<com.battlelancer.seriesguide.ui.StatsFragment$Stats: com.battlelancer.seriesguide.ui.StatsFragment$Stats episodes(int)>
<com.battlelancer.seriesguide.settings.NotificationSettings: int getLatestToIncludeTreshold(android.content.Context)>
<com.battlelancer.seriesguide.util.MovieTools: java.lang.Boolean isMovieExists(android.content.Context,int)>
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
<org.apache.http.message.BasicHttpEntityEnclosingRequest: void <init>(java.lang.String,java.lang.String)>
<com.battlelancer.seriesguide.adapters.TabStripAdapter: void notifyTabsChanged()>
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
<android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)>
<com.battlelancer.seriesguide.ui.EpisodesFragment: void setItemChecked(int)>
<com.google.api.client.http.HttpEncodingStreamingContent: void <init>(com.google.api.client.util.StreamingContent,com.google.api.client.http.HttpEncoding)>
<android.graphics.Matrix: boolean postScale(float,float,float,float)>
<com.google.myjson.stream.JsonReader: void setLenient(boolean)>
<com.squareup.okio.ByteString: void <init>(byte[])>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment$3: boolean onMenuItemClick(android.view.MenuItem)>
<com.battlelancer.seriesguide.ui.PeopleActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.squareup.okhttp.internal.DiskLruCache$Snapshot: void <init>(com.squareup.okhttp.internal.DiskLruCache,java.lang.String,long,java.io.InputStream[],long[],com.squareup.okhttp.internal.DiskLruCache$1)>
<android.content.ContentResolver: void removeStatusChangeListener(java.lang.Object)>
<com.google.android.gms.analytics.HitBuilders$AppViewBuilder: java.util.Map build()>
<android.support.v4.app.ListFragment: void ensureList()>
<com.google.android.gms.analytics.ak: java.lang.String a(java.util.Locale)>
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: int getLayoutDirection(android.view.View)>
<com.battlelancer.seriesguide.util.ServiceUtils: void setUpTraktButton(int,int,int,android.view.View,java.lang.String)>
<android.app.Dialog: void onRestoreInstanceState(android.os.Bundle)>
<android.support.v4.app.Fragment: void onStop()>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences: void setListPreferenceSummary(android.preference.ListPreference)>
<retrofit.Platform$Android: void <init>()>
<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Reader: void <init>(com.squareup.okio.BufferedSource,int,boolean)>
<com.google.myjson.Gson$4: void <init>(com.google.myjson.Gson)>
<com.google.android.gms.analytics.l: int getLogLevel()>
<android.support.v4.view.ViewPager$1: void <init>()>
<com.google.api.client.googleapis.services.AbstractGoogleClientRequest: com.google.api.client.googleapis.services.AbstractGoogleClient getAbstractGoogleClient()>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder: fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder mirrorMode(boolean)>
<com.google.android.gms.internal.ii: boolean F(android.content.Context)>
<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int,int)>
<android.support.v4.app.Fragment: void onAttach(android.app.Activity)>
<android.support.v4.app.Fragment: void onPause()>
<com.battlelancer.seriesguide.dashclock.UpcomingEpisodeSettingsActivity: void <clinit>()>
<com.battlelancer.seriesguide.ui.OverviewFragment$4: void onClick(android.view.View)>
<com.squareup.okhttp.Request: com.squareup.okhttp.CacheControl cacheControl()>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment: com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment newInstance(com.battlelancer.seriesguide.items.SearchResult)>
<com.mobeta.android.dslv.DragSortListView: float access$1602(com.mobeta.android.dslv.DragSortListView,float)>
<java.util.HashMap: void clear()>
<android.support.v4.app.BackStackRecord: int commit()>
<com.google.android.gms.analytics.c: void a(java.util.Map,long,java.lang.String,java.util.List)>
<com.crashlytics.android.Crashlytics: void <clinit>()>
<com.squareup.okhttp.internal.Platform$Android: void configureTls(javax.net.ssl.SSLSocket,java.lang.String,java.lang.String)>
<com.battlelancer.seriesguide.widgets.SlidingTabLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<retrofit.Platform$OkClientInstantiator: retrofit.client.Client instantiate()>
<android.support.v4.content.CursorLoader: void onReset()>
<android.widget.TextView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.support.v4.view.MotionEventCompatEclair: float getX(android.view.MotionEvent,int)>
<com.google.api.client.util.Data: java.lang.Object nullOf(java.lang.Class)>
<android.widget.TextView: void setPadding(int,int,int,int)>
<com.google.android.gms.analytics.c: void <init>(android.content.Context,com.google.android.gms.analytics.c$b,com.google.android.gms.analytics.c$c)>
<de.greenrobot.event.EventBus: void register(java.lang.Object,java.lang.String,boolean,int)>
<com.squareup.okhttp.internal.Platform: void configureTls(javax.net.ssl.SSLSocket,java.lang.String,java.lang.String)>
<com.google.android.gms.internal.et: int a(android.content.Context,int)>
<com.google.android.gms.analytics.r: com.google.android.gms.analytics.r cE()>
<com.google.api.client.googleapis.extensions.android.accounts.GoogleAccountManager: android.accounts.Account getAccountByName(java.lang.String)>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity: boolean access$200(com.battlelancer.seriesguide.ui.BackupDeleteActivity,int)>
<com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<com.google.api.client.util.GenericData$EntryIterator: java.util.Map$Entry next()>
<android.support.v4.app.FragmentManagerImpl: void saveFragmentViewState(android.support.v4.app.Fragment)>
<android.view.ViewGroup$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.RemoteViews: void setImageViewBitmap(int,android.graphics.Bitmap)>
<com.battlelancer.seriesguide.ui.OverviewFragment$11: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.squareup.okio.Buffer: void close()>
<com.google.gson.internal.bind.TypeAdapters$7: void <init>()>
<android.support.v4.view.ViewPager: int determineTargetPage(int,float,int,int)>
<com.jakewharton.trakt.services.CommentService$ShowComment: void <init>(int,java.lang.String)>
<com.google.android.gms.analytics.w: boolean dc()>
<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>
<java.lang.Math: double pow(double,double)>
<com.squareup.okhttp.internal.spdy.SpdyStream: java.util.List getResponseHeaders()>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean access$100(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSource)>
<android.support.v4.app.NavUtilsJB: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)>
<java.lang.Double: boolean isNaN(double)>
<android.os.Environment: java.lang.String getExternalStorageState()>
<android.graphics.Canvas: boolean clipRect(int,int,int,int)>
<com.battlelancer.seriesguide.ui.PeopleActivity$PeopleType: com.battlelancer.seriesguide.ui.PeopleActivity$PeopleType valueOf(java.lang.String)>
<com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment$2: void <init>(com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment)>
<com.squareup.okhttp.internal.BitArray$VariableCapacity: void <init>(com.squareup.okhttp.internal.BitArray$FixedCapacity)>
<com.squareup.okhttp.internal.DiskLruCache$Editor: com.squareup.okhttp.internal.DiskLruCache$Entry access$1400(com.squareup.okhttp.internal.DiskLruCache$Editor)>
<android.app.ListActivity: void <init>()>
<com.google.api.client.googleapis.services.AbstractGoogleClient$Builder: com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment: void access$400(com.battlelancer.seriesguide.ui.MovieDetailsFragment)>
<com.uwetrottmann.seriesguide.backend.episodes.Episodes$Builder: void <init>(com.google.api.client.http.HttpTransport,com.google.api.client.json.JsonFactory,com.google.api.client.http.HttpRequestInitializer)>
<com.battlelancer.seriesguide.util.ConnectTraktTask: java.lang.Object doInBackground(java.lang.Object[])>
<com.squareup.picasso.Picasso$LoadedFrom: void <clinit>()>
<com.battlelancer.seriesguide.ui.ActivityFragment: int access$200(com.battlelancer.seriesguide.ui.ActivityFragment)>
<com.battlelancer.seriesguide.ui.BaseTopActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.battlelancer.seriesguide.ui.ShowFragment$8: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<java.util.HashMap: java.util.Set entrySet()>
<android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>
<com.google.android.gms.analytics.ac: void b(java.util.Collection)>
<com.google.myjson.stream.JsonWriter: void <clinit>()>
<com.uwetrottmann.seriesguide.backend.shows.model.ShowList: com.uwetrottmann.seriesguide.backend.shows.model.ShowList setShows(java.util.List)>
<com.google.myjson.internal.bind.TypeAdapters$11: void <init>()>
<android.support.v4.view.ViewPager: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.google.myjson.Gson: void <init>(com.google.myjson.internal.Excluder,com.google.myjson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.myjson.LongSerializationPolicy,java.util.List)>
<android.support.v4.util.LruCache: void <init>(int)>
<com.battlelancer.seriesguide.backend.CloudSetupFragment$3: void onClick(android.view.View)>
<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.OkHttpClient setProxy(java.net.Proxy)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void onPopupMenuClick(android.view.View,int,int)>
<com.battlelancer.seriesguide.ui.ActivityFragment: void onRequery()>
<android.app.Activity: void startActivityForResult(android.content.Intent,int)>
<com.google.gson.internal.$Gson$Types: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>
<android.support.v4.widget.DrawerLayout$ViewDragCallback: void onViewCaptured(android.view.View,int)>
<com.battlelancer.seriesguide.ui.ShowFragment: com.battlelancer.seriesguide.ui.ShowFragment newInstance(int)>
<uk.co.senab.photoview.Compat: int getPointerIndexHoneyComb(int)>
<com.battlelancer.seriesguide.util.ShowTools$ShowsUploadTask: void <init>(android.content.Context,com.uwetrottmann.seriesguide.backend.shows.model.Show)>
<android.app.PendingIntent: void <clinit>()>
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment: com.battlelancer.seriesguide.items.SearchResult access$000(com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment)>
<com.battlelancer.seriesguide.util.Utils: boolean requiresPurchaseCheck(android.content.Context)>
<com.google.api.client.util.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>
<com.squareup.picasso.Utils: void closeQuietly(java.io.InputStream)>
<com.squareup.okhttp.OkHttpClient$1: boolean isSpdy(com.squareup.okhttp.Connection)>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Builder: com.squareup.okhttp.internal.spdy.PushObserver access$100(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder)>
<com.squareup.okhttp.internal.tls.OkHostnameVerifier: boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate)>
<android.app.Service: void onCreate()>
<android.widget.Button: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.battlelancer.seriesguide.ui.SearchFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.jakewharton.trakt.enumerations.Extended: com.jakewharton.trakt.enumerations.Extended[] values()>
<com.battlelancer.seriesguide.ui.dialogs.CheckInDialogFragment: void <init>()>
<com.google.myjson.internal.JsonReaderInternalAccess: void <init>()>
<java.lang.Class: boolean isArray()>
<com.battlelancer.seriesguide.util.Utils: void trackCustomEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
<com.battlelancer.seriesguide.ui.SearchFragment: void onPerformSearch(android.os.Bundle)>
<android.graphics.RectF: float width()>
<android.support.v4.app.FragmentManagerImpl: void popBackStack(int,int)>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment$ExtensionsDragSortController: void <init>(com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment)>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient: com.google.api.client.util.ObjectParser getObjectParser()>
<com.battlelancer.seriesguide.ui.ShowsActivity$1: void <init>(com.battlelancer.seriesguide.ui.ShowsActivity)>
<android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich: android.app.Notification build(android.support.v4.app.NotificationCompat$Builder)>
<android.support.v4.widget.ViewDragHelper: void processTouchEvent(android.view.MotionEvent)>
<com.google.android.gms.analytics.ah: java.lang.String a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.squareup.okio.RealBufferedSource: java.lang.String readUtf8LineStrict()>
<com.battlelancer.seriesguide.billing.Inventory: com.battlelancer.seriesguide.billing.SkuDetails getSkuDetails(java.lang.String)>
<android.support.v4.app.FragmentManagerImpl: void dispatchDestroy()>
<android.widget.LinearLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<timber.log.Timber: void w(java.lang.String,java.lang.Object[])>
<fr.castorflex.android.smoothprogressbar.SmoothProgressBar: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.OverScroller: int getFinalY()>
<com.battlelancer.seriesguide.util.TraktSummaryTask: com.jakewharton.trakt.Trakt getTrakt()>
<com.google.myjson.Gson$FutureTypeAdapter: void write(com.google.myjson.stream.JsonWriter,java.lang.Object)>
<com.squareup.okio.AsyncTimeout$2: com.squareup.okio.Timeout timeout()>
<android.text.format.DateFormat: java.text.DateFormat getDateFormat(android.content.Context)>
<android.widget.ListView: boolean canAnimate()>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>
<com.google.api.client.http.LowLevelHttpRequest: java.lang.String getContentType()>
<com.battlelancer.seriesguide.util.ParserUtils: void <clinit>()>
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<com.battlelancer.seriesguide.Constants$SeasonSorting: java.lang.String query()>
<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.AlertDialog$Builder: void <init>(android.content.Context,int)>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter beginObject()>
<com.battlelancer.seriesguide.ui.ShowFragment$7: void onClick(android.view.View)>
<com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>
<com.google.gson.internal.bind.TypeAdapters$16: void <init>()>
<android.support.v4.app.DialogFragment: void onCreate(android.os.Bundle)>
<com.google.android.gms.analytics.ai$a: com.google.android.gms.analytics.aj dD()>
<com.google.android.gms.analytics.w: int df()>
<com.google.android.gms.analytics.r: void a(boolean,boolean)>
<com.squareup.okhttp.OkUrlFactory: java.net.HttpURLConnection open(java.net.URL)>
<com.squareup.picasso.MarkableInputStream: int read(byte[],int,int)>
<com.battlelancer.seriesguide.ui.ShowsActivity: void setupViews()>
<com.squareup.okhttp.internal.spdy.SpdyConnection: boolean access$1402(com.squareup.okhttp.internal.spdy.SpdyConnection,boolean)>
<android.graphics.drawable.Drawable: void invalidateSelf()>
<android.support.v4.app.LoaderManagerImpl: android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>
<com.squareup.okhttp.internal.tls.DistinguishedNameParser: int getByte(int)>
<com.battlelancer.seriesguide.ui.FirstRunFragment: void fireTrackerEvent(java.lang.String)>
<com.uwetrottmann.getglue.GetGlue: void setAccessToken(java.lang.String)>
<uk.co.senab.photoview.scrollerproxy.PreGingerScroller: int getCurrX()>
<retrofit.Platform$Android: retrofit.RestAdapter$Log defaultLog()>
<com.squareup.okhttp.internal.http.HttpTransport: void disconnect(com.squareup.okhttp.internal.http.HttpEngine)>
<java.math.BigDecimal: boolean equals(java.lang.Object)>
<android.widget.ImageView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.support.v4.app.FragmentActivity: void invalidateSupportFragment(java.lang.String)>
<com.google.api.client.http.javanet.NetHttpTransport: void <init>(java.net.Proxy,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences: void setupAboutSettings(android.content.Context,android.preference.Preference)>
<android.support.v4.view.GravityCompat: void <clinit>()>
<android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
<com.google.api.client.googleapis.services.AbstractGoogleClient: void <clinit>()>
<org.apache.oltu.oauth2.client.request.OAuthClientRequest$TokenRequestBuilder: org.apache.oltu.oauth2.client.request.OAuthClientRequest$TokenRequestBuilder setCode(java.lang.String)>
<java.util.TreeSet: java.util.Iterator iterator()>
<com.squareup.okhttp.internal.DiskLruCache: void validateKey(java.lang.String)>
<android.view.GestureDetector$SimpleOnGestureListener: void <init>()>
<com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder resize(int,int)>
<com.squareup.okhttp.internal.http.HttpConnection: void emptyResponseBody()>
<android.support.v4.view.ViewPager: void draw(android.graphics.Canvas)>
<retrofit.android.AndroidApacheClient: void <init>()>
<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
<android.support.v4.widget.DrawerLayout: android.os.Parcelable onSaveInstanceState()>
<com.google.android.gms.plus.PlusOneDummyView$c: android.graphics.drawable.Drawable getDrawable(int)>
<com.battlelancer.seriesguide.ui.PeopleActivity$MediaType: com.battlelancer.seriesguide.ui.PeopleActivity$MediaType valueOf(java.lang.String)>
<com.google.api.client.json.gson.GsonFactory: com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.Writer)>
<com.squareup.picasso.Picasso$CleanupThread$1: void run()>
<com.squareup.okhttp.internal.DiskLruCache$Entry: java.lang.String access$1100(com.squareup.okhttp.internal.DiskLruCache$Entry)>
<com.squareup.okhttp.internal.spdy.Huffman$Node: int access$200(com.squareup.okhttp.internal.spdy.Huffman$Node)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment: void rateOnTrakt()>
<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>
<com.battlelancer.seriesguide.util.EpisodeTools$ShowCollectedType: void setEpisodeProperties(com.uwetrottmann.seriesguide.backend.episodes.model.Episode)>
<com.battlelancer.seriesguide.ui.dialogs.CheckInDialogFragment: void onCreate(android.os.Bundle)>
<com.battlelancer.seriesguide.adapters.ExtensionsAdapter$1: void onClick(android.view.View)>
<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>
<retrofit.Platform$AppEngine: void <init>(retrofit.Platform$1)>
<android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb: void <init>()>
<com.squareup.picasso.FileBitmapHunter: void <init>(android.content.Context,com.squareup.picasso.Picasso,com.squareup.picasso.Dispatcher,com.squareup.picasso.Cache,com.squareup.picasso.Stats,com.squareup.picasso.Action)>
<android.content.UriMatcher: void <init>(int)>
<com.google.api.client.util.FieldInfo: java.lang.Object getFieldValue(java.lang.reflect.Field,java.lang.Object)>
<android.app.Activity: android.app.FragmentManager getFragmentManager()>
<com.google.android.gms.internal.ez$4: void onCancel(android.content.DialogInterface)>
<com.google.android.gms.common.SignInButton: void onClick(android.view.View)>
<com.battlelancer.seriesguide.ui.MoviesSearchFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.google.myjson.internal.$Gson$Types: int access$100(java.lang.Object)>
<android.support.v4.view.ViewCompat$GBViewCompatImpl: int getOverScrollMode(android.view.View)>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment$3: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<com.google.android.gms.analytics.Tracker: void send(java.util.Map)>
<com.squareup.okhttp.internal.DiskLruCache$Entry: com.squareup.okhttp.internal.DiskLruCache$Editor access$702(com.squareup.okhttp.internal.DiskLruCache$Entry,com.squareup.okhttp.internal.DiskLruCache$Editor)>
<com.google.gson.internal.bind.TypeAdapters: com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter)>
<android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)>
<com.squareup.okio.ByteString: boolean equals(java.lang.Object)>
<android.support.v4.widget.CursorAdapter: java.lang.Object getItem(int)>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment: void <init>()>
<com.battlelancer.seriesguide.appwidget.ListWidgetProvider: boolean isCompactLayout(android.appwidget.AppWidgetManager,int)>
<java.net.CacheRequest: void <init>()>
<com.battlelancer.seriesguide.util.EpisodeTools$ShowWatchedType: java.lang.String getColumn()>
<com.battlelancer.seriesguide.ui.EpisodeDetailsActivity: com.readystatesoftware.systembartint.SystemBarTintManager getSystemBarTintManager()>
<com.google.gson.stream.JsonReader: void beginArray()>
<android.support.v4.content.ModernAsyncTask: void <clinit>()>
<com.battlelancer.seriesguide.dataliberation.DataLiberationFragment: void setProgressLock(boolean)>
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>
<android.widget.TextView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.uwetrottmann.seriesguide.backend.episodes.model.EpisodeList: com.uwetrottmann.seriesguide.backend.episodes.model.EpisodeList clone()>
<java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>
<com.battlelancer.seriesguide.sync.SgAuthenticationService: void onCreate()>
<com.google.android.gms.analytics.s: void cO()>
<com.google.api.client.http.apache.ApacheHttpTransport: com.google.api.client.http.apache.ApacheHttpRequest buildRequest(java.lang.String,java.lang.String)>
<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>
<android.widget.ImageView: void <init>(android.content.Context)>
<android.support.v4.view.AccessibilityDelegateCompatIcs: java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge)>
<com.squareup.okhttp.internal.spdy.NameValueBlockReader$2: void <init>(com.squareup.okhttp.internal.spdy.NameValueBlockReader)>
<com.battlelancer.seriesguide.backend.CloudSetupActivity: void <init>()>
<android.view.AbsSavedState: void <init>(android.os.Parcel)>
<java.math.BigDecimal: void <clinit>()>
<com.battlelancer.seriesguide.ui.BaseSettingsFragment: void <clinit>()>
<com.squareup.okhttp.internal.DiskLruCache: void rebuildJournal()>
<android.app.Dialog: android.view.Window getWindow()>
<com.battlelancer.seriesguide.util.MovieTools: void removeFromWatchlist(android.content.Context,int)>
<com.google.android.gms.analytics.h: void cz()>
<com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity: void onLoadFinished(android.support.v4.content.Loader,java.util.List)>
<java.util.zip.Inflater: boolean needsDictionary()>
<android.content.pm.Signature: void <init>(java.lang.String)>
<com.battlelancer.seriesguide.ui.ListsActivity: void fireTrackerEvent(java.lang.String)>
<com.google.api.client.googleapis.extensions.android.accounts.GoogleAccountManager: void <init>(android.accounts.AccountManager)>
<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>
<com.google.myjson.Gson: com.google.myjson.TypeAdapter longAdapter(com.google.myjson.LongSerializationPolicy)>
<com.squareup.okhttp.internal.http.StatusLine: void <init>(com.squareup.okhttp.Protocol,int,java.lang.String)>
<android.widget.ScrollView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>
<com.squareup.okhttp.internal.http.HttpConnection: byte[] access$500()>
<android.graphics.RectF: void <init>(float,float,float,float)>
<com.squareup.picasso.BitmapHunter$2: void <init>(java.lang.StringBuilder)>
<com.squareup.okhttp.internal.BitArray$FixedCapacity: com.squareup.okhttp.internal.BitArray toVariableCapacity()>
<com.battlelancer.seriesguide.util.EpisodeTools$Upload: boolean flagsToHexagon(android.content.Context,com.uwetrottmann.seriesguide.backend.episodes.model.EpisodeList)>
<com.google.api.client.http.AbstractHttpContent: long computeLength()>
<com.squareup.okhttp.internal.http.OkHeaders: com.squareup.okhttp.Headers varyHeaders(com.squareup.okhttp.Response)>
<com.battlelancer.seriesguide.util.MovieTools$AddMovieTask$AddTo: void <init>(java.lang.String,int)>
<com.mobeta.android.dslv.DragSortListView: int access$102(com.mobeta.android.dslv.DragSortListView,int)>
<com.battlelancer.seriesguide.service.TraktFlagService: void executeNext()>
<com.battlelancer.seriesguide.sync.SgSyncAdapter: void requestSyncIfTime(android.content.Context,int)>
<com.squareup.okhttp.internal.Platform$Android: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)>
<com.google.api.client.util.ArrayMap: int getIndexOfKey(java.lang.Object)>
<com.battlelancer.seriesguide.backend.CloudEndpointUtils: com.google.api.client.googleapis.services.AbstractGoogleClient$Builder updateBuilder(com.google.api.client.googleapis.services.AbstractGoogleClient$Builder)>
<com.battlelancer.seriesguide.util.SystemUiHider$1: void <init>()>
<com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment$CheckForRemovalTask: java.lang.Object doInBackground(java.lang.Object[])>
<com.google.gson.internal.bind.TypeAdapters$19: void <init>()>
<android.support.v4.widget.ScrollerCompat: int getFinalX()>
<android.support.v4.util.SimpleArrayMap: java.lang.Object get(java.lang.Object)>
<uk.co.senab.photoview.scrollerproxy.GingerScroller: int getCurrX()>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Writer: void dataFrame(int,byte,com.squareup.okio.Buffer,int)>
<android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>
<com.google.gson.FieldNamingPolicy$4: void <init>(java.lang.String,int)>
<com.uwetrottmann.getglue.GetGlue: retrofit.RestAdapter$Builder newRestAdapterBuilder()>
<com.squareup.picasso.Dispatcher: void dispatchSubmit(com.squareup.picasso.Action)>
<com.battlelancer.seriesguide.api.SeriesGuideExtension: android.content.SharedPreferences getSharedPreferences()>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment: void access$200(com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment)>
<com.squareup.okhttp.Cache$Entry: void writeCertArray(java.io.Writer,java.util.List)>
<java.lang.String: int indexOf(int)>
<com.mobeta.android.dslv.DragSortListView: void doDragFloatView(int,android.view.View,boolean)>
<com.google.api.client.http.apache.ApacheHttpResponse: java.lang.String getStatusLine()>
<com.battlelancer.seriesguide.ui.ActivityFragment: int getLoaderId()>
<com.battlelancer.seriesguide.ui.ShowFragment$6: void <init>(com.battlelancer.seriesguide.ui.ShowFragment)>
<org.apache.oltu.oauth2.client.request.OAuthClientRequest: java.lang.String getBody()>
<android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>
<com.google.api.client.json.JsonParser: com.google.api.client.json.JsonToken startParsing()>
<com.battlelancer.seriesguide.util.TimeTools: java.util.Date getEpisodeReleaseTime(android.content.Context,long)>
<com.google.android.gms.analytics.aj: boolean dL()>
<android.widget.ScrollView: float getBottomFadingEdgeStrength()>
<java.util.zip.GZIPInputStream: void close()>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.google.myjson.internal.$Gson$Types: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>
<com.google.api.client.util.escape.CharEscapers: void <clinit>()>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response access$900(com.squareup.okhttp.Response$Builder)>
<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okio.Sink getRequestBody()>
<android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
<com.google.myjson.stream.JsonReader: void <init>(java.io.Reader)>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri)>
<com.squareup.okhttp.internal.http.SpdyTransport: java.lang.String joinOnNull(java.lang.String,java.lang.String)>
<com.battlelancer.seriesguide.billing.IabHelper: int querySkuDetails(java.lang.String,com.battlelancer.seriesguide.billing.Inventory,java.util.List)>
<org.apache.http.message.BasicHttpEntityEnclosingRequest: void setEntity(org.apache.http.HttpEntity)>
<com.crashlytics.android.internal.y: com.crashlytics.android.internal.v a()>
<com.google.android.gms.analytics.ah: void a(org.apache.http.HttpEntityEnclosingRequest)>
<org.apache.oltu.oauth2.client.response.OAuthClientResponseFactory: org.apache.oltu.oauth2.client.response.OAuthClientResponse createCustomResponse(java.lang.String,java.lang.String,int,java.lang.Class)>
<com.google.android.gms.common.GooglePlayServicesUtil: android.app.Dialog a(int,android.app.Activity,android.support.v4.app.Fragment,int,android.content.DialogInterface$OnCancelListener)>
<java.lang.Throwable: void <init>()>
<com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity: void onCreate(android.os.Bundle)>
<android.support.v4.app.Fragment$1: android.view.View findViewById(int)>
<uk.co.senab.photoview.PhotoViewAttacher$AnimatedZoomRunnable: float interpolate()>
<com.battlelancer.seriesguide.ui.ShowFragment$4: void onLoaderReset(android.support.v4.content.Loader)>
<com.battlelancer.seriesguide.dataliberation.DataLiberationFragment: void onActivityCreated(android.os.Bundle)>
<android.view.MotionEvent: float getY()>
<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Shows: android.net.Uri buildShowUri(java.lang.String)>
<com.battlelancer.seriesguide.provider.SeriesGuideDatabase: android.database.Cursor search(java.lang.String,java.lang.String[],android.database.sqlite.SQLiteDatabase)>
<com.battlelancer.seriesguide.ui.dialogs.CheckInDialogFragment$1: void onClick(android.view.View)>
<com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment$2: void <init>(com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment)>
<com.readystatesoftware.systembartint.SystemBarTintManager$SystemBarConfig: int getPixelInsetRight()>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
<com.battlelancer.seriesguide.ui.EpisodesFragment: int access$500(com.battlelancer.seriesguide.ui.EpisodesFragment)>
<android.graphics.Paint: void setStrokeWidth(float)>
<com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection: java.io.InputStream getInputStream()>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Reader: void readPriority(com.squareup.okhttp.internal.spdy.FrameReader$Handler,short,byte,int)>
<android.support.v4.app.FragmentManagerImpl: void dispatchPause()>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment: android.widget.PopupMenu access$302(com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment,android.widget.PopupMenu)>
<com.battlelancer.seriesguide.billing.BillingActivity: void access$600(com.battlelancer.seriesguide.billing.BillingActivity,boolean)>
<com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
<com.battlelancer.seriesguide.util.MovieTools: void deleteMovie(android.content.Context,int)>
<com.battlelancer.seriesguide.util.MovieTools: void addToWatchlist(android.content.Context,int)>
<com.battlelancer.seriesguide.ui.ShowsFragment: void <init>()>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Writer: void writeByteString(com.squareup.okio.ByteString)>
<android.view.inputmethod.EditorInfo: void <init>()>
<android.view.KeyEvent: int normalizeMetaState(int)>
<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<com.google.api.client.util.GenericData$EntryIterator: void <init>(com.google.api.client.util.GenericData,com.google.api.client.util.DataMap$EntrySet)>
<org.apache.oltu.oauth2.client.request.OAuthClientRequest$OAuthRequestBuilder: org.apache.oltu.oauth2.client.request.OAuthClientRequest buildQueryMessage()>
<com.battlelancer.seriesguide.items.Series: void setAirsDayOfWeek(java.lang.String)>
<com.battlelancer.seriesguide.appwidget.ListWidgetPreferenceFragment: void <init>()>
<android.support.v4.app.FragmentManagerImpl: void addBackStackState(android.support.v4.app.BackStackRecord)>
<com.squareup.okhttp.internal.http.HttpEngine: void readResponse()>
<com.battlelancer.seriesguide.ui.OverviewFragment: void onToggleCollected()>
<com.battlelancer.seriesguide.widgets.SlidingTabStrip$SimpleTabColorizer: void setIndicatorColors(int[])>
<java.util.concurrent.CopyOnWriteArrayList: void add(int,java.lang.Object)>
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>
<android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl: boolean metaStateHasModifiers(int,int)>
<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>
<android.support.v4.view.ViewGroupCompat: void <clinit>()>
<android.app.Notification$BigPictureStyle: android.app.Notification$BigPictureStyle setBigContentTitle(java.lang.CharSequence)>
<com.squareup.okio.RealBufferedSource$1: int read(byte[],int,int)>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: java.io.InputStream getInputStream()>
<uk.co.senab.photoview.gestures.EclairGestureDetector: float getActiveY(android.view.MotionEvent)>
<java.util.Collections: java.util.Map emptyMap()>
<android.support.v4.app.DialogFragment: void setShowsDialog(boolean)>
<android.support.v4.app.Fragment: boolean isInBackStack()>
<com.battlelancer.seriesguide.ui.MoviesSearchFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.battlelancer.seriesguide.billing.Inventory: void addSkuDetails(com.battlelancer.seriesguide.billing.SkuDetails)>
<com.battlelancer.seriesguide.util.FlagTapedTask: java.util.List access$200(com.battlelancer.seriesguide.util.FlagTapedTask)>
<com.google.myjson.internal.bind.TypeAdapters: com.google.myjson.TypeAdapterFactory newEnumTypeHierarchyFactory()>
<uk.co.senab.photoview.scrollerproxy.GingerScroller: void <init>(android.content.Context)>
<com.mobeta.android.dslv.DragSortController: float access$300(com.mobeta.android.dslv.DragSortController)>
<org.apache.http.impl.conn.ProxySelectorRoutePlanner: void <init>(org.apache.http.conn.scheme.SchemeRegistry,java.net.ProxySelector)>
<com.squareup.okhttp.internal.http.HttpConnection$UnknownLengthSource: long read(com.squareup.okio.Buffer,long)>
<com.crashlytics.android.internal.z: void <init>(android.content.Context,java.lang.String)>
<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers$Builder addLenient(java.lang.String,java.lang.String)>
<com.google.myjson.internal.bind.TypeAdapters: com.google.myjson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.myjson.TypeAdapter)>
<android.support.v4.content.CursorLoader: void onStartLoading()>
<com.battlelancer.seriesguide.ui.TvdbAddFragment: void clearSearchTerm()>
<com.squareup.okhttp.OkHttpClient: int getWriteTimeout()>
<com.google.myjson.internal.Excluder: void <clinit>()>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void sendConnectionPreface()>
<com.battlelancer.seriesguide.settings.ShowsDistillationSettings: void <clinit>()>
<java.lang.Math: int max(int,int)>
<uk.co.senab.photoview.PhotoView: void setImageResource(int)>
<com.squareup.okio.DeflaterSink: void deflate(boolean)>
<android.support.v4.widget.DrawerLayout$SavedState$1: void <init>()>
<com.battlelancer.seriesguide.util.ServiceUtils: void setUpTvdbButton(int,android.view.View,java.lang.String)>
<com.battlelancer.seriesguide.ui.OverviewFragment: void onDestroy()>
<com.google.android.gms.analytics.s$a: void <clinit>()>
<com.squareup.okhttp.internal.http.HttpConnection$AbstractSource: void endOfInput(boolean)>
<com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection: void disconnect()>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Movies: android.net.Uri buildMovieUri(java.lang.Integer)>
<android.view.View: void setVerticalFadingEdgeEnabled(boolean)>
<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.battlelancer.seriesguide.ui.dialogs.ListManageDialogFragment: void onActivityCreated(android.os.Bundle)>
<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void <init>()>
<android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<java.io.FileWriter: void <init>(java.io.File,boolean)>
<com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment$1: void onClick(android.view.View)>
<java.lang.String: java.lang.String substring(int,int)>
<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>
<android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: int getPointerCount(android.view.MotionEvent)>
<com.jakewharton.trakt.TraktHelper$13: void <init>()>
<com.squareup.okio.RealBufferedSource$1: void close()>
<java.lang.String: int indexOf(java.lang.String)>
<com.battlelancer.seriesguide.ui.BaseNavDrawerActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.google.api.client.util.ArrayMap$Entry: java.lang.Object getKey()>
<android.graphics.Paint: void setAntiAlias(boolean)>
<com.battlelancer.seriesguide.ui.ShowFragment: java.lang.String access$600(com.battlelancer.seriesguide.ui.ShowFragment)>
<android.widget.AbsoluteLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>
<android.support.v4.app.NavUtils: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)>
<com.battlelancer.seriesguide.Constants$SeasonSorting: com.battlelancer.seriesguide.Constants$SeasonSorting fromValue(java.lang.String)>
<com.google.android.gms.internal.hn: void <clinit>()>
<android.graphics.Paint: void setColor(int)>
<android.support.v4.content.ModernAsyncTask$Status: void <init>(java.lang.String,int)>
<com.mobeta.android.dslv.SimpleFloatViewManager: void <init>(android.widget.ListView)>
<com.squareup.picasso.Picasso$CleanupThread: void <init>(java.lang.ref.ReferenceQueue,android.os.Handler)>
<com.battlelancer.seriesguide.dashclock.UpcomingEpisodeSettingsActivity: void setupSimplePreferencesScreen()>
<com.battlelancer.seriesguide.billing.BillingActivity: void access$200(com.battlelancer.seriesguide.billing.BillingActivity,boolean)>
<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.OkHttpClient setCache(com.squareup.okhttp.Cache)>
<com.battlelancer.seriesguide.util.ShareUtils: void startShareIntentChooser(android.app.Activity,java.lang.String,int)>
<com.battlelancer.seriesguide.migration.MigrationActivity: void onDestroy()>
<android.support.v4.app.FragmentManagerImpl$1: void <init>(android.support.v4.app.FragmentManagerImpl)>
<com.battlelancer.seriesguide.dataliberation.model.Show: void <init>()>
<com.squareup.okhttp.internal.http.HttpConnection: byte[] access$400()>
<com.squareup.picasso.Request: boolean needsMatrixTransform()>
<com.squareup.okhttp.OkHttpClient$1: boolean clearOwner(com.squareup.okhttp.Connection)>
<android.support.v4.util.SparseArrayCompat: void clear()>
<com.squareup.okhttp.Cache$CacheRequestImpl: boolean access$600(com.squareup.okhttp.Cache$CacheRequestImpl)>
<com.squareup.picasso.MarkableInputStream: void reset(long)>
<com.squareup.okhttp.internal.spdy.NameValueBlockReader: java.util.List readNameValueBlock(int)>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment: void onActivityCreated(android.os.Bundle)>
<java.lang.Character: java.lang.Character valueOf(char)>
<com.battlelancer.seriesguide.ui.ListsFragment: void access$000(com.battlelancer.seriesguide.ui.ListsFragment,java.lang.String)>
<com.squareup.okhttp.internal.spdy.ErrorCode: com.squareup.okhttp.internal.spdy.ErrorCode[] values()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>
<com.squareup.okhttp.internal.http.HttpEngine: boolean hasRequestBody()>
<android.app.IntentService: void <init>(java.lang.String)>
<com.battlelancer.seriesguide.dashclock.UpcomingEpisodeSettingsActivity: void onPostCreate(android.os.Bundle)>
<com.google.gson.internal.bind.TypeAdapters$6: void <init>()>
<com.battlelancer.seriesguide.util.DBUtils: java.lang.String[][] buildActivityQuery(android.content.Context,java.lang.String,int)>
<com.squareup.picasso.NetworkBitmapHunter: android.graphics.Bitmap decode(com.squareup.picasso.Request)>
<com.google.api.client.json.JsonObjectParser: java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.reflect.Type)>
<com.mobeta.android.dslv.DragSortController: void setRemoveMode(int)>
<android.support.v4.app.ActivityCompatJB: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)>
<com.google.android.gms.internal.hm: java.lang.Object b(java.lang.Object,java.lang.Object)>
<android.view.KeyEvent: boolean metaStateHasModifiers(int,int)>
<com.squareup.okhttp.internal.DiskLruCache$Editor$FaultHidingOutputStream: void <init>(com.squareup.okhttp.internal.DiskLruCache$Editor,java.io.OutputStream,com.squareup.okhttp.internal.DiskLruCache$1)>
<com.google.android.gms.common.SignInButton: void C(android.content.Context)>
<com.battlelancer.seriesguide.util.ShortcutUtils$1: java.lang.Object doInBackground(java.lang.Object[])>
<com.battlelancer.seriesguide.dataliberation.JsonImportTask: void addMovieToDatabase(com.battlelancer.seriesguide.dataliberation.model.Movie)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsActivity: void <init>()>
<com.battlelancer.seriesguide.adapters.SeasonsAdapter$1: void onClick(android.view.View)>
<retrofit.RequestInterceptor: void <clinit>()>
<com.battlelancer.seriesguide.util.Utils: java.lang.String getNextEpisodeString(android.content.Context,int,int,java.lang.String)>
<android.widget.ScrollView: void onNestedScroll(android.view.View,int,int,int,int)>
<com.google.gson.internal.bind.CollectionTypeAdapterFactory: void <init>(com.google.gson.internal.ConstructorConstructor)>
<com.google.android.gms.analytics.h$1: void run()>
<uk.co.senab.photoview.scrollerproxy.PreGingerScroller: boolean isFinished()>
<com.battlelancer.seriesguide.ui.TraktShoutsActivity: android.os.Bundle createInitBundleMovie(java.lang.String,int)>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment$2: void <init>(com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment)>
<com.crashlytics.android.internal.c: void <init>(com.crashlytics.android.internal.b)>
<com.google.api.client.http.HttpEncodingStreamingContent: void writeTo(java.io.OutputStream)>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$1: void <init>(fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable)>
<com.battlelancer.seriesguide.billing.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
<android.app.Activity: void onPostCreate(android.os.Bundle)>
<android.widget.PopupMenu: android.view.MenuInflater getMenuInflater()>
<com.google.api.client.http.UrlEncodedParser: void parse(java.io.Reader,java.lang.Object)>
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>
<android.widget.PopupMenu: void dismiss()>
<org.apache.http.conn.params.ConnManagerParams: void setMaxTotalConnections(org.apache.http.params.HttpParams,int)>
<android.view.View: boolean isEnabled()>
<com.battlelancer.seriesguide.util.Utils: java.lang.String getVersion(android.content.Context)>
<com.squareup.okhttp.internal.spdy.SpdyStream: com.squareup.okhttp.internal.spdy.ErrorCode access$800(com.squareup.okhttp.internal.spdy.SpdyStream)>
<com.google.api.client.util.ClassInfo$1: void <init>(com.google.api.client.util.ClassInfo)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void onSortOrderChanged()>
<com.battlelancer.seriesguide.ui.BaseActivity: void onStop()>
<com.battlelancer.seriesguide.ui.PeopleFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<com.battlelancer.seriesguide.util.EpisodeTools$SeasonCollectedType: java.lang.String getColumn()>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<com.battlelancer.seriesguide.settings.DisplaySettings: java.lang.String getNumberFormat(android.content.Context)>
<com.battlelancer.seriesguide.settings.AdvancedSettings: long getLastAutoBackupTime(android.content.Context)>
<com.google.api.client.http.UriTemplate: com.google.api.client.http.UriTemplate$CompositeOutput getCompositeOutput(java.lang.String)>
<com.battlelancer.seriesguide.ui.EpisodesFragment$3: void <init>(com.battlelancer.seriesguide.ui.EpisodesFragment)>
<com.squareup.picasso.RequestCreator: void <init>(com.squareup.picasso.Picasso,android.net.Uri,int)>
<com.battlelancer.seriesguide.ui.dialogs.CheckInDialogFragment$1: void <init>(com.battlelancer.seriesguide.ui.dialogs.CheckInDialogFragment)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<java.lang.NumberFormatException: void <init>(java.lang.String)>
<java.lang.ThreadLocal: void <init>()>
<com.google.android.gms.common.GooglePlayServicesUtil: byte[][] a(byte[][][])>
<com.squareup.okhttp.internal.spdy.Huffman: com.squareup.okhttp.internal.spdy.Huffman get()>
<uk.co.senab.photoview.log.LogManager: uk.co.senab.photoview.log.Logger getLogger()>
<android.graphics.RectF: void <clinit>()>
<com.battlelancer.seriesguide.billing.IabHelper: void flagEndAsync()>
<com.google.api.client.http.HttpHeaders: com.google.api.client.http.HttpHeaders setIfMatch(java.lang.String)>
<android.os.Bundle: void <init>(android.os.Bundle)>
<com.google.android.gms.analytics.Tracker: void setSessionTimeout(long)>
<android.support.v4.content.CursorLoader: void setProjection(java.lang.String[])>
<com.battlelancer.seriesguide.widgets.SlidingTabLayout: void onAttachedToWindow()>
<com.google.android.gms.analytics.ac$a: void <init>(com.google.android.gms.analytics.ac,android.content.Context,java.lang.String)>
<com.squareup.okhttp.internal.Platform$JdkWithJettyBootPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)>
<com.battlelancer.seriesguide.ui.MoviesSearchFragment: void <init>()>
<retrofit.Platform$Android: java.util.concurrent.Executor defaultHttpExecutor()>
<android.support.v4.widget.DrawerLayout$ViewDragCallback: int clampViewPositionHorizontal(android.view.View,int,int)>
<com.squareup.okhttp.Request: boolean isHttps()>
<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource: long read(com.squareup.okio.Buffer,long)>
<com.battlelancer.seriesguide.ui.ConnectTraktFinishedFragment$1: void onClick(android.view.View)>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder code(int)>
<com.battlelancer.seriesguide.ui.OverviewFragment: void onChangeEpisodeFlag(int)>
<android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
<java.text.DateFormat: java.lang.String format(java.util.Date)>
<java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator$RequestorType)>
<android.widget.AbsListView: int getListPaddingRight()>
<android.support.v4.util.ContainerHelpers: int binarySearch(int[],int,int)>
<com.battlelancer.seriesguide.ui.QuickCheckInActivity: void onCreate(android.os.Bundle)>
<android.support.v4.widget.EdgeEffectCompat: void <clinit>()>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment: void onLoaderReset(android.support.v4.content.Loader)>
<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<com.squareup.okhttp.internal.spdy.Huffman: void <clinit>()>
<uk.co.senab.photoview.PhotoViewAttacher: boolean access$300()>
<com.squareup.okhttp.internal.tls.DistinguishedNameParser: java.lang.String quotedAV()>
<com.uwetrottmann.seriesguide.backend.shows.model.ShowList: void <init>()>
<com.uwetrottmann.seriesguide.backend.movies.model.Movie: com.uwetrottmann.seriesguide.backend.movies.model.Movie setTmdbId(java.lang.Integer)>
<com.google.api.client.http.HttpHeaders: java.lang.String toStringValue(java.lang.Object)>
<com.battlelancer.seriesguide.settings.TraktCredentials: boolean setUsername(java.lang.String)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$8: void onLoaderReset(android.support.v4.content.Loader)>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<android.view.MotionEvent: int getPointerCount()>
<com.battlelancer.seriesguide.billing.IabHelper: void launchPurchaseFlow(android.app.Activity,java.lang.String,java.lang.String,int,com.battlelancer.seriesguide.billing.IabHelper$OnIabPurchaseFinishedListener,java.lang.String)>
<com.google.android.gms.analytics.o: java.lang.String v(int)>
<retrofit.RestAdapter: void <init>(retrofit.Endpoint,retrofit.client.Client$Provider,java.util.concurrent.Executor,java.util.concurrent.Executor,retrofit.RequestInterceptor,retrofit.converter.Converter,retrofit.Profiler,retrofit.ErrorHandler,retrofit.RestAdapter$Log,retrofit.RestAdapter$LogLevel)>
<android.app.Dialog: boolean requestWindowFeature(int)>
<com.battlelancer.seriesguide.ui.streams.FriendsMovieStreamFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.provider.ContactsContract$Contacts: void <clinit>()>
<com.google.android.gms.analytics.s$e: void <init>(com.google.android.gms.analytics.s,com.google.android.gms.analytics.s$1)>
<com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment: com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment newInstance()>
<android.content.ContentResolver: boolean isSyncPending(android.accounts.Account,java.lang.String)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>
<com.google.api.client.http.javanet.NetHttpResponse: java.lang.String getHeaderValue(int)>
<android.util.Log: int e(java.lang.String,java.lang.String)>
<com.mobeta.android.dslv.SimpleFloatViewManager: void setBackgroundColor(int)>
<com.google.myjson.internal.bind.TypeAdapters$17: void <init>()>
<com.google.myjson.stream.JsonReader: boolean skipTo(java.lang.String)>
<com.google.api.client.util.DateTime: void <clinit>()>
<com.google.api.client.googleapis.services.AbstractGoogleClient: java.lang.String getApplicationName()>
<com.google.myjson.internal.bind.DateTypeAdapter: void <clinit>()>
<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>
<com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSink: void write(com.squareup.okio.Buffer,long)>
<java.io.InputStream: boolean markSupported()>
<com.squareup.okhttp.internal.Platform: byte[] concatLengthPrefixed(java.util.List)>
<com.squareup.okhttp.internal.spdy.PushObserver$1: void <init>()>
<com.battlelancer.seriesguide.ui.PeopleFragment: com.battlelancer.seriesguide.ui.PeopleActivity$PeopleType access$600(com.battlelancer.seriesguide.ui.PeopleFragment)>
<android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)>
<com.battlelancer.seriesguide.ui.ShowsFragment: boolean access$102(com.battlelancer.seriesguide.ui.ShowsFragment,boolean)>
<android.view.View: void playSoundEffect(int)>
<com.google.android.gms.internal.ho: void a(android.content.res.Resources,int,int)>
<java.net.Proxy$Type: void <clinit>()>
<com.squareup.okhttp.internal.BitArray$FixedCapacity: void <init>()>
<android.support.v4.widget.ViewDragHelper: int getEdgesTouched(int,int)>
<android.support.v4.view.ViewCompat$HCViewCompatImpl: void setLayerType(android.view.View,int,android.graphics.Paint)>
<com.battlelancer.seriesguide.appwidget.ListWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>
<android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)>
<com.battlelancer.seriesguide.settings.GetGlueSettings: boolean isAuthenticated(android.content.Context)>
<retrofit.Platform: void <init>()>
<android.widget.ScrollView: void computeScroll()>
<com.squareup.okhttp.Cache: void access$100(com.squareup.okhttp.Cache,com.squareup.okhttp.Request)>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder body(com.squareup.okhttp.ResponseBody)>
<java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)>
<uk.co.senab.photoview.PhotoViewAttacher: void access$400(uk.co.senab.photoview.PhotoViewAttacher,android.graphics.Matrix)>
<com.squareup.okio.RealBufferedSink: java.io.OutputStream outputStream()>
<com.squareup.okhttp.internal.spdy.SpdyStream: void <clinit>()>
<com.crashlytics.android.internal.ab: boolean d(android.content.Context)>
<com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator placeholder(android.graphics.drawable.Drawable)>
<com.google.api.client.util.escape.CharEscapers: java.lang.String escapeUriUserInfo(java.lang.String)>
<android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
<android.widget.HorizontalScrollView: void scrollTo(int,int)>
<com.squareup.okhttp.Headers: void <init>(com.squareup.okhttp.Headers$Builder)>
<java.lang.StringBuilder: java.lang.String toString()>
<com.uwetrottmann.seriesguide.backend.shows.model.Show: com.uwetrottmann.seriesguide.backend.shows.model.Show setIsFavorite(java.lang.Boolean)>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeType: void <init>(android.content.Context,int,int,int,int,int)>
<android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: void <init>()>
<android.appwidget.AppWidgetManager: android.os.Bundle getAppWidgetOptions(int)>
<com.google.android.gms.analytics.GoogleAnalytics: void p(java.util.Map)>
<com.google.android.gms.analytics.ai: void <init>(android.content.Context)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: void pushDataLater(int,com.squareup.okio.BufferedSource,int,boolean)>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Builder: com.squareup.okhttp.internal.spdy.SpdyConnection build()>
<com.google.api.client.extensions.android.AndroidUtils: boolean isMinimumSdkLevel(int)>
<com.battlelancer.seriesguide.ui.FullscreenImageActivity$1: void <init>(com.battlelancer.seriesguide.ui.FullscreenImageActivity)>
<de.greenrobot.event.util.ErrorDialogFragments$Support: void <init>()>
<com.squareup.okhttp.internal.tls.OkHostnameVerifier: void <clinit>()>
<android.view.View: android.content.res.Resources getResources()>
<com.google.api.client.http.GenericUrl: int hashCode()>
<com.squareup.okhttp.Connection: java.net.Socket getSocket()>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$6: void onClick(android.view.View)>
<android.view.View: void startAnimation(android.view.animation.Animation)>
<android.widget.ScrollView: android.os.Parcelable onSaveInstanceState()>
<butterknife.ButterKnife$Finder: void <init>(java.lang.String,int)>
<com.battlelancer.seriesguide.billing.BillingActivity: void onSubscribeToXButtonClicked()>
<com.google.api.client.json.gson.GsonParser: com.google.api.client.json.JsonToken nextToken()>
<com.google.myjson.internal.bind.TypeAdapters$18: void <init>()>
<java.net.Socket: void connect(java.net.SocketAddress,int)>
<com.squareup.okhttp.internal.http.HttpConnection: boolean discard(com.squareup.okio.Source,int)>
<com.squareup.okhttp.internal.Util: int getEffectivePort(java.lang.String,int)>
<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>
<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>
<android.content.Intent: void <clinit>()>
<android.view.MotionEvent: int getEdgeFlags()>
<android.widget.ProgressBar: android.graphics.drawable.Drawable getIndeterminateDrawable()>
<com.squareup.okhttp.internal.spdy.Spdy3$Reader: void <init>(com.squareup.okio.BufferedSource,boolean)>
<android.widget.ScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int)>
<com.squareup.okio.RealBufferedSource$1: void <init>(com.squareup.okio.RealBufferedSource)>
<com.squareup.okio.Segment: void compact()>
<android.view.View: boolean removeCallbacks(java.lang.Runnable)>
<android.os.Parcel: void <clinit>()>
<com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity$1: void <init>(com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity)>
<timber.log.Timber$1: void i(java.lang.String,java.lang.Object[])>
<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>
<android.support.v4.app.NotificationCompatGingerbread: android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent)>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest: java.io.IOException newExceptionOnError(com.google.api.client.http.HttpResponse)>
<com.mobeta.android.dslv.DragSortListView$DragSortTracker: void <init>(com.mobeta.android.dslv.DragSortListView)>
<uk.co.senab.photoview.PhotoViewAttacher: int getImageViewWidth(android.widget.ImageView)>
<org.apache.oltu.oauth2.common.parameters.QueryParameterApplier: org.apache.oltu.oauth2.common.message.OAuthMessage applyOAuthParameters(org.apache.oltu.oauth2.common.message.OAuthMessage,java.util.Map)>
<com.battlelancer.seriesguide.ui.MoviesActivity: void setupActionBar()>
<com.squareup.okhttp.internal.spdy.Spdy3$Writer: void goAway(int,com.squareup.okhttp.internal.spdy.ErrorCode,byte[])>
<com.battlelancer.seriesguide.ui.EpisodeDetailsActivity: void setupActionBar(java.lang.String)>
<com.battlelancer.seriesguide.ui.ListsFragment$ListItemAdapter$1: void onClick(android.view.View)>
<com.google.android.gms.analytics.u: java.lang.String cW()>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment$7: void onClick(android.view.View)>
<com.squareup.okhttp.internal.spdy.Spdy3$Reader: void readGoAway(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int)>
<java.io.File: long length()>
<android.widget.LinearLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.support.v4.widget.EdgeEffectCompatIcs: boolean isFinished(java.lang.Object)>
<com.battlelancer.seriesguide.ui.EpisodesActivity: void onAttachFragment(android.support.v4.app.Fragment)>
<com.battlelancer.seriesguide.ui.EpisodesActivity: com.battlelancer.seriesguide.widgets.SlidingTabLayout access$500(com.battlelancer.seriesguide.ui.EpisodesActivity)>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment: void onDestroyView()>
<android.widget.TextView: void getFocusedRect(android.graphics.Rect)>
<com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>
<com.squareup.okhttp.internal.spdy.Header: void <clinit>()>
<com.squareup.okhttp.internal.http.SpdyTransport: void releaseConnectionOnIdle()>
<java.lang.Boolean: boolean parseBoolean(java.lang.String)>
<com.battlelancer.seriesguide.ui.streams.FriendsMovieStreamFragment$1: void <init>(com.battlelancer.seriesguide.ui.streams.FriendsMovieStreamFragment)>
<android.widget.Scroller: void abortAnimation()>
<com.squareup.okhttp.internal.spdy.Spdy3$Reader: void readHeaders(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int)>
<android.support.v4.widget.DrawerLayout: boolean isDrawerView(android.view.View)>
<fr.castorflex.android.smoothprogressbar.ColorsShape: void <init>(float,int[])>
<com.battlelancer.seriesguide.loaders.MovieTrailersLoader: void <init>(android.content.Context,int)>
<android.support.v4.app.NavUtils$NavUtilsImplBase: android.content.Intent getParentActivityIntent(android.app.Activity)>
<com.google.android.gms.wallet.fragment.WalletFragment$c: void <init>(com.google.android.gms.wallet.fragment.WalletFragment,com.google.android.gms.wallet.fragment.WalletFragment$1)>
<com.squareup.picasso.Utils: void checkMain()>
<com.battlelancer.seriesguide.dashclock.UpcomingEpisodeSettingsActivity$1: void <init>()>
<com.google.api.client.http.HttpRequest: boolean getThrowExceptionOnExecuteError()>
<com.squareup.okio.Buffer: com.squareup.okio.Buffer writeUtf8(java.lang.String)>
<com.battlelancer.seriesguide.util.SystemUiHider: void <init>(android.app.Activity,android.view.View,int)>
<com.battlelancer.seriesguide.util.Utils: void trackView(android.content.Context,java.lang.String)>
<android.support.v4.app.FragmentActivity$2: void <init>(android.support.v4.app.FragmentActivity)>
<android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl: void <init>()>
<com.google.api.client.http.HttpHeaders: java.lang.String getContentType()>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeWatchedType: void setEpisodeProperties(com.uwetrottmann.seriesguide.backend.episodes.model.Episode)>
<android.support.v4.app.ActionBarDrawerToggle: void setDrawerIndicatorEnabled(boolean)>
<com.battlelancer.seriesguide.util.TraktSummaryTask: com.battlelancer.seriesguide.util.TraktSummaryTask show(int)>
<com.battlelancer.seriesguide.ui.PeopleActivity: void onCreate(android.os.Bundle)>
<com.squareup.okhttp.internal.http.HttpConnection: int access$602(com.squareup.okhttp.internal.http.HttpConnection,int)>
<com.battlelancer.seriesguide.widgets.SlidingTabStrip$SimpleTabColorizer: void <init>(com.battlelancer.seriesguide.widgets.SlidingTabStrip$1)>
<com.uwetrottmann.seriesguide.backend.movies.Movies$Builder: com.uwetrottmann.seriesguide.backend.movies.Movies$Builder setServicePath(java.lang.String)>
<com.google.api.client.http.UriTemplate: java.lang.String expand(java.lang.String,java.lang.String,java.lang.Object,boolean)>
<com.battlelancer.seriesguide.migration.MigrationActivity$1: void <init>(com.battlelancer.seriesguide.migration.MigrationActivity)>
<com.battlelancer.seriesguide.ui.AddActivity: void setupActionBar()>
<uk.co.senab.photoview.PhotoViewAttacher: void checkAndDisplayMatrix()>
<com.battlelancer.seriesguide.dataliberation.DataLiberationActivity: void <init>()>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void headers(boolean,boolean,int,int,java.util.List,com.squareup.okhttp.internal.spdy.HeadersMode)>
<android.support.v4.widget.ScrollerCompat: void abortAnimation()>
<com.uwetrottmann.androidutils.AndroidUtils: boolean isICSOrHigher()>
<com.google.api.client.http.HttpResponse: boolean hasMessageBody()>
<android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String)>
<com.squareup.okio.AsyncTimeout: com.squareup.okio.AsyncTimeout access$000()>
<android.content.Intent: void <init>(android.content.Intent)>
<com.google.android.gms.dynamic.b: void <init>(android.app.Fragment)>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment$8: void <init>(com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment)>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeCollectedType: void <init>(android.content.Context,int,int,int,int,int)>
<com.crashlytics.android.internal.d: void <init>(com.crashlytics.android.internal.b)>
<android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl: void <init>()>
<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>
<com.squareup.okhttp.internal.http.RequestLine: java.lang.String get(com.squareup.okhttp.Request,java.net.Proxy$Type,com.squareup.okhttp.Protocol)>
<com.google.gson.stream.JsonWriter: void replaceTop(int)>
<com.battlelancer.seriesguide.ui.ShowFragment: void access$700(com.battlelancer.seriesguide.ui.ShowFragment,java.lang.String)>
<com.squareup.okhttp.internal.spdy.Http20Draft12$Writer: void writeContinuationFrames(int,long)>
<com.google.api.client.http.GenericUrl: boolean equals(java.lang.Object)>
<com.google.android.gms.analytics.x: void Q(java.lang.String)>
<com.battlelancer.seriesguide.ui.HelpActivity: void <init>()>
<com.squareup.okhttp.Response: com.squareup.okhttp.ResponseBody access$1700(com.squareup.okhttp.Response)>
<com.squareup.picasso.RequestCreator$2: void run()>
<android.content.ContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>
<com.squareup.okhttp.Cache$CacheRequestImpl$1: void close()>
<com.squareup.okhttp.OkHttpClient$1: void setOwner(com.squareup.okhttp.Connection,com.squareup.okhttp.internal.http.HttpEngine)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsActivity$EpisodePagerAdapter: void updateEpisodeList(java.util.ArrayList)>
<com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment$ListsAdapter: android.util.SparseBooleanArray getCheckedPositions()>
<com.uwetrottmann.seriesguide.backend.shows.Shows$Builder: com.uwetrottmann.seriesguide.backend.shows.Shows$Builder setRootUrl(java.lang.String)>
<com.jakewharton.trakt.TraktHelper$9: void <init>()>
<android.support.v4.view.KeyEventCompatHoneycomb: boolean metaStateHasNoModifiers(int)>
<com.battlelancer.seriesguide.service.OnAlarmReceiver: void <init>()>
<java.lang.Integer: int bitCount(int)>
<android.app.Notification$Style: void <init>()>
<android.app.Activity: void setResult(int)>
<com.battlelancer.seriesguide.ui.ShowsFragment: void onClick(android.view.View)>
<java.lang.Float: void <clinit>()>
<java.util.Collections: java.util.List singletonList(java.lang.Object)>
<com.battlelancer.seriesguide.ui.EpisodesFragment: int getSeasonId()>
<com.squareup.okhttp.internal.http.HttpConnection$FixedLengthSink: void <init>(com.squareup.okhttp.internal.http.HttpConnection,long)>
<android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl: float getXVelocity(android.view.VelocityTracker,int)>
<com.jakewharton.trakt.TraktHelper$1: void <init>()>
<com.google.api.client.util.DateTime: int hashCode()>
<com.battlelancer.seriesguide.backend.HexagonTools: boolean isSignedIn(android.content.Context)>
<com.battlelancer.seriesguide.ui.dialogs.AddShowDialogFragment: void showAddDialog(com.battlelancer.seriesguide.items.SearchResult,android.support.v4.app.FragmentManager)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Seasons: android.net.Uri buildSeasonUri(int)>
<android.content.ContextWrapper: java.io.File getFilesDir()>
<com.battlelancer.seriesguide.ui.BaseNavDrawerActivity: void onStart()>
<java.io.Writer: java.io.Writer append(char)>
<com.google.android.gms.analytics.q: void <clinit>()>
<com.google.android.gms.wallet.fragment.WalletFragment$c: void onClick(android.view.View)>
<com.google.android.gms.analytics.ah: void <init>(org.apache.http.client.HttpClient,android.content.Context)>
<com.squareup.picasso.MarkableInputStream: long savePosition(int)>
<com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment: com.battlelancer.seriesguide.util.ConnectTraktTask access$200(com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment)>
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>
<fr.castorflex.android.smoothprogressbar.SmoothProgressBar: void <init>(android.content.Context)>
<org.apache.oltu.oauth2.client.OAuthClient: org.apache.oltu.oauth2.client.response.OAuthJSONAccessTokenResponse accessToken(org.apache.oltu.oauth2.client.request.OAuthClientRequest)>
<com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment$1: void onClick(android.view.View)>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap)>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment$2: void <init>(com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment)>
<com.battlelancer.seriesguide.sync.SgSyncService: android.os.IBinder onBind(android.content.Intent)>
<android.widget.FrameLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.google.gson.internal.bind.TypeAdapters$10: void <init>()>
<java.io.File: boolean isDirectory()>
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1: void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl,android.support.v4.view.AccessibilityDelegateCompat)>
<com.google.android.gms.analytics.x: long dl()>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity$4: void <init>(com.battlelancer.seriesguide.ui.BackupDeleteActivity)>
<java.util.ArrayList: boolean contains(java.lang.Object)>
<com.google.api.client.util.escape.Platform$1: void <init>()>
<android.support.v4.app.FragmentManagerImpl: void <init>()>
<java.lang.String: int indexOf(int,int)>
<butterknife.ButterKnife: void inject(java.lang.Object,java.lang.Object,butterknife.ButterKnife$Finder)>
<com.battlelancer.seriesguide.ui.AddActivity: void onAddShow(com.battlelancer.seriesguide.items.SearchResult)>
<android.app.Fragment: android.app.Activity getActivity()>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink: void flush()>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<com.squareup.picasso.MediaStoreBitmapHunter: com.squareup.picasso.MediaStoreBitmapHunter$PicassoKind getPicassoKind(int,int)>
<java.util.zip.Inflater: int getRemaining()>
<android.os.Looper: android.os.Looper getMainLooper()>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: com.squareup.okhttp.internal.http.HttpEngine getResponse()>
<com.squareup.okhttp.internal.http.RouteSelector: boolean hasNext()>
<com.crashlytics.android.internal.p: android.content.Context getContext()>
<android.support.v4.view.KeyEventCompatHoneycomb: boolean metaStateHasModifiers(int,int)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$5: void <init>(com.battlelancer.seriesguide.ui.MovieDetailsFragment,boolean)>
<com.squareup.okhttp.Response$Builder: void <init>(com.squareup.okhttp.Response)>
<com.google.gson.internal.bind.TypeAdapters$14: void <init>()>
<com.battlelancer.seriesguide.util.DBUtils$NextEpisodesQuery: void <clinit>()>
<de.greenrobot.event.EventBus: void <clinit>()>
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>
<java.util.LinkedList: java.lang.Object remove(int)>
<com.jakewharton.trakt.services.ShowService$Season: void <init>(int,int)>
<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>
<android.content.IntentFilter: void addAction(java.lang.String)>
<android.view.View: void <clinit>()>
<com.squareup.okhttp.Headers$Builder: com.squareup.okhttp.Headers build()>
<com.battlelancer.seriesguide.ui.BaseActivity: void setCustomTheme()>
<com.mobeta.android.dslv.DragSortListView: void access$700(com.mobeta.android.dslv.DragSortListView,boolean)>
<android.support.v4.app.LoaderManagerImpl: android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>
<com.squareup.okhttp.internal.DiskLruCache$Snapshot: void <init>(com.squareup.okhttp.internal.DiskLruCache,java.lang.String,long,java.io.InputStream[],long[])>
<com.battlelancer.seriesguide.util.FlagTapeEntryQueue: void remove()>
<com.squareup.okhttp.internal.spdy.IncomingStreamHandler: void <clinit>()>
<com.google.myjson.internal.bind.ArrayTypeAdapter: void <clinit>()>
<retrofit.Platform$Base: retrofit.RestAdapter$Log defaultLog()>
<com.battlelancer.seriesguide.ui.EpisodesFragment: void onMarkUntilHere(long)>
<de.greenrobot.event.PendingPostQueue: de.greenrobot.event.PendingPost poll(int)>
<java.lang.reflect.Modifier: boolean isInterface(int)>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<android.os.StatFs: void <init>(java.lang.String)>
<com.battlelancer.seriesguide.settings.TraktCredentials: void <init>(android.content.Context)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$7: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<com.google.api.client.util.ClassInfo: com.google.api.client.util.ClassInfo of(java.lang.Class,boolean)>
<java.io.InterruptedIOException: void <init>(java.lang.String)>
<com.google.android.gms.analytics.r: void cs()>
<com.battlelancer.seriesguide.util.TaskManager$1: void run()>
<com.battlelancer.seriesguide.dataliberation.JsonExportTask: int exportMovies(java.io.File)>
<com.battlelancer.seriesguide.loaders.TraktCommentsLoader: void <init>(android.content.Context,android.os.Bundle)>
<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>
<com.squareup.okio.GzipSource: void checkEqual(java.lang.String,int,int)>
<butterknife.ButterKnife$Finder$3: void <init>(java.lang.String,int)>
<org.apache.http.message.BasicHttpEntityEnclosingRequest: org.apache.http.HttpEntity getEntity()>
<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>
<java.math.BigInteger: void <init>(java.lang.String)>
<android.widget.ProgressBar: void drawableStateChanged()>
<com.battlelancer.seriesguide.ui.EpisodeDetailsActivity: void onCreate(android.os.Bundle)>
<com.squareup.okhttp.Request: void <init>(com.squareup.okhttp.Request$Builder)>
<com.battlelancer.seriesguide.ui.EpisodesFragment: void access$700(com.battlelancer.seriesguide.ui.EpisodesFragment)>
<com.squareup.okhttp.internal.Platform: void <clinit>()>
<com.squareup.picasso.Action: void <init>(com.squareup.picasso.Picasso,java.lang.Object,com.squareup.picasso.Request,boolean,boolean,int,android.graphics.drawable.Drawable,java.lang.String)>
<android.support.v4.view.ViewPager: boolean pageScrolled(int)>
<java.io.File: boolean canRead()>
<com.google.gson.Gson$4: void <init>(com.google.gson.Gson)>
<com.google.gson.DefaultDateTypeAdapter: void <init>(java.text.DateFormat,java.text.DateFormat)>
<com.squareup.okhttp.Cache$1: void remove(com.squareup.okhttp.Request)>
<com.google.myjson.internal.bind.MapTypeAdapterFactory: void <init>(com.google.myjson.internal.ConstructorConstructor,boolean)>
<android.preference.PreferenceActivity: void <init>()>
<com.squareup.okio.Buffer: void clear()>
<android.support.v4.widget.ViewDragHelper: boolean shouldInterceptTouchEvent(android.view.MotionEvent)>
<com.battlelancer.seriesguide.ui.ListsActivity: void setupActionBar()>
<com.battlelancer.seriesguide.ui.ShowsActivity: void <init>()>
<android.widget.OverScroller: int getFinalX()>
<com.squareup.okhttp.internal.Platform$Android: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>
<android.widget.ListView: int getHeaderViewsCount()>
<com.google.api.client.http.GenericUrl: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.uwetrottmann.getglue.GetGlue: retrofit.RestAdapter getRestAdapterApiFour()>
<com.battlelancer.seriesguide.ui.ShowsFragment: void access$600(com.battlelancer.seriesguide.ui.ShowsFragment,long)>
<com.google.api.client.repackaged.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>
<com.squareup.okhttp.internal.spdy.ErrorCode: com.squareup.okhttp.internal.spdy.ErrorCode fromSpdy3Rst(int)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>
<com.mobeta.android.dslv.DragSortListView$SmoothAnimator: void <init>(com.mobeta.android.dslv.DragSortListView,float,int)>
<android.support.v4.app.FragmentManagerImpl$4: void <init>(android.support.v4.app.FragmentManagerImpl,int,int)>
<com.google.gson.internal.bind.TypeAdapters$4: void <init>()>
<android.widget.ImageView: int getBaseline()>
<java.util.Calendar: boolean isSet(int)>
<android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl: void <init>()>
<com.google.api.client.http.javanet.NetHttpTransport: void <clinit>()>
<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>
<com.google.android.gms.analytics.h$1: void <init>(com.google.android.gms.analytics.h,java.lang.String)>
<android.graphics.Typeface: void <clinit>()>
<android.widget.TextView: int computeVerticalScrollRange()>
<com.battlelancer.seriesguide.settings.GetGlueSettings: void clearTokens(android.content.Context)>
<com.google.api.client.http.HttpMediaType: boolean matchesToken(java.lang.String)>
<com.uwetrottmann.seriesguide.backend.episodes.EpisodesRequest: com.google.api.client.googleapis.services.AbstractGoogleClient getAbstractGoogleClient()>
<android.support.v4.view.ViewPager: void computeScroll()>
<android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int)>
<android.view.View: void postInvalidateOnAnimation()>
<com.battlelancer.seriesguide.ui.BackupDeleteActivity: boolean isExternalStorageAvailable(int)>
<com.squareup.picasso.Request$Builder: boolean hasSize()>
<java.lang.Thread: java.lang.String toString()>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$10: void <init>(com.battlelancer.seriesguide.ui.SeriesGuidePreferences)>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink: void <clinit>()>
<android.support.v4.app.LoaderManagerImpl: void doReportStart()>
<org.apache.http.client.methods.HttpRequestBase: org.apache.http.RequestLine getRequestLine()>
<android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)>
<com.squareup.okio.Buffer: byte[] readByteArray()>
<com.mobeta.android.dslv.DragSortController: boolean access$102(com.mobeta.android.dslv.DragSortController,boolean)>
<android.support.v4.util.LruCache: java.lang.Object get(java.lang.Object)>
<android.widget.TextView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<java.util.concurrent.CountDownLatch: void await()>
<android.graphics.Region: void <clinit>()>
<com.squareup.okhttp.internal.spdy.SpdyConnection: com.squareup.okhttp.internal.spdy.Ping removePing(int)>
<android.app.Activity: android.view.Window getWindow()>
<com.battlelancer.seriesguide.thetvdbapi.TheTVDB: boolean isUpdateShow(android.content.Context,int)>
<java.lang.Math: double min(double,double)>
<android.support.v4.widget.ViewDragHelper: boolean checkTouchSlop(android.view.View,float,float)>
<com.battlelancer.seriesguide.util.Utils: void clearLegacyExternalFileCache(android.content.Context)>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>
<com.squareup.okhttp.internal.http.HttpConnection: long bufferSize()>
<com.mobeta.android.dslv.DragSortListView: int access$1100(com.mobeta.android.dslv.DragSortListView)>
<com.battlelancer.seriesguide.util.SelectionBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String)>
<com.squareup.okhttp.internal.http.RetryableSink: void writeToSocket(com.squareup.okio.BufferedSink)>
<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences: void setupAdvancedSettings(android.content.Context,android.preference.Preference,android.preference.Preference,android.preference.Preference,android.preference.Preference)>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void rstStream(int,com.squareup.okhttp.internal.spdy.ErrorCode)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.battlelancer.seriesguide.sync.SgSyncService: void <clinit>()>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAuthIOException: java.lang.Throwable getCause()>
<android.preference.PreferenceActivity: void onStop()>
<android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
<android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>
<android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<java.util.ArrayList: java.lang.Object remove(int)>
<com.squareup.okio.AsyncTimeout$1: void close()>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment: void onActivityCreated(android.os.Bundle)>
<com.google.android.gms.analytics.r: void <init>()>
<android.support.v4.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.battlelancer.seriesguide.ui.AddFragment$AddAdapter$1: void onClick(android.view.View)>
<java.util.IdentityHashMap: boolean containsKey(java.lang.Object)>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Reader: void readLiteralHeaderWithIncrementalIndexingNewName()>
<android.os.Binder: android.os.IInterface queryLocalInterface(java.lang.String)>
<com.google.api.client.json.gson.GsonGenerator: void writeNumber(double)>
<android.support.v4.widget.EdgeEffectCompat: void <init>(android.content.Context)>
<java.lang.Short: void <init>(short)>
<android.support.v4.view.ViewCompatJB: int getImportantForAccessibility(android.view.View)>
<com.google.api.client.http.javanet.NetHttpRequest: com.google.api.client.http.LowLevelHttpResponse execute()>
<com.google.gson.FieldNamingPolicy: void <init>(java.lang.String,int)>
<android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: void <init>()>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection)>
<com.squareup.okhttp.internal.spdy.SpdyConnection$2: void <init>(com.squareup.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],int,long)>
<com.battlelancer.seriesguide.settings.TraktCredentials: void removeCredentials()>
<com.squareup.okhttp.internal.spdy.HpackDraft07: void <clinit>()>
<android.support.v4.app.ActionBarDrawerToggleJellybeanMR2: void <clinit>()>
<com.squareup.okhttp.Cache$Entry: void writeTo(com.squareup.okhttp.internal.DiskLruCache$Editor)>
<com.battlelancer.seriesguide.ui.OverviewFragment$4: void <init>(com.battlelancer.seriesguide.ui.OverviewFragment)>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean access$400(com.squareup.okhttp.internal.spdy.SpdyStream$SpdyDataSink)>
<android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: java.lang.Object newEdgeEffect(android.content.Context)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$4: void <init>(com.battlelancer.seriesguide.ui.MovieDetailsFragment,boolean)>
<com.battlelancer.seriesguide.ui.ActivityFragment: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<com.squareup.okhttp.internal.http.HttpConnection$UnknownLengthSource: void close()>
<com.mobeta.android.dslv.DragSortListView$SmoothAnimator: float transform(float)>
<com.squareup.picasso.Request: boolean hasCustomTransformations()>
<com.google.android.gms.analytics.GoogleAnalytics: void a(com.google.android.gms.analytics.GoogleAnalytics$a)>
<com.battlelancer.seriesguide.ui.streams.UserMovieStreamFragment$1: void <init>(com.battlelancer.seriesguide.ui.streams.UserMovieStreamFragment)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment$3: void <init>(com.battlelancer.seriesguide.ui.EpisodeDetailsFragment,java.lang.String)>
<com.google.myjson.LongSerializationPolicy: void <init>(java.lang.String,int,com.google.myjson.LongSerializationPolicy$1)>
<com.mobeta.android.dslv.DragSortController$1: void <init>(com.mobeta.android.dslv.DragSortController)>
<com.google.api.client.http.GenericUrl: java.util.List toPathParts(java.lang.String)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void fireTrackerEventContextMenu(java.lang.String)>
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache install(java.io.File,long)>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment$3: void onClick(android.view.View)>
<com.battlelancer.seriesguide.ui.PersonFragment$1: void <init>(com.battlelancer.seriesguide.ui.PersonFragment)>
<java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment: void onStart()>
<android.support.v4.view.ViewPager: void onMeasure(int,int)>
<com.battlelancer.seriesguide.ui.OverviewActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.google.android.gms.internal.ez$4: void <init>(android.webkit.JsPromptResult)>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment$4: void onClick(android.view.View)>
<java.lang.String: int hashCode()>
<com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator error(int)>
<com.google.api.client.http.HttpHeaders: com.google.api.client.http.HttpHeaders setIfModifiedSince(java.lang.String)>
<com.battlelancer.seriesguide.ui.dialogs.CheckInDialogFragment: void checkInTrakt(java.lang.String)>
<com.battlelancer.seriesguide.extensions.ExtensionSubscriberService: void onHandleIntent(android.content.Intent)>
<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>
<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>
<com.google.android.gms.analytics.aj: boolean dN()>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
<com.squareup.okhttp.internal.spdy.Http20Draft12: java.lang.IllegalArgumentException illegalArgument(java.lang.String,java.lang.Object[])>
<com.battlelancer.seriesguide.settings.GetGlueSettings: boolean isSharingWithGetGlue(android.content.Context)>
<android.support.v4.view.ViewPager: boolean isGutterDrag(float,float)>
<com.squareup.okio.RealBufferedSource: int readInt()>
<com.battlelancer.seriesguide.util.MovieTools: void addToList(android.content.Context,int,java.lang.String,com.battlelancer.seriesguide.util.MovieTools$AddMovieTask$AddTo)>
<com.google.api.client.json.gson.GsonGenerator: void writeStartObject()>
<com.battlelancer.seriesguide.ui.BaseSettingsFragment$1: void <init>()>
<com.battlelancer.seriesguide.extensions.WebSearchExtension: void <init>()>
<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()>
<android.widget.TextView: int getRightPaddingOffset()>
<android.support.v4.app.NotificationCompatJellybean: void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList)>
<android.support.v4.widget.DrawerLayout: void closeDrawer(android.view.View)>
<com.squareup.okhttp.internal.http.HttpTransport: com.squareup.okio.Sink createRequestBody(com.squareup.okhttp.Request)>
<android.view.View: boolean performHapticFeedback(int)>
<com.battlelancer.seriesguide.ui.EpisodesFragment: void <init>()>
<com.google.api.client.util.IOUtils: void copy(java.io.InputStream,java.io.OutputStream)>
<com.google.myjson.internal.bind.TypeAdapters$16: void <init>()>
<android.support.v4.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,int)>
<com.battlelancer.seriesguide.ui.ActivityFragment$2: void <init>(com.battlelancer.seriesguide.ui.ActivityFragment)>
<android.app.Activity: void <init>()>
<android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>
<com.google.gson.stream.JsonReader: void skipUnquotedValue()>
<android.app.Fragment: java.lang.String getString(int,java.lang.Object[])>
<com.squareup.okhttp.Connection: void resetIdleStartTime()>
<java.lang.Class: java.lang.String getName()>
<android.support.v4.app.LoaderManagerImpl: void <clinit>()>
<java.io.EOFException: void <init>()>
<android.widget.TextView: boolean performLongClick()>
<com.google.gson.FieldNamingPolicy$2: void <init>(java.lang.String,int)>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder: void <init>(com.google.api.client.http.HttpTransport,com.google.api.client.json.JsonFactory,java.lang.String,java.lang.String,com.google.api.client.http.HttpRequestInitializer,boolean)>
<android.os.Build$VERSION: void <clinit>()>
<org.apache.oltu.oauth2.client.OAuthClient: org.apache.oltu.oauth2.client.response.OAuthAccessTokenResponse accessToken(org.apache.oltu.oauth2.client.request.OAuthClientRequest,java.lang.Class)>
<android.support.v4.app.NavUtils: void navigateUpTo(android.app.Activity,android.content.Intent)>
<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>
<com.uwetrottmann.seriesguide.backend.episodes.EpisodesRequest: com.google.api.client.googleapis.services.AbstractGoogleClientRequest setDisableGZipContent(boolean)>
<android.support.v4.app.ActionBarDrawerToggleHoneycomb: void <clinit>()>
<com.battlelancer.seriesguide.util.ServiceUtils$3: void <init>(int,int,int,android.view.View,java.lang.String)>
<com.squareup.okhttp.Connection: com.squareup.okhttp.Route getRoute()>
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: int getImportantForAccessibility(android.view.View)>
<android.app.Notification$Builder: android.app.Notification$Builder setOnlyAlertOnce(boolean)>
<com.squareup.okhttp.Connection: void setOwner(java.lang.Object)>
<com.squareup.okhttp.Response$Builder: void checkPriorResponse(com.squareup.okhttp.Response)>
<com.google.android.gms.analytics.s: java.util.Timer a(java.util.Timer)>
<android.app.Activity: android.content.Intent getIntent()>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder: fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder progressiveStopSpeed(float)>
<android.app.Notification: void <clinit>()>
<com.battlelancer.seriesguide.ui.BaseNavDrawerActivity$DrawerItemDivider: void <init>(com.battlelancer.seriesguide.ui.BaseNavDrawerActivity)>
<com.squareup.okio.Okio$1: com.squareup.okio.Timeout timeout()>
<android.graphics.Paint: void <init>()>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment$7: void <init>(com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: com.squareup.okhttp.Protocol getProtocol()>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$SettingsFragment: void <init>()>
<com.battlelancer.seriesguide.ui.dialogs.ListManageDialogFragment: void <init>()>
<com.crashlytics.android.internal.r: android.app.Application b(android.content.Context)>
<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.support.v4.view.ViewCompat$HCViewCompatImpl: void <init>()>
<com.squareup.okio.RealBufferedSink: void close()>
<android.support.v4.app.FragmentActivity: void onAttachFragment(android.support.v4.app.Fragment)>
<com.google.myjson.LongSerializationPolicy: void <init>(java.lang.String,int)>
<com.battlelancer.seriesguide.util.Utils: void runNotificationService(android.content.Context)>
<com.google.api.client.http.LowLevelHttpRequest: void setContentLength(long)>
<com.battlelancer.seriesguide.ui.ListsFragment$ListItemAdapter$1: void <init>(com.battlelancer.seriesguide.ui.ListsFragment$ListItemAdapter,java.lang.String,int,int)>
<com.crashlytics.android.internal.x: void onActivityResumed(android.app.Activity)>
<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.InternalCache internalCache()>
<com.battlelancer.seriesguide.dataliberation.JsonExportTask: void writeJsonStreamMovies(java.io.OutputStream,android.database.Cursor)>
<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object peek()>
<com.battlelancer.seriesguide.util.LatestEpisodeUpdateTask: java.lang.Void doInBackground(java.lang.Integer[])>
<org.apache.http.params.BasicHttpParams: void <init>()>
<android.support.v4.os.ParcelableCompat: android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks)>
<android.app.Activity: boolean navigateUpTo(android.content.Intent)>
<com.google.android.gms.internal.ho: int b(int,int,int)>
<android.widget.ScrollView: boolean onNestedFling(android.view.View,float,float,boolean)>
<com.google.api.client.json.JsonObjectParser: java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.Class)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>
<android.widget.ScrollView: void addView(android.view.View,int)>
<android.widget.ImageView: void setSelected(boolean)>
<com.uwetrottmann.seriesguide.backend.movies.model.MovieList: com.google.api.client.json.GenericJson clone()>
<android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>
<com.squareup.okhttp.Connection: com.squareup.okhttp.internal.http.Transport newTransport(com.squareup.okhttp.internal.http.HttpEngine)>
<com.google.android.gms.internal.he: void <clinit>()>
<com.battlelancer.seriesguide.ui.StatsFragment$StatsTask: void <init>(com.battlelancer.seriesguide.ui.StatsFragment,com.battlelancer.seriesguide.ui.StatsFragment$1)>
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String)>
<android.view.MotionEvent: int getAction()>
<com.battlelancer.seriesguide.util.TraktTask: com.jakewharton.trakt.entities.Response doCheckInAction(com.jakewharton.trakt.Trakt)>
<android.app.Notification$InboxStyle: android.app.Notification$InboxStyle setBigContentTitle(java.lang.CharSequence)>
<com.squareup.okhttp.internal.http.SpdyTransport$SpdySource: com.squareup.okio.Timeout timeout()>
<com.battlelancer.seriesguide.ui.FullscreenImageActivity: void delayedHide(int)>
<com.battlelancer.seriesguide.appwidget.ListWidgetConfigure: void <init>()>
<com.squareup.okhttp.internal.DiskLruCache: void close()>
<com.battlelancer.seriesguide.ui.OverviewActivity: void findAndRemoveFragment(int)>
<android.support.v4.app.Fragment: void registerForContextMenu(android.view.View)>
<com.squareup.picasso.RequestCreator: com.squareup.picasso.Request createRequest(long)>
<com.battlelancer.seriesguide.util.PeopleListHelper: java.util.List transformCrewToPersonList(java.util.List)>
<com.uwetrottmann.seriesguide.backend.movies.model.Movie: com.uwetrottmann.seriesguide.backend.movies.model.Movie setIsInWatchlist(java.lang.Boolean)>
<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator)>
<com.google.api.client.util.Charsets: void <clinit>()>
<java.lang.Math: double random()>
<com.squareup.okhttp.Headers: java.lang.String value(int)>
<com.squareup.okhttp.internal.spdy.Spdy3$Reader: void readSettings(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int)>
<java.util.LinkedList: int size()>
<android.graphics.Region: void <init>()>
<android.view.View: android.os.Parcelable onSaveInstanceState()>
<de.greenrobot.event.SubscriberMethodFinder: void <init>()>
<com.google.android.gms.plus.PlusOneButton$DefaultOnPlusOneClickListener: void onClick(android.view.View)>
<com.squareup.picasso.Request: java.lang.String toString()>
<com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.Class)>
<android.support.v4.view.ViewPager$ViewPositionComparator: void <init>()>
<com.mobeta.android.dslv.DragSortListView: void access$1700(com.mobeta.android.dslv.DragSortListView)>
<java.io.Writer: void write(java.lang.String)>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment$3: void <init>(com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment,android.content.SharedPreferences)>
<com.battlelancer.seriesguide.ui.dialogs.ManageListsDialogFragment: void onCreate(android.os.Bundle)>
<com.google.api.client.util.Sleeper: void <clinit>()>
<com.google.android.gms.plus.PlusOneButton: int getSize(android.content.Context,android.util.AttributeSet)>
<uk.co.senab.photoview.PhotoViewAttacher$2: void <clinit>()>
<de.greenrobot.event.EventBus: void invokeSubscriber(de.greenrobot.event.PendingPost)>
<android.view.View: void setFocusableInTouchMode(boolean)>
<com.squareup.okhttp.internal.spdy.Spdy3: int maxFrameSize()>
<com.battlelancer.seriesguide.util.tasks.HexagonRemoveMovieFromWatchlistTask: void <init>(android.content.Context,int)>
<com.battlelancer.seriesguide.ui.ActivityFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>
<com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment$CheckForRemovalTask$CheckForRemovalCompleteEvent: void <init>(com.battlelancer.seriesguide.ui.dialogs.ConfirmDeleteDialogFragment$CheckForRemovalTask)>
<android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: void finish(java.lang.Object)>
<android.support.v4.app.ActionBarDrawerToggleJellybeanMR2: android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity)>
<android.support.v4.app.BackStackRecord: void <init>(android.support.v4.app.FragmentManagerImpl)>
<java.lang.System: void <clinit>()>
<com.battlelancer.seriesguide.billing.BillingActivity$3: void onClick(android.view.View)>
<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpHeaders getHeaders()>
<com.squareup.picasso.Picasso$LoadedFrom: void <init>(java.lang.String,int,int)>
<java.util.concurrent.TimeUnit: void <clinit>()>
<com.squareup.okio.Segment: void writeTo(com.squareup.okio.Segment,int)>
<android.support.v4.view.ViewPager: void addTouchables(java.util.ArrayList)>
<com.uwetrottmann.seriesguide.backend.episodes.model.Episode: com.uwetrottmann.seriesguide.backend.episodes.model.Episode setEpisodeNumber(java.lang.Integer)>
<android.text.format.DateUtils: boolean isToday(long)>
<com.google.api.client.http.UriTemplate: java.lang.String expand(java.lang.String,java.lang.Object,boolean)>
<com.google.android.gms.auth.GoogleAuthException: void <init>(java.lang.String)>
<com.squareup.okhttp.OkHttpClient$1: com.squareup.okhttp.internal.http.Transport newTransport(com.squareup.okhttp.Connection,com.squareup.okhttp.internal.http.HttpEngine)>
<com.battlelancer.seriesguide.util.DBUtils: android.database.Cursor getUpcomingEpisodes(boolean,android.content.Context)>
<java.util.zip.Inflater: boolean finished()>
<com.battlelancer.seriesguide.dataliberation.JsonImportTask: android.content.ContentValues[][] buildSeasonAndEpisodeBatches(com.battlelancer.seriesguide.dataliberation.model.Show)>
<com.battlelancer.seriesguide.util.DBUtils: java.lang.String trimLeadingArticle(java.lang.String)>
<android.app.Activity: void setContentView(int)>
<android.support.v4.app.NavUtils$NavUtilsImplBase: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)>
<com.squareup.okhttp.Response: com.squareup.okhttp.Protocol access$1200(com.squareup.okhttp.Response)>
<android.widget.FrameLayout: boolean shouldDelayChildPressedState()>
<com.battlelancer.seriesguide.service.OnAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.squareup.okhttp.internal.http.HttpConnection: void writeRequest(com.squareup.okhttp.Headers,java.lang.String)>
<com.squareup.okhttp.internal.spdy.Spdy3$Reader: void readSynStream(com.squareup.okhttp.internal.spdy.FrameReader$Handler,int,int)>
<android.support.v4.widget.DrawerLayout: boolean isContentView(android.view.View)>
<com.uwetrottmann.seriesguide.backend.shows.model.Show: com.uwetrottmann.seriesguide.backend.shows.model.Show setTvdbId(java.lang.Integer)>
<com.battlelancer.seriesguide.backend.CloudSetupFragment$2: void onClick(android.view.View)>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Reader: void emitReferenceSet()>
<org.apache.http.client.methods.HttpHead: void <init>(java.lang.String)>
<com.google.api.client.util.Types: java.lang.reflect.Type getBound(java.lang.reflect.WildcardType)>
<com.google.api.client.json.JsonToken: void <clinit>()>
<com.uwetrottmann.seriesguide.backend.movies.Movies: void <clinit>()>
<android.support.v4.content.AsyncTaskLoader$LoadTask: void run()>
<com.battlelancer.seriesguide.service.TraktFlagService: android.os.IBinder onBind(android.content.Intent)>
<com.battlelancer.seriesguide.ui.ShowFragment$7: void <init>(com.battlelancer.seriesguide.ui.ShowFragment)>
<com.google.myjson.internal.bind.TypeAdapters$1: void <init>()>
<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request build()>
<com.battlelancer.seriesguide.dataliberation.JsonImportTask: int importMovies(java.io.File)>
<com.squareup.okhttp.internal.DiskLruCache$Entry: java.io.File getDirtyFile(int)>
<com.google.android.gms.analytics.GoogleAnalytics: void <init>(android.content.Context)>
<com.battlelancer.seriesguide.ui.BaseActivity: void setupActionBar()>
<com.battlelancer.seriesguide.ui.PeopleFragment: void <clinit>()>
<com.battlelancer.seriesguide.ui.StatsFragment: void <init>()>
<android.support.v4.app.ActivityOptionsCompat: android.os.Bundle toBundle()>
<com.mobeta.android.dslv.DragSortListView: boolean stopDrag(boolean,float)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$4: void onClick(android.view.View)>
<com.google.api.client.http.LowLevelHttpRequest: java.lang.String getContentEncoding()>
<com.squareup.okio.AsyncTimeout: void <init>()>
<com.google.android.gms.analytics.s$c: void <init>(com.google.android.gms.analytics.s)>
<com.squareup.okio.Buffer: com.squareup.okio.Buffer writeShort(int)>
<com.google.api.client.json.Json: void <clinit>()>
<com.squareup.okhttp.internal.spdy.Http20Draft12: java.lang.IllegalArgumentException access$500(java.lang.String,java.lang.Object[])>
<com.battlelancer.seriesguide.dataliberation.DataLiberationFragment: void <init>()>
<java.net.Socket: java.io.OutputStream getOutputStream()>
<com.battlelancer.seriesguide.service.NotificationService: void onHandleIntent(android.content.Intent)>
<android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: int getPointerId(android.view.MotionEvent,int)>
<java.lang.String: java.lang.String toString()>
<android.widget.ListView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<java.lang.Long: void <init>(long)>
<com.google.android.gms.analytics.TrackerHandler: void <init>()>
<com.battlelancer.seriesguide.ui.EpisodesFragment: com.battlelancer.seriesguide.ui.EpisodesFragment newInstance(int,int,int,int)>
<android.app.IntentService: void setIntentRedelivery(boolean)>
<com.squareup.okhttp.internal.BitArray$VariableCapacity: boolean get(int)>
<com.squareup.okhttp.internal.http.RouteSelector: void <init>(com.squareup.okhttp.Address,java.net.URI,java.net.ProxySelector,com.squareup.okhttp.ConnectionPool,com.squareup.okhttp.internal.Dns,com.squareup.okhttp.internal.RouteDatabase)>
<com.squareup.okhttp.internal.spdy.Spdy3$Writer: void data(boolean,int,com.squareup.okio.Buffer,int)>
<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>
<com.google.gson.stream.JsonReader: boolean isLiteral(char)>
<android.app.Notification$InboxStyle: android.app.Notification$InboxStyle setSummaryText(java.lang.CharSequence)>
<com.squareup.picasso.RequestCreator: android.graphics.Bitmap get()>
<com.squareup.okhttp.internal.Util: java.lang.String hash(java.lang.String)>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(long)>
<com.battlelancer.seriesguide.util.LocalOnlyOkHttpDownloader: void <init>(android.content.Context,java.io.File,long)>
<com.squareup.okhttp.internal.DiskLruCache: int access$402(com.squareup.okhttp.internal.DiskLruCache,int)>
<com.google.android.gms.analytics.u: void <init>()>
<android.support.v4.view.ViewPager: int getClientWidth()>
<com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment: void setupViews()>
<com.squareup.okhttp.internal.http.HttpEngine: void <init>(com.squareup.okhttp.OkHttpClient,com.squareup.okhttp.Request,boolean,com.squareup.okhttp.Connection,com.squareup.okhttp.internal.http.RouteSelector,com.squareup.okhttp.internal.http.RetryableSink,com.squareup.okhttp.Response)>
<com.battlelancer.seriesguide.ui.SeasonsFragment$1$1: boolean onMenuItemClick(android.view.MenuItem)>
<com.battlelancer.seriesguide.settings.ShowsDistillationSettings: java.lang.String getSortQuery(int,boolean,boolean)>
<retrofit.appengine.UrlFetchClient: void <init>()>
<com.squareup.okio.RealBufferedSink: com.squareup.okio.BufferedSink write(com.squareup.okio.ByteString)>
<com.battlelancer.seriesguide.billing.IabHelper: void checkNotDisposed()>
<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>
<java.io.File: boolean createNewFile()>
<com.battlelancer.seriesguide.appwidget.AppWidget$UpdateService: void onHandleIntent(android.content.Intent)>
<java.lang.IllegalArgumentException: void <init>()>
<com.squareup.okhttp.Response$Builder: void <init>()>
<com.battlelancer.seriesguide.billing.BillingActivity$6: void onIabPurchaseFinished(com.battlelancer.seriesguide.billing.IabResult,com.battlelancer.seriesguide.billing.Purchase)>
<com.mobeta.android.dslv.DragSortListView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.battlelancer.seriesguide.extensions.ExtensionManager: com.battlelancer.seriesguide.extensions.ExtensionManager getInstance(android.content.Context)>
<com.google.myjson.internal.bind.TypeAdapters$15: void <init>()>
<com.google.android.gms.analytics.t: java.lang.String a(java.lang.Throwable)>
<android.graphics.Matrix: boolean preRotate(float)>
<com.battlelancer.seriesguide.util.ShowTools: void storeGetGlueId(int,java.lang.String)>
<android.app.Activity: android.view.WindowManager getWindowManager()>
<com.squareup.okhttp.CacheControl: boolean mustRevalidate()>
<com.google.android.gms.analytics.s: void cM()>
<com.google.android.gms.analytics.ak: void <clinit>()>
<com.uwetrottmann.androidutils.CheatSheet$2: void <init>(int)>
<android.support.v4.view.ViewPager$MyAccessibilityDelegate: void <init>(android.support.v4.view.ViewPager)>
<com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getToken(android.content.Context,java.lang.String,java.lang.String)>
<java.lang.Float: java.lang.Float valueOf(java.lang.String)>
<com.google.android.gms.analytics.ac: int dt()>
<android.support.v4.app.ActionBarDrawerToggleHoneycomb: android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity)>
<com.battlelancer.seriesguide.util.ServiceUtils: java.io.File createApiCacheDir(android.content.Context)>
<retrofit.Platform$Android$1: void <init>(retrofit.Platform$Android,retrofit.client.Client)>
<android.widget.OverScroller: void abortAnimation()>
<android.support.v4.app.DialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.crashlytics.android.internal.r: android.app.Activity a(android.content.Context)>
<com.squareup.okhttp.CacheControl: com.squareup.okhttp.CacheControl parse(com.squareup.okhttp.Headers)>
<java.lang.Float: float parseFloat(java.lang.String)>
<com.battlelancer.seriesguide.ui.SeasonsFragment: void onFlagShowWatched(boolean)>
<java.io.BufferedInputStream: long skip(long)>
<com.readystatesoftware.systembartint.SystemBarTintManager: void <clinit>()>
<com.battlelancer.seriesguide.backend.CloudSetupActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<org.apache.oltu.oauth2.client.request.OAuthClientRequest$TokenRequestBuilder: void <init>(java.lang.String)>
<com.battlelancer.seriesguide.ui.dialogs.RemoveCloudAccountDialogFragment: void <init>()>
<com.battlelancer.seriesguide.util.LocalOnlyOkHttpDownloader: void <init>(android.content.Context,java.io.File)>
<com.battlelancer.seriesguide.ui.PeopleFragment$4: void <init>(com.battlelancer.seriesguide.ui.PeopleFragment)>
<com.squareup.okhttp.internal.tls.DistinguishedNameParser: void <init>(javax.security.auth.x500.X500Principal)>
<com.google.android.gms.analytics.k: void <init>(android.content.Context,com.google.android.gms.analytics.k$a)>
<android.widget.TextView: int getTopPaddingOffset()>
<android.support.v4.app.NavUtilsJB: android.content.Intent getParentActivityIntent(android.app.Activity)>
<com.google.api.client.util.ClassInfo: java.util.Collection getFieldInfos()>
<com.google.api.client.json.gson.GsonFactory: void <init>()>
<com.battlelancer.seriesguide.ui.OverviewFragment: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<com.battlelancer.seriesguide.items.Series: void setFirstAired(java.lang.String)>
<com.google.api.client.http.apache.ApacheHttpResponse: java.lang.String getHeaderValue(int)>
<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>
<com.battlelancer.seriesguide.ui.SearchFragment: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<com.google.api.client.json.JsonParser: java.lang.Object parseAndClose(java.lang.Class)>
<com.squareup.okio.RealBufferedSink: void <init>(com.squareup.okio.Sink,com.squareup.okio.Buffer)>
<com.google.api.client.http.apache.ApacheHttpResponse: java.lang.String getContentEncoding()>
<android.support.v4.view.ViewCompatICS: void setAccessibilityDelegate(android.view.View,java.lang.Object)>
<android.view.View: void postOnAnimation(java.lang.Runnable)>
<com.battlelancer.seriesguide.ui.FullscreenImageActivity: void setupViews()>
<com.battlelancer.seriesguide.ui.SeasonsFragment$3: boolean onMenuItemClick(android.view.MenuItem)>
<com.google.api.client.util.Sets: java.util.HashSet newHashSet()>
<uk.co.senab.photoview.gestures.FroyoGestureDetector: boolean onTouchEvent(android.view.MotionEvent)>
<uk.co.senab.photoview.gestures.EclairGestureDetector: boolean onTouchEvent(android.view.MotionEvent)>
<android.support.v4.view.ViewGroupCompatHC: void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)>
<de.greenrobot.event.PendingPost: void releasePendingPost(de.greenrobot.event.PendingPost)>
<java.util.Collections: void reverse(java.util.List)>
<com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection: void setDoOutput(boolean)>
<com.squareup.okhttp.internal.http.HttpMethod: boolean invalidatesCache(java.lang.String)>
<java.net.URL: int getPort()>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener)>
<com.squareup.picasso.PicassoDrawable: void <clinit>()>
<android.view.View$BaseSavedState: void <init>(android.os.Parcelable)>
<com.squareup.picasso.ContentStreamBitmapHunter: void <init>(android.content.Context,com.squareup.picasso.Picasso,com.squareup.picasso.Dispatcher,com.squareup.picasso.Cache,com.squareup.picasso.Stats,com.squareup.picasso.Action)>
<com.jakewharton.trakt.Trakt: retrofit.RestAdapter$Builder newRestAdapterBuilder()>
<com.squareup.okhttp.internal.http.HttpConnection: com.squareup.okio.Source newChunkedSource(java.net.CacheRequest,com.squareup.okhttp.internal.http.HttpEngine)>
<android.support.v4.util.SparseArrayCompat: int keyAt(int)>
<com.google.android.gms.analytics.w: java.lang.String dd()>
<com.google.gson.stream.JsonReader: void close()>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment$5: void onClick(android.view.View)>
<uk.co.senab.photoview.PhotoView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Reader: void ackSettingsLater()>
<com.battlelancer.seriesguide.billing.IabHelper: int getResponseCodeFromIntent(android.content.Intent)>
<com.squareup.okhttp.internal.http.OkHeaders: long contentLength(com.squareup.okhttp.Headers)>
<com.google.myjson.stream.JsonWriter: void <init>(java.io.Writer)>
<com.squareup.okhttp.Response: com.squareup.okhttp.Response cacheResponse()>
<com.google.android.gms.common.GooglePlayServicesUtil: void A(android.content.Context)>
<com.jakewharton.trakt.services.ShowService$ShowCheckin: void <init>(int,int,int,java.lang.String,java.lang.String,java.lang.String)>
<com.battlelancer.seriesguide.ui.MoviesActivity: void setupViews()>
<com.google.api.client.util.ByteCountingOutputStream: void <init>()>
<com.battlelancer.seriesguide.util.MovieTools: void removeFromCollection(android.content.Context,int)>
<com.battlelancer.seriesguide.provider.SeriesGuideProvider: boolean onCreate()>
<android.view.ViewGroup: void setMotionEventSplittingEnabled(boolean)>
<com.battlelancer.seriesguide.ui.StatsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<android.os.AsyncTask: android.os.AsyncTask$Status getStatus()>
<com.google.android.gms.internal.ip: boolean gf()>
<com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment: void access$000(com.battlelancer.seriesguide.ui.ConnectTraktCredentialsFragment,boolean,boolean)>
<android.support.v4.app.NavUtils: void navigateUpFromSameTask(android.app.Activity)>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.String)>
<com.battlelancer.seriesguide.ui.dialogs.TraktRateDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<android.support.v4.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>
<android.view.animation.Animation: void <init>()>
<com.squareup.okhttp.internal.spdy.Http20Draft12: com.squareup.okio.ByteString access$000()>
<com.squareup.okio.DeflaterSink: void finishDeflate()>
<com.mobeta.android.dslv.DragSortListView$SmoothAnimator: void start()>
<android.widget.TextView: boolean onKeyPreIme(int,android.view.KeyEvent)>
<com.battlelancer.seriesguide.ui.OverviewFragment: void <init>()>
<com.battlelancer.seriesguide.ui.PersonFragment: void <init>()>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeWatchedPreviousType: java.lang.String getSelection()>
<android.support.v4.content.Loader: void reset()>
<com.squareup.okhttp.internal.http.HttpDate: void <clinit>()>
<android.support.v4.content.Loader: void onReset()>
<com.google.api.client.util.GenericData: java.util.Set entrySet()>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment: com.uwetrottmann.tmdb.entities.Trailers access$502(com.battlelancer.seriesguide.ui.MovieDetailsFragment,com.uwetrottmann.tmdb.entities.Trailers)>
<android.support.v4.app.ActionBarDrawerToggle: void <clinit>()>
<com.battlelancer.seriesguide.ui.ShowFragment: void access$000(com.battlelancer.seriesguide.ui.ShowFragment)>
<android.app.ActivityOptions: android.app.ActivityOptions makeScaleUpAnimation(android.view.View,int,int,int,int)>
<retrofit.Platform: boolean hasRxJavaOnClasspath()>
<com.mobeta.android.dslv.DragSortListView$SmoothAnimator: void run()>
<com.battlelancer.seriesguide.util.MovieTools$AddMovieTask$AddTo: void <clinit>()>
<com.mobeta.android.dslv.DragSortListView: int access$1000(com.mobeta.android.dslv.DragSortListView)>
<com.google.myjson.internal.bind.TypeAdapters$23: void <init>()>
<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder method(java.lang.String,com.squareup.okhttp.RequestBody)>
<com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity$2: void <init>(com.battlelancer.seriesguide.ui.FixGetGlueCheckInActivity)>
<java.math.BigInteger: int hashCode()>
<com.battlelancer.seriesguide.ui.PeopleFragment: void onActivityCreated(android.os.Bundle)>
<android.content.ContentResolver: boolean isSyncActive(android.accounts.Account,java.lang.String)>
<com.google.android.gms.common.UserRecoverableException: android.content.Intent getIntent()>
<com.google.android.gms.internal.ho: void <init>(android.content.Context)>
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache getInstalled()>
<com.google.gson.internal.bind.TypeAdapters$18: void <init>()>
<com.battlelancer.seriesguide.ui.PeopleFragment$4: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: java.lang.reflect.Type getGenericComponentType()>
<com.squareup.picasso.Picasso$Builder: void <init>(android.content.Context)>
<android.appwidget.AppWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>
<com.squareup.okhttp.internal.huc.HttpsURLConnectionImpl: void disconnect()>
<com.battlelancer.seriesguide.billing.IabHelper: void dispose()>
<com.battlelancer.seriesguide.enums.TraktAction: com.battlelancer.seriesguide.enums.TraktAction[] values()>
<com.battlelancer.seriesguide.ui.OverviewFragment$6: void onClick(android.view.View)>
<android.widget.ScrollView: void setOverScrollMode(int)>
<com.google.gson.internal.$Gson$Preconditions: void checkArgument(boolean)>
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>
<android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
<com.squareup.okhttp.internal.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)>
<com.google.api.client.json.gson.GsonFactory: com.google.api.client.json.JsonParser createJsonParser(java.lang.String)>
<java.util.ArrayList: void <init>()>
<com.squareup.okio.ByteString: void <clinit>()>
<java.lang.Integer: java.lang.Integer valueOf(int)>
<com.squareup.okio.Buffer: void skip(long)>
<de.greenrobot.event.util.ErrorDialogFragments$Support: void onClick(android.content.DialogInterface,int)>
<com.google.android.gms.analytics.s$3: void <clinit>()>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean)>
<com.squareup.okhttp.internal.spdy.ErrorCode: void <clinit>()>
<android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: boolean onPull(java.lang.Object,float)>
<com.google.api.client.http.HttpMediaType: java.lang.String build()>
<com.squareup.okhttp.internal.tls.DistinguishedNameParser: java.lang.String nextAT()>
<com.squareup.okhttp.internal.spdy.Spdy3$Reader: void close()>
<com.squareup.picasso.BitmapHunter$2: void run()>
<com.battlelancer.seriesguide.util.tasks.HexagonRemoveMovieFromWatchlistTask: void setMovieProperties(com.uwetrottmann.seriesguide.backend.movies.model.Movie)>
<android.widget.ImageView: int[] onCreateDrawableState(int)>
<com.squareup.okio.Buffer: com.squareup.okio.Buffer write(byte[],int,int)>
<com.squareup.okio.Okio: com.squareup.okio.Source source(java.io.File)>
<com.google.gson.stream.JsonWriter: int peek()>
<com.battlelancer.seriesguide.util.TraktTask: com.battlelancer.seriesguide.util.TraktTask watchedMovie(int)>
<com.squareup.okio.GzipSource: void updateCrc(com.squareup.okio.Buffer,long,long)>
<java.lang.Thread: java.lang.String getName()>
<android.support.v4.widget.CursorAdapter$MyDataSetObserver: void <init>(android.support.v4.widget.CursorAdapter,android.support.v4.widget.CursorAdapter$1)>
<com.battlelancer.seriesguide.util.FlagTapedTask$1$1: void <init>(com.battlelancer.seriesguide.util.FlagTapedTask$1)>
<com.squareup.picasso.Picasso: com.squareup.picasso.RequestCreator load(java.lang.String)>
<com.squareup.okhttp.Request: java.lang.Object access$1100(com.squareup.okhttp.Request)>
<com.battlelancer.seriesguide.util.PeopleListHelper$Person: void <init>()>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder: fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder reversed(boolean)>
<com.battlelancer.seriesguide.ui.ConnectTraktFragment: void onActivityCreated(android.os.Bundle)>
<java.lang.Throwable: java.lang.String toString()>
<java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
<android.support.v4.view.ViewPager: void onAttachedToWindow()>
<com.squareup.okhttp.internal.Util: int getDefaultPort(java.lang.String)>
<com.battlelancer.seriesguide.items.Series: void setId(java.lang.String)>
<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>
<com.google.gson.internal.Excluder: void <clinit>()>
<android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase: void <init>(android.support.v4.app.ActionBarDrawerToggle$1)>
<com.google.android.gms.dynamic.d$a$a: void <init>(android.os.IBinder)>
<android.support.v4.app.FragmentManagerImpl: void noteStateNotSaved()>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Reader: java.util.List getAndReset()>
<com.battlelancer.seriesguide.util.TimeTools: int getUserOffset(android.content.Context)>
<android.widget.FrameLayout: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.battlelancer.seriesguide.ui.ShowsFragment$ShowsAdapter$2: void onClick(android.view.View)>
<com.battlelancer.seriesguide.ui.EpisodesActivity: int updateEpisodeList(int)>
<com.google.android.gms.analytics.w: java.lang.String cZ()>
<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder addHeader(java.lang.String,java.lang.String)>
<com.squareup.okio.InflaterSource: void <init>(com.squareup.okio.BufferedSource,java.util.zip.Inflater)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment$9: void <init>(com.battlelancer.seriesguide.ui.MovieDetailsFragment)>
<com.battlelancer.seriesguide.util.EpisodeTools$EpisodeFlagTask: java.lang.Integer doInBackground(java.lang.Void[])>
<android.app.Service: void <init>()>
<com.battlelancer.seriesguide.util.ServiceUtils$4: void onClick(android.view.View)>
<com.uwetrottmann.seriesguide.backend.episodes.Episodes$Builder: com.uwetrottmann.seriesguide.backend.episodes.Episodes$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer)>
<android.view.ViewGroup: void drawableStateChanged()>
<android.support.v4.content.ModernAsyncTask$2: void <init>(android.support.v4.content.ModernAsyncTask)>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Reader: int readByte()>
<java.util.Collections: java.util.List emptyList()>
<com.google.gson.LongSerializationPolicy$2: void <init>(java.lang.String,int)>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.support.v4.app.Fragment: android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>
<com.google.myjson.internal.bind.ReflectiveTypeAdapterFactory: void <init>(com.google.myjson.internal.ConstructorConstructor,com.google.myjson.FieldNamingStrategy,com.google.myjson.internal.Excluder)>
<com.squareup.okio.RealBufferedSource: byte[] readByteArray(long)>
<java.util.TreeSet: boolean addAll(java.util.Collection)>
<android.widget.ScrollView: void onRestoreInstanceState(android.os.Parcelable)>
<com.battlelancer.seriesguide.ui.dialogs.CheckInDialogFragment: boolean setupCheckInGetGlue()>
<com.squareup.okhttp.internal.spdy.HpackDraft07$Reader: int readInt(int,int)>
<com.squareup.okhttp.internal.spdy.SpdyConnection$Builder: java.net.Socket access$500(com.squareup.okhttp.internal.spdy.SpdyConnection$Builder)>
<com.squareup.okhttp.internal.DiskLruCache$Entry: void access$800(com.squareup.okhttp.internal.DiskLruCache$Entry,java.lang.String[])>
<com.google.android.gms.analytics.h: boolean K(java.lang.String)>
<android.view.View: int getMeasuredWidth()>
<com.battlelancer.seriesguide.ui.dialogs.CheckInDialogFragment$CheckInQuery: void <clinit>()>
<com.google.android.gms.analytics.HitBuilders$EventBuilder: java.util.Map build()>
<com.jakewharton.trakt.TraktHelper$6: void <init>()>
<com.tonicartos.widget.stickygridheaders.StickyGridHeadersGridView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.squareup.okhttp.internal.huc.HttpURLConnectionImpl: java.lang.String defaultUserAgent()>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response build()>
<org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine getRequestLine()>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment: void onLoadFinished(android.support.v4.content.Loader,java.util.List)>
<android.support.v4.app.FragmentManagerImpl: void dispatchActivityCreated()>
<com.squareup.okio.AsyncTimeout: void timedOut()>
<com.battlelancer.seriesguide.items.Series: void setPoster(java.lang.String)>
<uk.co.senab.photoview.PhotoViewAttacher$FlingRunnable: void run()>
<com.google.gson.internal.bind.TypeAdapters$5: void <init>()>
<com.squareup.okhttp.internal.spdy.Settings: int size()>
<java.text.SimpleDateFormat: void <init>(java.lang.String)>
<com.crashlytics.android.internal.v: void c()>
<com.squareup.okhttp.Response: java.lang.String header(java.lang.String)>
<android.util.AndroidRuntimeException: void <init>(java.lang.String)>
<com.google.api.client.util.DataMap$EntrySet: void <init>(com.google.api.client.util.DataMap)>
<android.support.v4.widget.DrawerLayout: android.view.View findVisibleDrawer()>
<android.support.v4.widget.ViewDragHelper: int computeAxisDuration(int,int,int)>
<com.battlelancer.seriesguide.extensions.ExtensionManager: void saveSubscriptions()>
<com.google.myjson.stream.JsonWriter: void replaceTop(int)>
<com.battlelancer.seriesguide.ui.ShowFragment: void populateCredits(com.uwetrottmann.tmdb.entities.Credits)>
<com.battlelancer.seriesguide.util.TraktTools: java.lang.String buildRatingPercentageString(java.lang.Integer)>
<java.lang.Integer: java.lang.String toHexString(int)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences$2: boolean onPreferenceClick(android.preference.Preference)>
<android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl: void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)>
<android.view.MotionEvent: float getX(int)>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment$2: void <init>(com.battlelancer.seriesguide.ui.TraktShoutsFragment)>
<com.google.android.gms.analytics.ah: int a(java.util.List,com.google.android.gms.analytics.ab,boolean)>
<android.support.v4.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Lists: android.net.Uri buildListUri(java.lang.String)>
<com.jakewharton.trakt.services.AccountService$NewAccount: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<java.lang.Long: void <clinit>()>
<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle bigText(java.lang.CharSequence)>
<com.battlelancer.seriesguide.ui.EpisodesActivity$2: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<android.support.v4.app.FragmentManagerImpl: void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment)>
<com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment$2$1: void <init>(com.battlelancer.seriesguide.extensions.ExtensionsConfigurationFragment$2)>
<com.battlelancer.seriesguide.util.TraktSummaryTask: long createUniqueId(int,int)>
<com.battlelancer.seriesguide.ui.TraktShoutsFragment: void onDestroyView()>
<com.google.api.client.json.gson.GsonParser: void close()>
<com.google.myjson.stream.JsonReader: int doPeek()>
<com.squareup.okhttp.internal.spdy.Settings: void <init>()>
<android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: float getY(android.view.MotionEvent,int)>
<com.google.api.client.util.ArrayMap: void setDataCapacity(int)>
<com.squareup.okhttp.internal.http.CacheStrategy$Factory: boolean hasConditions(com.squareup.okhttp.Request)>
<com.google.android.apps.dashclock.api.DashClockExtension: void onCreate()>
<com.battlelancer.seriesguide.ui.PeopleActivity$MediaType: void <init>(java.lang.String,int,java.lang.String)>
<android.os.AsyncTask: void publishProgress(java.lang.Object[])>
<com.squareup.okhttp.internal.DiskLruCache$Editor: void abort()>
<com.squareup.okhttp.internal.Platform$Android: void untagSocket(java.net.Socket)>
<com.squareup.okio.AsyncTimeout: long remainingNanos(long)>
<com.battlelancer.seriesguide.util.TaskManager: com.battlelancer.seriesguide.util.TaskManager getInstance(android.content.Context)>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder priorResponse(com.squareup.okhttp.Response)>
<com.google.android.gms.plus.internal.g$a: void <init>(java.lang.String)>
<android.support.v4.app.Fragment: void performDestroyView()>
<com.battlelancer.seriesguide.ui.OverviewFragment$1: void <init>(com.battlelancer.seriesguide.ui.OverviewFragment)>
<org.apache.oltu.oauth2.client.request.OAuthClientRequest: void setLocationUri(java.lang.String)>
<com.battlelancer.seriesguide.util.EpisodeTools$SeasonType: java.lang.String getSelection()>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Episodes: android.net.Uri buildEpisodeUri(java.lang.String)>
<com.google.api.client.json.gson.GsonParser: com.google.api.client.json.JsonParser skipChildren()>
<com.squareup.okio.GzipSource: void <init>(com.squareup.okio.Source)>
<com.squareup.okhttp.internal.http.HttpEngine: com.squareup.okhttp.Response getResponse()>
<com.google.myjson.internal.bind.TypeAdapters$30: void <init>(java.lang.Class,java.lang.Class,com.google.myjson.TypeAdapter)>
<com.uwetrottmann.seriesguide.backend.episodes.model.EpisodeList: com.google.api.client.json.GenericJson clone()>
<java.lang.Thread: void start()>
<com.squareup.picasso.Picasso$CleanupThread$1: void <init>(com.squareup.picasso.Picasso$CleanupThread,java.lang.Exception)>
<com.google.api.client.json.GenericJson: com.google.api.client.json.GenericJson clone()>
<com.jakewharton.trakt.services.CommentService$MovieComment: void <init>(int,java.lang.String)>
<org.apache.http.conn.params.ConnManagerParams: void setMaxConnectionsPerRoute(org.apache.http.params.HttpParams,org.apache.http.conn.params.ConnPerRoute)>
<com.squareup.picasso.ContactsPhotoBitmapHunter: java.io.InputStream getInputStream()>
<android.support.v4.widget.DrawerLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<android.database.DataSetObservable: void <init>()>
<fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder: fr.castorflex.android.smoothprogressbar.SmoothProgressDrawable$Builder generateBackgroundUsingColors()>
<com.squareup.okhttp.internal.spdy.SpdyConnection: java.lang.String access$900(com.squareup.okhttp.internal.spdy.SpdyConnection)>
<com.squareup.okhttp.internal.http.HttpConnection$ChunkedSink: void write(com.squareup.okio.Buffer,long)>
<java.lang.String: void <clinit>()>
<com.google.api.client.util.ArrayValueMap: void put(java.lang.reflect.Field,java.lang.Class,java.lang.Object)>
<com.google.gson.GsonBuilder: com.google.gson.Gson create()>
<com.squareup.okhttp.internal.DiskLruCache: int access$1800(com.squareup.okhttp.internal.DiskLruCache)>
<com.battlelancer.seriesguide.getglueapi.GetGlueAuthActivity: void <init>()>
<com.squareup.okhttp.Route: void <init>(com.squareup.okhttp.Address,java.net.Proxy,java.net.InetSocketAddress,java.lang.String)>
<com.squareup.okio.Buffer: com.squareup.okio.ByteString readByteString(long)>
<com.battlelancer.seriesguide.ui.MovieDetailsActivity: com.readystatesoftware.systembartint.SystemBarTintManager getSystemBarTintManager()>
<com.mobeta.android.dslv.DragSortListView$1: void <init>(com.mobeta.android.dslv.DragSortListView)>
<android.app.Notification$Builder: void <init>(android.content.Context)>
<com.squareup.okhttp.internal.spdy.Huffman: void addCode(int,int,byte)>
<com.squareup.okio.SegmentPool: void <init>()>
<android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.mobeta.android.dslv.SimpleFloatViewManager: void onDestroyFloatView(android.view.View)>
<android.support.v4.widget.CursorAdapter$ChangeObserver: void <init>(android.support.v4.widget.CursorAdapter)>
<android.widget.ListView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.app.Activity: void overridePendingTransition(int,int)>
<android.support.v4.view.AccessibilityDelegateCompatJellyBean$1: void <init>(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean)>
<java.lang.reflect.Modifier: boolean isPublic(int)>
<com.battlelancer.seriesguide.ui.SeriesGuidePreferences: void onCreate(android.os.Bundle)>
<com.battlelancer.seriesguide.dataliberation.JsonExportTask: java.lang.Integer doInBackground(java.lang.Void[])>
<com.squareup.okhttp.internal.DiskLruCache: com.squareup.okhttp.internal.DiskLruCache$Editor edit(java.lang.String)>
<com.squareup.okhttp.internal.spdy.SpdyStream: void access$1200(com.squareup.okhttp.internal.spdy.SpdyStream)>
<com.squareup.okhttp.Cache$CacheResponseBody: com.squareup.okhttp.internal.DiskLruCache$Snapshot access$500(com.squareup.okhttp.Cache$CacheResponseBody)>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpRequest setContent(com.google.api.client.http.HttpContent)>
<com.squareup.okhttp.internal.http.HttpConnection: void setTimeouts(int,int)>
<com.battlelancer.seriesguide.ui.EpisodesActivity: java.util.ArrayList access$200(com.battlelancer.seriesguide.ui.EpisodesActivity)>
<com.google.api.client.http.apache.ApacheHttpRequest: void addHeader(java.lang.String,java.lang.String)>
<java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<com.crashlytics.android.Crashlytics: void start(android.content.Context,float)>
<com.squareup.okhttp.internal.spdy.Spdy3$Writer: void synStream(boolean,boolean,int,int,java.util.List)>
<java.util.TreeSet: boolean remove(java.lang.Object)>
<com.squareup.okhttp.internal.spdy.SpdyConnection: java.util.concurrent.ExecutorService access$1900()>
<com.battlelancer.seriesguide.settings.NotificationSettings: boolean isNotifyAboutFavoritesOnly(android.content.Context)>
<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>
<com.squareup.okio.Timeout: long timeoutNanos()>
<android.view.View: void scrollTo(int,int)>
<android.support.v4.app.Fragment: java.lang.String getTag()>
<com.squareup.okhttp.internal.huc.DelegatingHttpsURLConnection: void connect()>
<android.widget.TextView: void <init>(android.content.Context)>
<com.battlelancer.seriesguide.ui.ListsActivity: void <init>()>
<com.google.myjson.stream.JsonReader: void consumeNonExecutePrefix()>
<com.battlelancer.seriesguide.ui.OverviewFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.mobeta.android.dslv.DragSortListView: int access$1400(com.mobeta.android.dslv.DragSortListView)>
<com.battlelancer.seriesguide.backend.CloudSetupFragment: void onResume()>
<com.google.gson.stream.JsonReader: char readEscapeCharacter()>
<com.mobeta.android.dslv.DragSortListView: void updateFloatView()>
<com.battlelancer.seriesguide.extensions.EpisodeActionsHelper$2: void <init>()>
<org.apache.http.conn.params.ConnPerRouteBean: void <init>(int)>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder cacheResponse(com.squareup.okhttp.Response)>
<org.apache.http.entity.AbstractHttpEntity: void setContentEncoding(java.lang.String)>
<android.support.v4.content.AsyncTaskLoader: void executePendingTask()>
<android.view.View: void <init>(android.content.Context)>
<com.squareup.okhttp.internal.spdy.SpdyStream$SpdyTimeout: void timedOut()>
<com.battlelancer.seriesguide.backend.CloudSetupFragment: void setLock(boolean)>
<com.google.android.gms.analytics.Tracker: void enableAdvertisingIdCollection(boolean)>
<com.squareup.okhttp.internal.http.HttpEngine: void initContentStream(com.squareup.okio.Source)>
<java.io.InputStreamReader: void close()>
<com.battlelancer.seriesguide.appwidget.ListWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>
<com.google.android.gms.common.GooglePlayServicesUtil: int isGooglePlayServicesAvailable(android.content.Context)>
<android.app.Notification$BigPictureStyle: android.app.Notification$BigPictureStyle setSummaryText(java.lang.CharSequence)>
<android.view.DragEvent: void <init>()>
<android.widget.TextView: void sendAccessibilityEvent(int)>
<com.battlelancer.seriesguide.util.EpisodeTools$SeasonWatchedType: java.lang.String getColumn()>
<com.battlelancer.seriesguide.provider.SeriesGuideContract$Episodes: android.net.Uri buildEpisodesOfShowUri(java.lang.String)>
<com.battlelancer.seriesguide.ui.ShowsFragment: boolean access$002(com.battlelancer.seriesguide.ui.ShowsFragment,boolean)>
<android.widget.Scroller: boolean computeScrollOffset()>
<com.google.api.client.util.LoggingByteArrayOutputStream: void close()>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<android.support.v4.view.ViewPager$SavedState$1: void <init>()>
<android.support.v4.app.Fragment: java.lang.String getString(int)>
<com.battlelancer.seriesguide.dataliberation.DataLiberationActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.app.Activity: void onNewIntent(android.content.Intent)>
<de.greenrobot.event.util.ErrorDialogFragments: void <clinit>()>
<uk.co.senab.photoview.PhotoViewAttacher: android.view.View$OnLongClickListener access$000(uk.co.senab.photoview.PhotoViewAttacher)>
<com.battlelancer.seriesguide.ui.dialogs.GenericCheckInDialogFragment: void onStop()>
<java.util.Collections: void <clinit>()>
<com.google.api.client.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<android.support.v4.util.SparseArrayCompat: void gc()>
<com.google.api.client.http.HttpHeaders: void fromHttpResponse(com.google.api.client.http.LowLevelHttpResponse,java.lang.StringBuilder)>
<com.squareup.picasso.BitmapHunter: com.squareup.picasso.Request getData()>
<android.widget.AbsListView: int pointToPosition(int,int)>
<com.uwetrottmann.seriesguide.backend.episodes.model.EpisodeList: com.uwetrottmann.seriesguide.backend.episodes.model.EpisodeList setShowTvdbId(java.lang.Integer)>
<com.google.gson.internal.$Gson$Types: int access$100(java.lang.Object)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction setCustomAnimations(int,int)>
<com.readystatesoftware.systembartint.SystemBarTintManager: void setupStatusBarView(android.content.Context,android.view.ViewGroup)>
<android.widget.ProgressBar: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>
<com.jakewharton.trakt.entities.Response: void <init>()>
<uk.co.senab.photoview.PhotoViewAttacher: void cancelFling()>
<com.squareup.picasso.BitmapHunter$3: void <init>(com.squareup.picasso.Transformation)>
<com.squareup.okhttp.internal.spdy.Header: void <init>(java.lang.String,java.lang.String)>
<com.squareup.okhttp.internal.spdy.HeadersMode: boolean failIfStreamAbsent()>
<com.battlelancer.seriesguide.billing.IabHelper: void enableDebugLogging(boolean)>
<com.battlelancer.seriesguide.ui.MovieDetailsFragment: com.battlelancer.seriesguide.items.MovieDetails access$302(com.battlelancer.seriesguide.ui.MovieDetailsFragment,com.battlelancer.seriesguide.items.MovieDetails)>
<com.battlelancer.seriesguide.ui.TraktShoutsActivity: void <init>()>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>
<com.google.android.gms.analytics.t: void cs()>
<com.battlelancer.seriesguide.ui.EpisodeDetailsFragment: int getEpisodeTvdbId()>
<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>
<com.squareup.okhttp.Response$Builder: com.squareup.okhttp.Response$Builder request(com.squareup.okhttp.Request)>
<android.support.v4.widget.DrawerLayout$AccessibilityDelegate: void <init>(android.support.v4.widget.DrawerLayout)>
<com.squareup.okhttp.internal.DiskLruCache: void readJournal()>
<com.battlelancer.seriesguide.adapters.ExtensionsAdapter$OverflowItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>
<com.google.api.client.util.escape.Platform: char[] charBufferFromThreadLocal()>
<android.support.v4.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)>
<com.squareup.okhttp.internal.http.OkHeaders: java.util.Set varyFields(com.squareup.okhttp.Response)>
<com.battlelancer.seriesguide.util.ShortcutUtils$1: android.content.Intent doInBackground(java.lang.Void[])>
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: void postInvalidateOnAnimation(android.view.View)>
<java.lang.Object: void <init>()>
