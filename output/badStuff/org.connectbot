<org.connectbot.HostListActivity: void onResume()>
<android.widget.TextView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<org.connectbot.service.TerminalKeyListener: int getStateForBuffer()>
<org.connectbot.service.TerminalManager: void stopIdleTimer()>
<android.app.ListActivity: void <init>()>
<android.graphics.PixelXorXfermode: void <init>(int)>
<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>
<org.connectbot.PubkeyListActivity: void pickFileSimple()>
<android.webkit.WebSettings$LayoutAlgorithm: void <init>(java.lang.String,int)>
<org.connectbot.GeneratePubkeyActivity: void <clinit>()>
<android.view.DragEvent: void <init>()>
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>
<java.util.LinkedList: int size()>
<org.connectbot.HostListActivity$10: boolean onMenuItemClick(android.view.MenuItem)>
<android.app.Activity: void setVolumeControlStream(int)>
<android.graphics.Paint$Style: void <clinit>()>
<org.connectbot.TerminalView$AccessibilityStateTester: java.lang.Object doInBackground(java.lang.Object[])>
<android.view.ViewGroup$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>
<android.widget.TextView: void setEnabled(boolean)>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.connectbot.service.TerminalManager: void onRebind(android.content.Intent)>
<de.mud.terminal.vt320: void handle_dcs(java.lang.String)>
<android.widget.RelativeLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
<org.connectbot.bean.PortForwardBean: android.content.ContentValues getValues()>
<com.trilead.ssh2.crypto.SimpleDERReader: void resetInput(byte[],int,int)>
<de.mud.telnet.TelnetProtocolHandler: void reset()>
<android.view.MotionEvent: long getDownTime()>
<java.util.LinkedList: java.lang.Object get(int)>
<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>
<org.connectbot.ConsoleActivity: void <init>()>
<org.connectbot.ConsoleActivity$18: boolean onMenuItemClick(android.view.MenuItem)>
<de.mud.terminal.VDUBuffer: int getBottomMargin()>
<android.widget.TextView: void onRestoreInstanceState(android.os.Parcelable)>
<org.connectbot.bean.PubkeyBean: void setPrivateKey(byte[])>
<com.trilead.ssh2.signature.RSASHA1Verify: byte[] encodeSSHRSAPublicKey(java.security.interfaces.RSAPublicKey)>
<org.connectbot.ConsoleActivity$5: void <init>(org.connectbot.ConsoleActivity)>
<android.content.Context: java.lang.String getString(int)>
<org.connectbot.service.TerminalManager: boolean removeKey(java.lang.String)>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<org.connectbot.HostListActivity: boolean access$000(org.connectbot.HostListActivity)>
<android.widget.Spinner: boolean onTouchEvent(android.view.MotionEvent)>
<android.widget.RadioGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>
<java.lang.String: byte[] getBytes()>
<org.connectbot.HostListActivity: void <init>()>
<org.connectbot.HostListActivity$1: void <init>(org.connectbot.HostListActivity)>
<java.lang.Boolean: java.lang.String toString(boolean)>
<java.util.LinkedList: void add(int,java.lang.Object)>
<android.os.Build: void <clinit>()>
<org.connectbot.GeneratePubkeyActivity: int access$002(org.connectbot.GeneratePubkeyActivity,int)>
<android.widget.GridView: void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup$LayoutParams,int,int)>
<com.trilead.ssh2.signature.DSASHA1Verify: void <clinit>()>
<java.lang.ref.Reference: java.lang.Object get()>
<org.connectbot.bean.PubkeyBean: byte[] getPublicKey()>
<android.app.ListActivity: android.widget.ListView getListView()>
<org.connectbot.service.TerminalBridge$1: void write(int)>
<de.mud.terminal.vt320: void reset()>
<org.connectbot.ConsoleActivity$3: void <init>(org.connectbot.ConsoleActivity)>
<android.widget.Spinner: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
<java.io.IOException: void <init>(java.lang.String)>
<android.util.Log: int e(java.lang.String,java.lang.String)>
<android.widget.RadioGroup: void <init>(android.content.Context)>
<com.trilead.ssh2.crypto.cipher.AES: void <init>()>
<java.lang.Character: boolean isISOControl(char)>
<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>
<org.connectbot.GeneratePubkeyActivity$6: void <init>(org.connectbot.GeneratePubkeyActivity)>
<java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>
<android.net.NetworkInfo$State: void <init>(java.lang.String,int)>
<de.mud.telnet.TelnetProtocolHandler: void <clinit>()>
<com.trilead.ssh2.crypto.SimpleDERReader: void <init>(byte[])>
<android.content.Context: void <init>()>
<android.os.StrictMode$ThreadPolicy: void <clinit>()>
<org.connectbot.util.PubkeyUtils: java.lang.String encodeHex(byte[])>
<org.connectbot.ConsoleActivity: void onNewIntent(android.content.Intent)>
<java.lang.StringBuffer: void getChars(int,int,char[],int)>
<android.widget.ImageView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<org.connectbot.bean.HostBean: void setEncoding(java.lang.String)>
<android.widget.ImageView: void setVisibility(int)>
<org.connectbot.bean.HostBean: void setHostname(java.lang.String)>
<java.lang.Character: char[] toChars(int)>
<org.connectbot.util.RobustSQLiteOpenHelper: void addIndexName(java.lang.String)>
<org.connectbot.ColorsActivity$1: void <init>(org.connectbot.ColorsActivity)>
<org.connectbot.service.ConnectivityReceiver: void releaseWifiLockIfNecessaryLocked()>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<org.connectbot.ConsoleActivity$17: void <init>(org.connectbot.ConsoleActivity)>
<org.connectbot.service.TerminalKeyListener: void metaPress(int)>
<java.lang.String: java.lang.String trim()>
<android.view.View: int getHeight()>
<android.app.Activity: void setResult(int)>
<com.trilead.ssh2.crypto.cipher.DESede: void init(boolean,byte[])>
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<de.mud.terminal.VDUBuffer: void deleteLine(int)>
<android.widget.GridView: int computeVerticalScrollRange()>
<android.widget.ListView: void onFinishInflate()>
<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>
<android.widget.ListView: void setAdapter(android.widget.Adapter)>
<org.connectbot.PubkeyListActivity$5: void <init>(org.connectbot.PubkeyListActivity,boolean,org.connectbot.bean.PubkeyBean)>
<org.connectbot.ActionBarWrapper: void <init>()>
<org.connectbot.service.TerminalBridge: void tryKeyVibrate()>
<org.connectbot.service.TerminalBridge: void setFontSize(float)>
<android.content.IntentFilter: void addAction(java.lang.String)>
<org.connectbot.ConsoleActivity: void access$1000(org.connectbot.ConsoleActivity)>
<java.lang.Math: double floor(double)>
<org.connectbot.util.PubkeyDatabase: java.util.List allPubkeys()>
<java.lang.Float: void <clinit>()>
<org.connectbot.service.ConnectionNotifier$EclairAndBeyond: void <init>()>
<java.io.File: long length()>
<android.app.Activity: void onStart()>
<android.widget.GridView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<org.connectbot.ConsoleActivity$12: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.graphics.Xfermode: void <init>()>
<org.connectbot.ConsoleActivity$7: void <init>(org.connectbot.ConsoleActivity)>
<org.connectbot.util.HostDatabase: void setGlobalColor(int,int)>
<android.content.Intent: android.content.Intent addCategory(java.lang.String)>
<java.io.ByteArrayOutputStream: void <init>()>
<android.widget.GridView: android.widget.ListAdapter getAdapter()>
<android.graphics.Paint: void finalize()>
<org.connectbot.service.TerminalBridge$1: void debug(java.lang.String)>
<org.connectbot.GeneratePubkeyActivity$3: void onFocusChange(android.view.View,boolean)>
<org.connectbot.service.ConnectivityReceiver: void setWantWifiLock(boolean)>
<android.webkit.WebView: void <init>(android.content.Context)>
<android.widget.ListView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.connectbot.PortForwardListActivity$5$1: void onClick(android.content.DialogInterface,int)>
<java.lang.Integer: void <init>(int)>
<android.widget.TextView: int computeVerticalScrollRange()>
<org.connectbot.bean.PubkeyBean: void setId(long)>
<org.connectbot.ConsoleActivity$19: boolean onMenuItemClick(android.view.MenuItem)>
<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>
<org.connectbot.ConsoleActivity$10: void onClick(android.view.View)>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.ImageView: void jumpDrawablesToCurrentState()>
<org.connectbot.GeneratePubkeyActivity: java.lang.String access$302(org.connectbot.GeneratePubkeyActivity,java.lang.String)>
<android.widget.ListView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<org.connectbot.HelpActivity: void <init>()>
<java.net.URI: java.net.URI create(java.lang.String)>
<com.trilead.ssh2.crypto.SimpleDERReader: java.lang.String readOid()>
<org.connectbot.HostListActivity$7: boolean onMenuItemClick(android.view.MenuItem)>
<org.connectbot.TerminalView: android.content.Context access$600(org.connectbot.TerminalView)>
<org.connectbot.transport.Telnet: java.lang.String getFormatHint(android.content.Context)>
<org.connectbot.service.TerminalBridge: void addFontSizeChangedListener(org.connectbot.service.FontSizeChangedListener)>
<java.io.CharArrayWriter: char[] toCharArray()>
<java.lang.Math: double ceil(double)>
<org.connectbot.util.Colors: void <clinit>()>
<org.connectbot.bean.SelectionArea: void decrementRow()>
<org.connectbot.GeneratePubkeyActivity: int access$400(org.connectbot.GeneratePubkeyActivity)>
<android.widget.ImageView: void onRtlPropertiesChanged(int)>
<android.content.ContentValues: void put(java.lang.String,java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)>
<com.trilead.ssh2.crypto.cipher.AES: int processBlock(byte[],int,byte[],int)>
<android.os.Environment: java.lang.String getExternalStorageState()>
<de.mud.terminal.vt320: void setVMS(boolean)>
<android.view.MotionEvent: void finalize()>
<android.widget.TextView: void drawableStateChanged()>
<org.connectbot.ColorsActivity$1: boolean onMenuItemClick(android.view.MenuItem)>
<com.trilead.ssh2.packets.TypesWriter: void resize(int)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>
<android.app.Activity: void onOptionsMenuClosed(android.view.Menu)>
<org.connectbot.bean.PortForwardBean: int getDestPort()>
<java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<java.lang.Character: void <clinit>()>
<org.connectbot.PubkeyListActivity: void <init>()>
<org.keyczar.jce.EcCore: java.math.BigInteger[] doublePointA(java.math.BigInteger[],java.security.spec.ECParameterSpec)>
<com.trilead.ssh2.crypto.cipher.DESede: void <init>()>
<com.trilead.ssh2.crypto.cipher.DES: void <clinit>()>
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>
<de.mud.terminal.VDUBuffer: void setBufferSize(int)>
<org.connectbot.ColorsActivity: void onCreate(android.os.Bundle)>
<org.connectbot.util.PubkeyUtils: java.lang.String getAlgorithmForOid(java.lang.String)>
<android.os.Handler: void removeCallbacks(java.lang.Runnable)>
<java.lang.Math: int min(int,int)>
<org.connectbot.GeneratePubkeyActivity$4: void onClick(android.view.View)>
<android.widget.GridView: int computeVerticalScrollExtent()>
<org.connectbot.service.TerminalBridge: void increaseFontSize()>
<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
<org.connectbot.util.PubkeyUtils: void <clinit>()>
<org.connectbot.ActionBarWrapper$DummyActionBar: void <init>(org.connectbot.ActionBarWrapper$1)>
<java.lang.Long: java.lang.String toString(long)>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<org.connectbot.util.EntropyDialog: void <init>(android.content.Context,android.view.View)>
<com.trilead.ssh2.crypto.PEMDecoder: void decryptPEM(com.trilead.ssh2.crypto.PEMStructure,byte[])>
<android.widget.Button: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.RelativeLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.view.GestureDetector: void <init>(android.view.GestureDetector$OnGestureListener,android.os.Handler)>
<java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<org.connectbot.util.HostDatabase: java.util.List getHosts(boolean)>
<org.connectbot.service.ConnectionNotifier: org.connectbot.service.ConnectionNotifier getInstance()>
<java.security.Security: java.security.Provider[] getProviders(java.lang.String)>
<org.connectbot.PortForwardListActivity$1: void <init>(org.connectbot.PortForwardListActivity)>
<org.connectbot.service.TerminalBridge: void resizeComputed(int,int,int,int)>
<java.security.SecureRandom: void <init>()>
<org.connectbot.transport.Telnet$1: void <init>(org.connectbot.transport.Telnet)>
<org.connectbot.service.ConnectionNotifier: android.app.NotificationManager getNotificationManager(android.content.Context)>
<java.util.Arrays: java.util.List asList(java.lang.Object[])>
<com.trilead.ssh2.signature.ECDSASHA2Verify: byte[] encodeSSHECDSAPublicKey(java.security.interfaces.ECPublicKey)>
<org.connectbot.service.TerminalManager: boolean onUnbind(android.content.Intent)>
<java.lang.String: boolean equals(java.lang.Object)>
<android.widget.Spinner: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.connectbot.service.TerminalKeyListener: void setClipboardManager(android.text.ClipboardManager)>
<org.connectbot.util.PreferenceConstants: void <clinit>()>
<org.connectbot.transport.TransportFactory: org.connectbot.bean.HostBean findHost(org.connectbot.util.HostDatabase,android.net.Uri)>
<org.connectbot.bean.PortForwardBean: void setSourcePort(int)>
<org.connectbot.transport.Telnet: java.lang.String getDefaultNickname(java.lang.String,java.lang.String,int)>
<org.connectbot.service.TerminalBridge: org.connectbot.service.TerminalKeyListener getKeyHandler()>
<android.widget.ViewFlipper: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<java.lang.Number: void <init>()>
<de.mud.terminal.vt320: void handle_osc(java.lang.String)>
<org.connectbot.ColorsActivity: void onResume()>
<org.connectbot.GeneratePubkeyActivity$5: void <init>(org.connectbot.GeneratePubkeyActivity)>
<org.connectbot.util.PubkeyUtils: java.security.PublicKey decodePublic(byte[],java.lang.String)>
<org.connectbot.bean.HostBean: java.lang.String getNickname()>
<org.connectbot.ConsoleActivity$16: void <init>(org.connectbot.ConsoleActivity)>
<android.content.Intent: android.net.Uri getData()>
<android.widget.SeekBar: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.connectbot.service.TerminalManager: void onCreate()>
<org.connectbot.HostEditorActivity: void <init>()>
<java.lang.Integer: int parseInt(java.lang.String,int)>
<org.connectbot.HostListActivity$5: void <init>(org.connectbot.HostListActivity)>
<java.lang.String: int indexOf(java.lang.String)>
<org.connectbot.PubkeyListActivity$11$1: void onClick(android.content.DialogInterface,int)>
<java.util.Timer: void schedule(java.util.TimerTask,long)>
<java.util.LinkedList: boolean add(java.lang.Object)>
<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>
<org.connectbot.bean.PubkeyBean: java.lang.String getNickname()>
<org.connectbot.GeneratePubkeyActivity: void <init>()>
<com.trilead.ssh2.log.Logger: void <init>(java.lang.Class)>
<de.mud.terminal.VDUBuffer: void <init>()>
<org.connectbot.ConsoleActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
<android.widget.RelativeLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<de.mud.terminal.VDUBuffer: void redraw()>
<com.trilead.ssh2.signature.ECDSASHA2Verify: java.lang.String getCurveName(java.security.spec.ECParameterSpec)>
<java.lang.StringBuilder: void setLength(int)>
<android.widget.TextView: boolean performLongClick()>
<org.connectbot.ConsoleActivity$9: void onClick(android.view.View)>
<com.trilead.ssh2.crypto.cipher.AES: void <clinit>()>
<android.os.Build$VERSION: void <clinit>()>
<org.connectbot.ConsoleActivity: void setDisplayedTerminal(int)>
<java.security.spec.ECPoint: void <init>(java.math.BigInteger,java.math.BigInteger)>
<android.widget.CheckBox: void <init>(android.content.Context)>
<de.mud.terminal.vt320: void putChar(char,boolean,boolean)>
<android.widget.GridView: int computeVerticalScrollOffset()>
<java.lang.Thread: void run()>
<android.widget.TextView: void onScrollChanged(int,int,int,int)>
<org.connectbot.HostListActivity$4: void <init>(org.connectbot.HostListActivity)>
<java.util.Arrays: void fill(int[],int,int,int)>
<org.connectbot.TerminalView: void <init>(android.content.Context,org.connectbot.service.TerminalBridge)>
<org.connectbot.ConsoleActivity: int access$1202(org.connectbot.ConsoleActivity,int)>
<android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)>
<org.connectbot.service.TerminalBridge$6: void run()>
<android.widget.RelativeLayout: android.widget.RelativeLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<org.connectbot.PubkeyListActivity$4: void onClick(android.content.DialogInterface,int)>
<java.util.Locale: void <clinit>()>
<org.connectbot.ActionBarWrapper: void hide()>
<android.widget.ListView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.EditText: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>
<org.connectbot.ConsoleActivity: android.view.animation.Animation access$500(org.connectbot.ConsoleActivity)>
<com.trilead.ssh2.signature.RSASHA1Verify: void <clinit>()>
<java.nio.charset.Charset: java.util.SortedMap availableCharsets()>
<android.widget.TextView: void computeScroll()>
<org.connectbot.bean.PubkeyBean: java.lang.String getType()>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<android.widget.ImageView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.connectbot.ActionBarWrapper: void addOnMenuVisibilityListener(org.connectbot.ActionBarWrapper$OnMenuVisibilityListener)>
<org.connectbot.PortForwardListActivity$3$2: void <init>(org.connectbot.PortForwardListActivity$3,android.view.View,android.widget.Spinner,android.widget.EditText)>
<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.trilead.ssh2.packets.TypesWriter: void writeMPInt(java.math.BigInteger)>
<android.app.Activity: void onActivityResult(int,int,android.content.Intent)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
<android.app.Activity: void onResume()>
<android.view.View: void <init>(android.content.Context)>
<android.app.Activity: void <init>()>
<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<org.connectbot.PubkeyListActivity$6: boolean onMenuItemClick(android.view.MenuItem)>
<com.trilead.ssh2.crypto.cipher.DES: int getBlockSize()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>
<org.connectbot.WizardActivity: void onCreate(android.os.Bundle)>
<org.connectbot.bean.PortForwardBean: void setNickname(java.lang.String)>
<java.io.OutputStream: void flush()>
<org.connectbot.util.HostDatabase: void stopUsingPubkey(long)>
<com.trilead.ssh2.crypto.SimpleDERReader: com.trilead.ssh2.crypto.SimpleDERReader readConstructed()>
<org.connectbot.util.HostDatabase: void deletePortForward(org.connectbot.bean.PortForwardBean)>
<org.connectbot.bean.PubkeyBean: void setStartup(boolean)>
<com.trilead.ssh2.crypto.cipher.AES: int[][] generateWorkingKey(byte[],boolean)>
<org.connectbot.GeneratePubkeyActivity: int access$402(org.connectbot.GeneratePubkeyActivity,int)>
<java.lang.Character: boolean isDefined(char)>
<java.lang.String: char[] toCharArray()>
<android.widget.GridView: void layoutChildren()>
<org.connectbot.ColorsActivity: org.connectbot.util.HostDatabase access$100(org.connectbot.ColorsActivity)>
<java.lang.Object: void finalize()>
<android.app.Activity: void finish()>
<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<java.math.BigInteger: void <init>(java.lang.String,int)>
<org.connectbot.HostEditorActivity$CharsetHolder: java.lang.CharSequence[] getCharsetNames()>
<java.security.spec.ECPoint: void <clinit>()>
<android.widget.Spinner: int getBaseline()>
<org.connectbot.HostListActivity: void onStop()>
<android.widget.TextView: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>
<android.widget.CheckBox: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<de.mud.terminal.vt320: void keyPressed(int,char,int)>
<org.connectbot.bean.SelectionArea: int checkBounds(int,int)>
<org.connectbot.bean.PubkeyBean: void setNickname(java.lang.String)>
<android.widget.ImageView: int getBaseline()>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.Spinner: void <init>(android.content.Context)>
<com.trilead.ssh2.crypto.PEMDecoder: java.security.KeyPair generateKeyPair(java.lang.String,java.security.spec.KeySpec,java.security.spec.KeySpec)>
<org.connectbot.transport.AbsTransport: void <init>()>
<org.connectbot.HostEditorActivity$CharsetHolder: java.lang.CharSequence[] getCharsetIds()>
<org.connectbot.transport.Telnet: android.net.Uri getUri(java.lang.String)>
<com.trilead.ssh2.packets.TypesWriter: void writeString(java.lang.String)>
<org.connectbot.HelpTopicActivity: void onCreate(android.os.Bundle)>
<org.connectbot.TerminalView: java.util.regex.Pattern access$502(org.connectbot.TerminalView,java.util.regex.Pattern)>
<java.io.BufferedReader: void <init>(java.io.Reader)>
<org.connectbot.transport.Local: java.lang.String getFormatHint(android.content.Context)>
<org.connectbot.ConsoleActivity: float access$1402(org.connectbot.ConsoleActivity,float)>
<org.connectbot.service.TerminalManager$BeepListener: void <init>()>
<java.lang.String: boolean startsWith(java.lang.String)>
<java.lang.String: java.lang.String[] split(java.lang.String)>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<org.connectbot.WizardActivity$2: void onClick(android.view.View)>
<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>
<org.connectbot.ActionBarWrapper: void show()>
<org.connectbot.GeneratePubkeyActivity$2: void onProgressChanged(android.widget.SeekBar,int,boolean)>
<org.connectbot.PubkeyListActivity: void access$100(org.connectbot.PubkeyListActivity,java.io.File)>
<org.connectbot.PortForwardListActivity$4$1: void <init>(org.connectbot.PortForwardListActivity$4,android.widget.EditText)>
<org.connectbot.ConsoleActivity: int addNewTerminalView(org.connectbot.service.TerminalBridge)>
<android.app.Activity: void setContentView(int)>
<android.widget.GridView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.connectbot.ConsoleActivity$5: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<android.webkit.WebView: void computeScroll()>
<android.widget.TextView: void onRtlPropertiesChanged(int)>
<java.lang.String: java.lang.String valueOf(long)>
<java.lang.String: byte[] getBytes(java.lang.String)>
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
<android.widget.ProgressBar: void setProgress(int)>
<com.trilead.ssh2.signature.DSASHA1Verify: byte[] encodeSSHDSAPublicKey(java.security.interfaces.DSAPublicKey)>
<android.app.Activity: void onPause()>
<android.graphics.Paint: int getTextWidths(java.lang.String,float[])>
<org.connectbot.ColorsActivity$ColorsAdapter: void <init>(org.connectbot.ColorsActivity,boolean)>
<java.util.TreeMap: java.util.Set keySet()>
<android.view.accessibility.AccessibilityNodeInfo: void <init>()>
<android.widget.LinearLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<java.lang.AbstractStringBuilder: int length()>
<de.mud.terminal.vt320: void <init>(int,int)>
<org.connectbot.HostEditorActivity: void updateSummaries()>
<org.connectbot.TerminalView$AccessibilityStateTester: void <init>(org.connectbot.TerminalView)>
<com.trilead.ssh2.crypto.cipher.DES: void transformBlock(byte[],int,byte[],int)>
<android.widget.ListView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<org.connectbot.ConsoleActivity$12: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<com.trilead.ssh2.crypto.PEMDecoder: boolean isPEMEncrypted(com.trilead.ssh2.crypto.PEMStructure)>
<org.connectbot.ConsoleActivity: void updateEmptyVisible()>
<java.util.HashMap: java.util.Set keySet()>
<org.connectbot.PubkeyListActivity$2: void <init>(org.connectbot.PubkeyListActivity)>
<org.connectbot.service.TerminalManager: void enableMediaPlayer()>
<org.connectbot.PortForwardListActivity$4$2: void onClick(android.content.DialogInterface,int)>
<org.connectbot.bean.SelectionArea: void reset()>
<org.connectbot.service.ConnectionNotifier$PreEclair: void <init>()>
<java.lang.Class: java.lang.String getName()>
<org.connectbot.PubkeyListActivity$11: boolean onMenuItemClick(android.view.MenuItem)>
<android.widget.RadioButton: void <init>(android.content.Context)>
<org.connectbot.PubkeyListActivity$6: void <init>(org.connectbot.PubkeyListActivity,org.connectbot.bean.PubkeyBean)>
<org.connectbot.HostListActivity$11$1: void onClick(android.content.DialogInterface,int)>
<org.connectbot.ConsoleActivity$19$1: void onClick(android.content.DialogInterface,int)>
<org.connectbot.HostEditorActivity$2: void run()>
<org.connectbot.bean.HostBean: void setPubkeyId(long)>
<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>
<org.connectbot.ConsoleActivity: android.widget.RelativeLayout access$300(org.connectbot.ConsoleActivity)>
<de.mud.terminal.VDUBuffer: void insertLine(int,int,boolean)>
<org.connectbot.util.HostDatabase: void setColorForScheme(int,int,int)>
<android.widget.TextView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.widget.ArrayAdapter: void setDropDownViewResource(int)>
<java.security.spec.ECPoint: java.math.BigInteger getAffineX()>
<org.connectbot.util.RobustSQLiteOpenHelper: void addTableName(java.lang.String)>
<android.view.View: void setId(int)>
<org.connectbot.ConsoleActivity: void updateDefault()>
<android.graphics.Bitmap$Config: void <clinit>()>
<android.view.accessibility.AccessibilityNodeInfo: void <clinit>()>
<org.connectbot.ConsoleActivity$6: void <init>(org.connectbot.ConsoleActivity)>
<org.connectbot.service.ConnectionNotifier$EclairAndBeyond: void <init>(org.connectbot.service.ConnectionNotifier$1)>
<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>
<android.widget.TextView: int computeVerticalScrollExtent()>
<android.util.Log: int i(java.lang.String,java.lang.String)>
<org.connectbot.PubkeyListActivity$1: void <init>(org.connectbot.PubkeyListActivity)>
<java.lang.IllegalStateException: void <init>(java.lang.String)>
<android.widget.GridView: void setAdapter(android.widget.Adapter)>
<org.connectbot.HostEditorActivity$CursorPreferenceHack: void cacheValues()>
<org.connectbot.ConsoleActivity: int access$1102(org.connectbot.ConsoleActivity,int)>
<android.app.Activity: void startActivity(android.content.Intent)>
<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>
<com.trilead.ssh2.crypto.SimpleDERReader: int available()>
<org.connectbot.service.TerminalKeyListener: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<org.connectbot.service.TerminalManager$BeepListener: void <init>(org.connectbot.service.TerminalManager$1)>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>
<java.io.File: void <init>(java.net.URI)>
<org.connectbot.service.TerminalManager$1: void <init>(org.connectbot.service.TerminalManager,java.lang.String)>
<java.lang.String: java.lang.String valueOf(int)>
<org.connectbot.PubkeyListActivity$10: void <init>(org.connectbot.PubkeyListActivity,org.connectbot.bean.PubkeyBean)>
<android.widget.AbsoluteLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.TextView: boolean performAccessibilityAction(int,android.os.Bundle)>
<android.widget.LinearLayout: void onMeasure(int,int)>
<java.util.HashMap: java.lang.Object remove(java.lang.Object)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>
<org.connectbot.WizardActivity$1: void <init>(org.connectbot.WizardActivity)>
<org.connectbot.service.TerminalBridge: void dispatchDisconnect(boolean)>
<com.trilead.ssh2.crypto.cipher.AES: void init(boolean,byte[])>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<org.connectbot.ConsoleActivity: boolean access$600(org.connectbot.ConsoleActivity)>
<android.widget.LinearLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.trilead.ssh2.crypto.SimpleDERReader: byte[] readSequenceAsByteArray()>
<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()>
<java.lang.String: java.lang.String valueOf(char[])>
<java.lang.Long: void <clinit>()>
<org.connectbot.ConsoleActivity: void updatePromptVisible()>
<org.connectbot.HostEditorActivity$CharsetHolder: void initialize()>
<org.connectbot.service.TerminalBridge$1: void <init>(org.connectbot.service.TerminalBridge)>
<android.widget.GridView: void onMeasure(int,int)>
<org.connectbot.HostEditorActivity: void access$100(org.connectbot.HostEditorActivity,android.preference.ListPreference)>
<java.util.Timer: void cancel()>
<android.widget.EditText: android.text.method.MovementMethod getDefaultMovementMethod()>
<org.connectbot.bean.PubkeyBean: void setPublicKey(byte[])>
<org.connectbot.HostListActivity: void onCreate(android.os.Bundle)>
<java.lang.Class: java.lang.Class forName(java.lang.String)>
<org.connectbot.bean.PortForwardBean: long getId()>
<org.connectbot.bean.SelectionArea: int getTop()>
<com.trilead.ssh2.signature.ECDSASHA2Verify: java.lang.String getCurveName(int)>
<android.app.Activity: void <clinit>()>
<org.connectbot.service.TerminalKeyListener: void sendEscape()>
<org.connectbot.util.HelpTopicView: void initialize()>
<org.connectbot.util.PubkeyUtils: byte[] decrypt(byte[],java.lang.String)>
<org.connectbot.transport.Local: void <init>()>
<org.connectbot.HostEditorActivity$2: void <init>(org.connectbot.HostEditorActivity,android.preference.ListPreference)>
<org.connectbot.ActionBarWrapper$RealActionBar: void setDisplayHomeAsUpEnabled(boolean)>
<com.trilead.ssh2.crypto.SimpleDERReader: int readConstructedType()>
<android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>
<org.connectbot.util.PubkeyUtils: java.lang.String formatKey(java.security.Key)>
<org.connectbot.ConsoleActivity: void onOptionsMenuClosed(android.view.Menu)>
<org.connectbot.util.PubkeyUtils: java.security.KeyPair recoverKeyPair(byte[])>
<org.connectbot.PortForwardListActivity: org.connectbot.bean.HostBean access$000(org.connectbot.PortForwardListActivity)>
<org.connectbot.util.PubkeyDatabase: java.lang.String getNickname(long)>
<java.lang.String: void <clinit>()>
<org.connectbot.service.TerminalBridge: void resetScrollPosition()>
<android.os.Bundle: void <init>()>
<org.connectbot.PubkeyListActivity$12: void <init>(org.connectbot.PubkeyListActivity,java.lang.String[],java.io.File)>
<android.widget.TextView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<org.connectbot.ActionBarWrapper$RealActionBar: void addOnMenuVisibilityListener(org.connectbot.ActionBarWrapper$OnMenuVisibilityListener)>
<java.io.InputStream: int read(byte[])>
<android.content.ContentValues: void remove(java.lang.String)>
<de.mud.terminal.vt320: void putString(char[],byte[],int,int)>
<org.connectbot.service.TerminalManager: void addKey(org.connectbot.bean.PubkeyBean,java.security.KeyPair)>
<org.connectbot.ConsoleActivity: float access$1302(org.connectbot.ConsoleActivity,float)>
<android.media.MediaPlayer: void setVolume(float,float)>
<android.graphics.Path: void lineTo(float,float)>
<android.widget.TextView: int getTopPaddingOffset()>
<org.connectbot.GeneratePubkeyActivity$1: void <init>(org.connectbot.GeneratePubkeyActivity)>
<org.connectbot.ActionBarWrapper: org.connectbot.ActionBarWrapper getActionBar(android.app.Activity)>
<com.trilead.ssh2.crypto.cipher.AES: int inv_mcol(int)>
<android.widget.LinearLayout: boolean shouldDelayChildPressedState()>
<android.widget.GridView: void <init>(android.content.Context)>
<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger)>
<android.widget.TextView: void onDraw(android.graphics.Canvas)>
<org.connectbot.bean.PubkeyBean: boolean isStartup()>
<com.trilead.ssh2.crypto.cipher.AES: int FFmulX(int)>
<org.connectbot.bean.PortForwardBean: int getSourcePort()>
<android.view.View: void <clinit>()>
<org.connectbot.bean.HostBean: void setFontSize(int)>
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<android.webkit.WebView: void loadUrl(java.lang.String)>
<android.widget.ListView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<java.util.Arrays: void fill(int[],int)>
<android.widget.RadioGroup: android.widget.RadioGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.widget.TextView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.widget.ImageView: void onMeasure(int,int)>
<java.lang.Enum: void <init>(java.lang.String,int)>
<org.connectbot.ActionBarWrapper$RealActionBar: void <init>(android.app.Activity)>
<org.connectbot.util.PubkeyDatabase: void deletePubkey(org.connectbot.bean.PubkeyBean)>
<org.connectbot.ConsoleActivity$6: void onClick(android.view.View)>
<org.connectbot.ActionBarWrapper: void setDisplayHomeAsUpEnabled(boolean)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>
<org.connectbot.ConsoleActivity$19: void <init>(org.connectbot.ConsoleActivity)>
<com.trilead.ssh2.crypto.PEMDecoder: byte[] removePadding(byte[],int)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.lang.Object[])>
<org.connectbot.HostListActivity: void updateList()>
<org.connectbot.service.TerminalManager$IdleTask: void <init>(org.connectbot.service.TerminalManager,org.connectbot.service.TerminalManager$1)>
<java.lang.Void: void <clinit>()>
<org.connectbot.ConsoleActivity: float access$1400(org.connectbot.ConsoleActivity)>
<org.connectbot.WizardActivity$2: void <init>(org.connectbot.WizardActivity)>
<android.widget.RelativeLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.inputmethod.EditorInfo: void <init>()>
<org.connectbot.PortForwardListActivity: void onCreate(android.os.Bundle)>
<org.connectbot.bean.SelectionArea: void <init>()>
<org.connectbot.service.TerminalKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<org.connectbot.ConsoleActivity: void onPause()>
<org.connectbot.PubkeyListActivity$7: boolean onMenuItemClick(android.view.MenuItem)>
<android.view.KeyEvent: java.lang.String getCharacters()>
<org.connectbot.HostListActivity$7: void <init>(org.connectbot.HostListActivity)>
<android.view.MotionEvent: float getRawX()>
<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>
<java.lang.Exception: void <init>()>
<android.widget.LinearLayout: void onDraw(android.graphics.Canvas)>
<org.connectbot.service.TerminalManager$TerminalBinder: void <init>(org.connectbot.service.TerminalManager)>
<org.connectbot.ConsoleActivity: void configureStrictMode()>
<android.widget.ListView: void setSelection(int)>
<org.connectbot.util.HelpTopicView: void <init>(android.content.Context)>
<org.connectbot.ConsoleActivity: int getFlipIndex(org.connectbot.service.TerminalBridge)>
<org.connectbot.HostListActivity: void onStart()>
<java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<com.trilead.ssh2.crypto.Base64: char[] encode(byte[])>
<android.graphics.Bitmap: void <clinit>()>
<org.connectbot.ConsoleActivity$14: boolean onMenuItemClick(android.view.MenuItem)>
<java.math.BigInteger: java.math.BigInteger valueOf(long)>
<java.io.File: void <init>(java.io.File,java.lang.String)>
<android.widget.RelativeLayout: void requestLayout()>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.lang.Character: boolean isHighSurrogate(char)>
<org.connectbot.service.TerminalBridge$5: void run()>
<android.widget.TextView: int[] onCreateDrawableState(int)>
<org.connectbot.util.PubkeyDatabase: java.util.List getPubkeys(java.lang.String,java.lang.String[])>
<android.content.Intent: void <init>(java.lang.String)>
<java.util.LinkedList: void <init>(java.util.Collection)>
<org.connectbot.ConsoleActivity: void hideEmulatedKeys()>
<org.connectbot.transport.AbsTransport: java.lang.String getFormatHint(android.content.Context)>
<com.trilead.ssh2.crypto.PEMDecoder: byte[] generateKeyFromPasswordSaltWithMD5(byte[],byte[],int)>
<org.connectbot.PubkeyListActivity$9: boolean onMenuItemClick(android.view.MenuItem)>
<android.widget.TextView: int getRightPaddingOffset()>
<de.mud.terminal.VDUBuffer: void setWindowBase(int)>
<java.lang.Math: int abs(int)>
<com.trilead.ssh2.crypto.SimpleDERReader: byte[] readBytes(int)>
<org.connectbot.PubkeyListActivity$8: boolean onMenuItemClick(android.view.MenuItem)>
<java.util.LinkedList: boolean contains(java.lang.Object)>
<java.util.HashMap: void <init>()>
<org.connectbot.bean.HostBean: int getPort()>
<org.connectbot.transport.SSH: java.lang.String getFormatHint(android.content.Context)>
<org.connectbot.service.ConnectionNotifier$PreEclair$Holder: org.connectbot.service.ConnectionNotifier$PreEclair access$000()>
<de.mud.terminal.VDUBuffer: void setMargins(int,int)>
<android.view.View: int getWidth()>
<org.connectbot.bean.HostBean: void setStayConnected(boolean)>
<org.connectbot.bean.PubkeyBean: android.content.ContentValues getValues()>
<java.lang.Character: boolean isLowSurrogate(char)>
<java.lang.Long: java.lang.Long valueOf(long)>
<org.connectbot.util.HostDatabase: java.util.List getPortForwardsForHost(org.connectbot.bean.HostBean)>
<org.connectbot.HostListActivity$11: boolean onMenuItemClick(android.view.MenuItem)>
<org.connectbot.service.ConnectionNotifier$EclairAndBeyond: void hideRunningNotification(android.app.Service)>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<android.widget.Button: void <init>(android.content.Context)>
<android.widget.TextView: void cancelLongPress()>
<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>
<android.net.Uri: void <clinit>()>
<com.trilead.ssh2.crypto.PEMDecoder: int hexToInt(char)>
<android.content.ContentValues: void <init>()>
<org.connectbot.WizardActivity: boolean isLastDisplayed()>
<android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
<org.connectbot.HostEditorActivity: void initCharsetPref(android.preference.ListPreference)>
<android.graphics.Matrix$ScaleToFit: void <clinit>()>
<org.connectbot.ConsoleActivity: void onStart()>
<org.connectbot.GeneratePubkeyActivity$2: void <init>(org.connectbot.GeneratePubkeyActivity)>
<org.connectbot.ConsoleActivity$1: void <init>(org.connectbot.ConsoleActivity)>
<com.trilead.ssh2.signature.ECDSASHA2Verify: void <clinit>()>
<org.connectbot.PubkeyListActivity$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<org.connectbot.PubkeyListActivity$9$1: void <init>(org.connectbot.PubkeyListActivity$9,android.view.View)>
<de.mud.terminal.vt320: void <clinit>()>
<android.widget.TextView: void getFocusedRect(android.graphics.Rect)>
<org.connectbot.bean.HostBean: void setColor(java.lang.String)>
<org.connectbot.PubkeyListActivity: void onActivityResult(int,int,android.content.Intent)>
<android.app.Activity: void onNewIntent(android.content.Intent)>
<android.preference.PreferenceActivity: void <init>()>
<org.connectbot.service.ConnectionNotifier$PreEclair: void <clinit>()>
<java.math.BigInteger: void <init>(byte[])>
<android.content.Intent: android.content.Intent addFlags(int)>
<org.connectbot.transport.Telnet: org.connectbot.bean.HostBean createHost(android.net.Uri)>
<android.media.MediaPlayer: void seekTo(int)>
<org.connectbot.bean.SelectionArea: void incrementColumn()>
<android.os.Bundle: void <clinit>()>
<org.connectbot.util.HostDatabase: org.connectbot.bean.HostBean findHostById(long)>
<android.widget.Spinner: android.os.Parcelable onSaveInstanceState()>
<org.connectbot.util.HostDatabase: org.connectbot.bean.HostBean getFirstHostBean(android.database.Cursor)>
<android.content.Intent: android.content.Intent setData(android.net.Uri)>
<org.connectbot.service.TerminalManager$KeyHolder: void <init>()>
<android.view.ViewConfiguration: int getTouchSlop()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<java.util.Collections: void sort(java.util.List)>
<android.view.KeyEvent: int getAction()>
<org.connectbot.service.TerminalManager: void disableMediaPlayer()>
<android.widget.SeekBar: void <init>(android.content.Context)>
<android.graphics.Bitmap$Config: void <init>(java.lang.String,int)>
<org.connectbot.util.PubkeyUtils: byte[] getEncodedPrivate(java.security.PrivateKey,java.lang.String)>
<java.io.FileInputStream: void close()>
<org.connectbot.bean.PubkeyBean: void setEncrypted(boolean)>
<android.graphics.Paint: void <init>(android.graphics.Paint)>
<org.connectbot.ConsoleActivity: void access$1500(org.connectbot.ConsoleActivity)>
<android.view.accessibility.AccessibilityEvent: void <init>()>
<com.trilead.ssh2.crypto.cipher.AES: void decryptBlock(int[][])>
<android.widget.EditText: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<org.connectbot.ConsoleActivity: void onConfigurationChanged(android.content.res.Configuration)>
<org.connectbot.service.TerminalBridge: void <init>()>
<java.security.InvalidKeyException: void <init>(java.lang.String)>
<org.connectbot.ColorsActivity: android.widget.Spinner access$400(org.connectbot.ColorsActivity)>
<org.connectbot.ConsoleActivity$URLItemListener: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.widget.ImageView: void onDetachedFromWindow()>
<android.app.Activity: android.view.Window getWindow()>
<de.mud.terminal.VDUBuffer: int getTopMargin()>
<android.widget.RadioGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.connectbot.HostEditorActivity: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<android.view.KeyEvent: void <clinit>()>
<org.connectbot.GeneratePubkeyActivity: void startEntropyGather()>
<org.connectbot.PubkeyListActivity$4: void <init>(org.connectbot.PubkeyListActivity,org.connectbot.bean.PubkeyBean,android.widget.EditText)>
<org.connectbot.HostListActivity$11$1: void <init>(org.connectbot.HostListActivity$11)>
<org.connectbot.GeneratePubkeyActivity$1: void onCheckedChanged(android.widget.RadioGroup,int)>
<javax.crypto.spec.PBEKeySpec: void <init>(char[])>
<org.connectbot.ConsoleActivity: java.lang.Runnable access$802(org.connectbot.ConsoleActivity,java.lang.Runnable)>
<java.lang.RuntimeException: void <init>()>
<org.connectbot.ConsoleActivity$8: void <init>(org.connectbot.ConsoleActivity)>
<android.os.AsyncTask: void <clinit>()>
<org.connectbot.ColorsActivity: void onDestroy()>
<java.security.spec.RSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger)>
<org.connectbot.service.TerminalManager: void stopWithDelay()>
<android.widget.ImageView: void <init>(android.content.Context)>
<java.security.SecureRandom: void nextBytes(byte[])>
<java.lang.StringBuffer: void <init>(int)>
<java.util.AbstractCollection: java.lang.String toString()>
<org.connectbot.PubkeyListActivity: void handleAddKey(org.connectbot.bean.PubkeyBean,java.lang.String)>
<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<org.connectbot.transport.SSH: org.connectbot.bean.HostBean createHost(android.net.Uri)>
<com.trilead.ssh2.packets.TypesWriter: void writeString(byte[],int,int)>
<android.widget.GridView: android.widget.Adapter getAdapter()>
<android.graphics.Canvas: void <init>()>
<org.connectbot.GeneratePubkeyActivity: int access$500(org.connectbot.GeneratePubkeyActivity,int)>
<org.connectbot.bean.PortForwardBean: java.lang.String getType()>
<org.connectbot.PubkeyListActivity$11$1: void <init>(org.connectbot.PubkeyListActivity$11)>
<org.connectbot.service.TerminalManager: void disconnectAll(boolean)>
<org.connectbot.bean.HostBean: java.lang.String getUsername()>
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>
<org.connectbot.PortForwardListActivity$PortForwardAdapter: void <init>(org.connectbot.PortForwardListActivity,android.content.Context,java.util.List)>
<android.content.ContentValues: void put(java.lang.String,byte[])>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<android.graphics.Paint: android.graphics.Paint$FontMetrics getFontMetrics()>
<org.connectbot.bean.HostBean: void setUseAuthAgent(java.lang.String)>
<javax.crypto.EncryptedPrivateKeyInfo: byte[] getEncoded()>
<java.io.CharArrayReader: void <init>(char[])>
<org.connectbot.service.ConnectionNotifier$EclairAndBeyond$Holder: org.connectbot.service.ConnectionNotifier$EclairAndBeyond access$100()>
<android.graphics.Paint: void <init>()>
<android.widget.RelativeLayout: void <init>(android.content.Context)>
<org.connectbot.service.TerminalBridge$1: void sendTelnetCommand(byte)>
<android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<com.trilead.ssh2.signature.ECDSASHA2Verify: byte[] encodeECPoint(java.security.spec.ECPoint,java.security.spec.EllipticCurve)>
<java.lang.Object: java.lang.Object clone()>
<de.mud.terminal.VDUBuffer: int getCursorRow()>
<org.connectbot.GeneratePubkeyActivity: int access$000(org.connectbot.GeneratePubkeyActivity)>
<org.connectbot.ConsoleActivity$18: void <init>(org.connectbot.ConsoleActivity)>
<android.media.MediaPlayer: void setAudioStreamType(int)>
<android.graphics.Rect: void <init>()>
<android.app.Dialog: android.view.View findViewById(int)>
<org.connectbot.PortForwardListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<android.widget.ImageView: void onDraw(android.graphics.Canvas)>
<org.connectbot.ConsoleActivity: int access$1200(org.connectbot.ConsoleActivity)>
<android.widget.EditText: void <init>(android.content.Context)>
<org.connectbot.ConsoleActivity: boolean access$402(org.connectbot.ConsoleActivity,boolean)>
<java.lang.Integer: int intValue()>
<org.connectbot.WizardActivity: void updateButtons()>
<org.connectbot.service.ConnectivityReceiver: void cleanup()>
<de.mud.terminal.VDUBuffer: void insertLine(int,boolean)>
<de.mud.terminal.vt320: void setIBMCharset(boolean)>
<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>
<org.connectbot.transport.TransportFactory: android.net.Uri getUri(java.lang.String,java.lang.String)>
<com.trilead.ssh2.signature.ECDSASHA2Verify$EllipticCurves: void <clinit>()>
<org.connectbot.HostListActivity$2: void <init>(org.connectbot.HostListActivity)>
<org.connectbot.HostEditorActivity: void onCreate(android.os.Bundle)>
<android.widget.RelativeLayout: boolean shouldDelayChildPressedState()>
<android.net.Uri: java.lang.String encode(java.lang.String)>
<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>
<android.graphics.Matrix$ScaleToFit: void <init>(java.lang.String,int)>
<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.app.Activity: void startActivityForResult(android.content.Intent,int)>
<org.connectbot.ConsoleActivity: android.view.inputmethod.InputMethodManager access$900(org.connectbot.ConsoleActivity)>
<android.view.ContextThemeWrapper: void <init>()>
<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>
<android.widget.LinearLayout: int getBaseline()>
<org.connectbot.HostListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<java.io.BufferedReader: java.lang.String readLine()>
<java.lang.Thread: void setName(java.lang.String)>
<android.widget.TextView: int computeHorizontalScrollRange()>
<java.io.File: void <clinit>()>
<android.widget.ListView: android.widget.ListAdapter getAdapter()>
<android.widget.TextView: void onLayout(boolean,int,int,int,int)>
<java.io.File: java.lang.String getName()>
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>
<org.connectbot.GeneratePubkeyActivity: android.widget.EditText access$200(org.connectbot.GeneratePubkeyActivity)>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<java.io.CharArrayWriter: void <init>(int)>
<org.connectbot.ColorsActivity: android.widget.GridView access$200(org.connectbot.ColorsActivity)>
<org.connectbot.PortForwardListActivity$3$1: void <init>(org.connectbot.PortForwardListActivity$3,android.widget.EditText)>
<org.connectbot.PubkeyListActivity$5: boolean onMenuItemClick(android.view.MenuItem)>
<org.connectbot.ActionBarWrapper$RealActionBar: void show()>
<org.connectbot.ColorsActivity: android.widget.Spinner access$300(org.connectbot.ColorsActivity)>
<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>
<org.connectbot.util.PubkeyUtils: java.security.PrivateKey decodePrivate(byte[],java.lang.String)>
<org.connectbot.util.HostDatabase: void <clinit>()>
<android.widget.Spinner: void onRestoreInstanceState(android.os.Parcelable)>
<android.widget.TextView: float getLeftFadingEdgeStrength()>
<org.connectbot.service.ConnectionNotifier$PreEclair$Holder: void <clinit>()>
<com.trilead.ssh2.crypto.PEMDecoder: java.security.KeyPair decode(char[],java.lang.String)>
<android.widget.Spinner: void onMeasure(int,int)>
<org.connectbot.HelpActivity$1: void <init>(org.connectbot.HelpActivity,java.lang.String)>
<de.mud.terminal.VDUBuffer: void insertChar(int,int,char,int)>
<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<org.connectbot.HostListActivity$11: void <init>(org.connectbot.HostListActivity,org.connectbot.bean.HostBean,org.connectbot.service.TerminalBridge)>
<org.connectbot.bean.SelectionArea: int getRight()>
<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>
<android.content.Intent: void <clinit>()>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<org.connectbot.PortForwardListActivity$3$2: void onClick(android.content.DialogInterface,int)>
<com.trilead.ssh2.signature.ECDSASHA2Verify: java.security.spec.ECParameterSpec getCurveForOID(java.lang.String)>
<android.widget.RelativeLayout: void onMeasure(int,int)>
<org.connectbot.ColorsActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<org.connectbot.ConsoleActivity$15: boolean onMenuItemClick(android.view.MenuItem)>
<org.connectbot.PubkeyListActivity: void updateList()>
<android.content.Intent: java.lang.String getDataString()>
<org.connectbot.util.PubkeyUtils: java.lang.String exportPEM(java.security.PrivateKey,java.lang.String)>
<org.connectbot.util.HostDatabase: boolean savePortForward(org.connectbot.bean.PortForwardBean)>
<org.connectbot.transport.TransportFactory: boolean canForwardPorts(java.lang.String)>
<android.widget.GridView: void smoothScrollToPosition(int)>
<android.widget.ListView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<de.mud.terminal.vt320: void _SetCursor(int,int)>
<android.view.MotionEvent: long getEventTime()>
<org.connectbot.ConsoleActivity: void onCreate(android.os.Bundle)>
<android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.IntentFilter: void <clinit>()>
<org.connectbot.bean.SelectionArea: void setTop(int)>
<org.connectbot.HelpActivity: void onCreate(android.os.Bundle)>
<org.connectbot.bean.HostBean: void setUsername(java.lang.String)>
<org.connectbot.HelpActivity$1: void onClick(android.view.View)>
<android.widget.TextView: void sendAccessibilityEvent(int)>
<android.widget.TextView: boolean onCheckIsTextEditor()>
<org.connectbot.service.TerminalKeyListener: boolean sendFunctionKey(int)>
<org.connectbot.util.HostDatabase: void deleteHost(org.connectbot.bean.HostBean)>
<java.security.KeyPair: java.security.PublicKey getPublic()>
<android.view.DragEvent: void <clinit>()>
<android.widget.TextView: void <init>(android.content.Context)>
<android.widget.TextView: void setSelected(boolean)>
<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>
<org.connectbot.bean.AbstractBean: void <init>()>
<org.connectbot.transport.Local: org.connectbot.bean.HostBean createHost(android.net.Uri)>
<org.connectbot.util.PubkeyUtils: byte[] extractOpenSSHPublic(java.security.KeyPair)>
<java.security.spec.ECFieldFp: void <init>(java.math.BigInteger)>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<java.lang.StringBuffer: int length()>
<org.connectbot.TerminalView: void <clinit>()>
<java.lang.Float: java.lang.Float valueOf(float)>
<android.widget.ImageView: void onAttachedToWindow()>
<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>
<org.connectbot.util.PubkeyDatabase: java.util.List allValues(java.lang.String)>
<org.connectbot.transport.Telnet: void <clinit>()>
<org.connectbot.bean.HostBean: void setPostLogin(java.lang.String)>
<org.connectbot.ConsoleActivity$13: boolean onTouch(android.view.View,android.view.MotionEvent)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<org.connectbot.PubkeyListActivity: void handleAddKey(org.connectbot.bean.PubkeyBean)>
<org.connectbot.service.TerminalManager$BeepListener: void onCompletion(android.media.MediaPlayer)>
<org.connectbot.transport.Telnet: void getSelectionArgs(android.net.Uri,java.util.Map)>
<android.widget.Spinner: void onLayout(boolean,int,int,int,int)>
<org.connectbot.bean.PortForwardBean: void <init>(long,long,java.lang.String,java.lang.String,int,java.lang.String,int)>
<android.os.Binder: void <init>()>
<org.connectbot.ConsoleActivity$15: void <init>(org.connectbot.ConsoleActivity)>
<android.view.GestureDetector$SimpleOnGestureListener: void <init>()>
<org.connectbot.transport.TransportFactory: java.lang.String[] getTransportNames()>
<java.security.spec.DSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>
<java.lang.String: java.lang.String substring(int,int)>
<android.widget.ListView: void dispatchDraw(android.graphics.Canvas)>
<org.connectbot.HostListActivity$HostAdapter: void <init>(org.connectbot.HostListActivity,android.content.Context,java.util.List,org.connectbot.service.TerminalManager)>
<android.preference.PreferenceActivity: void addPreferencesFromResource(int)>
<android.widget.ListView: boolean canAnimate()>
<com.trilead.ssh2.crypto.cipher.AES: void packBlock(byte[],int)>
<java.math.BigInteger: int compareTo(java.math.BigInteger)>
<de.mud.terminal.VDUBuffer: void deleteArea(int,int,int,int,int)>
<java.security.spec.PKCS8EncodedKeySpec: void <init>(byte[])>
<org.connectbot.ConsoleActivity: void onResume()>
<org.connectbot.util.HostDatabase: int[] getDefaultColorsForScheme(int)>
<org.connectbot.ConsoleActivity: void shiftCurrentTerminal(int)>
<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<android.view.InputEvent: void <clinit>()>
<org.connectbot.util.RobustSQLiteOpenHelper: void <clinit>()>
<org.keyczar.jce.EcCore: java.math.BigInteger[] multiplyPointA(java.math.BigInteger[],java.math.BigInteger,java.security.spec.ECParameterSpec)>
<org.connectbot.service.TerminalKeyListener: void <init>(org.connectbot.service.TerminalManager,org.connectbot.service.TerminalBridge,de.mud.terminal.VDUBuffer,java.lang.String)>
<android.widget.RelativeLayout: int getBaseline()>
<android.view.View: void setFocusable(boolean)>
<android.widget.TextView: boolean isPaddingOffsetRequired()>
<java.io.IOException: void <init>()>
<android.content.Intent$ShortcutIconResource: android.content.Intent$ShortcutIconResource fromContext(android.content.Context,int)>
<org.connectbot.transport.Local: java.lang.String getDefaultNickname(java.lang.String,java.lang.String,int)>
<java.util.HashMap: java.util.Set entrySet()>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>
<org.connectbot.bean.PortForwardBean: void <init>(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.trilead.ssh2.crypto.SimpleDERReader: void resetInput(byte[])>
<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>
<android.content.res.Configuration: void <clinit>()>
<org.connectbot.PortForwardListActivity$4: boolean onMenuItemClick(android.view.MenuItem)>
<org.connectbot.PubkeyListActivity: void onCreate(android.os.Bundle)>
<org.connectbot.HostListActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<android.app.Activity: void onDestroy()>
<com.trilead.ssh2.packets.TypesWriter: byte[] getBytes()>
<org.connectbot.PubkeyListActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<org.connectbot.GeneratePubkeyActivity: void onCreate(android.os.Bundle)>
<com.trilead.ssh2.crypto.cipher.CBCMode: void transformBlock(byte[],int,byte[],int)>
<com.trilead.ssh2.crypto.cipher.AES: int subWord(int)>
<org.connectbot.bean.PubkeyBean: long getId()>
<org.connectbot.ConsoleActivity$16: boolean onMenuItemClick(android.view.MenuItem)>
<org.connectbot.bean.SelectionArea: void setBottom(int)>
<org.connectbot.service.TerminalBridge: int fontSizeCompare(float,int,int,int,int)>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
<java.lang.Boolean: void <clinit>()>
<org.connectbot.bean.PubkeyBean: void setLifetime(int)>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.util.HashMap: boolean containsKey(java.lang.Object)>
<android.widget.RadioButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.connectbot.PortForwardListActivity: void updateList()>
<org.connectbot.service.TerminalManager: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<android.widget.TextView: void setPadding(int,int,int,int)>
<java.util.TreeMap: void <init>()>
<android.widget.ListView: android.widget.Adapter getAdapter()>
<de.mud.terminal.vt320: char map_cp850_unicode(char)>
<org.connectbot.PubkeyListActivity$3: boolean onMenuItemClick(android.view.MenuItem)>
<android.widget.RadioButton: void toggle()>
<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>
<android.os.AsyncTask: void <init>()>
<android.widget.RadioGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<java.lang.System: void <clinit>()>
<java.lang.String: void <init>(byte[])>
<org.connectbot.bean.PubkeyBean: void setType(java.lang.String)>
<com.trilead.ssh2.signature.ECDSASHA2Verify: byte[] removeLeadingZeroes(byte[])>
<org.connectbot.service.TerminalBridge: void parentChanged(org.connectbot.TerminalView)>
<org.connectbot.TerminalView$AccessibilityStateTester: void <init>(org.connectbot.TerminalView,org.connectbot.TerminalView$1)>
<android.widget.ListView: void onMeasure(int,int)>
<org.connectbot.ConsoleActivity: android.view.View findCurrentView(int)>
<com.trilead.ssh2.crypto.cipher.DES: void desFunc(int[],byte[],int,byte[],int)>
<android.graphics.RectF: void <clinit>()>
<android.widget.AdapterView: int getSelectedItemPosition()>
<org.connectbot.bean.HostBean: void setProtocol(java.lang.String)>
<android.widget.ViewFlipper: void onAttachedToWindow()>
<org.connectbot.HostListActivity$10: void <init>(org.connectbot.HostListActivity,org.connectbot.bean.HostBean)>
<org.connectbot.bean.PubkeyBean: boolean isConfirmUse()>
<org.connectbot.HostListActivity$8: void <init>(org.connectbot.HostListActivity,org.connectbot.service.TerminalBridge)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<android.app.Activity: void onCreate(android.os.Bundle)>
<android.widget.RelativeLayout: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.connectbot.ConsoleActivity$10: void <init>(org.connectbot.ConsoleActivity)>
<android.widget.ListView: void layoutChildren()>
<org.connectbot.transport.TransportFactory: void <clinit>()>
<org.connectbot.HostListActivity: boolean startConsoleActivity()>
<org.connectbot.ColorsActivity: void editColor(int)>
<android.widget.ListView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.connectbot.transport.SSH: java.lang.String getDefaultNickname(java.lang.String,java.lang.String,int)>
<de.mud.terminal.VDUBuffer: void deleteChar(int,int)>
<android.content.Intent: java.lang.String getAction()>
<android.content.IntentFilter: void <init>()>
<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<java.lang.String: char charAt(int)>
<org.connectbot.bean.SelectionArea: java.lang.String copyFrom(de.mud.terminal.VDUBuffer)>
<org.connectbot.bean.PubkeyBean: void setConfirmUse(boolean)>
<org.connectbot.util.PubkeyUtils: java.lang.String convertToOpenSSHFormat(java.security.PublicKey,java.lang.String)>
<java.lang.StringBuilder: java.lang.String toString()>
<org.connectbot.PortForwardListActivity$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<org.connectbot.util.HostDatabase: org.connectbot.bean.HostBean findHost(java.util.Map)>
<org.connectbot.HostListActivity$3: void <init>(org.connectbot.HostListActivity)>
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.connectbot.util.PubkeyUtils: java.lang.String getOidFromPkcs8Encoded(byte[])>
<org.connectbot.GeneratePubkeyActivity: android.widget.Button access$600(org.connectbot.GeneratePubkeyActivity)>
<java.lang.Object: boolean equals(java.lang.Object)>
<org.connectbot.SettingsActivity: void onCreate(android.os.Bundle)>
<org.connectbot.bean.HostBean: void setPort(int)>
<org.connectbot.PortForwardListActivity: void <init>()>
<org.connectbot.PubkeyListActivity$8: void <init>(org.connectbot.PubkeyListActivity,boolean,org.connectbot.bean.PubkeyBean)>
<org.connectbot.service.TerminalManager: android.os.IBinder onBind(android.content.Intent)>
<android.widget.EditText: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.widget.TextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
<org.connectbot.ConsoleActivity$9: void <init>(org.connectbot.ConsoleActivity)>
<org.connectbot.HostEditorActivity$CursorPreferenceHack: void <init>(org.connectbot.HostEditorActivity,java.lang.String,long)>
<android.view.accessibility.AccessibilityEvent: void <clinit>()>
<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>
<java.lang.Character: int getType(char)>
<org.connectbot.HostListActivity: void onActivityResult(int,int,android.content.Intent)>
<org.connectbot.ColorsActivity: void <init>()>
<org.connectbot.PubkeyListActivity$9: void <init>(org.connectbot.PubkeyListActivity,org.connectbot.bean.PubkeyBean)>
<java.lang.String: int indexOf(int)>
<de.mud.terminal.vt320: void keyTyped(int,char,int)>
<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>
<java.lang.Integer: void <clinit>()>
<org.connectbot.service.TerminalManager: void addKey(org.connectbot.bean.PubkeyBean,java.security.KeyPair,boolean)>
<org.connectbot.service.ConnectionNotifier: void <init>()>
<android.widget.ListView: void <init>(android.content.Context)>
<org.connectbot.bean.HostBean: void setWantSession(boolean)>
<java.util.Arrays: void fill(byte[],byte)>
<de.mud.terminal.VDUBuffer: void setScreenSize(int,int,boolean)>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<org.connectbot.ConsoleActivity: float access$1300(org.connectbot.ConsoleActivity)>
<android.widget.ListView: void setCacheColorHint(int)>
<java.lang.Integer: java.lang.String toString(int)>
<org.connectbot.service.TerminalManager: void setResizeAllowed(boolean)>
<java.util.HashMap: int size()>
<org.connectbot.service.TerminalManager$IdleTask: void <init>(org.connectbot.service.TerminalManager)>
<org.connectbot.util.PubkeyUtils: java.security.PublicKey recoverPublicKey(java.security.KeyFactory,java.security.PrivateKey)>
<org.connectbot.HostEditorActivity: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<org.connectbot.service.ConnectionNotifier$EclairAndBeyond$Holder: void <clinit>()>
<org.connectbot.ConsoleActivity$14: void <init>(org.connectbot.ConsoleActivity)>
<android.widget.BaseAdapter: void <init>()>
<android.app.Service: void <init>()>
<android.widget.EditText: java.lang.CharSequence getText()>
<org.connectbot.transport.Telnet: void <init>()>
<de.mud.terminal.vt320: void <init>()>
<org.connectbot.service.TerminalBridge$1: void write(byte[])>
<android.widget.RadioGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<de.mud.terminal.vt320: boolean writeSpecial(java.lang.String)>
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<org.connectbot.util.Encryptor: byte[] encrypt(byte[],int,java.lang.String,byte[])>
<org.connectbot.ConsoleActivity$4: void <init>(org.connectbot.ConsoleActivity)>
<org.connectbot.service.ConnectivityReceiver: void <init>(org.connectbot.service.TerminalManager,boolean)>
<de.mud.terminal.VDUBuffer: int getCursorColumn()>
<android.widget.RadioGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<org.connectbot.util.HelpTopicView: org.connectbot.util.HelpTopicView setTopic(java.lang.String)>
<android.net.Uri: android.net.Uri fromFile(java.io.File)>
<android.widget.ListView: boolean isOpaque()>
<org.connectbot.PubkeyListActivity: void onStart()>
<android.os.Binder: void finalize()>
<android.graphics.Paint$Style: void <init>(java.lang.String,int)>
<android.widget.TextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.connectbot.service.TerminalBridge: boolean access$102(org.connectbot.service.TerminalBridge,boolean)>
<android.widget.RadioButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<org.connectbot.PubkeyListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<android.widget.GridView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<org.connectbot.PubkeyListActivity$3: void <init>(org.connectbot.PubkeyListActivity)>
<java.util.TimerTask: void <init>()>
<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>
<org.connectbot.PortForwardListActivity$3: boolean onMenuItemClick(android.view.MenuItem)>
<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<android.graphics.Path: void <init>()>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet,int)>
<de.mud.terminal.VDUBuffer: void putChar(int,int,char)>
<android.widget.TextView: void setPaddingRelative(int,int,int,int)>
<org.connectbot.ConsoleActivity$7: void onClick(android.view.View)>
<org.connectbot.transport.Telnet: java.lang.String getProtocolName()>
<com.trilead.ssh2.crypto.cipher.CBCMode: void encryptBlock(byte[],int,byte[],int)>
<android.view.MotionEvent: float getX()>
<java.util.LinkedList: boolean addAll(java.util.Collection)>
<android.content.Intent$ShortcutIconResource: void <clinit>()>
<android.media.MediaPlayer: void prepare()>
<android.widget.EditText: android.text.Editable getText()>
<org.connectbot.util.Encryptor: byte[] decrypt(byte[],int,java.lang.String,byte[])>
<org.connectbot.SettingsActivity: void <init>()>
<org.connectbot.TerminalView$AccessibilityStateTester: java.lang.Boolean doInBackground(java.lang.Void[])>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<java.util.LinkedList: void <init>()>
<de.mud.terminal.vt320: void putString(java.lang.String)>
<android.app.Activity: android.app.ActionBar getActionBar()>
<com.trilead.ssh2.crypto.cipher.DES: int[] generateWorkingKey(boolean,byte[],int)>
<org.connectbot.ConsoleActivity$11: void <init>(org.connectbot.ConsoleActivity)>
<android.widget.GridView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.graphics.Xfermode: void finalize()>
<android.widget.EditText: boolean getDefaultEditable()>
<android.app.Activity: void setRequestedOrientation(int)>
<org.connectbot.service.TerminalBridge: boolean isDisconnected()>
<org.connectbot.ConsoleActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<org.connectbot.HostListActivity$6: boolean onMenuItemClick(android.view.MenuItem)>
<android.view.KeyEvent: int getRepeatCount()>
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>
<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<org.connectbot.bean.HostBean: void setLastConnect(long)>
<org.connectbot.transport.SSH: void getSelectionArgs(android.net.Uri,java.util.Map)>
<java.util.Arrays: void fill(char[],int,int,char)>
<android.app.Activity: void onStop()>
<com.trilead.ssh2.crypto.cipher.AES: void unpackBlock(byte[],int)>
<java.lang.Math: float abs(float)>
<org.connectbot.WizardActivity: void <init>()>
<org.connectbot.ConsoleActivity: void configureOrientation()>
<org.connectbot.HostListActivity$8: boolean onMenuItemClick(android.view.MenuItem)>
<org.connectbot.ConsoleActivity: void showEmulatedKeys()>
<java.security.spec.ECPublicKeySpec: void <init>(java.security.spec.ECPoint,java.security.spec.ECParameterSpec)>
<com.trilead.ssh2.crypto.cipher.DES: void init(boolean,byte[])>
<org.connectbot.ActionBarWrapper$RealActionBar: void hide()>
<org.connectbot.ConsoleActivity$19$1: void <init>(org.connectbot.ConsoleActivity$19,android.view.View,org.connectbot.TerminalView)>
<android.graphics.Paint: void setStrokeWidth(float)>
<org.connectbot.PubkeyListActivity$12: void onClick(android.content.DialogInterface,int)>
<java.lang.StringBuffer: java.lang.String toString()>
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<org.connectbot.HelpTopicActivity: void <init>()>
<android.app.Activity: void setTitle(java.lang.CharSequence)>
<org.connectbot.bean.HostBean: long getId()>
<org.connectbot.service.TerminalBridge$5: void <init>(org.connectbot.service.TerminalBridge)>
<android.widget.ListView: void onSizeChanged(int,int,int,int)>
<org.connectbot.util.PubkeyUtils: byte[] sha256(byte[])>
<android.widget.TextView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.connectbot.PortForwardListActivity: void onStop()>
<com.trilead.ssh2.crypto.cipher.DESede: int getBlockSize()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>
<org.connectbot.util.PubkeyDatabase: void <init>(android.content.Context)>
<javax.crypto.EncryptedPrivateKeyInfo: void <init>(java.security.AlgorithmParameters,byte[])>
<android.widget.GridView: void setSelection(int)>
<org.connectbot.GeneratePubkeyActivity$4: void <init>(org.connectbot.GeneratePubkeyActivity)>
<org.connectbot.bean.SelectionArea: void setLeft(int)>
<android.view.accessibility.AccessibilityRecord: void <init>()>
<org.connectbot.service.TerminalManager: void onDestroy()>
<android.view.inputmethod.EditorInfo: void <clinit>()>
<java.lang.StringBuffer: void <init>()>
<org.connectbot.PortForwardListActivity: void onStart()>
<android.widget.TextView: void onMeasure(int,int)>
<android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<org.connectbot.transport.Local: void getSelectionArgs(android.net.Uri,java.util.Map)>
<org.connectbot.WizardActivity: boolean isFirstDisplayed()>
<org.connectbot.HostEditorActivity$CursorPreferenceHack: java.lang.String getString(java.lang.String,java.lang.String)>
<org.connectbot.HostListActivity$4: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<android.widget.Spinner: boolean performClick()>
<com.trilead.ssh2.signature.ECDSASHA2Verify: java.security.spec.ECPoint decodeECPoint(byte[],java.security.spec.EllipticCurve)>
<org.connectbot.bean.HostBean: void setId(long)>
<de.mud.telnet.TelnetProtocolHandler: void <init>()>
<org.connectbot.HostListActivity$6: void <init>(org.connectbot.HostListActivity)>
<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>
<org.connectbot.service.TerminalManager: void updateSavingKeys()>
<org.connectbot.ConsoleActivity$12: void <init>(org.connectbot.ConsoleActivity)>
<org.connectbot.transport.SSH: android.net.Uri getUri(java.lang.String)>
<com.trilead.ssh2.crypto.cipher.CBCMode: void <init>(com.trilead.ssh2.crypto.cipher.BlockCipher,byte[],boolean)>
<com.trilead.ssh2.crypto.PEMDecoder: com.trilead.ssh2.crypto.PEMStructure parsePEM(char[])>
<android.app.Activity: int getRequestedOrientation()>
<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<org.connectbot.GeneratePubkeyActivity: java.lang.String access$300(org.connectbot.GeneratePubkeyActivity)>
<de.mud.terminal.VDUBuffer: void <init>(int,int)>
<com.trilead.ssh2.packets.TypesWriter: void <init>()>
<android.widget.ViewFlipper: void onDetachedFromWindow()>
<org.connectbot.ConsoleActivity: org.connectbot.service.PromptHelper getCurrentPromptHelper()>
<android.media.MediaPlayer: void finalize()>
<com.trilead.ssh2.crypto.cipher.AES: void encryptBlock(int[][])>
<android.widget.TextView: int getBottomPaddingOffset()>
<android.view.MotionEvent: float getY()>
<org.connectbot.PubkeyListActivity: byte[] readRaw(java.io.File)>
<java.lang.Throwable: void printStackTrace()>
<org.connectbot.PubkeyListActivity$7: void <init>(org.connectbot.PubkeyListActivity,org.connectbot.bean.PubkeyBean)>
<org.connectbot.GeneratePubkeyActivity: void access$700(org.connectbot.GeneratePubkeyActivity)>
<org.connectbot.ConsoleActivity$17: boolean onMenuItemClick(android.view.MenuItem)>
<org.connectbot.ActionBarWrapper$DummyActionBar: void <init>()>
<android.graphics.Paint: void setTextSize(float)>
<org.connectbot.bean.PortForwardBean: void setId(long)>
<com.trilead.ssh2.crypto.Base64: byte[] decode(char[])>
<org.connectbot.util.PubkeyDatabase: void <clinit>()>
<org.connectbot.service.ConnectionNotifier$PreEclair: void hideRunningNotification(android.app.Service)>
<android.widget.AbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.ImageView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<org.connectbot.service.TerminalBridge: void discardBitmap()>
<de.mud.terminal.VDUBuffer: void showCursor(boolean)>
<com.trilead.ssh2.crypto.cipher.CBCMode: int getBlockSize()>
<org.connectbot.transport.SSH: void <clinit>()>
<java.util.AbstractSequentialList: java.util.Iterator iterator()>
<java.security.spec.RSAPrivateCrtKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>
<android.widget.TextView: void onFinishTemporaryDetach()>
<org.connectbot.ConsoleActivity$13: void <init>(org.connectbot.ConsoleActivity,android.view.GestureDetector)>
<java.io.ByteArrayOutputStream: void close()>
<org.connectbot.util.HostDatabase: void setDefaultColorsForScheme(int,int,int)>
<org.connectbot.service.TerminalBridge$6: void <init>(org.connectbot.service.TerminalBridge)>
<android.graphics.Path: void moveTo(float,float)>
<android.widget.TextView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.ImageView: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>
<org.connectbot.HostEditorActivity$CharsetHolder: boolean isInitialized()>
<android.widget.ImageView: void drawableStateChanged()>
<de.mud.terminal.vt320: void setScreenSize(int,int,boolean)>
<java.io.FileInputStream: void <init>(java.io.File)>
<org.connectbot.ConsoleActivity$4: void run()>
<org.connectbot.PortForwardListActivity$6: void <init>(org.connectbot.PortForwardListActivity)>
<de.mud.terminal.VDUBuffer: void setCursorPosition(int,int)>
<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>
<org.connectbot.service.TerminalBridge: void redraw()>
<org.connectbot.util.PubkeyDatabase: java.util.List getAllStartPubkeys()>
<android.widget.GridView: void setRemoteViewsAdapter(android.content.Intent)>
<android.widget.LinearLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>
<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.graphics.RectF: void set(float,float,float,float)>
<com.trilead.ssh2.crypto.cipher.DESede: void transformBlock(byte[],int,byte[],int)>
<android.widget.ViewFlipper: void <init>(android.content.Context)>
<org.connectbot.HostEditorActivity$CharsetHolder: void <clinit>()>
<android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>
<android.widget.TextView: void onStartTemporaryDetach()>
<com.trilead.ssh2.crypto.Base64: void <clinit>()>
<org.connectbot.bean.HostBean: java.lang.String getHostname()>
<android.widget.RadioGroup: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<org.connectbot.transport.TransportFactory: java.lang.String getFormatHint(java.lang.String,android.content.Context)>
<java.lang.Thread: void <init>(java.lang.Runnable)>
<org.connectbot.bean.HostBean: android.content.ContentValues getValues()>
<org.connectbot.util.HostDatabase: org.connectbot.bean.HostBean saveHost(org.connectbot.bean.HostBean)>
<android.content.res.Configuration: void <init>()>
<android.view.InputEvent: void <init>()>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>
<org.connectbot.transport.Local: android.net.Uri getUri(java.lang.String)>
<android.widget.Spinner: void onDetachedFromWindow()>
<org.connectbot.ConsoleActivity: void onStop()>
<org.connectbot.ConsoleActivity$8: void onClick(android.view.View)>
<com.trilead.ssh2.log.Logger: com.trilead.ssh2.log.Logger getLogger(java.lang.Class)>
<android.webkit.WebSettings$LayoutAlgorithm: void <clinit>()>
<android.widget.TextView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.connectbot.util.PubkeyUtils: java.security.PrivateKey decodePrivate(byte[],java.lang.String,java.lang.String)>
<com.trilead.ssh2.crypto.SimpleDERReader: void <init>(byte[],int,int)>
<org.connectbot.bean.PubkeyBean: void <init>()>
<org.connectbot.PubkeyListActivity$PubkeyAdapter: void <init>(org.connectbot.PubkeyListActivity,android.content.Context,java.util.List)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>
<java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<android.widget.TextView: boolean onKeyPreIme(int,android.view.KeyEvent)>
<android.app.Service: void onRebind(android.content.Intent)>
<org.connectbot.bean.HostBean: void setCompression(boolean)>
<org.connectbot.util.RobustSQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>
<android.widget.TextView: boolean hasOverlappingRendering()>
<com.trilead.ssh2.crypto.SimpleDERReader: java.math.BigInteger readInt()>
<org.connectbot.bean.SelectionArea: void finishSelectingOrigin()>
<org.connectbot.ConsoleActivity$2: void <init>(org.connectbot.ConsoleActivity)>
<org.connectbot.bean.PortForwardBean: java.lang.String getDestAddr()>
<android.content.ContextWrapper: void <init>(android.content.Context)>
<org.connectbot.PortForwardListActivity$5: void <init>(org.connectbot.PortForwardListActivity,org.connectbot.bean.PortForwardBean)>
<com.trilead.ssh2.crypto.PEMStructure: void <init>()>
<org.connectbot.transport.SSH: java.lang.String getProtocolName()>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<android.widget.ListView: boolean onKeyUp(int,android.view.KeyEvent)>
<com.trilead.ssh2.crypto.PEMDecoder: java.security.KeyPair decode(com.trilead.ssh2.crypto.PEMStructure,java.lang.String)>
<org.connectbot.bean.PubkeyBean: boolean changePassword(java.lang.String,java.lang.String)>
<java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>
<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.Activity: void registerForContextMenu(android.view.View)>
<org.connectbot.ConsoleActivity: void hideAllPrompts()>
<android.widget.Spinner: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<java.lang.String: int length()>
<org.connectbot.bean.SelectionArea: int getBottom()>
<android.view.MotionEvent: int getAction()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>
<org.connectbot.PubkeyListActivity$11: void <init>(org.connectbot.PubkeyListActivity,org.connectbot.bean.PubkeyBean,boolean)>
<com.trilead.ssh2.crypto.PEMDecoder: byte[] hexToByteArray(java.lang.String)>
<org.connectbot.bean.HostBean: void setNickname(java.lang.String)>
<org.connectbot.bean.PortForwardBean: java.lang.String getNickname()>
<android.widget.TextView: boolean onKeyShortcut(int,android.view.KeyEvent)>
<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>
<android.widget.Spinner: void setEnabled(boolean)>
<org.connectbot.bean.HostBean: void setUseKeys(boolean)>
<dummyMainClass: void dummyMainMethod()>
<java.math.BigInteger: void <clinit>()>
<org.connectbot.util.HostDatabase: java.util.List createHostBeans(android.database.Cursor)>
<com.trilead.ssh2.log.Logger: void <clinit>()>
<android.widget.TextView: void onAttachedToWindow()>
<de.mud.terminal.VDUBuffer: char getChar(int,int)>
<com.trilead.ssh2.crypto.SimpleDERReader: byte readByte()>
<org.connectbot.HostEditorActivity: void onStop()>
<android.widget.GridView: void setAdapter(android.widget.ListAdapter)>
<android.view.KeyEvent: void <init>(int,int)>
<android.widget.TextView: boolean onTrackballEvent(android.view.MotionEvent)>
<java.security.spec.ECPrivateKeySpec: void <init>(java.math.BigInteger,java.security.spec.ECParameterSpec)>
<android.view.View: void setOnKeyListener(android.view.View$OnKeyListener)>
<org.connectbot.bean.PortForwardBean: void setDest(java.lang.String)>
<android.widget.ListView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<android.widget.ImageView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<java.lang.Object: void <init>()>
<android.widget.TextView: boolean onDragEvent(android.view.DragEvent)>
<org.connectbot.bean.SelectionArea: void incrementRow()>
<java.util.TreeMap: int size()>
<android.database.sqlite.SQLiteOpenHelper: void close()>
<android.util.Log: int d(java.lang.String,java.lang.String)>
<org.connectbot.HostListActivity$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<de.mud.terminal.VDUBuffer: void putChar(int,int,char,int)>
<org.connectbot.PubkeyListActivity: void access$000(org.connectbot.PubkeyListActivity)>
<org.connectbot.ActionBarWrapper$RealActionBar$1: void onMenuVisibilityChanged(boolean)>
<android.widget.GridView: void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo)>
<org.connectbot.util.HostDatabase: void <init>(android.content.Context)>
<org.connectbot.service.TerminalBridge: void decreaseFontSize()>
<org.connectbot.GeneratePubkeyActivity$3: void <init>(org.connectbot.GeneratePubkeyActivity)>
<android.widget.RadioGroup: android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()>
<org.connectbot.PortForwardListActivity$5: boolean onMenuItemClick(android.view.MenuItem)>
<org.connectbot.service.TerminalKeyListener: int keyAsControl(int)>
<android.app.Activity: void setResult(int,android.content.Intent)>
<android.graphics.Canvas: void drawPaint(android.graphics.Paint)>
<java.util.LinkedList: java.lang.Object[] toArray(java.lang.Object[])>
<com.trilead.ssh2.crypto.SimpleDERReader: byte[] readOctetString()>
<android.widget.RelativeLayout: void onLayout(boolean,int,int,int,int)>
<com.trilead.ssh2.crypto.cipher.AES: void transformBlock(byte[],int,byte[],int)>
<com.trilead.ssh2.crypto.cipher.AES: int getBlockSize()>
<org.connectbot.bean.HostBean: void <init>()>
<java.lang.Thread: void setDaemon(boolean)>
<org.connectbot.PortForwardListActivity$4: void <init>(org.connectbot.PortForwardListActivity,org.connectbot.bean.PortForwardBean)>
<org.connectbot.util.PubkeyUtils: byte[] encrypt(byte[],java.lang.String)>
<android.view.MotionEvent: void <init>()>
<java.security.NoSuchAlgorithmException: void <init>(java.lang.String,java.lang.Throwable)>
<org.connectbot.GeneratePubkeyActivity: android.widget.SeekBar access$100(org.connectbot.GeneratePubkeyActivity)>
<com.trilead.ssh2.signature.ECDSASHA2Verify: int getCurveSize(java.security.spec.ECParameterSpec)>
<android.widget.TextView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.view.KeyEvent: int getMetaState()>
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>
<org.connectbot.transport.Local: java.lang.String getProtocolName()>
<android.widget.Spinner: void setAdapter(android.widget.Adapter)>
<de.mud.terminal.Precomposer: char precompose(char,char)>
<android.widget.ListView: void setRemoteViewsAdapter(android.content.Intent)>
<java.lang.AbstractStringBuilder: void <init>()>
<org.connectbot.bean.PubkeyBean: boolean isEncrypted()>
<org.connectbot.HostEditorActivity: void onStart()>
<android.app.Dialog: void setTitle(int)>
<com.trilead.ssh2.packets.TypesWriter: void writeUINT32(int,int)>
<com.trilead.ssh2.signature.ECDSASHA2Verify: int[] getCurveSizes()>
<android.graphics.Paint: void setAntiAlias(boolean)>
<org.connectbot.transport.TransportFactory: org.connectbot.transport.AbsTransport getTransport(java.lang.String)>
<org.connectbot.HostListActivity$9: boolean onMenuItemClick(android.view.MenuItem)>
<org.connectbot.bean.PubkeyBean: byte[] getPrivateKey()>
<java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<android.widget.TextView: void onWindowFocusChanged(boolean)>
<org.connectbot.PortForwardListActivity$5$1: void <init>(org.connectbot.PortForwardListActivity$5)>
<java.lang.Thread: void start()>
<java.security.spec.DSAPrivateKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>
<android.widget.SeekBar: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<org.connectbot.PortForwardListActivity$4$2$1: void <init>(org.connectbot.PortForwardListActivity$4$2)>
<android.app.Dialog: void show()>
<org.connectbot.bean.HostBean: void setDelKey(java.lang.String)>
<android.database.SQLException: void <init>(java.lang.String)>
<de.mud.terminal.vt320: void beep()>
<android.widget.GridView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.content.ContentValues: void <clinit>()>
<com.trilead.ssh2.packets.TypesWriter: void writeBytes(byte[],int,int)>
<java.lang.Integer: java.lang.Integer valueOf(int)>
<android.content.Context: java.lang.String getString(int,java.lang.Object[])>
<org.connectbot.ColorsActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.widget.ImageView: boolean hasOverlappingRendering()>
<android.view.View: void setFocusableInTouchMode(boolean)>
<android.widget.RadioGroup: void onFinishInflate()>
<android.widget.ImageView: int[] onCreateDrawableState(int)>
<org.connectbot.GeneratePubkeyActivity: int getClosestFieldSize(int)>
<android.view.GestureDetector: void <init>(android.view.GestureDetector$OnGestureListener)>
<java.lang.String: java.lang.String substring(int)>
<android.os.Handler: boolean sendEmptyMessage(int)>
<android.widget.TextView: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.app.Service: void stopForeground(boolean)>
<java.lang.Integer: int parseInt(java.lang.String)>
<org.connectbot.PubkeyListActivity: void readKeyFromFile(java.io.File)>
<java.lang.String: void getChars(int,int,char[],int)>
<java.security.KeyPair: java.security.PrivateKey getPrivate()>
<android.app.Activity: android.content.Intent getIntent()>
<java.lang.String: void <init>(char[])>
<org.connectbot.TerminalView: void forceSize(int,int)>
<android.view.MotionEvent: float getRawY()>
<android.widget.TextView: boolean onTouchEvent(android.view.MotionEvent)>
<java.io.CharArrayWriter: void write(int)>
<com.trilead.ssh2.crypto.cipher.AES: int shift(int,int)>
<org.keyczar.jce.EcCore: void <clinit>()>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.view.KeyEvent: int getUnicodeChar(int)>
<android.widget.TextView: int getLeftPaddingOffset()>
<android.widget.TextView: int getBaseline()>
<android.content.BroadcastReceiver: void <init>()>
<android.widget.ListView: void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo)>
<java.util.Arrays: void fill(char[],char)>
<android.widget.EditText: void setEllipsize(android.text.TextUtils$TruncateAt)>
<android.view.View: android.view.View findViewById(int)>
<android.widget.ViewFlipper: void onWindowVisibilityChanged(int)>
<org.connectbot.service.TerminalKeyListener: void updatePrefs()>
<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<java.lang.StringBuilder: void <init>(int)>
<de.mud.terminal.vt320: void setTerminalID(java.lang.String)>
<org.connectbot.bean.SelectionArea: int getLeft()>
<org.connectbot.bean.SelectionArea: void setRight(int)>
<android.app.Activity: android.view.View findViewById(int)>
<android.preference.PreferenceActivity: void onStop()>
<org.connectbot.HostEditorActivity$CursorPreferenceHack: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>
<android.widget.ViewAnimator: void <init>(android.content.Context,android.util.AttributeSet)>
<org.connectbot.util.PubkeyUtils: byte[] cipher(int,byte[],byte[])>
<android.content.Intent: android.content.Intent setFlags(int)>
<android.media.MediaPlayer: void <init>()>
<org.connectbot.ConsoleActivity: org.connectbot.ActionBarWrapper access$700(org.connectbot.ConsoleActivity)>
<android.widget.RelativeLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<org.keyczar.jce.EcCore: java.math.BigInteger[] addPointsA(java.math.BigInteger[],java.math.BigInteger[],java.security.spec.ECParameterSpec)>
<org.connectbot.ColorsActivity: java.util.List access$000(org.connectbot.ColorsActivity)>
<android.view.MotionEvent: void <clinit>()>
<android.graphics.Paint: void setColor(int)>
<java.lang.StringBuilder: int length()>
<com.trilead.ssh2.crypto.cipher.DES: void <init>()>
<android.app.Dialog: void setContentView(android.view.View)>
<android.widget.ListView: void smoothScrollToPosition(int)>
<android.graphics.Rect: void <clinit>()>
<org.connectbot.util.UberColorPickerDialog: void <init>(android.content.Context,org.connectbot.util.UberColorPickerDialog$OnColorChangedListener,int)>
<android.widget.TextView: android.os.Parcelable onSaveInstanceState()>
<org.connectbot.service.TerminalManager: void <init>()>
<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<android.widget.ImageView: void setSelected(boolean)>
<android.widget.TextView: void jumpDrawablesToCurrentState()>
<org.connectbot.HostListActivity$9: void <init>(org.connectbot.HostListActivity,org.connectbot.bean.HostBean)>
<de.mud.terminal.Precomposer: void <clinit>()>
<android.widget.TextView: float getRightFadingEdgeStrength()>
<android.widget.ViewFlipper: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<java.security.spec.ECPoint: java.math.BigInteger getAffineY()>
<android.app.Service: void stopSelf()>
<com.trilead.ssh2.packets.TypesWriter: void writeUINT32(int)>
<android.graphics.Matrix: void <init>()>
<org.connectbot.ConsoleActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<org.connectbot.PubkeyListActivity: void onStop()>
<java.math.BigInteger: void <init>(int,byte[])>
<org.connectbot.ConsoleActivity$URLItemListener: void <init>(org.connectbot.ConsoleActivity,android.content.Context)>
<android.graphics.Matrix: void finalize()>
<java.util.Timer: void <init>(java.lang.String,boolean)>
<org.connectbot.bean.SelectionArea: void decrementColumn()>
<java.lang.StringBuilder: void <init>()>
<org.connectbot.PortForwardListActivity$2: void <init>(org.connectbot.PortForwardListActivity)>
<org.connectbot.service.TerminalBridge: void <clinit>()>
<android.view.ViewGroup$LayoutParams: void <init>(int,int)>
<android.graphics.Path: void finalize()>
<org.connectbot.HostEditorActivity$1: void <init>(org.connectbot.HostEditorActivity)>
<com.trilead.ssh2.crypto.cipher.CBCMode: void decryptBlock(byte[],int,byte[],int)>
<android.widget.TextView: void onScreenStateChanged(int)>
<android.graphics.RectF: void <init>()>
<android.media.MediaPlayer: void release()>
<org.connectbot.PubkeyListActivity$10: boolean onMenuItemClick(android.view.MenuItem)>
<org.connectbot.service.ConnectivityReceiver: void acquireWifiLockIfNecessaryLocked()>
<android.view.KeyCharacterMap: void <clinit>()>
<org.connectbot.HostListActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
<android.widget.RelativeLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<org.connectbot.PubkeyListActivity$9$1: void onClick(android.content.DialogInterface,int)>
<org.connectbot.PortForwardListActivity$4$2: void <init>(org.connectbot.PortForwardListActivity$4,android.widget.EditText,android.widget.Spinner,android.widget.EditText,android.widget.EditText)>
<org.connectbot.WizardActivity$1: void onClick(android.view.View)>
<org.connectbot.ConsoleActivity: int access$1100(org.connectbot.ConsoleActivity)>
<android.os.Handler: void <init>()>
<android.net.NetworkInfo$State: void <clinit>()>
<android.widget.TextView: void onDetachedFromWindow()>
<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<org.connectbot.ConsoleActivity$11: void onMenuVisibilityChanged(boolean)>
<org.connectbot.PortForwardListActivity$4$2$1: void run()>
<de.mud.terminal.VDUBuffer: void markLine(int,int)>
<org.connectbot.service.TerminalManager: int onStartCommand(android.content.Intent,int,int)>
<android.widget.CheckBox: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<de.mud.terminal.vt320: boolean write(java.lang.String,boolean)>
<android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)>
<org.connectbot.bean.SelectionArea: boolean isSelectingOrigin()>
<org.connectbot.bean.PortForwardBean: void setType(java.lang.String)>
<org.connectbot.StrictModeSetup: void run()>
<android.widget.LinearLayout: void <init>(android.content.Context)>
<java.lang.Math: int max(int,int)>
<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,int,boolean)>
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
<org.connectbot.transport.SSH: void <init>()>
<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.view.KeyCharacterMap: int getDeadChar(int,int)>
<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>
<com.trilead.ssh2.crypto.SimpleDERReader: int readLength()>
<android.content.Intent: void <init>()>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
<android.widget.GridView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.widget.TextView: void onVisibilityChanged(android.view.View,int)>
<org.connectbot.util.PubkeyDatabase: org.connectbot.bean.PubkeyBean savePubkey(org.connectbot.bean.PubkeyBean)>
<org.connectbot.service.TerminalBridge$1: void setWindowSize(int,int)>
<org.connectbot.ActionBarWrapper$RealActionBar$1: void <init>(org.connectbot.ActionBarWrapper$RealActionBar,org.connectbot.ActionBarWrapper$OnMenuVisibilityListener)>
<android.app.Dialog: void <init>(android.content.Context)>
<org.connectbot.util.HostDatabase: java.lang.Integer[] getColorsForScheme(int)>
<org.connectbot.PortForwardListActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<org.connectbot.ConsoleActivity: boolean access$400(org.connectbot.ConsoleActivity)>
<org.connectbot.PortForwardListActivity$3: void <init>(org.connectbot.PortForwardListActivity)>
<java.util.Collections: void <clinit>()>
