<android.app.Activity: java.lang.CharSequence getTitle()>
<java.io.FileOutputStream: void write(byte[],int,int)>
<java.net.Socket: java.io.OutputStream getOutputStream()>
<android.widget.TextView: void getFocusedRect(android.graphics.Rect)>
<android.graphics.Region: void <clinit>()>
<android.view.ViewGroup: void addView(android.view.View)>
<org.torproject.android.service.TorService: void access$300(org.torproject.android.service.TorService,java.lang.String)>
<android.support.v4.app.NavUtils$NavUtilsImplBase: java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo)>
<android.support.v7.internal.view.ActionBarPolicy: android.support.v7.internal.view.ActionBarPolicy get(android.content.Context)>
<android.support.v7.app.ActionBarActivity: void <init>()>
<java.util.ArrayList: boolean add(java.lang.Object)>
<android.support.v4.app.FragmentManagerImpl$5: void <init>(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.Fragment)>
<android.widget.TextView: void onFinishTemporaryDetach()>
<java.lang.Object: void notifyAll()>
<org.torproject.android.service.TorService: java.util.ArrayList access$502(org.torproject.android.service.TorService,java.util.ArrayList)>
<android.support.v4.app.FragmentManagerImpl: void dispatchCreate()>
<android.view.InputEvent: void <init>()>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<android.widget.ImageView: void setSelected(boolean)>
<android.widget.FrameLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
<android.app.Notification$Builder: android.app.Notification$Builder setLights(int,int,int)>
<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<net.freehaven.tor.control.TorControlConnection$ControlParseThread: void run()>
<java.lang.Class: java.lang.String getSimpleName()>
<java.io.File: boolean mkdirs()>
<org.torproject.android.service.TorService: void runPrivoxyShellCmd()>
<org.torproject.android.Orbot: void onActivityResult(int,int,android.content.Intent)>
<org.torproject.android.wizard.LotsaText: void <init>()>
<java.lang.Thread: void start()>
<org.torproject.android.service.TorService: java.util.ArrayList access$402(org.torproject.android.service.TorService,java.util.ArrayList)>
<java.util.Locale: java.lang.String getLanguage()>
<org.torproject.android.wizard.Permissions$5: void <init>(org.torproject.android.wizard.Permissions)>
<android.app.Notification$Builder: android.app.Notification$Builder setSound(android.net.Uri,int)>
<android.app.Activity: android.app.ActionBar getActionBar()>
<android.support.v7.app.ActionBarImplBase: android.content.Context getThemedContext()>
<android.widget.ImageView: void onRtlPropertiesChanged(int)>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.res.Configuration: void <clinit>()>
<android.support.v7.app.ActionBarImplICS: int getDisplayOptions()>
<android.app.Notification$Builder: android.app.Notification$Builder setWhen(long)>
<android.support.v4.app.FragmentManagerImpl: void noteStateNotSaved()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>
<android.os.RemoteCallbackList: void kill()>
<org.sufficientlysecure.rootcommands.util.RootAccessDeniedException: void <init>(java.lang.String)>
<android.support.v4.app.FragmentManagerImpl$1: void run()>
<android.widget.TextView: void onDetachedFromWindow()>
<org.torproject.android.wizard.ChooseLocaleWizardActivity: void onCreate(android.os.Bundle)>
<org.torproject.android.wizard.TipsAndTricks$9: void onClick(android.view.View)>
<android.view.MotionEvent: void <init>()>
<java.lang.Thread: void <init>(java.lang.Runnable)>
<android.support.v7.app.ActionBarActivityDelegateBase: void setContentView(int)>
<org.torproject.android.service.TorServiceUtils: int findProcessIdWithPS(java.lang.String)>
<android.support.v7.internal.view.ActionBarPolicy: boolean hasEmbeddedTabs()>
<android.widget.ListView: boolean canAnimate()>
<android.support.v4.app.NotificationCompatJellybean: void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList)>
<android.support.v7.app.ActionBarActivity: boolean superOnPrepareOptionsPanel(android.view.View,android.view.Menu)>
<android.widget.ImageView: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()>
<java.util.Arrays: void sort(java.lang.Object[])>
<android.preference.Preference: void setEnabled(boolean)>
<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>
<android.app.Notification: void <clinit>()>
<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>
<android.support.v7.internal.view.menu.BaseWrapper: void <init>(java.lang.Object)>
<org.torproject.android.wizard.ChooseLocaleWizardActivity$2: void <init>(org.torproject.android.wizard.ChooseLocaleWizardActivity)>
<android.support.v7.app.ActionBarActivityDelegate: java.lang.String getUiOptionsFromMetadata()>
<org.torproject.android.Orbot: void unbindService()>
<android.widget.TextView: void setPadding(int,int,int,int)>
<android.widget.FrameLayout: void draw(android.graphics.Canvas)>
<android.app.Notification$InboxStyle: android.app.Notification$InboxStyle addLine(java.lang.CharSequence)>
<net.freehaven.tor.control.TorControlConnection: void react()>
<net.freehaven.tor.control.TorControlError: void <init>(java.lang.String)>
<java.util.Collections: void <clinit>()>
<android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl: android.view.MenuItem setActionView(android.view.MenuItem,int)>
<java.util.ArrayList: void <init>(int)>
<java.util.AbstractCollection: boolean isEmpty()>
<org.torproject.android.wizard.ConfigureTransProxy: void stepSix()>
<org.torproject.android.wizard.Permissions: void onResume()>
<android.support.v4.app.NotificationCompat$NotificationCompatImplBase: void <init>()>
<android.support.v7.app.ActionBarImplICS: void setDisplayHomeAsUpEnabled(boolean)>
<java.util.Arrays: java.lang.String toString(java.lang.Object[])>
<android.support.v4.util.LogWriter: void <init>(java.lang.String)>
<org.torproject.android.service.TorService$2: boolean saveConfiguration()>
<android.app.Activity: void onPause()>
<android.support.v4.view.MenuItemCompat: void <clinit>()>
<android.os.Handler: boolean hasMessages(int)>
<android.support.v7.app.ActionBarActivityDelegateJB: void <init>(android.support.v7.app.ActionBarActivity)>
<android.widget.TextView: int computeVerticalScrollExtent()>
<android.view.inputmethod.EditorInfo: void <clinit>()>
<android.support.v7.app.ActionBarActivityDelegateBase: void onConfigurationChanged(android.content.res.Configuration)>
<android.support.v4.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBarActivityDelegate createDelegate(android.support.v7.app.ActionBarActivity)>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<android.support.v4.app.FragmentActivity: void onDestroy()>
<org.torproject.android.wizard.TipsAndTricks$1: void onClick(android.view.View)>
<org.torproject.android.wizard.TipsAndTricks$1: void <init>(org.torproject.android.wizard.TipsAndTricks)>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,int,float,int,float)>
<android.widget.LinearLayout: int getBaseline()>
<org.torproject.android.service.TorResourceInstaller: boolean streamToFile(java.io.InputStream,java.io.File,boolean,boolean)>
<org.torproject.android.wizard.TipsAndTricks$4: void onClick(android.view.View)>
<android.widget.TextView: int getLeftPaddingOffset()>
<android.widget.CheckBox: void <init>(android.content.Context)>
<org.torproject.android.wizard.LotsaText$2: void onClick(android.view.View)>
<java.io.OutputStreamWriter: void flush()>
<org.torproject.android.wizard.Permissions: void stepFourRoot()>
<java.lang.StringBuffer: void <init>()>
<android.widget.TextView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<org.torproject.android.Orbot: int access$900(org.torproject.android.Orbot)>
<android.widget.SlidingDrawer: void onLayout(boolean,int,int,int,int)>
<java.io.PrintWriter: void println(java.lang.String)>
<android.app.Activity: void setContentView(int)>
<java.lang.String: int indexOf(java.lang.String)>
<org.torproject.android.wizard.Permissions$2: void onClick(android.view.View)>
<android.support.v7.app.ActionBarActivityDelegateBase: void ensureSubDecor()>
<net.freehaven.tor.control.TorControlConnection: java.util.Map getInfo(java.util.Collection)>
<android.app.Notification$BigPictureStyle: android.app.Notification$BigPictureStyle setBigContentTitle(java.lang.CharSequence)>
<android.support.v7.app.ActionBarActivityDelegateHC: android.support.v7.app.ActionBar createSupportActionBar()>
<android.support.v4.app.NotificationCompatJellybean: void addAction(int,java.lang.CharSequence,android.app.PendingIntent)>
<android.support.v7.app.ActionBarImplJB: void setHomeButtonEnabled(boolean)>
<org.torproject.android.service.TorService: void killTorProcess()>
<android.widget.TextView: int[] onCreateDrawableState(int)>
<android.support.v7.app.ActionBarActivity: void onConfigurationChanged(android.content.res.Configuration)>
<android.widget.ListView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.support.v4.app.NotificationCompat: android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000()>
<android.content.ContextWrapper: android.content.Context getBaseContext()>
<org.torproject.android.wizard.LotsaText: void onStart()>
<org.torproject.android.wizard.ChooseLocaleWizardActivity: void onResume()>
<android.widget.ListView: android.widget.ListAdapter getAdapter()>
<android.app.Activity: void finish()>
<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>
<android.graphics.Rect: void <init>()>
<java.lang.Thread: void run()>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setOngoing(boolean)>
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.widget.FrameLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<org.torproject.android.service.TorResourceInstaller: boolean installGeoIP()>
<android.support.v4.app.FragmentActivity: void onNewIntent(android.content.Intent)>
<android.support.v4.app.FragmentActivity: java.lang.String viewToString(android.view.View)>
<android.support.v4.app.FragmentManagerImpl: void dispatchDestroy()>
<org.torproject.android.settings.TorifiedApp: void setTorified(boolean)>
<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBar getSupportActionBar()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>
<android.content.ContextWrapper: boolean stopService(android.content.Intent)>
<android.support.v4.app.FragmentActivity: void onPause()>
<android.support.v4.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.lang.Object[])>
<org.torproject.android.wizard.ConfigureTransProxy: void onStart()>
<android.support.v7.app.ActionBar: void <init>()>
<android.os.Handler: void removeCallbacks(java.lang.Runnable)>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<android.support.v4.app.FragmentActivity: void doReallyStop(boolean)>
<org.sufficientlysecure.rootcommands.util.Utils: java.lang.Process runWithEnv(java.lang.String,java.util.ArrayList,java.lang.String)>
<android.support.v7.internal.view.menu.BaseMenuWrapper: void <init>(java.lang.Object)>
<android.widget.FrameLayout: void onSizeChanged(int,int,int,int)>
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.support.v4.app.FragmentManagerImpl: void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment)>
<java.lang.Exception: void <init>()>
<android.os.Binder: void finalize()>
<org.torproject.android.wizard.Permissions$1: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)>
<android.app.Notification$Builder: android.app.Notification$Builder setContent(android.widget.RemoteViews)>
<android.view.inputmethod.EditorInfo: void <init>()>
<android.support.v4.app.NotificationCompat$Builder: android.app.Notification getNotification()>
<net.freehaven.tor.control.TorControlConnection: void authenticate(byte[])>
<android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich: android.app.Notification build(android.support.v4.app.NotificationCompat$Builder)>
<android.os.RemoteCallbackList: int beginBroadcast()>
<org.torproject.android.wizard.ConfigureTransProxy: void onActivityResult(int,int,android.content.Intent)>
<android.widget.ListView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<org.torproject.android.Orbot$3: void onClick(android.content.DialogInterface,int)>
<org.torproject.android.service.TorService: void addEventHandler()>
<java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<android.widget.RadioGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>
<android.widget.LinearLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.torproject.android.Orbot: void doExit()>
<android.support.v4.app.NotificationCompat$Builder: void setFlag(int,boolean)>
<android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl: android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)>
<org.torproject.android.Orbot: void enableHiddenServicePort(int)>
<android.support.v7.internal.view.menu.MenuBuilder: void removeMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter)>
<android.support.v7.app.ActionBarActivityDelegateICS: boolean onCreatePanelMenu(int,android.view.Menu)>
<org.torproject.android.OnBootReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.widget.TextView: void onVisibilityChanged(android.view.View,int)>
<org.torproject.android.service.TorTransProxy: java.lang.String findSystemIPTables()>
<android.app.Activity: android.content.Intent getIntent()>
<android.support.v7.internal.view.menu.MenuBuilder: void clear()>
<android.content.IntentFilter: void <init>(java.lang.String)>
<android.support.v7.internal.view.SupportMenuInflater$MenuState: void addItem()>
<org.torproject.android.service.TorService: boolean disableTransparentProxy()>
<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl: android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)>
<java.net.Socket: void <init>(java.lang.String,int)>
<android.app.Service: boolean onUnbind(android.content.Intent)>
<java.lang.RuntimeException: void <init>()>
<android.widget.ListView: void onFinishInflate()>
<android.support.v4.app.FragmentManagerImpl: void moveToState(int,int,int,boolean)>
<org.torproject.android.wizard.LotsaText: void access$000(org.torproject.android.wizard.LotsaText)>
<org.torproject.android.service.TorService$2: boolean updateConfiguration(java.lang.String,java.lang.String,boolean)>
<android.content.ContextWrapper: void <init>(android.content.Context)>
<android.widget.ImageView: void onMeasure(int,int)>
<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>
<android.widget.LinearLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<android.support.v7.app.ActionBarActivityDelegateBase$1: void run()>
<android.support.v7.app.ActionBarActivityDelegateBase: void onStop()>
<android.support.v7.app.ActionBarActivity: boolean superOnPreparePanel(int,android.view.View,android.view.Menu)>
<android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)>
<org.torproject.android.service.TorService: void newDescriptors(java.util.List)>
<org.sufficientlysecure.rootcommands.Shell: org.sufficientlysecure.rootcommands.Shell startRootShell()>
<java.lang.IllegalStateException: void <init>(java.lang.String)>
<java.io.File: long length()>
<android.support.v7.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>
<org.torproject.android.service.TorService: boolean onUnbind(android.content.Intent)>
<android.content.Intent: android.content.Intent setFlags(int)>
<java.lang.String: int indexOf(int)>
<java.util.LinkedList: java.lang.Object removeFirst()>
<android.support.v4.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)>
<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>
<java.lang.StringBuilder: void <init>()>
<android.widget.ImageView: void drawableStateChanged()>
<java.io.InputStreamReader: void <init>(java.io.InputStream)>
<android.app.Service: void onLowMemory()>
<org.torproject.android.service.TorService: void sendCallbackLogMessage(java.lang.String)>
<android.widget.TextView: void cancelLongPress()>
<org.sufficientlysecure.rootcommands.util.Utils: java.lang.String getSuPath()>
<android.widget.TextView: float getLeftFadingEdgeStrength()>
<java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<android.view.GestureDetector$SimpleOnGestureListener: void <init>()>
<android.content.Context: void <init>()>
<android.widget.CheckBox: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.RadioGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<org.torproject.android.wizard.TipsAndTricks$4: void <init>(org.torproject.android.wizard.TipsAndTricks)>
<org.torproject.android.service.TorService: void unrecognized(java.lang.String,java.lang.String)>
<org.torproject.android.service.TorService: java.lang.String writeDNSFile()>
<android.content.Context: java.lang.String getString(int)>
<java.io.PrintWriter: void close()>
<android.app.Activity: void <init>()>
<android.support.v4.view.MenuItemCompatHoneycomb: android.view.MenuItem setActionView(android.view.MenuItem,int)>
<org.torproject.android.wizard.ChooseLocaleWizardActivity$1: void <init>(org.torproject.android.wizard.ChooseLocaleWizardActivity)>
<android.widget.SlidingDrawer: void dispatchDraw(android.graphics.Canvas)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet,int)>
<org.sufficientlysecure.rootcommands.command.Command: void waitForFinish()>
<android.widget.RadioGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.torproject.android.settings.AppManager$1: void <init>(org.torproject.android.settings.AppManager)>
<java.util.LinkedList: void addLast(java.lang.Object)>
<java.util.Arrays: java.util.List asList(java.lang.Object[])>
<java.io.PrintWriter: void println(java.lang.Object)>
<org.torproject.android.service.TorTransProxy: int setTransparentProxyingByApp(android.content.Context,java.util.ArrayList)>
<android.widget.TextView: int getBaseline()>
<android.support.v7.internal.view.menu.MenuBuilder: void startDispatchingItemsChanged()>
<android.widget.TextView: void sendAccessibilityEvent(int)>
<java.io.IOException: void <init>()>
<android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float)>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>
<android.widget.TextView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<org.torproject.android.Orbot: boolean access$000(org.torproject.android.Orbot)>
<android.widget.ListView: void <init>(android.content.Context)>
<android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)>
<org.torproject.android.Orbot: void startWizard()>
<android.widget.TextView: boolean hasOverlappingRendering()>
<android.widget.ImageView: void jumpDrawablesToCurrentState()>
<java.lang.Object: void finalize()>
<java.util.concurrent.CopyOnWriteArrayList: void <init>()>
<org.torproject.android.service.TorService: void orConnStatus(java.lang.String,java.lang.String)>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.app.Activity: void onStop()>
<org.torproject.android.service.TorService: void run()>
<org.sufficientlysecure.rootcommands.command.Command: void terminate(java.lang.String)>
<android.support.v7.app.ActionBarImplBase: void setDisplayOptions(int,int)>
<android.support.v4.view.MenuItemCompatHoneycomb: android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)>
<android.graphics.Paint: void <init>(int)>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<android.widget.ListView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.SlidingDrawer: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<java.util.ArrayList: void <init>()>
<net.freehaven.tor.control.TorControlError: void <init>(int,java.lang.String)>
<android.support.v7.app.ActionBarActivityDelegateBase: android.support.v7.app.ActionBar createSupportActionBar()>
<android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl: void setShowAsAction(android.view.MenuItem,int)>
<android.support.v7.app.ActionBarActivityDelegateBase: android.support.v7.internal.view.menu.MenuBuilder createMenu()>
<org.torproject.android.Orbot$2: boolean onLongClick(android.view.View)>
<net.freehaven.tor.control.TorControlConnection$ControlParseThread: void stopListening()>
<android.widget.ListView: void setRemoteViewsAdapter(android.content.Intent)>
<net.freehaven.tor.control.Bytes: java.util.List splitStr(java.util.List,java.lang.String)>
<android.support.v4.app.NoSaveStateFrameLayout: android.view.ViewGroup wrap(android.view.View)>
<org.torproject.android.service.TorService: android.os.IBinder onBind(android.content.Intent)>
<org.torproject.android.wizard.Permissions$4: void <init>(org.torproject.android.wizard.Permissions)>
<org.torproject.android.ImageProgressView: void <init>(android.content.Context)>
<org.torproject.android.Orbot: void onPause()>
<android.widget.ImageView: void setVisibility(int)>
<android.widget.ListView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<org.torproject.android.service.TorService: void onLowMemory()>
<java.lang.Integer: java.lang.Integer valueOf(int)>
<android.support.v7.app.ActionBarActivity: void supportInvalidateOptionsMenu()>
<android.widget.TextView: void onRestoreInstanceState(android.os.Parcelable)>
<java.lang.RuntimeException: void <init>(java.lang.Throwable)>
<org.torproject.android.service.TorService: boolean findExistingProc()>
<org.torproject.android.wizard.TipsAndTricks$6: void <init>(org.torproject.android.wizard.TipsAndTricks)>
<android.app.Activity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int,int)>
<android.support.v4.app.NotificationCompatIceCreamSandwich: android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)>
<android.app.Notification$BigTextStyle: void <init>(android.app.Notification$Builder)>
<android.app.Activity: void invalidateOptionsMenu()>
<android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)>
<android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<android.os.Handler: android.os.Message obtainMessage(int)>
<org.torproject.android.Orbot: void <init>()>
<android.support.v4.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)>
<android.widget.SlidingDrawer: void onMeasure(int,int)>
<org.sufficientlysecure.rootcommands.Shell: org.sufficientlysecure.rootcommands.Shell startRootShell(java.util.ArrayList,java.lang.String)>
<android.support.v7.internal.view.SupportMenuInflater: void <init>(android.content.Context)>
<org.torproject.android.Orbot$4: void onClick(android.content.DialogInterface,int)>
<org.torproject.android.service.TorService: void initTor()>
<android.support.v4.app.FragmentActivity: void supportInvalidateOptionsMenu()>
<net.freehaven.tor.control.TorControlConnection: java.util.ArrayList readReply()>
<android.util.SparseArray: void clear()>
<java.io.PrintWriter: void print(boolean)>
<org.torproject.android.wizard.LotsaText: void stepOne()>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<org.torproject.android.service.TorService: void showToolbarNotification(java.lang.String,int,int,int,boolean)>
<android.support.v4.view.MenuItemCompatHoneycomb: void setShowAsAction(android.view.MenuItem,int)>
<org.sufficientlysecure.rootcommands.Toolbox: boolean isRootAccessGiven()>
<android.view.KeyEvent: void <clinit>()>
<android.support.v4.app.NavUtils$NavUtilsImplJB: java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo)>
<android.content.ContextWrapper: boolean isRestricted()>
<org.torproject.android.wizard.Permissions$3: void onClick(android.view.View)>
<android.support.v7.internal.view.SupportMenuInflater: java.lang.Class[] access$500()>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<android.util.Log: int w(java.lang.String,java.lang.String)>
<android.view.accessibility.AccessibilityRecord: void <init>()>
<org.torproject.android.service.TorService: java.lang.String formatCount(long)>
<org.torproject.android.service.TorTransProxy: int setTransparentProxyingAll(android.content.Context)>
<org.torproject.android.ImageProgressView: void init()>
<org.torproject.android.wizard.ConfigureTransProxy: void onSaveInstanceState(android.os.Bundle)>
<android.view.View: int getWidth()>
<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>
<java.lang.Integer: java.lang.String toHexString(int)>
<net.freehaven.tor.control.TorControlConnection: void <init>(java.io.InputStream,java.io.OutputStream)>
<org.torproject.android.wizard.TipsAndTricks$2: void <init>(org.torproject.android.wizard.TipsAndTricks)>
<android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
<org.torproject.android.service.TorService: void setTorProfile(int)>
<java.io.DataInputStream: int read(byte[])>
<android.view.View: void <init>(android.content.Context)>
<org.torproject.android.Orbot: boolean onTouch(android.view.View,android.view.MotionEvent)>
<android.os.Handler: void removeMessages(int)>
<org.torproject.android.Orbot: boolean access$002(org.torproject.android.Orbot,boolean)>
<android.support.v7.app.ActionBarActivityDelegateICS: void onConfigurationChanged(android.content.res.Configuration)>
<org.sufficientlysecure.rootcommands.Shell: org.sufficientlysecure.rootcommands.Shell startShell()>
<org.torproject.android.wizard.ConfigureTransProxy$2: void <init>(org.torproject.android.wizard.ConfigureTransProxy)>
<java.io.FilterInputStream: void close()>
<android.app.Activity: android.view.Window getWindow()>
<org.torproject.android.service.TorService$1: void run()>
<android.support.v7.app.ActionBarImplICS: void setHomeButtonEnabled(boolean)>
<android.support.v4.app.NotificationCompatHoneycomb: android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)>
<android.support.v7.app.ActionBarActivityDelegateBase: void <init>(android.support.v7.app.ActionBarActivity)>
<android.content.Intent: void <clinit>()>
<org.torproject.android.settings.AppManager: java.util.ArrayList getApps(android.content.Context,android.content.SharedPreferences)>
<android.widget.TextView: void onDraw(android.graphics.Canvas)>
<android.support.v4.app.NotificationCompatJellybean: android.app.Notification build()>
<org.torproject.android.wizard.ChooseLocaleWizardActivity: void access$000(org.torproject.android.wizard.ChooseLocaleWizardActivity,int)>
<android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>
<java.lang.System: java.lang.String getenv(java.lang.String)>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<android.widget.TextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.torproject.android.service.TorService: void streamStatus(java.lang.String,java.lang.String,java.lang.String)>
<java.lang.System: long currentTimeMillis()>
<java.lang.Thread: void <init>()>
<android.support.v7.app.ActionBarImplBase: void setShowHideAnimationEnabled(boolean)>
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.io.PrintWriter: void print(java.lang.String)>
<android.widget.FrameLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.torproject.android.Orbot: java.lang.String formatCount(long)>
<android.app.Activity: void setResult(int,android.content.Intent)>
<java.io.FileInputStream: void <init>(java.io.File)>
<android.support.v7.app.ActionBarActivityDelegate: void onCreate(android.os.Bundle)>
<android.view.DragEvent: void <init>()>
<android.util.Log: int e(java.lang.String,java.lang.String)>
<android.support.v4.app.NavUtils: void <clinit>()>
<android.support.v7.app.ActionBarImplBase: int getNavigationMode()>
<org.torproject.android.wizard.LotsaText: void onActivityResult(int,int,android.content.Intent)>
<android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb: android.app.Notification build(android.support.v4.app.NotificationCompat$Builder)>
<java.io.File: void <init>(java.io.File,java.lang.String)>
<org.torproject.android.service.TorService: void circuitStatus(java.lang.String,java.lang.String,java.lang.String)>
<android.app.Activity: void setTitle(java.lang.CharSequence)>
<org.torproject.android.Orbot$MyGestureDetector: void <init>(org.torproject.android.Orbot)>
<java.lang.String: void <clinit>()>
<android.support.v7.app.ActionBarImplICS: void <init>(android.app.Activity,android.support.v7.app.ActionBar$Callback,boolean)>
<android.support.v7.internal.view.SupportMenuInflater: android.content.Context access$100(android.support.v7.internal.view.SupportMenuInflater)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<org.torproject.android.Orbot$1: void <init>(org.torproject.android.Orbot)>
<android.view.ViewGroup$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<android.widget.TextView: boolean onDragEvent(android.view.DragEvent)>
<java.lang.Thread: void setDaemon(boolean)>
<org.torproject.android.wizard.ConfigureTransProxy: void onResume()>
<android.widget.BaseAdapter: void <init>()>
<android.support.v4.app.FragmentManagerImpl: void saveFragmentViewState(android.support.v4.app.Fragment)>
<android.support.v4.app.NoSaveStateFrameLayout: void <init>(android.content.Context)>
<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>
<android.app.Activity: boolean onCreatePanelMenu(int,android.view.Menu)>
<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.graphics.Region: void finalize()>
<org.torproject.android.service.TorService: void logException(java.lang.String,java.lang.Exception)>
<android.widget.RadioGroup: android.widget.RadioGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<android.app.Activity: void onResume()>
<org.torproject.android.wizard.TipsAndTricks: void access$000(org.torproject.android.wizard.TipsAndTricks)>
<android.view.DragEvent: void <clinit>()>
<android.support.v7.app.ActionBarImplBase: void <init>(android.support.v7.app.ActionBarActivity,android.support.v7.app.ActionBar$Callback)>
<android.support.v7.internal.view.SupportMenuInflater$MenuState: char getShortcut(java.lang.String)>
<android.widget.FrameLayout: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<org.torproject.android.service.ITorService$Stub: void <init>()>
<org.sufficientlysecure.rootcommands.util.Log: void v(java.lang.String,java.lang.String)>
<android.app.Notification$Builder: android.app.Notification$Builder setOnlyAlertOnce(boolean)>
<android.view.animation.AccelerateInterpolator: void <init>(float)>
<org.torproject.android.Orbot: void onConfigurationChanged(android.content.res.Configuration)>
<android.widget.FrameLayout: android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.support.v7.app.ActionBarActivityDelegateBase: boolean onCreatePanelMenu(int,android.view.Menu)>
<android.widget.TextView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.torproject.android.ImageProgressView: void onMeasure(int,int)>
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<org.torproject.android.Orbot: void showAbout()>
<android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)>
<android.support.v7.app.ActionBarActivityDelegateBase: void setMenu(android.support.v7.internal.view.menu.MenuBuilder)>
<android.widget.TextView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<org.torproject.android.Orbot: void handleIntents()>
<org.torproject.android.Orbot: boolean onCreateOptionsMenu(android.view.Menu)>
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.support.v7.app.ActionBarImplBase: void setTitle(java.lang.CharSequence)>
<android.support.v4.app.FragmentManager: void <init>()>
<android.widget.TextView: boolean onCheckIsTextEditor()>
<org.torproject.android.Orbot: android.content.SharedPreferences getPrefs()>
<org.torproject.android.settings.AppManager$2: void <init>(org.torproject.android.settings.AppManager,android.content.Context,int,int,java.util.List,android.view.LayoutInflater)>
<android.app.Activity: android.view.View findViewById(int)>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence)>
<android.support.v7.internal.view.ActionBarPolicy: boolean enableHomeButtonByDefault()>
<org.torproject.android.service.TorService: boolean access$000(org.torproject.android.service.TorService)>
<android.support.v7.app.ActionBarActivity: void setContentView(int)>
<android.widget.TextView: android.os.Parcelable onSaveInstanceState()>
<android.widget.TextView: int getRightPaddingOffset()>
<java.util.ArrayList: void clear()>
<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle bigText(java.lang.CharSequence)>
<android.os.Build$VERSION: void <clinit>()>
<android.support.v7.internal.view.SupportMenuInflater$InflatedOnMenuItemClickListener: void <init>(java.lang.Object,java.lang.String)>
<android.support.v7.internal.view.menu.MenuWrapperICS: void <init>(android.view.Menu)>
<org.sufficientlysecure.rootcommands.command.SimpleCommand: void <init>(java.lang.String[])>
<android.widget.ListView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<java.util.ArrayList: java.lang.Object get(int)>
<android.app.Notification$Builder: android.app.Notification$Builder setUsesChronometer(boolean)>
<android.widget.ListView: void layoutChildren()>
<android.support.v4.app.FragmentManagerImpl: void <init>()>
<android.widget.Button: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.ImageView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<net.freehaven.tor.control.TorControlConnection: net.freehaven.tor.control.TorControlConnection getConnection(java.net.Socket)>
<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>
<android.view.accessibility.AccessibilityNodeInfo: void <init>()>
<android.widget.LinearLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<org.torproject.android.wizard.Permissions$4: void onClick(android.view.View)>
<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>
<org.torproject.android.service.TorService: void <init>()>
<net.freehaven.tor.control.TorControlConnection: void writeEscaped(java.lang.String)>
<android.widget.TextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
<android.text.method.BaseMovementMethod: void <init>()>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence)>
<java.lang.Exception: void <init>(java.lang.String)>
<java.lang.Object: boolean equals(java.lang.Object)>
<android.support.v4.app.FragmentActivity$2: android.view.View findViewById(int)>
<org.torproject.android.Orbot$MyGestureDetector: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<android.support.v4.app.NotificationCompatJellybean: void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,int,java.lang.CharSequence)>
<java.io.IOException: void <init>(java.lang.String)>
<org.torproject.android.wizard.Permissions$5: void onClick(android.view.View)>
<org.torproject.android.wizard.ConfigureTransProxy$4: void onCheckedChanged(android.widget.RadioGroup,int)>
<org.sufficientlysecure.rootcommands.command.Command: void <init>(java.lang.String[])>
<android.widget.ImageView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.os.RemoteCallbackList: void <init>()>
<android.support.v7.internal.view.ActionBarPolicy: void <init>(android.content.Context)>
<android.app.Service: void <init>()>
<android.widget.ListView: android.widget.Adapter getAdapter()>
<org.torproject.android.service.TorService: void stopTor()>
<org.torproject.android.Orbot$5: void onClick(android.content.DialogInterface,int)>
<android.util.TypedValue: void <init>()>
<android.support.v4.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)>
<android.view.MenuInflater: void inflate(int,android.view.Menu)>
<android.widget.TextView: float getRightFadingEdgeStrength()>
<org.torproject.android.service.TorService: boolean processSettingsImpl()>
<android.util.Log: int w(java.lang.String,java.lang.Throwable)>
<android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>
<android.widget.FrameLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<android.support.v4.app.FragmentActivity: void onStop()>
<java.io.File: java.lang.String getName()>
<android.support.v4.app.NotificationCompatJellybean: void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence)>
<org.torproject.android.service.TorService: void updateSettings()>
<org.torproject.android.Orbot$5: void <init>(org.torproject.android.Orbot,java.lang.String)>
<net.freehaven.tor.control.Bytes: java.lang.String hex(byte[])>
<android.widget.ListView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.support.v7.app.ActionBarActivity: boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)>
<android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)>
<android.support.v7.internal.view.SupportMenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu)>
<android.support.v7.internal.view.menu.MenuWrapperFactory: android.view.Menu createMenuWrapper(android.view.Menu)>
<android.widget.TextView: void jumpDrawablesToCurrentState()>
<android.graphics.Paint: void finalize()>
<android.graphics.Paint: void setStrokeWidth(float)>
<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>
<android.support.v4.app.NavUtils$NavUtilsImplJB: void <init>()>
<android.support.v7.app.ActionBarActivityDelegateJB: android.support.v7.app.ActionBar createSupportActionBar()>
<org.torproject.android.wizard.ConfigureTransProxy: void setupUI()>
<java.io.File: java.io.File[] listFiles()>
<android.view.MotionEvent: void finalize()>
<org.torproject.android.wizard.ChooseLocaleWizardActivity: void stepSix()>
<android.support.v4.app.FragmentManagerImpl: void dispatchPause()>
<org.torproject.android.OnBootReceiver: void <init>()>
<org.sufficientlysecure.rootcommands.RootCommands: boolean rootAccessGiven()>
<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>
<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>
<android.widget.ImageView: void onDetachedFromWindow()>
<android.support.v7.internal.view.menu.MenuBuilder: void addMenuPresenter(android.support.v7.internal.view.menu.MenuPresenter)>
<android.os.Binder: void attachInterface(android.os.IInterface,java.lang.String)>
<org.torproject.android.settings.AppManager: void loadApps(android.content.SharedPreferences)>
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
<org.sufficientlysecure.rootcommands.command.SimpleCommand: int getExitCode()>
<android.support.v7.internal.view.SupportMenuInflater$MenuState: void readGroup(android.util.AttributeSet)>
<org.sufficientlysecure.rootcommands.command.SimpleCommand: java.lang.String getOutput()>
<java.lang.Throwable: void printStackTrace()>
<android.app.Activity: void startActivity(android.content.Intent)>
<org.torproject.android.wizard.TipsAndTricks$5: void <init>(org.torproject.android.wizard.TipsAndTricks)>
<android.widget.ListView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<android.support.v7.app.ActionBarActivity: android.view.MenuInflater getMenuInflater()>
<org.torproject.android.service.TorService: net.freehaven.tor.control.TorControlConnection access$200(org.torproject.android.service.TorService)>
<android.widget.FrameLayout: void drawableStateChanged()>
<net.freehaven.tor.control.TorControlConnection: void <init>(java.io.Reader,java.io.Writer)>
<android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>
<android.support.v7.internal.view.SupportMenuInflater: java.lang.Class[] access$200()>
<android.widget.FrameLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<org.torproject.android.wizard.TipsAndTricks: void onResume()>
<android.support.v7.app.ActionBarImplBase: void init(android.support.v7.app.ActionBarActivity)>
<org.torproject.android.service.ITorServiceCallback$Stub: void <init>()>
<android.app.Notification: void <init>()>
<android.view.animation.Animation: void setDuration(long)>
<java.io.DataOutputStream: void flush()>
<android.support.v7.app.ActionBarActivity: void onCreate(android.os.Bundle)>
<android.widget.RadioButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<java.lang.Integer: int parseInt(java.lang.String)>
<android.view.animation.AlphaAnimation: void <init>(float,float)>
<android.support.v4.app.FragmentActivity: void onAttachFragment(android.support.v4.app.Fragment)>
<org.torproject.android.service.TorTransProxy: void logMessage(java.lang.String)>
<org.torproject.android.wizard.TipsAndTricks$2: void onClick(android.view.View)>
<org.sufficientlysecure.rootcommands.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
<org.torproject.android.wizard.ChooseLocaleWizardActivity: void setLocalePref(int)>
<android.preference.PreferenceActivity: void <init>()>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<android.widget.RadioButton: void <init>(android.content.Context)>
<android.content.Intent: android.content.Intent setAction(java.lang.String)>
<android.widget.TextView: void onScreenStateChanged(int)>
<android.widget.TextView: void onWindowFocusChanged(boolean)>
<org.torproject.android.wizard.ChooseLocaleWizardActivity$2: void onClick(android.view.View)>
<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>
<android.graphics.Paint: void setAntiAlias(boolean)>
<android.widget.ListView: boolean isOpaque()>
<android.widget.ListView: void setCacheColorHint(int)>
<org.torproject.android.wizard.Permissions: void onCreate(android.os.Bundle)>
<android.util.AndroidRuntimeException: void <init>(java.lang.String)>
<android.support.v7.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
<android.app.Notification$Builder: android.app.Notification getNotification()>
<android.widget.TextView: void onMeasure(int,int)>
<android.support.v7.app.ActionBarActivityDelegateICS: android.view.Window$Callback createWindowCallbackWrapper(android.view.Window$Callback)>
<android.app.Notification$Builder: void <init>(android.content.Context)>
<android.support.v7.internal.view.menu.MenuBuilder: void dispatchPresenterUpdate(boolean)>
<android.app.Notification$Builder: android.app.Notification$Builder setPriority(int)>
<android.support.v7.internal.view.SupportMenuInflater$MenuState: void resetGroup()>
<android.view.InputEvent: void <clinit>()>
<org.torproject.android.wizard.LotsaText: void access$100(org.torproject.android.wizard.LotsaText)>
<java.lang.System: int identityHashCode(java.lang.Object)>
<java.util.ArrayList: boolean isEmpty()>
<android.support.v4.view.MenuItemCompat: android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)>
<android.support.v4.app.FragmentManagerImpl: boolean dispatchPrepareOptionsMenu(android.view.Menu)>
<org.torproject.android.wizard.ConfigureTransProxy: void <init>()>
<java.io.File: boolean isDirectory()>
<org.torproject.android.service.TorService: void onRebind(android.content.Intent)>
<android.support.v7.app.ActionBarActivity: void onStop()>
<android.support.v7.app.ActionBarActivityDelegateHC: void onCreate(android.os.Bundle)>
<android.widget.TextView: void onLayout(boolean,int,int,int,int)>
<org.torproject.android.Orbot$6: void <init>(org.torproject.android.Orbot)>
<android.support.v4.app.NavUtils$NavUtilsImplBase: void <init>()>
<android.widget.TextView: void setEnabled(boolean)>
<org.torproject.android.Orbot: void startTor()>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
<android.app.Notification$InboxStyle: android.app.Notification$InboxStyle setBigContentTitle(java.lang.CharSequence)>
<org.torproject.android.wizard.TipsAndTricks: void onStart()>
<android.os.Bundle: void <clinit>()>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.ListView: void setSelection(int)>
<android.widget.SlidingDrawer: void <init>(android.content.Context,android.util.AttributeSet)>
<android.support.v4.app.FragmentManagerImpl: void dispatchResume()>
<org.torproject.android.Orbot: void doLayout()>
<java.lang.StringBuilder: java.lang.String toString()>
<android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<android.app.Activity: void startActivityForResult(android.content.Intent,int)>
<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>
<java.lang.Class: java.lang.String getName()>
<org.torproject.android.settings.AppManager$1: void onClick(android.view.View)>
<android.widget.ImageView: int[] onCreateDrawableState(int)>
<android.view.animation.AccelerateInterpolator: void <init>()>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<org.torproject.android.service.TorService: void runTorShellCmd()>
<org.torproject.android.settings.TorifiedApp: void setProcname(java.lang.String)>
<org.torproject.android.service.TorTransProxy: int executeCommand(org.sufficientlysecure.rootcommands.Shell,java.lang.String)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<org.torproject.android.wizard.TipsAndTricks$6: void onClick(android.view.View)>
<java.lang.Object: void wait()>
<android.widget.CheckBox: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.widget.ListView: void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo)>
<org.torproject.android.Orbot$2: void <init>(org.torproject.android.Orbot)>
<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.app.AlertDialog$Builder: android.app.AlertDialog show()>
<android.view.animation.Animation: void setFillAfter(boolean)>
<android.support.v4.app.FragmentManagerImpl: void dispatchConfigurationChanged(android.content.res.Configuration)>
<android.view.InflateException: void <init>(java.lang.String,java.lang.Throwable)>
<android.widget.TextView: int computeVerticalScrollRange()>
<android.content.Context: java.lang.String getString(int,java.lang.Object[])>
<android.support.v7.app.ActionBarImplBase: void setHomeButtonEnabled(boolean)>
<android.widget.RadioGroup: void <init>(android.content.Context)>
<android.support.v7.internal.view.menu.MenuBuilder: void <init>(android.content.Context)>
<java.lang.String: java.lang.String[] split(java.lang.String)>
<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<android.support.v7.internal.view.SupportMenuInflater: void <clinit>()>
<android.app.Notification$Builder: android.app.Notification$Builder setVibrate(long[])>
<android.support.v7.internal.view.SupportMenuInflater$MenuState: void readItem(android.util.AttributeSet)>
<org.torproject.android.wizard.TipsAndTricks$8: void onClick(android.view.View)>
<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>
<org.sufficientlysecure.rootcommands.util.Utils: void <clinit>()>
<org.torproject.android.Orbot: void bindService()>
<android.support.v7.app.ActionBarActivityDelegateICS: android.support.v7.app.ActionBar createSupportActionBar()>
<org.torproject.android.wizard.ConfigureTransProxy$4: void <init>(org.torproject.android.wizard.ConfigureTransProxy)>
<android.support.v7.app.ActionBarActivityDelegate: void <init>(android.support.v7.app.ActionBarActivity)>
<java.lang.String: int length()>
<android.support.v7.internal.view.SupportMenuInflater$MenuState: void setItem(android.view.MenuItem)>
<android.widget.TextView: void invalidateDrawable(android.graphics.drawable.Drawable)>
<java.lang.System: java.util.Map getenv()>
<android.app.Notification$Builder: android.app.Notification$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)>
<org.torproject.android.wizard.ChooseLocaleWizardActivity: void onRestoreInstanceState(android.os.Bundle)>
<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()>
<net.freehaven.tor.control.TorControlConnection$ReplyLine: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<android.widget.RadioGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<android.view.animation.Animation: void <init>()>
<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>
<android.support.v4.app.FragmentActivity: void invalidateSupportFragment(java.lang.String)>
<android.support.v4.app.FragmentActivity: void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View)>
<java.lang.RuntimeException: void <init>(java.lang.String)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<android.app.Activity: void onStart()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>
<org.torproject.android.settings.SettingsPreferences: void <init>()>
<android.app.Service: void onDestroy()>
<android.os.Handler: boolean sendEmptyMessage(int)>
<org.torproject.android.settings.TorifiedApp: void <init>()>
<net.freehaven.tor.control.TorControlConnection: void setConf(java.util.Collection)>
<org.torproject.android.service.TorResourceInstaller: boolean installResources()>
<android.widget.ImageView: void onDraw(android.graphics.Canvas)>
<android.util.AndroidException: void <init>()>
<android.support.v7.app.ActionBarImplICS: android.content.Context getThemedContext()>
<android.widget.LinearLayout: void <init>(android.content.Context)>
<org.torproject.android.wizard.TipsAndTricks$3: void onClick(android.view.View)>
<android.app.Activity: android.content.ComponentName getComponentName()>
<android.widget.RadioGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<org.torproject.android.service.TorService: java.lang.String parseNodeName(java.lang.String)>
<android.os.Handler: boolean sendMessage(android.os.Message)>
<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>
<java.util.StringTokenizer: boolean hasMoreTokens()>
<android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.graphics.RectF: void <clinit>()>
<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<org.torproject.android.Orbot: void access$300(org.torproject.android.Orbot,int)>
<org.torproject.android.wizard.Permissions$1: void <init>(org.torproject.android.wizard.Permissions)>
<org.sufficientlysecure.rootcommands.command.Command: void addedToShell(org.sufficientlysecure.rootcommands.Shell,int)>
<org.torproject.android.service.TorTransProxy: java.lang.String getIpTablesPath(android.content.Context)>
<android.view.animation.Animation: void finalize()>
<android.widget.TextView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<org.torproject.android.settings.TorifiedApp: void setUid(int)>
<android.widget.TextView: boolean onTrackballEvent(android.view.MotionEvent)>
<android.support.v7.app.ActionBarActivityDelegateBase: void supportInvalidateOptionsMenu()>
<android.support.v4.app.NavUtilsJB: java.lang.String getParentActivityName(android.content.pm.ActivityInfo)>
<net.freehaven.tor.control.TorControlConnection: java.lang.String quote(java.lang.String)>
<java.lang.Object: java.lang.Class getClass()>
<android.support.v7.internal.view.SupportMenuInflater: java.lang.Object[] access$600(android.support.v7.internal.view.SupportMenuInflater)>
<android.support.v7.internal.view.menu.MenuBuilder: void <clinit>()>
<android.widget.FrameLayout: boolean shouldDelayChildPressedState()>
<android.support.v7.app.ActionBarActivityDelegateICS: void setContentView(int)>
<java.lang.StringBuffer: void <init>(java.lang.String)>
<org.torproject.android.service.TorService: void <clinit>()>
<android.support.v7.internal.view.SupportMenuInflater$MenuState: boolean hasAddedItem()>
<android.app.PendingIntent: void <clinit>()>
<android.support.v4.app.FragmentManagerImpl: void dispatchReallyStop()>
<java.util.Locale: java.util.Locale getDefault()>
<android.widget.TextView: boolean performAccessibilityAction(int,android.os.Bundle)>
<android.widget.TextView: void computeScroll()>
<android.widget.TextView: boolean isPaddingOffsetRequired()>
<android.app.Notification$BigPictureStyle: android.app.Notification$BigPictureStyle setSummaryText(java.lang.CharSequence)>
<android.widget.FrameLayout: void onMeasure(int,int)>
<android.app.Notification$BigPictureStyle: android.app.Notification$BigPictureStyle bigLargeIcon(android.graphics.Bitmap)>
<java.lang.StringBuilder: void <init>(int)>
<android.app.Notification$BigPictureStyle: void <init>(android.app.Notification$Builder)>
<android.support.v4.app.FragmentActivity: void onResume()>
<org.torproject.android.service.TorTransProxy: int clearTransparentProxyingAll(android.content.Context)>
<org.torproject.android.Orbot: void stopTor()>
<android.app.Notification$InboxStyle: void <init>(android.app.Notification$Builder)>
<java.lang.Runtime: java.lang.Runtime getRuntime()>
<org.torproject.android.Orbot: void openBrowser(java.lang.String)>
<android.widget.RadioButton: void toggle()>
<org.torproject.android.settings.TorifiedApp: void setUsername(java.lang.String)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.util.List)>
<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>
<android.app.Activity: void onCreate(android.os.Bundle)>
<android.support.v7.app.ActionBarActivityDelegate: boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)>
<java.util.ArrayList: boolean contains(java.lang.Object)>
<org.torproject.android.wizard.LotsaText: void onCreate(android.os.Bundle)>
<android.app.Activity: void onActivityResult(int,int,android.content.Intent)>
<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>
<android.view.ViewGroup$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<java.io.OutputStream: void write(byte[])>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<android.support.v4.app.FragmentManagerImpl: void startPendingDeferredFragments()>
<org.torproject.android.settings.SettingsPreferences: void onResume()>
<android.util.Log: int d(java.lang.String,java.lang.String)>
<org.sufficientlysecure.rootcommands.Shell: void <init>(java.lang.String,java.util.ArrayList,java.lang.String)>
<org.torproject.android.service.TorService: java.util.ArrayList access$400(org.torproject.android.service.TorService)>
<android.support.v7.app.ActionBarActivity: boolean onCreatePanelMenu(int,android.view.Menu)>
<java.io.File: boolean exists()>
<org.torproject.android.service.TorService: void clearNotifications()>
<android.support.v4.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)>
<net.freehaven.tor.control.TorControlSyntaxError: void <init>(java.lang.String)>
<android.os.Binder: void <init>()>
<org.torproject.android.service.TorService: boolean enableBinExec(java.io.File)>
<org.sufficientlysecure.rootcommands.util.BrokenBusyboxException: void <init>()>
<android.view.accessibility.AccessibilityEvent: void <init>()>
<android.app.Service: void onRebind(android.content.Intent)>
<android.widget.TextView: void onRtlPropertiesChanged(int)>
<android.widget.TextView: void <init>(android.content.Context)>
<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>
<android.widget.FrameLayout: android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams()>
<android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl: android.view.MenuItem setActionView(android.view.MenuItem,int)>
<java.util.StringTokenizer: int countTokens()>
<java.lang.Object: void <init>()>
<org.torproject.android.Orbot$1: boolean onTouch(android.view.View,android.view.MotionEvent)>
<org.torproject.android.settings.SettingsPreferences: void init()>
<org.torproject.android.wizard.ChooseLocaleWizardActivity$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.app.Activity: void onNewIntent(android.content.Intent)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<java.io.File: boolean canExecute()>
<org.torproject.android.wizard.TipsAndTricks$7: void onClick(android.view.View)>
<org.torproject.android.Orbot: void onNewIntent(android.content.Intent)>
<org.torproject.android.service.TorService: java.util.ArrayList access$500(org.torproject.android.service.TorService)>
<android.app.Service: void stopForeground(boolean)>
<java.io.PrintWriter: void print(int)>
<net.freehaven.tor.control.TorControlConnection: java.lang.String getInfo(java.lang.String)>
<org.torproject.android.Orbot: void doTorCheck()>
<org.torproject.android.service.TorService$2: void <init>(org.torproject.android.service.TorService)>
<java.io.DataInputStream: void <init>(java.io.InputStream)>
<android.support.v7.internal.view.SupportMenuInflater$MenuState: void <init>(android.support.v7.internal.view.SupportMenuInflater,android.view.Menu)>
<org.torproject.android.wizard.TipsAndTricks: void <init>()>
<android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<java.io.InputStream: int read(byte[])>
<java.util.StringTokenizer: java.lang.String nextToken()>
<org.torproject.android.service.TorTransProxy: void <init>(org.torproject.android.service.TorService,java.io.File)>
<org.sufficientlysecure.rootcommands.command.Command: void processAfterExecution(int)>
<net.freehaven.tor.control.TorControlConnection: void resetConf(java.util.Collection)>
<android.support.v7.app.ActionBarImplJB: void <init>(android.app.Activity,android.support.v7.app.ActionBar$Callback)>
<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle setBigContentTitle(java.lang.CharSequence)>
<android.widget.ImageView: void onAttachedToWindow()>
<android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>
<android.support.v4.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>
<org.torproject.android.wizard.ChooseLocaleWizardActivity: void setupUI()>
<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>
<android.support.v4.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<java.util.Locale: void setDefault(java.util.Locale)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>
<android.app.Application: void onConfigurationChanged(android.content.res.Configuration)>
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>
<android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl: void <init>()>
<android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)>
<android.app.Activity: boolean requestWindowFeature(int)>
<org.torproject.android.Orbot: void spinOrbot(float)>
<org.torproject.android.wizard.TipsAndTricks$9: void <init>(org.torproject.android.wizard.TipsAndTricks)>
<org.torproject.android.Orbot: java.lang.String formatTotal(long)>
<org.torproject.android.service.TorService: void sendCallbackStatusMessage(java.lang.String)>
<android.support.v7.internal.view.menu.MenuBuilder: void setShortcutsVisibleInner(boolean)>
<android.widget.TextView: boolean onKeyUp(int,android.view.KeyEvent)>
<java.lang.String: byte[] getBytes()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.support.v7.app.ActionBarImplJB: int getDisplayOptions()>
<android.widget.TextView: boolean onTouchEvent(android.view.MotionEvent)>
<org.torproject.android.settings.AppManager: void onResume()>
<org.torproject.android.wizard.LotsaText: void onResume()>
<android.view.ContextThemeWrapper: void <init>()>
<org.torproject.android.service.TorService$1: void <init>(org.torproject.android.service.TorService)>
<org.torproject.android.wizard.LotsaText$1: void <init>(org.torproject.android.wizard.LotsaText)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIcon(int)>
<java.io.FileOutputStream: void close()>
<android.app.Notification$Builder: android.app.Notification$Builder setNumber(int)>
<java.lang.String: java.lang.String substring(int)>
<android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean: void <init>()>
<android.app.Notification$Builder: android.app.Notification$Builder setSubText(java.lang.CharSequence)>
<java.io.Writer: void <init>()>
<android.support.v7.internal.view.SupportMenuInflater$MenuState: android.view.SubMenu addSubMenuItem()>
<org.torproject.android.Orbot: void appendLogTextAndScroll(java.lang.String)>
<android.support.v4.app.FragmentActivity$1: void <init>(android.support.v4.app.FragmentActivity)>
<org.torproject.android.service.TorService: void logMessage(java.lang.String)>
<org.torproject.android.Orbot$4: void <init>(org.torproject.android.Orbot)>
<android.support.v7.internal.view.SupportMenuInflater$MenuState: android.support.v4.view.ActionProvider access$000(android.support.v7.internal.view.SupportMenuInflater$MenuState)>
<java.io.PrintWriter: void println(boolean)>
<android.support.v7.app.ActionBarImplBase: void setDisplayHomeAsUpEnabled(boolean)>
<org.sufficientlysecure.rootcommands.command.Command: void setExitCode(int)>
<org.torproject.android.settings.TorifiedApp: void setName(java.lang.String)>
<android.widget.TextView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<org.sufficientlysecure.rootcommands.Shell$2: void <init>(org.sufficientlysecure.rootcommands.Shell)>
<android.support.v4.app.NotificationCompatJellybean: void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean)>
<android.view.KeyEvent: void <init>(int,int)>
<org.torproject.android.wizard.ChooseLocaleWizardActivity: void onSaveInstanceState(android.os.Bundle)>
<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle setSummaryText(java.lang.CharSequence)>
<org.torproject.android.settings.AppManager: void <init>()>
<net.freehaven.tor.control.TorControlConnection: java.lang.Thread launchThread(boolean)>
<android.widget.ListView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.torproject.android.service.TorTransProxy: int enableTetheringRules(android.content.Context)>
<android.app.Activity: void <clinit>()>
<android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)>
<org.torproject.android.settings.SettingsPreferences: boolean onPreferenceClick(android.preference.Preference)>
<android.widget.FrameLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<android.support.v4.view.MenuItemCompat: void setShowAsAction(android.view.MenuItem,int)>
<android.os.Handler: android.os.Looper getLooper()>
<android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>
<org.sufficientlysecure.rootcommands.Shell: org.sufficientlysecure.rootcommands.command.Command add(org.sufficientlysecure.rootcommands.command.Command)>
<org.torproject.android.Orbot: void onResume()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>
<org.torproject.android.Orbot: boolean appInstalledOrNot(java.lang.String)>
<java.io.PrintWriter: void <init>(java.io.Writer)>
<java.lang.AbstractStringBuilder: void <init>()>
<org.torproject.android.wizard.ConfigureTransProxy$2: void onClick(android.view.View)>
<android.support.v7.internal.view.SupportMenuInflater: void inflate(int,android.view.Menu)>
<android.graphics.Paint: void setColor(int)>
<android.support.v4.app.FragmentActivity$2: void <init>(android.support.v4.app.FragmentActivity)>
<net.freehaven.tor.control.TorControlConnection$Waiter: void <init>()>
<android.util.SparseArray: int size()>
<org.torproject.android.service.TorServiceUtils: int findProcessId(java.lang.String)>
<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<java.net.Socket: java.io.InputStream getInputStream()>
<net.freehaven.tor.control.TorControlConnection$Waiter: java.util.List getResponse()>
<android.support.v4.app.NotificationCompat$NotificationCompatImplBase: android.app.Notification build(android.support.v4.app.NotificationCompat$Builder)>
<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<android.app.Activity: void setResult(int)>
<java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<android.preference.PreferenceActivity: void addPreferencesFromResource(int)>
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>
<net.freehaven.tor.control.TorControlConnection: void setEvents(java.util.List)>
<org.torproject.android.wizard.TipsAndTricks$3: void <init>(org.torproject.android.wizard.TipsAndTricks)>
<net.freehaven.tor.control.TorControlConnection$ControlParseThread: void <init>(net.freehaven.tor.control.TorControlConnection)>
<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>
<android.support.v4.app.FragmentManagerImpl: void performPendingDeferredStart(android.support.v4.app.Fragment)>
<org.torproject.android.wizard.LotsaText: void stepTwo()>
<android.widget.TextView: void onScrollChanged(int,int,int,int)>
<org.torproject.android.wizard.TipsAndTricks: void onActivityResult(int,int,android.content.Intent)>
<org.torproject.android.settings.AppManager: void onCreate(android.os.Bundle)>
<org.torproject.android.service.TorResourceInstaller: void <init>(android.content.Context,java.io.File)>
<org.torproject.android.Orbot$8: void <init>(org.torproject.android.Orbot)>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>
<org.torproject.android.settings.TorifiedApp: void setUsesInternet(boolean)>
<android.os.Bundle: void <init>()>
<net.freehaven.tor.control.TorControlConnection: void handleEvent(java.util.ArrayList)>
<java.io.File: java.lang.String getAbsolutePath()>
<org.torproject.android.wizard.TipsAndTricks$5: void onClick(android.view.View)>
<android.support.v7.app.ActionBarActivityDelegateBase: android.support.v7.internal.view.menu.MenuBuilder access$000(android.support.v7.app.ActionBarActivityDelegateBase)>
<android.widget.TextView: void drawableStateChanged()>
<org.torproject.android.wizard.ConfigureTransProxy$1: void <init>(org.torproject.android.wizard.ConfigureTransProxy)>
<android.widget.RadioButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.torproject.android.service.TorTransProxy: int fixTransproxyLeak(android.content.Context)>
<java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<android.graphics.Region: void <init>()>
<java.lang.Enum: void <init>(java.lang.String,int)>
<android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)>
<org.torproject.android.OrbotApp: void <init>()>
<android.widget.TextView: boolean onKeyPreIme(int,android.view.KeyEvent)>
<net.freehaven.tor.control.TorControlConnection: void setEventHandler(net.freehaven.tor.control.EventHandler)>
<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<android.widget.TextView: void setPaddingRelative(int,int,int,int)>
<android.view.View: int getHeight()>
<android.support.v7.app.ActionBarImplICS: void <init>(android.app.Activity,android.support.v7.app.ActionBar$Callback)>
<android.os.Handler: void <init>()>
<android.widget.TextView: int computeHorizontalScrollRange()>
<android.widget.FrameLayout: boolean gatherTransparentRegion(android.graphics.Region)>
<android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
<net.freehaven.tor.control.TorControlConnection: void shutdownTor(java.lang.String)>
<org.torproject.android.service.TorService$3: void <init>(org.torproject.android.service.TorService)>
<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>
<java.util.ArrayList: java.util.Iterator iterator()>
<java.io.Writer: void write(java.lang.String)>
<android.app.Notification$Builder: android.app.Notification build()>
<org.torproject.android.settings.TorifiedApp: int getUid()>
<android.net.Uri: void <clinit>()>
<org.torproject.android.service.TorService: void bandwidthUsed(long,long)>
<android.graphics.Paint$Style: void <clinit>()>
<java.lang.Integer: void <clinit>()>
<org.sufficientlysecure.rootcommands.command.Command: void commandFinished(int)>
<android.support.v7.internal.view.SupportMenuInflater: java.lang.Object access$400(android.support.v7.internal.view.SupportMenuInflater)>
<org.torproject.android.Orbot: boolean onLongClick(android.view.View)>
<org.torproject.android.service.TorService: void sendCallbackStatusMessage(long,long,long,long)>
<org.torproject.android.Orbot: void onStop()>
<android.app.Activity: boolean isFinishing()>
<android.support.v7.app.ActionBarActivityDelegateHC: void <init>(android.support.v7.app.ActionBarActivity)>
<java.lang.StringBuilder: java.lang.StringBuilder append(float)>
<android.view.MenuInflater: void <init>(android.content.Context)>
<android.widget.TextView: int getBottomPaddingOffset()>
<android.widget.ListView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<org.torproject.android.wizard.Permissions$6: void <init>(org.torproject.android.wizard.Permissions)>
<org.torproject.android.service.TorService: android.content.SharedPreferences getSharedPrefs(android.content.Context)>
<java.lang.Object: void wait(long)>
<android.widget.ImageView: void <init>(android.content.Context)>
<net.freehaven.tor.control.TorControlConnection: void <init>(java.net.Socket)>
<java.lang.String: java.lang.String trim()>
<java.util.ArrayList: int size()>
<android.app.Application: void <init>()>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
<org.torproject.android.Orbot: void showAlert(java.lang.String,java.lang.String,boolean)>
<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>
<org.torproject.android.wizard.Permissions: void onStart()>
<android.support.v7.app.ActionBarActivityDelegateICS$WindowCallbackWrapper: void <init>(android.support.v7.app.ActionBarActivityDelegateICS,android.view.Window$Callback)>
<android.widget.TextView: boolean performLongClick()>
<org.torproject.android.Orbot: void access$200(org.torproject.android.Orbot,java.lang.String)>
<android.view.accessibility.AccessibilityEvent: void <clinit>()>
<android.widget.ListView: void setAdapter(android.widget.Adapter)>
<android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>
<android.support.v7.app.ActionBarActivityDelegateICS: void supportInvalidateOptionsMenu()>
<android.preference.PreferenceActivity: void onStop()>
<android.content.Intent: void <init>()>
<android.support.v4.app.ActivityCompatHoneycomb: void invalidateOptionsMenu(android.app.Activity)>
<android.support.v4.app.NotificationCompat: void <clinit>()>
<org.torproject.android.Orbot: void updateStatus(java.lang.String)>
<org.torproject.android.settings.TorifiedApp: void setEnabled(boolean)>
<android.support.v7.app.ActionBarImplJB: void setDisplayHomeAsUpEnabled(boolean)>
<android.support.v4.app.NotificationCompat$Builder: void <init>(android.content.Context)>
<java.io.FileWriter: void <init>(java.io.File)>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence)>
<android.support.v7.app.ActionBarActivity: boolean superOnCreatePanelMenu(int,android.view.Menu)>
<android.widget.ListView: void smoothScrollToPosition(int)>
<org.sufficientlysecure.rootcommands.Toolbox: void <init>(org.sufficientlysecure.rootcommands.Shell)>
<java.lang.StringBuffer: java.lang.String toString()>
<java.util.ArrayList: java.lang.Object[] toArray()>
<org.sufficientlysecure.rootcommands.Shell: void destroyShellProcess()>
<java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>
<android.widget.FrameLayout: void jumpDrawablesToCurrentState()>
<android.widget.ImageView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.animation.Animation: void setRepeatCount(int)>
<org.torproject.android.wizard.ConfigureTransProxy$1: void onClick(android.view.View)>
<org.sufficientlysecure.rootcommands.command.Command: void terminated(java.lang.String)>
<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
<java.io.File: void <init>(java.lang.String)>
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>
<org.torproject.android.Orbot: void setLocale()>
<android.support.v7.appcompat.R$styleable: void <clinit>()>
<android.widget.LinearLayout: boolean shouldDelayChildPressedState()>
<android.support.v4.view.MenuItemCompat: android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider)>
<org.torproject.android.Orbot$3: void <init>(org.torproject.android.Orbot)>
<android.widget.RadioGroup: void onFinishInflate()>
<android.app.ListActivity: void <init>()>
<android.support.v7.app.ActionBarActivityDelegateICS: void onCreate(android.os.Bundle)>
<org.torproject.android.wizard.Permissions: void access$000(org.torproject.android.wizard.Permissions)>
<android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb: void <init>()>
<java.io.BufferedReader: void <init>(java.io.Reader)>
<android.app.Notification$Builder: android.app.Notification$Builder setAutoCancel(boolean)>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.support.v7.internal.view.SupportMenuInflater$MenuState: java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])>
<org.sufficientlysecure.rootcommands.Shell$1: void <init>(org.sufficientlysecure.rootcommands.Shell)>
<android.widget.LinearLayout: void onDraw(android.graphics.Canvas)>
<org.sufficientlysecure.rootcommands.command.SimpleCommand: void afterExecution(int,int)>
<org.torproject.android.wizard.TipsAndTricks: void onCreate(android.os.Bundle)>
<org.torproject.android.Orbot: void onCreate(android.os.Bundle)>
<android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)>
<android.support.v7.app.ActionBarActivityDelegateBase: boolean access$202(android.support.v7.app.ActionBarActivityDelegateBase,boolean)>
<java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>
<android.support.v4.app.FragmentActivity: void onReallyStop()>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setLights(int,int,int)>
<org.sufficientlysecure.rootcommands.Shell: void <clinit>()>
<android.widget.RadioGroup: android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()>
<android.text.method.ScrollingMovementMethod: void <init>()>
<org.torproject.android.Orbot: android.widget.TextView access$100(org.torproject.android.Orbot)>
<org.torproject.android.Orbot: void onDestroy()>
<android.support.v4.app.FragmentActivity: void onResumeFragments()>
<org.torproject.android.Orbot$6: void onClick(android.content.DialogInterface,int)>
<android.support.v4.app.FragmentActivity: boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)>
<android.widget.ListView: void dispatchDraw(android.graphics.Canvas)>
<android.content.res.Configuration: void <init>()>
<android.graphics.Paint$Style: void <init>(java.lang.String,int)>
<org.torproject.android.service.TorService: int onStartCommand(android.content.Intent,int,int)>
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
<org.sufficientlysecure.rootcommands.Shell: org.sufficientlysecure.rootcommands.Shell startShell(java.util.ArrayList,java.lang.String)>
<net.freehaven.tor.control.Bytes: void <clinit>()>
<org.torproject.android.Orbot$9: void <init>(org.torproject.android.Orbot)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>
<android.app.Notification$Builder: android.app.Notification$Builder setLargeIcon(android.graphics.Bitmap)>
<android.widget.SlidingDrawer: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>
<org.torproject.android.service.TorService: void message(java.lang.String,java.lang.String)>
<java.util.concurrent.CancellationException: void <init>(java.lang.String)>
<android.widget.TextView: void onStartTemporaryDetach()>
<dummyMainClass: void dummyMainMethod()>
<org.torproject.android.wizard.Permissions$2: void <init>(org.torproject.android.wizard.Permissions)>
<android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
<android.app.Notification$Builder: android.app.Notification$Builder setDefaults(int)>
<android.support.v7.internal.view.menu.MenuBuilder: void setCallback(android.support.v7.internal.view.menu.MenuBuilder$Callback)>
<org.torproject.android.wizard.ConfigureTransProxy$3: void <init>(org.torproject.android.wizard.ConfigureTransProxy)>
<java.util.Locale: void <clinit>()>
<android.support.v7.app.ActionBarActivityDelegateICS: void <init>(android.support.v7.app.ActionBarActivity)>
<android.view.View$MeasureSpec: int getSize(int)>
<org.torproject.android.service.TorService: int initControlConnection()>
<org.torproject.android.service.TorService: void logNotice(java.lang.String)>
<java.io.DataOutputStream: void <init>(java.io.OutputStream)>
<android.support.v7.app.ActionBarActivity: void superSetContentView(int)>
<android.view.animation.DecelerateInterpolator: void <init>(float)>
<android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl: void <init>()>
<org.torproject.android.wizard.ConfigureTransProxy: void onRestoreInstanceState(android.os.Bundle)>
<android.view.View: void setMeasuredDimension(int,int)>
<org.torproject.android.wizard.ConfigureTransProxy$3: void onClick(android.view.View)>
<java.lang.String: boolean equals(java.lang.Object)>
<android.app.Notification$Builder: android.app.Notification$Builder setContentInfo(java.lang.CharSequence)>
<android.util.SparseArray: void <init>()>
<net.freehaven.tor.control.TorControlConnection: void checkThread()>
<org.sufficientlysecure.rootcommands.Shell: void close()>
<android.support.v7.app.ActionBarActivityDelegateICS: void onStop()>
<android.support.v4.app.FragmentManagerImpl: void dispatchStop()>
<android.support.v7.app.ActionBarActivityDelegate: android.view.MenuInflater getMenuInflater()>
<android.view.accessibility.AccessibilityNodeInfo: void <clinit>()>
<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<org.torproject.android.wizard.TipsAndTricks: void showWizardFinal()>
<android.support.v7.internal.view.menu.MenuBuilder: boolean collapseItemActionView(android.support.v7.internal.view.menu.MenuItemImpl)>
<org.torproject.android.ImageProgressView: void onDraw(android.graphics.Canvas)>
<org.torproject.android.wizard.Permissions: void stepFour()>
<org.torproject.android.wizard.Permissions$6: void onClick(android.view.View)>
<android.content.pm.PackageManager$NameNotFoundException: void <init>()>
<android.util.Log: int i(java.lang.String,java.lang.String)>
<org.torproject.android.service.TorService: void onDestroy()>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<android.view.ViewGroup: void removeView(android.view.View)>
<android.view.InflateException: void <init>(java.lang.String)>
<android.widget.FrameLayout: void <init>(android.content.Context)>
<android.support.v4.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>
<java.lang.System: void <clinit>()>
<android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean: android.app.Notification build(android.support.v4.app.NotificationCompat$Builder)>
<org.sufficientlysecure.rootcommands.RootCommands: void <clinit>()>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setSmallIcon(int)>
<java.util.Collections: void sort(java.util.List)>
<org.torproject.android.wizard.ChooseLocaleWizardActivity: void <init>()>
<org.torproject.android.wizard.ConfigureTransProxy: int access$108(org.torproject.android.wizard.ConfigureTransProxy)>
<android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
<org.torproject.android.OrbotApp: void onCreate()>
<android.support.v4.app.FragmentManagerImpl: void <clinit>()>
<android.widget.ListView: void onSizeChanged(int,int,int,int)>
<org.torproject.android.settings.TorifiedApp: java.lang.String getUsername()>
<org.torproject.android.service.TorService: void initBinaries()>
<org.torproject.android.wizard.Permissions: void <init>()>
<android.os.RemoteCallbackList: void finishBroadcast()>
<android.support.v7.app.ActionBarImplBase: void setHasEmbeddedTabs(boolean)>
<android.content.BroadcastReceiver: void <init>()>
<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
<android.support.v7.app.ActionBarActivityDelegate: android.content.Context getActionBarThemedContext()>
<android.widget.TextView: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>
<android.widget.RadioGroup: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.content.IntentFilter: void <clinit>()>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener)>
<org.torproject.android.wizard.TipsAndTricks$8: void <init>(org.torproject.android.wizard.TipsAndTricks)>
<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<net.freehaven.tor.control.TorControlConnection: java.util.List sendAndWaitForResponse(java.lang.String,java.lang.String)>
<android.support.v7.app.ActionBarActivityDelegateBase: void access$100(android.support.v7.app.ActionBarActivityDelegateBase,android.support.v7.internal.view.menu.MenuBuilder)>
<android.support.v4.app.FragmentManagerImpl$1: void <init>(android.support.v4.app.FragmentManagerImpl)>
<android.app.Notification$Builder: android.app.Notification$Builder setProgress(int,int,boolean)>
<org.torproject.android.settings.SettingsPreferences: void onStop()>
<android.support.v7.app.ActionBarActivityDelegateBase: void <clinit>()>
<android.os.Looper: android.os.Looper myLooper()>
<android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl: void <init>()>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<java.lang.Throwable: java.lang.String getMessage()>
<org.torproject.android.Orbot: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.widget.TextView: boolean onKeyShortcut(int,android.view.KeyEvent)>
<android.widget.ImageView: int getBaseline()>
<org.torproject.android.settings.AppManager: void onStop()>
<android.widget.ImageView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.support.v7.app.ActionBarImplJB: android.content.Context getThemedContext()>
<android.widget.TextView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.torproject.android.wizard.TipsAndTricks$7: void <init>(org.torproject.android.wizard.TipsAndTricks)>
<android.app.Notification$InboxStyle: android.app.Notification$InboxStyle setSummaryText(java.lang.CharSequence)>
<android.support.v7.internal.view.SupportMenuInflater: java.lang.Object[] access$300(android.support.v7.internal.view.SupportMenuInflater)>
<android.view.MotionEvent: void <clinit>()>
<android.support.v7.app.ActionBarImplHC: void <init>(android.support.v7.app.ActionBarActivity,android.support.v7.app.ActionBar$Callback)>
<android.app.Notification$BigPictureStyle: android.app.Notification$BigPictureStyle bigPicture(android.graphics.Bitmap)>
<android.widget.Button: void <init>(android.content.Context)>
<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>
<org.torproject.android.wizard.Permissions$3: void <init>(org.torproject.android.wizard.Permissions)>
<org.sufficientlysecure.rootcommands.util.Log: void d(java.lang.String,java.lang.String)>
<android.widget.SlidingDrawer: boolean onTouchEvent(android.view.MotionEvent)>
<android.support.v7.app.ActionBarActivity: void onSupportContentChanged()>
<android.support.v7.internal.view.SupportMenuInflater$InflatedOnMenuItemClickListener: void <clinit>()>
<android.widget.TextView: void onAttachedToWindow()>
<org.torproject.android.wizard.ConfigureTransProxy: void onCreate(android.os.Bundle)>
<android.widget.ListView: void onMeasure(int,int)>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)>
<org.torproject.android.wizard.LotsaText$3: void <init>(org.torproject.android.wizard.LotsaText)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<java.util.HashMap: void <init>()>
<java.util.Locale: void <init>(java.lang.String)>
<android.widget.TextView: int getTopPaddingOffset()>
<org.torproject.android.service.TorResourceInstaller: void deleteDirectory(java.io.File)>
<org.torproject.android.wizard.ChooseLocaleWizardActivity: void onStart()>
<java.io.File: boolean delete()>
<android.widget.TextView: void setSelected(boolean)>
<android.app.Notification$Style: void <init>()>
<android.graphics.RectF: void <init>(float,float,float,float)>
<org.torproject.android.OrbotApp: void onConfigurationChanged(android.content.res.Configuration)>
<org.torproject.android.Orbot$7: void <init>(org.torproject.android.Orbot)>
<android.widget.LinearLayout: void onMeasure(int,int)>
<android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl: void setShowAsAction(android.view.MenuItem,int)>
<org.torproject.android.wizard.Permissions: void onActivityResult(int,int,android.content.Intent)>
<android.support.v4.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<java.io.BufferedReader: java.lang.String readLine()>
<android.support.v4.view.MenuItemCompat: android.view.MenuItem setActionView(android.view.MenuItem,int)>
<org.torproject.android.wizard.LotsaText$2: void <init>(org.torproject.android.wizard.LotsaText)>
<android.support.v4.app.FragmentActivity: void <init>()>
<java.util.zip.ZipInputStream: void close()>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>
<android.widget.SlidingDrawer: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.View: void <clinit>()>
<android.view.animation.AnimationSet: void <init>(boolean)>
<org.torproject.android.wizard.LotsaText$1: void onClick(android.view.View)>
<android.support.v7.app.ActionBarActivityDelegateBase$1: void <init>(android.support.v7.app.ActionBarActivityDelegateBase)>
<android.graphics.Rect: void <clinit>()>
<android.app.Activity: android.app.Application getApplication()>
<org.torproject.android.wizard.TipsAndTricks: void stepFive()>
<android.app.Application: void onCreate()>
<java.io.File: void <clinit>()>
<org.torproject.android.wizard.LotsaText$3: void onClick(android.view.View)>
<android.support.v7.app.ActionBarImplBase: void onConfigurationChanged(android.content.res.Configuration)>
<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>
<java.util.LinkedList: void <init>()>
<android.app.Notification$Builder: android.app.Notification$Builder setOngoing(boolean)>
<org.torproject.android.wizard.ConfigureTransProxy: android.content.Context access$000(org.torproject.android.wizard.ConfigureTransProxy)>
<org.torproject.android.Orbot: void showSettings()>
<org.torproject.android.Rotate3dAnimation: void <init>(float,float,float,float,float,boolean)>
<android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich: void <init>()>
<java.lang.Thread: void sleep(long)>
<org.torproject.android.service.TorService: boolean enableTransparentProxy(boolean,boolean)>
<android.widget.ImageView: boolean hasOverlappingRendering()>
<org.torproject.android.Orbot: void startIntent(java.lang.String,java.lang.String,android.net.Uri)>
<android.graphics.Canvas: void <init>()>
<org.torproject.android.settings.SettingsPreferences: void onCreate(android.os.Bundle)>
<android.content.Intent: java.lang.String getAction()>
<android.util.Log: int v(java.lang.String,java.lang.String)>
<android.app.Activity: void onDestroy()>
<android.widget.SlidingDrawer: void onFinishInflate()>
