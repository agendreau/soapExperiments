<org.npr.android.util.Tracker$ActivityMeasurement: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<java.util.LinkedList: java.lang.Object remove(int)>
<org.npr.android.news.PlaybackService: void cleanup()>
<java.io.BufferedReader: java.lang.String readLine()>
<org.npr.android.util.Tracker$StationListMeasurement: void <clinit>()>
<java.lang.Thread: void run()>
<org.npr.api.Story$StoryBuilder: org.npr.api.Story$StoryBuilder withTeaser(java.lang.String)>
<org.npr.android.news.Main$2: void run()>
<android.view.MotionEvent: void finalize()>
<android.widget.RadioGroup: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.view.MotionEvent: void <clinit>()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: int access$900(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread)>
<android.widget.ImageView: void onRtlPropertiesChanged(int)>
<org.npr.android.news.StationListActivity$1: void <init>(org.npr.android.news.StationListActivity)>
<org.npr.android.util.NodeUtils: void <clinit>()>
<java.io.BufferedReader: void <init>(java.io.Reader)>
<android.widget.ProgressBar: void onSizeChanged(int,int,int,int)>
<android.app.PendingIntent: void <clinit>()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: int access$902(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,int)>
<android.widget.LinearLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.npr.android.util.M3uParser: java.util.List getUrls()>
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<android.content.Intent: void <init>(java.lang.String)>
<java.lang.Integer: java.lang.String toString(int)>
<org.apache.http.message.AbstractHttpMessage: void <init>()>
<android.widget.TextView: void computeScroll()>
<org.npr.android.util.Tracker: void <init>(android.app.Application)>
<org.npr.api.Podcast$PodcastBuilder: org.npr.api.Podcast$PodcastBuilder withLink(java.lang.String)>
<org.npr.api.Story$StoryBuilder: org.npr.api.Story$StoryBuilder withText(org.npr.api.Story$Text)>
<org.apache.http.message.BasicHttpResponse: void <init>(org.apache.http.StatusLine)>
<java.lang.Number: void <init>()>
<org.npr.android.util.PlaylistEntry: void <init>(long,java.lang.String,java.lang.String,boolean,int,java.lang.String)>
<com.google.android.apps.analytics.PersistentEventStore: void putEvent(com.google.android.apps.analytics.Event)>
<org.npr.android.util.Tracker: java.lang.String getVersionName()>
<android.widget.Button: void <init>(android.content.Context)>
<org.npr.android.news.StationListActivity: void onLowMemory()>
<org.npr.android.news.StationSearchActivity: java.lang.String populateLocalStationParams(java.util.Map)>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<org.npr.api.Station$StationBuilder: void <init>(java.lang.String)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: int access$500(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread)>
<android.widget.DatePicker: void <init>(android.content.Context)>
<org.npr.android.news.NewsStoryActivity: android.os.Handler access$200(org.npr.android.news.NewsStoryActivity)>
<org.npr.api.IterableNodeList: void <init>(org.w3c.dom.NodeList)>
<java.lang.UnsupportedOperationException: void <init>()>
<org.npr.api.StoryGrouping$StoryGroupingFactory: void <init>(java.lang.Class,java.lang.String)>
<android.media.MediaPlayer: void prepareAsync()>
<android.widget.RadioButton: void toggle()>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<java.lang.String: java.lang.String substring(int)>
<com.google.android.apps.analytics.Event: void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int)>
<com.google.android.apps.analytics.PipelinedRequester: void maybeOpenConnection()>
<dummyMainClass: void dummyMainMethod()>
<org.npr.android.news.PlaybackService: boolean isPlaying()>
<java.io.FileOutputStream: void write(byte[],int,int)>
<org.npr.android.news.NewsListActivity: void onCreate(android.os.Bundle)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void maybeScheduleNextDispatch()>
<android.widget.RadioGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<org.npr.android.util.M3uParser: void <init>(java.io.File)>
<android.widget.TextView: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>
<org.npr.android.news.PlaybackService: void access$100(org.npr.android.news.PlaybackService)>
<org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket createSocket()>
<android.widget.TextView: boolean onTrackballEvent(android.view.MotionEvent)>
<org.npr.api.IterableNodeList: java.lang.Object next()>
<android.widget.ListView: void smoothScrollToPosition(int)>
<org.npr.android.news.SearchActivity: void <init>()>
<android.widget.RadioGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)>
<android.widget.TextView: void setPadding(int,int,int,int)>
<org.npr.android.news.PlaybackService$1: void <init>(org.npr.android.news.PlaybackService)>
<android.widget.ListView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<com.google.android.apps.analytics.NetworkRequestUtil: java.lang.String encode(java.lang.String)>
<java.util.ArrayList: void clear()>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<android.widget.ListView: void onSizeChanged(int,int,int,int)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int)>
<org.npr.android.news.NewsTopicActivity: android.os.Handler access$300(org.npr.android.news.NewsTopicActivity)>
<android.telephony.PhoneStateListener: void <init>()>
<android.widget.EditText: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)>
<org.npr.android.news.NewsTopicActivity$NewsTopicAdapter: void <init>(org.npr.android.news.NewsTopicActivity,java.util.List)>
<org.npr.android.util.Tracker$PodcastNowEvent: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.app.Activity: void startActivityForResult(android.content.Intent,int)>
<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>
<org.apache.http.impl.AbstractHttpClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)>
<android.util.Log: int i(java.lang.String,java.lang.String)>
<org.npr.api.Story$StoryBuilder: java.lang.String access$000(org.npr.api.Story$StoryBuilder)>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<android.widget.ImageView: void onAttachedToWindow()>
<org.npr.android.news.StreamProxy$MyClientConnManager: void <init>(org.npr.android.news.StreamProxy,org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>
<org.npr.android.util.Tracker$StationListMeasurement: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<org.npr.android.news.NewsListAdapter: void <init>(android.content.Context)>
<java.util.GregorianCalendar: void add(int,int)>
<org.npr.android.news.NewsTopicActivity: void onCreate(android.os.Bundle)>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
<android.widget.TextView: void onStartTemporaryDetach()>
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.lang.StringBuilder: int length()>
<org.npr.android.util.PlaylistProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<android.view.accessibility.AccessibilityEvent: void <clinit>()>
<org.npr.android.news.Main: java.lang.String access$702(org.npr.android.news.Main,java.lang.String)>
<org.npr.android.news.ListenView: void listen(org.npr.android.util.PlaylistEntry)>
<org.npr.api.Podcast$PodcastFactory: org.npr.api.Podcast downloadPodcast(java.lang.String)>
<android.view.View: void <clinit>()>
<android.content.Intent: android.content.Intent addFlags(int)>
<org.npr.android.news.NewsTopicActivity$2: void <init>(org.npr.android.news.NewsTopicActivity)>
<android.widget.TextView: boolean onKeyPreIme(int,android.view.KeyEvent)>
<android.view.accessibility.AccessibilityEvent: void <init>()>
<org.npr.android.util.PlaylistProvider$PlaylistHelper: void <init>(android.content.Context)>
<org.npr.api.Story$Text: void <init>(java.util.List)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()>
<android.widget.ProgressBar: void setVisibility(int)>
<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>
<java.io.InputStreamReader: void <init>(java.io.InputStream)>
<org.npr.android.news.SearchActivity: java.lang.CharSequence getMainTitle()>
<org.npr.android.news.StationListActivity: org.npr.api.Station getStationFromCache(java.lang.String)>
<java.util.HashMap: void clear()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: void <init>(android.os.Handler,java.lang.String,java.lang.String,com.google.android.apps.analytics.NetworkDispatcher$1)>
<org.npr.api.StoryGrouping$StoryGroupingFactory: org.npr.api.StoryGrouping createStoryGrouping(java.lang.Class,org.w3c.dom.Node)>
<org.npr.api.Station$StationFactory: java.util.List parseStations(org.w3c.dom.Node)>
<org.npr.android.util.Tracker: void access$200(org.npr.android.util.Tracker,org.npr.android.util.Tracker$LinkEvent)>
<java.lang.Double: void <clinit>()>
<org.npr.android.news.StationListActivity: org.npr.android.news.StationListAdapter access$000(org.npr.android.news.StationListActivity)>
<java.util.LinkedList: boolean add(java.lang.Object)>
<org.npr.api.Story$StoryBuilder: org.npr.api.Story$StoryBuilder withTextWithHtml(org.npr.api.Story$TextWithHtml)>
<android.widget.ProgressBar: void onRestoreInstanceState(android.os.Parcelable)>
<com.google.android.apps.analytics.PipelinedRequester: void installCallbacks(com.google.android.apps.analytics.PipelinedRequester$Callbacks)>
<org.npr.android.news.NewsTopicActivity$3: void <clinit>()>
<java.lang.Throwable: java.lang.String getMessage()>
<android.os.HandlerThread: void <init>(java.lang.String)>
<org.apache.http.impl.SocketHttpClientConnection: void close()>
<org.npr.android.news.ListenView$PlaybackCloseReceiver: void <init>(org.npr.android.news.ListenView,org.npr.android.news.ListenView$1)>
<org.npr.api.Podcast: java.util.List getItems()>
<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<android.widget.ListView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<android.widget.TextView: void <init>(android.content.Context)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker$DispatcherMessageHandler: void <init>(com.google.android.apps.analytics.GoogleAnalyticsTracker,android.os.Looper)>
<org.npr.api.Station$Podcast: void <init>(java.lang.String,java.lang.String)>
<org.apache.http.impl.client.DefaultHttpClient: void <init>()>
<android.graphics.Typeface: void <clinit>()>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<org.npr.api.Story$StoryBuilder: void <init>(java.lang.String)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context)>
<android.app.Activity: void setVolumeControlStream(int)>
<android.os.Handler: void removeCallbacks(java.lang.Runnable)>
<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks: void pipelineModeChanged(boolean)>
<com.google.android.apps.analytics.NetworkRequestUtil: java.lang.String constructPageviewRequestPath(com.google.android.apps.analytics.Event,java.lang.String)>
<org.npr.android.news.PodcastActivity: void showDialog(org.npr.api.Podcast$Item)>
<org.apache.http.impl.client.AbstractHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>
<java.lang.Thread: void interrupt()>
<org.apache.http.impl.AbstractHttpClientConnection: void flush()>
<android.os.Bundle: void <clinit>()>
<android.widget.ListView: android.widget.ListAdapter getAdapter()>
<android.widget.ImageView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<org.apache.http.impl.SocketHttpClientConnection: void <init>()>
<android.location.Location: void <clinit>()>
<android.app.Activity: void setResult(int,android.content.Intent)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.lang.Object[])>
<org.npr.android.news.NewsListActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<java.util.ArrayList: java.util.Iterator iterator()>
<android.widget.FrameLayout: void <init>(android.content.Context)>
<java.lang.Object: void <init>()>
<org.npr.android.news.StationSearchActivity: void <init>()>
<android.widget.TextView: void onScrollChanged(int,int,int,int)>
<java.util.Date: void <init>()>
<org.npr.android.news.NewsTopicActivity$TopicType: void <clinit>()>
<org.npr.android.util.Tracker$PodcastNowEvent: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>
<org.npr.android.news.StationListActivity: void <clinit>()>
<org.npr.android.news.Main: void <init>()>
<org.npr.api.StoryGrouping$StoryGroupingFactory: java.util.List parseStoryGroupings(java.lang.Class,org.w3c.dom.Node)>
<org.npr.api.Story$StoryFactory: org.npr.api.Story$Audio$Format parseFormat(org.w3c.dom.Node)>
<java.lang.AbstractStringBuilder: void <init>()>
<com.google.android.apps.analytics.PersistentEventStore: void <init>(android.content.Context)>
<android.widget.ListView: void setCacheColorHint(int)>
<android.app.Service: void stopSelf()>
<java.text.DateFormat: java.lang.String format(java.util.Date)>
<android.media.MediaPlayer: void setAudioStreamType(int)>
<android.widget.ImageView: void onDetachedFromWindow()>
<android.app.DatePickerDialog: void <init>(android.content.Context,android.app.DatePickerDialog$OnDateSetListener,int,int,int)>
<android.app.ListActivity: void <init>()>
<org.npr.api.Story$StoryBuilder: org.npr.api.Story$StoryBuilder withTitle(java.lang.String)>
<org.npr.android.news.NewsTopicActivity: java.lang.CharSequence getMainTitle()>
<java.lang.Thread: void <init>(java.lang.Runnable)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<android.widget.TextView: void onRtlPropertiesChanged(int)>
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>
<org.npr.android.util.Tracker: void <clinit>()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks: void serverError(int)>
<android.app.Dialog: void show()>
<android.os.Bundle: void <init>()>
<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>
<org.npr.android.news.PlayerActivity: void <init>()>
<org.npr.android.util.TypefaceCache: void <clinit>()>
<org.npr.android.news.NewsStoryActivity: java.lang.String getPlayableUrl(org.npr.api.Story$Audio)>
<org.npr.android.news.PlaylistActivity: void onCreate(android.os.Bundle)>
<org.npr.android.news.PlaybackService$2: void <init>(org.npr.android.news.PlaybackService)>
<org.npr.api.Story$StoryFactory: org.npr.api.Story createStory(org.w3c.dom.Node)>
<org.npr.android.news.PlaybackService: void onCreate()>
<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)>
<org.npr.android.news.NewsTopicActivity$2: void run()>
<java.util.Locale: void <clinit>()>
<android.app.Activity: void <init>()>
<java.lang.Double: void <init>(double)>
<org.npr.api.Story$StoryBuilder: org.npr.api.Story$StoryBuilder withStoryDate(java.lang.String)>
<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<org.apache.http.message.AbstractHttpMessage: void addHeader(java.lang.String,java.lang.String)>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<org.apache.http.impl.conn.SingleClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: void <init>(android.os.Handler,java.lang.String,java.lang.String)>
<com.google.android.apps.analytics.PipelinedRequester: void addRequest(org.apache.http.HttpRequest)>
<android.content.ContentValues: void put(java.lang.String,java.lang.String)>
<org.npr.android.news.StationListActivity: void <init>()>
<com.google.android.apps.analytics.NetworkDispatcher: void <init>()>
<android.widget.EditText: android.text.Editable getText()>
<org.npr.android.news.EditPreferences: void onCreate(android.os.Bundle)>
<android.app.Activity: void finish()>
<java.util.LinkedList: java.lang.Object get(int)>
<com.google.android.apps.analytics.PersistentEventStore: com.google.android.apps.analytics.Event[] peekEvents()>
<org.npr.api.Client: void <init>(java.lang.String)>
<org.apache.http.impl.conn.SingleClientConnManager: void finalize()>
<org.npr.android.news.PlayerActivity: void <clinit>()>
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks: void <init>(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,com.google.android.apps.analytics.NetworkDispatcher$1)>
<com.google.android.apps.analytics.PersistentEventStore: int getNumStoredEvents()>
<org.npr.api.StoryGrouping$StoryGroupingBuilder: void <init>(java.lang.Class,java.lang.String,int,int,int)>
<org.npr.android.news.SearchActivity$2: void <init>(org.npr.android.news.SearchActivity)>
<org.npr.api.Story$StoryBuilder: org.npr.api.Story$StoryBuilder withAudio(org.npr.api.Story$Audio)>
<org.npr.android.news.PlaybackService: void onDestroy()>
<java.text.SimpleDateFormat: void <init>(java.lang.String)>
<java.util.TreeSet: java.util.Iterator iterator()>
<org.npr.android.news.NewsTopicActivity: int access$200(org.npr.android.news.NewsTopicActivity)>
<org.npr.android.news.PlaybackService: void onBufferingUpdate(android.media.MediaPlayer,int)>
<android.view.accessibility.AccessibilityNodeInfo: void <clinit>()>
<org.npr.android.news.StationSearchActivity: void onCheckedChanged(android.widget.RadioGroup,int)>
<java.lang.Double: java.lang.String toString()>
<org.npr.android.news.StreamProxy$MyClientConnManager: void <init>(org.npr.android.news.StreamProxy,org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry,org.npr.android.news.StreamProxy$1)>
<org.npr.android.news.Main: java.lang.String access$900()>
<android.widget.TextView: void onDraw(android.graphics.Canvas)>
<android.content.ContentUris: long parseId(android.net.Uri)>
<android.media.MediaPlayer: void release()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void setDispatchPeriod(int)>
<java.net.ServerSocket: int getLocalPort()>
<org.npr.android.util.Tracker$PlayLaterEvent: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<android.os.HandlerThread: android.os.Looper getLooper()>
<java.lang.Long: void <clinit>()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: com.google.android.apps.analytics.GoogleAnalyticsTracker getInstance()>
<org.npr.api.ApiConstants: java.lang.String addParams(java.lang.String,java.util.Map)>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.npr.android.news.StationDetailsActivity: java.lang.CharSequence getMainTitle()>
<android.app.Service: void <init>()>
<com.google.android.apps.analytics.PersistentEventStore: void storeUpdatedSession()>
<java.net.ServerSocket: java.net.Socket accept()>
<android.os.HandlerThread: void run()>
<org.npr.api.Station$StationBuilder: org.npr.api.Station$StationBuilder withFrequency(java.lang.String)>
<org.npr.api.Station$StationBuilder: org.npr.api.Station$StationBuilder withImage(java.lang.String)>
<org.npr.android.news.Main: void onCreate(android.os.Bundle)>
<android.widget.TextView: boolean hasOverlappingRendering()>
<android.view.accessibility.AccessibilityNodeInfo: void <init>()>
<android.widget.LinearLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void stop()>
<org.npr.api.Podcast$PodcastFactory: org.npr.api.Podcast parsePodcast(org.w3c.dom.Node)>
<android.view.ViewGroup$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask: void <init>(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,com.google.android.apps.analytics.Event[])>
<org.npr.android.news.AboutActivity$3: void <init>(org.npr.android.news.AboutActivity)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,android.content.Context)>
<org.npr.android.news.NewsTopicActivity: void <init>()>
<android.content.Intent: void <init>()>
<org.npr.android.news.StationDetailsActivity$2: void run()>
<java.util.GregorianCalendar: void <init>()>
<org.npr.android.news.PlaybackService: void <clinit>()>
<org.npr.api.Story$StoryBuilder: org.npr.api.Story$StoryBuilder withOrganization(org.npr.api.Story$Organization)>
<android.widget.ImageView: int getBaseline()>
<android.widget.ArrayAdapter: android.content.Context getContext()>
<org.npr.android.util.Tracker$1: void <init>(org.npr.android.util.Tracker,org.npr.android.util.Tracker$ActivityMeasurement)>
<android.widget.TextView: float getLeftFadingEdgeStrength()>
<android.widget.TextView: void onFinishTemporaryDetach()>
<android.util.Log: int e(java.lang.String,java.lang.String)>
<java.lang.Exception: void <init>()>
<org.npr.android.util.PlaylistProvider: void <init>()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker$1: void <init>(com.google.android.apps.analytics.GoogleAnalyticsTracker)>
<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void <init>()>
<org.npr.api.Podcast$PodcastBuilder: org.npr.api.Podcast build()>
<java.util.HashMap: java.util.Set entrySet()>
<org.npr.android.util.Tracker: boolean isDebuggableSet()>
<java.lang.Double: java.lang.Double valueOf(double)>
<org.npr.android.util.Tracker$ActivityMeasurement: java.lang.String access$000(org.npr.android.util.Tracker$ActivityMeasurement)>
<android.widget.TextView: boolean performAccessibilityAction(int,android.os.Bundle)>
<org.npr.api.Story$StoryFactory: java.util.List parseStories(org.w3c.dom.Node)>
<org.npr.api.Story$TextWithHtml: void <init>(java.util.List)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: java.lang.String access$1100(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread)>
<org.npr.android.news.SearchActivity: android.widget.Button access$400(org.npr.android.news.SearchActivity)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask access$400(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread)>
<java.lang.Long: java.lang.String toString(long)>
<android.widget.RadioGroup: android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()>
<org.npr.android.news.ListenView$PlaybackChangeReceiver: void <init>(org.npr.android.news.ListenView)>
<java.lang.StringBuffer: java.lang.String toString()>
<java.net.URL: void <init>(java.lang.String)>
<android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,int)>
<org.npr.api.Station$StationBuilder: org.npr.api.Station build()>
<org.npr.android.news.PlaybackService: void playNext()>
<android.widget.ImageView: void setVisibility(int)>
<org.npr.android.util.Tracker: void invokeTrackLink(org.npr.android.util.Tracker$LinkEvent)>
<android.app.Activity: void setContentView(int)>
<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>
<android.app.Activity: android.view.View findViewById(int)>
<android.widget.TextView: boolean onKeyShortcut(int,android.view.KeyEvent)>
<org.npr.api.Station$StationBuilder: org.npr.api.Station$StationBuilder withBand(java.lang.String)>
<org.npr.android.news.AboutActivity$2: void <init>(org.npr.android.news.AboutActivity)>
<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<org.npr.android.util.Tracker: void trackLink(org.npr.android.util.Tracker$LinkEvent)>
<org.npr.android.news.PlaybackService: android.os.IBinder onBind(android.content.Intent)>
<android.widget.TextView: android.os.Parcelable onSaveInstanceState()>
<android.view.View: int getId()>
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>
<org.npr.android.news.StationListActivity: void onClick(android.view.View)>
<java.lang.String: boolean equals(java.lang.Object)>
<android.graphics.Canvas: void <init>()>
<org.npr.api.Station$StationBuilder: org.npr.api.Station$StationBuilder withMarketCity(java.lang.String)>
<org.npr.api.Station$StationFactory: org.npr.api.Station createStation(org.w3c.dom.Node)>
<org.npr.android.news.StreamProxy: void run()>
<java.lang.System: long currentTimeMillis()>
<android.widget.TextView: int getBaseline()>
<org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine getRequestLine()>
<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<org.npr.android.news.PodcastActivity$2: void run()>
<android.widget.TextView: int[] onCreateDrawableState(int)>
<org.npr.android.news.Main$4: void onLocationChanged(android.location.Location)>
<org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>
<org.npr.android.news.DownloadDrawable: android.graphics.drawable.Drawable createFromUrl(java.lang.String)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>
<android.media.MediaPlayer: int getCurrentPosition()>
<java.net.ServerSocket: void setSoTimeout(int)>
<org.npr.android.news.StationListActivity: void onCreate(android.os.Bundle)>
<java.lang.Class: java.lang.String getName()>
<org.npr.api.Story$StoryBuilder: org.npr.api.Story$StoryBuilder withPubDate(java.lang.String)>
<android.widget.BaseExpandableListAdapter: void <init>()>
<org.npr.android.news.Main$MainListAdapter: void <init>(org.npr.android.news.Main,org.npr.android.news.Main$SubActivity[])>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>
<org.npr.android.util.Tracker$PlayNowEvent: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.lang.Integer: void <clinit>()>
<org.apache.http.impl.DefaultHttpClientConnection: void <init>()>
<org.npr.android.news.StationSearchActivity: void onResume()>
<android.widget.TextView: void sendAccessibilityEvent(int)>
<android.widget.ProgressBar: void onMeasure(int,int)>
<org.npr.android.util.PlaylistProvider: java.lang.String getType(android.net.Uri)>
<android.widget.ImageView: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.media.MediaPlayer: void stop()>
<org.npr.android.news.StationListAdapter: void <clinit>()>
<android.widget.LinearLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<org.npr.android.news.Main$1: void <init>(org.npr.android.news.Main)>
<org.npr.api.Station$StationBuilder: org.npr.api.Station$StationBuilder withAudioStreams(java.util.List)>
<org.apache.http.message.AbstractHttpMessage: void setHeaders(org.apache.http.Header[])>
<org.npr.android.news.PodcastActivity: void <init>()>
<org.npr.android.news.Main: void onDestroy()>
<android.widget.RadioGroup: android.widget.RadioGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpResponse receiveResponseHeader()>
<org.npr.android.news.PlaylistActivity: void onClick(android.view.View)>
<android.widget.BaseAdapter: void <init>()>
<android.widget.ExpandableListView: void <init>(android.content.Context)>
<org.npr.api.Station$StationBuilder: org.npr.api.Station$StationBuilder withName(java.lang.String)>
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>
<org.npr.api.Story$Byline: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<org.npr.api.Podcast: java.lang.String getTitle()>
<android.widget.ProgressBar: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<java.util.LinkedList: void <init>()>
<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>
<android.widget.TextView: boolean onDragEvent(android.view.DragEvent)>
<java.lang.StringBuilder: void <init>()>
<java.util.Calendar: java.util.Date getTime()>
<android.widget.ProgressBar: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<org.npr.android.news.AboutActivity: void onCreate(android.os.Bundle)>
<org.npr.android.news.Main: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<org.npr.android.news.NewsStoryActivity: void <clinit>()>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<org.npr.android.news.PlaybackService: void onPrepared(android.media.MediaPlayer)>
<android.widget.TextView: boolean onTouchEvent(android.view.MotionEvent)>
<java.util.Arrays: java.lang.String toString(java.lang.Object[])>
<android.widget.TextView: int getLeftPaddingOffset()>
<com.google.android.apps.analytics.PersistentEventStore: void startNewVisit()>
<org.npr.api.StoryGrouping$StoryGroupingBuilder: org.npr.api.StoryGrouping$StoryGroupingBuilder withTitle(java.lang.String)>
<java.util.ArrayList: void <init>()>
<org.npr.android.news.StreamProxy: void start()>
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>
<org.npr.android.news.Main: void <clinit>()>
<java.lang.String: boolean startsWith(java.lang.String)>
<android.media.MediaPlayer: void setDataSource(java.lang.String)>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<android.content.ContentValues: void <init>()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: void dispatchEvents(com.google.android.apps.analytics.Event[])>
<org.npr.android.news.PodcastActivity: void onClick(android.content.DialogInterface,int)>
<android.widget.TextView: void onMeasure(int,int)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks: void requestSent()>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<org.npr.android.news.AboutActivity$1: void <init>(org.npr.android.news.AboutActivity)>
<java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Object: java.lang.Object clone()>
<java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>
<java.util.AbstractSequentialList: java.util.Iterator iterator()>
<org.npr.android.news.NewsTopicActivity: void initializeList()>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<org.npr.api.Client: void <clinit>()>
<org.npr.android.news.PlaybackService: void onCompletion(android.media.MediaPlayer)>
<java.util.ArrayList: int size()>
<com.google.android.apps.analytics.PersistentEventStore: com.google.android.apps.analytics.Event[] peekEvents(int)>
<org.npr.android.news.AboutActivity: void <init>()>
<org.npr.android.news.NewsListAdapter: void <clinit>()>
<org.npr.android.util.Tracker: void invokeTrack(org.npr.android.util.Tracker$ActivityMeasurement)>
<android.widget.TextView: boolean isPaddingOffsetRequired()>
<android.widget.ProgressBar: void postInvalidate()>
<android.widget.ImageView: void jumpDrawablesToCurrentState()>
<org.npr.android.news.StationDetailsActivity: void onCreate(android.os.Bundle)>
<android.preference.PreferenceActivity: void <init>()>
<android.app.Notification: void <clinit>()>
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.widget.TextView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.widget.RadioButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<org.npr.android.news.NewsListActivity: java.lang.CharSequence getMainTitle()>
<android.widget.RadioGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.widget.ImageView: void drawableStateChanged()>
<org.npr.api.Story: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,org.npr.api.Story$Text,org.npr.api.Story$TextWithHtml,java.util.List)>
<android.widget.ListView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<org.npr.android.util.Tracker$PodcastLaterEvent: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>
<android.widget.ListView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: com.google.android.apps.analytics.PipelinedRequester access$700(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread)>
<android.app.ActivityGroup: void onDestroy()>
<org.npr.android.news.SearchActivity: void onClick(android.view.View)>
<org.npr.api.Station$Listenable: void <init>(java.lang.String,java.lang.String)>
<android.widget.TextView: void drawableStateChanged()>
<org.npr.android.news.NewsTopicActivity: int constructList()>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.widget.LinearLayout: void onMeasure(int,int)>
<org.npr.android.news.NewsTopicActivity$1: void <init>(org.npr.android.news.NewsTopicActivity)>
<org.npr.android.news.NewsListAdapter: void access$200(org.npr.android.news.NewsListAdapter,java.lang.String,int)>
<java.util.TreeMap: java.util.Set entrySet()>
<java.util.Calendar: java.lang.Object clone()>
<org.npr.android.news.Main$2: void <init>(org.npr.android.news.Main)>
<org.apache.http.impl.SocketHttpClientConnection: boolean isOpen()>
<android.widget.EditText: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<org.apache.http.impl.AbstractHttpClientConnection: void <init>()>
<org.npr.android.news.SearchResultsActivity: void <init>()>
<android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>
<org.npr.android.news.NewsStoryActivity$2: void run()>
<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()>
<java.lang.Thread: void <init>()>
<org.npr.android.news.PlaylistActivity: void trackNow()>
<com.google.android.apps.analytics.PersistentEventStore$DataBaseHelper: void <init>(android.content.Context,java.lang.String)>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>
<org.npr.android.util.PlsParser: java.lang.String parseLine(java.lang.String)>
<org.npr.api.ApiElement: void <init>(java.lang.String)>
<org.npr.api.Story$StoryFactory: org.npr.api.Story downloadStory(java.lang.String)>
<android.widget.TextView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.os.Build: void <clinit>()>
<org.apache.http.conn.scheme.PlainSocketFactory: void <init>()>
<org.npr.android.util.Tracker$2: void run()>
<android.view.MotionEvent: void <init>()>
<org.npr.android.news.StationDetailsActivity: void <init>()>
<org.npr.android.news.PlaybackService: void play()>
<android.widget.TextView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.ImageView: int[] onCreateDrawableState(int)>
<org.npr.android.news.NewsListActivity: void addAllToStoryCache(java.util.List)>
<org.npr.android.news.Main: java.lang.String access$602(org.npr.android.news.Main,java.lang.String)>
<android.widget.TextView: int getBottomPaddingOffset()>
<java.util.StringTokenizer: void <init>(java.lang.String)>
<android.widget.ProgressBar: void onDetachedFromWindow()>
<org.npr.api.Podcast$Item: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<java.lang.String: void <clinit>()>
<java.lang.Thread: void start()>
<android.widget.EditText: boolean getDefaultEditable()>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
<org.npr.android.news.PodcastActivity: void onCreate(android.os.Bundle)>
<android.view.DragEvent: void <clinit>()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)>
<android.widget.RadioGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<org.npr.api.Story$StoryBuilder: org.npr.api.Story$StoryBuilder withMiniTeaser(java.lang.String)>
<android.widget.LinearLayout: void <init>(android.content.Context)>
<org.npr.android.util.Tracker$PlayNowEvent: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<android.widget.ImageView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.npr.android.news.NewsStoryActivity: void onCreate(android.os.Bundle)>
<java.util.Collections: void <clinit>()>
<java.io.FileReader: void <init>(java.io.File)>
<org.npr.android.news.ListenView: void <clinit>()>
<org.npr.android.news.StreamProxy: int getPort()>
<org.npr.android.news.NewsTopicActivity$TopicType: int access$400(org.npr.android.news.NewsTopicActivity$TopicType)>
<org.apache.http.impl.AbstractHttpClientConnection: void receiveResponseEntity(org.apache.http.HttpResponse)>
<org.npr.android.news.PlaybackService: void downloadPlaylist()>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.ProgressBar: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<android.app.Activity: void startManagingCursor(android.database.Cursor)>
<android.widget.TextView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.widget.EditText: void setEllipsize(android.text.TextUtils$TruncateAt)>
<org.npr.android.util.Tracker$PlayNowEvent: void <clinit>()>
<android.widget.ProgressBar: android.os.Parcelable onSaveInstanceState()>
<org.npr.api.Story$StoryFactory: org.npr.api.Story$Audio parseAudio(org.w3c.dom.Node)>
<android.widget.ImageView: void onDraw(android.graphics.Canvas)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void resetPowerSaveMode()>
<org.npr.android.news.EditPreferences: void <init>()>
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
<android.media.MediaPlayer: void finalize()>
<org.npr.android.news.NewsStoryActivity: org.npr.api.Story$Audio getPlayable()>
<android.widget.LinearLayout: void onDraw(android.graphics.Canvas)>
<android.widget.TextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
<org.npr.android.news.PlaybackService: boolean onInfo(android.media.MediaPlayer,int,int)>
<android.content.Intent: android.content.Intent setAction(java.lang.String)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void <clinit>()>
<java.lang.Math: double random()>
<org.apache.http.HttpHost: java.lang.String getHostName()>
<org.npr.api.Story$StoryBuilder: org.npr.api.Story build()>
<android.media.MediaPlayer: void start()>
<java.lang.StringBuilder: java.lang.String toString()>
<android.widget.ImageView: void setSelected(boolean)>
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: int access$502(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,int)>
<com.google.android.apps.analytics.NetworkDispatcher: org.apache.http.HttpHost access$200()>
<org.npr.android.news.PlayerActivity: void finish()>
<java.security.SecureRandom: void <init>()>
<android.widget.RadioGroup: void <init>(android.content.Context)>
<org.npr.android.news.SearchActivity: java.text.SimpleDateFormat access$100(org.npr.android.news.SearchActivity)>
<org.npr.android.news.NewsStoryActivity: void onClick(android.view.View)>
<org.npr.android.news.SearchActivity: void onCreate(android.os.Bundle)>
<org.npr.android.news.StationDetailsActivity: android.graphics.drawable.Drawable access$002(org.npr.android.news.StationDetailsActivity,android.graphics.drawable.Drawable)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask: void run()>
<java.lang.String: int indexOf(java.lang.String)>
<org.npr.android.news.StationListActivity: java.lang.CharSequence getMainTitle()>
<java.util.HashMap: void <init>()>
<org.npr.android.util.Tracker: java.lang.Object populateDefaultFields(java.lang.Object)>
<org.npr.api.Story$StoryFactory: org.npr.api.Story$Byline parseByline(org.w3c.dom.Node)>
<org.npr.android.news.PlaylistActivity: void <init>()>
<android.widget.ProgressBar: void jumpDrawablesToCurrentState()>
<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>
<org.npr.android.news.Main$3: void <init>(org.npr.android.news.Main)>
<android.widget.ExpandableListView: android.widget.ExpandableListAdapter getExpandableListAdapter()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask: void dispatchSomePendingEvents()>
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>
<android.util.Log: int w(java.lang.String,java.lang.String)>
<java.util.LinkedHashMap: void <init>()>
<org.npr.android.news.PlaybackService: org.npr.android.util.PlaylistEntry retrievePlaylistItem(int,boolean)>
<org.npr.api.Story$Parent: void <init>(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String)>
<org.npr.android.news.PlayerActivity: void onCreate(android.os.Bundle)>
<java.lang.System: void <clinit>()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,com.google.android.apps.analytics.EventStore,com.google.android.apps.analytics.Dispatcher)>
<android.media.MediaPlayer: boolean isPlaying()>
<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>
<org.npr.api.StoryGrouping$StoryGroupingBuilder: org.npr.api.StoryGrouping build()>
<android.widget.ListView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.view.inputmethod.EditorInfo: void <clinit>()>
<android.app.Activity: boolean requestWindowFeature(int)>
<java.lang.String: java.lang.String toString()>
<java.io.BufferedReader: void <init>(java.io.Reader,int)>
<org.npr.android.util.Tracker$ActivityMeasurement: void <init>(java.lang.String,java.lang.String)>
<org.npr.api.Story$StoryFactory: java.util.List parseParagraphs(org.w3c.dom.Node)>
<android.widget.EditText: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.npr.android.util.PlaylistProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<android.view.InputEvent: void <init>()>
<org.npr.android.news.StationListActivity: void trackNow()>
<org.npr.api.ApiConstants: void createInstance(java.lang.String)>
<org.npr.android.news.PlaybackService: boolean isPlaylist(java.lang.String)>
<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>
<org.npr.android.news.DownloadDrawable: void <clinit>()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<android.widget.ListView: boolean isOpaque()>
<org.npr.android.util.FileUtils: void closeStream(java.io.Closeable)>
<org.npr.api.Story$Audio: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List)>
<android.media.MediaPlayer: int getDuration()>
<org.npr.android.news.StationListAdapter: void initializeList(java.lang.String)>
<org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>
<java.lang.Thread: void join(long)>
<android.content.Context: java.lang.String getString(int)>
<java.lang.Enum: int ordinal()>
<android.widget.ListView: void setRemoteViewsAdapter(android.content.Intent)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: java.lang.String access$1000(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread)>
<org.npr.android.news.NewsStoryActivity: java.lang.CharSequence getMainTitle()>
<org.npr.android.news.NewsStoryActivity: void playStory(boolean)>
<org.npr.api.Story$StoryFactory: org.npr.api.Story$Parent parseParent(org.w3c.dom.Node)>
<android.widget.ListView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<android.app.ActivityGroup: void <init>()>
<org.npr.android.news.NewsListAdapter: void addMoreStories(java.lang.String,int)>
<android.content.Intent: android.content.Intent addCategory(java.lang.String)>
<org.npr.android.news.StationListAdapter: void <init>(android.content.Context,int,int)>
<org.npr.android.util.Tracker: java.lang.Object createMeasurement()>
<org.npr.android.news.PlaybackService$ListenBinder: void <init>(org.npr.android.news.PlaybackService)>
<org.npr.android.news.Main: android.os.Handler access$800(org.npr.android.news.Main)>
<com.google.android.apps.analytics.NetworkRequestUtil: java.lang.String constructEventRequestPath(com.google.android.apps.analytics.Event,java.lang.String)>
<android.view.ContextThemeWrapper: void <init>()>
<org.npr.android.util.NodeUtils: java.lang.String getTextContent(org.w3c.dom.Node)>
<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>
<java.lang.Long: void <init>(long)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.widget.ListView: void setSelection(int)>
<org.npr.android.news.PlaybackService: boolean onError(android.media.MediaPlayer,int,int)>
<com.google.android.apps.analytics.NetworkDispatcher: void stop()>
<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.io.File: void <clinit>()>
<org.npr.android.news.PlaybackService: void <init>()>
<android.view.ViewGroup$LayoutParams: void <init>(int,int)>
<android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>
<org.apache.http.HttpHost: int getPort()>
<java.util.concurrent.TimeUnit: void <clinit>()>
<com.google.android.apps.analytics.PipelinedRequester: void <init>(org.apache.http.HttpHost,org.apache.http.conn.scheme.SocketFactory)>
<org.npr.android.news.Main$SubActivity: void <init>(org.npr.android.news.Main,android.content.Intent)>
<org.npr.android.util.Tracker: org.npr.android.util.Tracker instance(android.app.Application)>
<android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>
<org.npr.api.Station$StationBuilder: org.npr.api.Station$StationBuilder withPodcasts(java.util.List)>
<org.npr.api.Podcast$PodcastBuilder: org.npr.api.Podcast$PodcastBuilder withTitle(java.lang.String)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: long access$600(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread)>
<android.widget.ProgressBar: void onVisibilityChanged(android.view.View,int)>
<android.view.View: void <init>(android.content.Context)>
<org.npr.android.news.PlayerActivity: void listen(org.npr.android.util.PlaylistEntry)>
<android.view.KeyEvent: void <clinit>()>
<org.npr.android.news.PlaybackService$2: void run()>
<org.npr.api.Podcast$PodcastBuilder: org.npr.api.Podcast$PodcastBuilder withSummary(java.lang.String)>
<org.npr.api.Station: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.lang.String,java.lang.String,org.npr.api.Station$1)>
<org.apache.http.client.methods.HttpRequestBase: void <init>()>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<org.npr.android.news.PodcastActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<java.util.AbstractList: java.util.List subList(int,int)>
<android.app.Activity: android.content.Intent getIntent()>
<android.widget.TextView: float getRightFadingEdgeStrength()>
<org.npr.android.news.StreamProxy: void <init>()>
<org.npr.android.news.StationDetailsActivity$1: void <init>(org.npr.android.news.StationDetailsActivity)>
<android.widget.Button: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<org.apache.http.params.BasicHttpParams: void <init>()>
<android.content.Context: void <init>()>
<org.npr.android.news.SearchActivity$1: void <init>(org.npr.android.news.SearchActivity)>
<android.content.ContextWrapper: java.io.File getCacheDir()>
<android.widget.TextView: void setPaddingRelative(int,int,int,int)>
<android.widget.TextView: int computeVerticalScrollExtent()>
<org.npr.android.news.NewsListAdapter$1: void <init>(org.npr.android.news.NewsListAdapter)>
<org.npr.android.news.ListenView$PlaybackUpdateReceiver: void <init>(org.npr.android.news.ListenView)>
<java.net.URL: java.net.URLConnection openConnection()>
<android.widget.LinearLayout: boolean shouldDelayChildPressedState()>
<org.npr.android.news.ListenView$PlaybackUpdateReceiver: void <init>(org.npr.android.news.ListenView,org.npr.android.news.ListenView$1)>
<org.npr.android.news.Main: java.lang.String access$502(org.npr.android.news.Main,java.lang.String)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: android.os.Handler access$800(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread)>
<org.npr.android.news.StationListActivity: void onActivityResult(int,int,android.content.Intent)>
<android.widget.TextView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.app.ActivityGroup: void onCreate(android.os.Bundle)>
<android.widget.TextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.widget.SimpleExpandableListAdapter: int getChildrenCount(int)>
<android.content.ContentProvider: void <init>()>
<android.content.ContentProvider: android.content.Context getContext()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>
<org.npr.api.Story$Organization: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<android.util.Log: int d(java.lang.String,java.lang.String)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void trackPageView(java.lang.String)>
<org.npr.android.news.NewsListAdapter: void getMoreStories(java.lang.String,int)>
<org.npr.android.news.Main: void initApiKey()>
<java.text.DateFormat: java.util.Date parse(java.lang.String)>
<java.io.FileOutputStream: void <init>(java.io.File)>
<android.widget.ListView: void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo)>
<org.npr.api.ApiConstants: void <init>(java.lang.String)>
<java.util.TreeSet: boolean add(java.lang.Object)>
<org.npr.android.news.PlaylistActivity: void <clinit>()>
<android.net.Uri: void <clinit>()>
<org.npr.android.news.PlaybackService: void markAsRead(long)>
<org.npr.android.util.Tracker$PodcastNowEvent: void <clinit>()>
<org.npr.android.news.AboutActivity: java.lang.String getVersionName()>
<org.npr.api.Story$Audio$Format: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<org.npr.android.news.Main$SubActivity: android.content.Intent access$400(org.npr.android.news.Main$SubActivity)>
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
<org.npr.android.news.AboutActivity: int getVersionCode()>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.util.List)>
<org.npr.android.util.PlaylistProvider: boolean onCreate()>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
<com.google.android.apps.analytics.NetworkDispatcher: void dispatchEvents(com.google.android.apps.analytics.Event[])>
<org.npr.android.news.Main$SubActivity: void <init>(org.npr.android.news.Main,android.content.Intent,org.npr.android.news.Main$1)>
<org.npr.android.news.ListenView$PlaybackChangeReceiver: void <init>(org.npr.android.news.ListenView,org.npr.android.news.ListenView$1)>
<java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>
<java.io.BufferedReader: void close()>
<org.npr.api.IterableNodeList: java.util.Iterator iterator()>
<java.util.TreeSet: void <init>()>
<android.widget.RadioButton: void <init>(android.content.Context)>
<org.npr.android.news.AboutActivity$2: void onClick(android.view.View)>
<android.widget.TextView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.location.Location: void <init>(java.lang.String)>
<android.widget.ImageView: void onMeasure(int,int)>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.lang.Thread: void sleep(long)>
<java.lang.IllegalStateException: void <init>(java.lang.String)>
<org.npr.android.news.Main$4: void <init>(org.npr.android.news.Main)>
<com.google.android.apps.analytics.Event: void <init>(long,int,java.lang.String,int,int,int,int,int,java.lang.String,java.lang.String,java.lang.String,int,int,int)>
<org.npr.android.news.PlaylistActivity: void refreshList()>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<org.npr.android.news.PodcastActivity$1: void <init>(org.npr.android.news.PodcastActivity)>
<org.npr.android.news.PodcastActivity: android.os.Handler access$400(org.npr.android.news.PodcastActivity)>
<android.graphics.Rect: void <init>()>
<org.npr.api.ApiConstants: java.lang.String createUrl(java.lang.String,java.util.Map)>
<org.npr.android.news.StationDetailsActivity: boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)>
<org.npr.android.util.FileUtils: java.lang.CharSequence readFile(android.app.Activity,int)>
<org.npr.android.news.NewsListActivity: void addStories()>
<org.npr.android.util.PlaylistProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<java.util.ArrayList: boolean add(java.lang.Object)>
<org.npr.api.Station$StationFactory: org.npr.api.Station downloadStation(java.lang.String)>
<org.npr.android.util.Tracker: void access$100(org.npr.android.util.Tracker,org.npr.android.util.Tracker$ActivityMeasurement)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker$1: void run()>
<org.npr.android.util.PlsParser: java.util.List getUrls()>
<org.npr.api.StoryGrouping$StoryGroupingBuilder: org.npr.api.StoryGrouping$StoryGroupingBuilder withAdditionalInfo(java.lang.String)>
<android.media.MediaPlayer: void <init>()>
<com.google.android.apps.analytics.PipelinedRequester: void sendRequests()>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int)>
<org.npr.android.news.StationDetailsActivity: android.os.Handler access$300(org.npr.android.news.StationDetailsActivity)>
<android.graphics.Rect: void <clinit>()>
<com.google.android.apps.analytics.NetworkDispatcher: void <clinit>()>
<android.widget.RadioGroup: void onFinishInflate()>
<org.npr.api.ApiConstants: org.npr.api.ApiConstants instance()>
<org.npr.android.news.PodcastActivity$2: void <init>(org.npr.android.news.PodcastActivity,java.lang.String)>
<org.npr.android.news.StationListActivity$2: void run()>
<org.npr.android.news.NewsListActivity: void <init>()>
<org.npr.android.news.PlaybackService: void stop()>
<android.app.Activity: void onResume()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void cancelPendingDispathes()>
<org.npr.api.StoryGrouping: void <clinit>()>
<android.widget.TextView: void onScreenStateChanged(int)>
<org.npr.android.news.StreamProxy: void processRequest(org.apache.http.HttpRequest,java.net.Socket)>
<org.npr.android.util.PlaylistProvider: void <clinit>()>
<android.widget.TextView: void onRestoreInstanceState(android.os.Parcelable)>
<org.npr.android.news.NewsListActivity: org.npr.api.Story getStoryFromCache(java.lang.String)>
<com.google.android.apps.analytics.NetworkRequestUtil: java.lang.String getEscapedCookieString(com.google.android.apps.analytics.Event,java.lang.String)>
<android.view.InputEvent: void <clinit>()>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.npr.android.news.SearchActivity$1: void onDateSet(android.widget.DatePicker,int,int,int)>
<android.widget.RadioGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)>
<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>
<org.npr.android.news.PlaylistActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<java.io.FileOutputStream: void close()>
<org.npr.android.news.NewsStoryActivity: android.graphics.drawable.Drawable access$002(org.npr.android.news.NewsStoryActivity,android.graphics.drawable.Drawable)>
<java.lang.Object: void finalize()>
<android.app.Notification: void <init>(int,java.lang.CharSequence,long)>
<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<org.npr.android.news.ListenView$PlaybackCloseReceiver: void <init>(org.npr.android.news.ListenView)>
<org.npr.android.util.NodeUtils: java.lang.String getTextContentImpl(org.w3c.dom.Node,int)>
<org.npr.api.Story: void <clinit>()>
<org.npr.android.news.PlaybackService: org.npr.android.util.PlaylistEntry getNextPlaylistItem(int)>
<android.widget.RadioButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.npr.android.news.Main$3: void onCancel(android.content.DialogInterface)>
<android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.npr.android.news.StationListActivity: void addAllToStationCache(java.util.List)>
<org.npr.api.Program: void <clinit>()>
<org.npr.api.Story$StoryFactory: org.npr.api.Story$Image parseImage(org.w3c.dom.Node)>
<org.npr.api.ApiConstants: void <clinit>()>
<org.npr.api.Client: org.w3c.dom.Node execute()>
<org.npr.android.news.StreamProxy: org.apache.http.HttpResponse download(java.lang.String)>
<android.os.Handler: android.os.Message obtainMessage(int)>
<android.content.ContentValues: void <clinit>()>
<android.widget.TextView: boolean onKeyDown(int,android.view.KeyEvent)>
<org.npr.api.IterableNodeList: boolean hasNext()>
<org.npr.android.util.Tracker$LinkEvent: void <clinit>()>
<android.widget.EditText: void <init>(android.content.Context)>
<android.widget.ListView: void dispatchDraw(android.graphics.Canvas)>
<org.npr.android.news.Main: void lauchLocationListeners()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void createEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
<org.npr.android.news.AboutActivity: void populateField(java.util.Map,android.widget.TextView)>
<java.io.File: void <init>(java.io.File,java.lang.String)>
<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<org.npr.android.news.AboutActivity$1: void onClick(android.view.View)>
<android.app.Activity: void <clinit>()>
<org.npr.android.news.SearchActivity: java.lang.String getDate(java.util.Calendar)>
<android.app.Activity: void onLowMemory()>
<org.npr.android.news.SearchActivity: java.util.Calendar access$000(org.npr.android.news.SearchActivity)>
<android.widget.SimpleCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[])>
<org.apache.http.message.BasicHttpRequest: void <init>(java.lang.String,java.lang.String)>
<org.npr.android.news.NewsTopicActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.widget.TextView: void onWindowFocusChanged(boolean)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>
<android.widget.ListView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.widget.TextView: int getRightPaddingOffset()>
<android.view.inputmethod.EditorInfo: void <init>()>
<com.google.android.apps.analytics.NetworkDispatcher: void init(android.os.Handler,java.lang.String)>
<android.widget.ProgressBar: void drawableStateChanged()>
<org.npr.android.news.NewsListActivity: void <clinit>()>
<java.lang.Boolean: void <clinit>()>
<org.npr.api.Station$AudioStream: void <init>(java.lang.String,java.lang.String)>
<org.apache.http.HttpVersion: void <clinit>()>
<org.npr.android.news.StationSearchActivity: void onCreate(android.os.Bundle)>
<android.view.DragEvent: void <init>()>
<java.lang.Long: java.lang.Long valueOf(long)>
<android.widget.TextView: boolean onKeyUp(int,android.view.KeyEvent)>
<org.npr.android.news.SearchActivity: java.util.Calendar access$300(org.npr.android.news.SearchActivity)>
<com.google.android.apps.analytics.PersistentEventStore$DataBaseHelper: void <init>(android.content.Context)>
<java.lang.StringBuilder: void <init>(java.lang.String)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: void <init>(android.os.Handler,com.google.android.apps.analytics.PipelinedRequester,java.lang.String,java.lang.String)>
<android.widget.TextView: void onLayout(boolean,int,int,int,int)>
<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<org.npr.api.Station$StationBuilder: org.npr.api.Station$StationBuilder withTagline(java.lang.String)>
<org.npr.android.news.StreamProxy: void init()>
<org.npr.api.Story$StoryFactory: org.npr.api.Story$Organization parseOrganization(org.w3c.dom.Node)>
<android.widget.ArrayAdapter: int getCount()>
<com.google.android.apps.analytics.PersistentEventStore: java.lang.String getReferrer()>
<org.npr.android.news.SearchActivity: android.widget.Button access$200(org.npr.android.news.SearchActivity)>
<org.npr.android.util.Tracker: void finish()>
<android.widget.ProgressBar: void <init>(android.content.Context)>
<org.npr.api.Podcast$PodcastFactory: void <clinit>()>
<org.npr.android.news.PlaybackService: org.npr.android.util.PlaylistEntry getFromCursor(android.database.Cursor)>
<com.google.android.apps.analytics.PersistentEventStore: void <init>(android.content.Context,java.lang.String)>
<android.widget.LinearLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<org.npr.api.Station: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.lang.String,java.lang.String)>
<android.preference.PreferenceActivity: void addPreferencesFromResource(int)>
<java.util.StringTokenizer: java.lang.String nextToken()>
<org.npr.android.news.SearchActivity$2: void onDateSet(android.widget.DatePicker,int,int,int)>
<org.npr.api.Topic: void <clinit>()>
<com.google.android.apps.analytics.PipelinedRequester: void <init>(org.apache.http.HttpHost)>
<org.npr.android.news.PlaybackService: boolean onUnbind(android.content.Intent)>
<org.npr.api.Story$StoryBuilder: org.npr.api.Story$StoryBuilder withParent(org.npr.api.Story$Parent)>
<android.widget.TextView: void jumpDrawablesToCurrentState()>
<java.lang.Integer: java.lang.Integer valueOf(int)>
<android.widget.TextView: boolean performLongClick()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: long access$602(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,long)>
<org.npr.android.news.NewsTopicActivity$TopicType: org.npr.android.news.NewsTopicActivity$TopicType[] values()>
<android.widget.ImageView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.TextView: int computeVerticalScrollRange()>
<org.npr.api.Story$StoryBuilder: org.npr.api.Story$StoryBuilder withByline(org.npr.api.Story$Byline)>
<java.util.Random: int nextInt()>
<java.util.TreeMap: void <init>()>
<org.npr.android.news.StationDetailsActivity: void constructList()>
<org.npr.android.news.NewsStoryActivity$2: void <init>(org.npr.android.news.NewsStoryActivity,java.lang.String)>
<android.widget.ImageView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.widget.TextView: void cancelLongPress()>
<org.npr.android.util.Tracker$2: void <init>(org.npr.android.util.Tracker,org.npr.android.util.Tracker$LinkEvent)>
<android.widget.ArrayAdapter: void clear()>
<java.lang.Integer: int parseInt(java.lang.String)>
<org.npr.android.news.NewsListAdapter$2: void run()>
<android.app.Activity: void startActivity(android.content.Intent)>
<org.npr.android.news.PlaybackService: org.npr.android.util.PlaylistEntry retrievePlaylistItem(java.lang.String,java.lang.String[],java.lang.String)>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<java.lang.String: java.lang.String toLowerCase()>
<android.widget.ProgressBar: void invalidateDrawable(android.graphics.drawable.Drawable)>
<org.npr.android.util.TypefaceCache: android.graphics.Typeface getTypeface(java.lang.String,android.content.Context)>
<com.google.android.apps.analytics.PersistentEventStore: int getStoreId()>
<org.npr.android.news.Main: void cancelLocationListeners()>
<java.util.ArrayList: java.lang.Object get(int)>
<org.npr.android.util.Tracker$LinkEvent: void <init>(java.lang.String,java.lang.String)>
<org.npr.android.util.Tracker: void trackPage(org.npr.android.util.Tracker$ActivityMeasurement)>
<android.widget.TextView: void setSelected(boolean)>
<org.npr.android.news.NewsListAdapter: android.os.Handler access$300(org.npr.android.news.NewsListAdapter)>
<org.npr.api.Podcast$PodcastBuilder: void <init>()>
<android.widget.ProgressBar: void onAttachedToWindow()>
<com.google.android.apps.analytics.PipelinedRequester: void closeConnection()>
<android.widget.TextView: int getTopPaddingOffset()>
<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>
<android.os.Handler: void <init>()>
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.content.Intent: android.content.Intent setType(java.lang.String)>
<android.widget.TextView: void onAttachedToWindow()>
<org.npr.android.news.PlaybackService: void updateProgress()>
<org.npr.android.news.SearchResultsActivity: java.lang.CharSequence getMainTitle()>
<org.npr.android.news.PlaybackService: void listen(java.lang.String,boolean)>
<org.npr.api.StoryGrouping$StoryGroupingFactory: java.util.List downloadStoryGroupings(int)>
<org.apache.http.HttpHost: void <init>(java.lang.String,int)>
<android.widget.EditText: android.text.method.MovementMethod getDefaultMovementMethod()>
<java.util.LinkedList: java.lang.Object poll()>
<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine getStatusLine()>
<org.npr.api.Podcast$PodcastFactory: org.npr.api.Podcast$Item createItem(org.w3c.dom.Node)>
<android.os.Handler: boolean sendEmptyMessage(int)>
<java.lang.Class: java.lang.Class forName(java.lang.String)>
<org.npr.android.util.Tracker: void begin()>
<android.content.Intent: void <clinit>()>
<android.widget.TextView: int computeHorizontalScrollRange()>
<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>
<android.os.Binder: void <init>()>
<android.widget.LinearLayout: int getBaseline()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: boolean dispatch()>
<org.npr.android.news.NewsTopicActivity$TopicType: void <init>(java.lang.String,int,int)>
<android.os.Handler: void <init>(android.os.Looper)>
<java.net.ServerSocket: void <init>(int,int,java.net.InetAddress)>
<android.os.Build$VERSION: void <clinit>()>
<org.npr.android.news.Main: java.lang.CharSequence getMainTitle()>
<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.TextView: void onDetachedFromWindow()>
<org.npr.api.Story$StoryBuilder: org.npr.api.Story$StoryBuilder withImage(org.npr.api.Story$Image)>
<android.os.Handler: boolean sendMessage(android.os.Message)>
<org.npr.android.util.Tracker$StationSearchEvent: void <init>()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks: void <init>(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread)>
<org.npr.android.news.StreamProxy: void <clinit>()>
<org.npr.android.news.StationSearchActivity: void onClick(android.view.View)>
<android.widget.SimpleExpandableListAdapter: int getGroupCount()>
<android.content.BroadcastReceiver: void <init>()>
<android.app.Activity: void onCreate(android.os.Bundle)>
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask access$402(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask)>
<org.npr.android.news.NewsStoryActivity$1: void <init>(org.npr.android.news.NewsStoryActivity)>
<org.npr.android.news.StationListActivity: android.os.Handler access$100(org.npr.android.news.StationListActivity)>
<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>
<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>
<android.media.MediaPlayer: void reset()>
<android.app.Activity: android.app.Application getApplication()>
<android.widget.ListView: void layoutChildren()>
<android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<org.npr.api.IterableNodeList: org.w3c.dom.Node next()>
<android.widget.TextView: void invalidateDrawable(android.graphics.drawable.Drawable)>
<org.npr.android.news.ListenView: void <init>(android.content.Context)>
<android.net.Uri: java.lang.String encode(java.lang.String)>
<android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>
<android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,java.lang.String[],int[],java.util.List,int,java.lang.String[],int[])>
<org.npr.android.news.StationDetailsActivity$2: void <init>(org.npr.android.news.StationDetailsActivity,java.lang.String)>
<org.npr.android.news.StationListActivity: void initializeList()>
<org.npr.android.util.Tracker$1: void run()>
<org.npr.android.news.PlaylistActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<org.npr.api.StoryGrouping$StoryGroupingFactory: org.npr.api.StoryGrouping$StoryGroupingFactory getFactory(java.lang.Class,java.lang.String)>
<java.lang.StringBuffer: void <init>()>
<android.view.accessibility.AccessibilityRecord: void <init>()>
<android.app.Service: void onDestroy()>
<com.google.android.apps.analytics.PipelinedRequester: void finishedCurrentRequests()>
<org.npr.api.Client: java.io.InputStream download()>
<org.npr.android.news.AboutActivity$3: void onClick(android.view.View)>
<org.npr.api.Podcast$PodcastBuilder: org.npr.api.Podcast$PodcastBuilder withItem(org.npr.api.Podcast$Item)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<android.widget.EditText: java.lang.CharSequence getText()>
<android.app.Activity: void onActivityResult(int,int,android.content.Intent)>
<android.content.ContextWrapper: void <init>(android.content.Context)>
<android.os.Binder: void finalize()>
<android.widget.ImageView: boolean hasOverlappingRendering()>
<org.npr.android.news.StreamProxy: void stop()>
<android.app.AlertDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>
<android.widget.ListView: android.widget.Adapter getAdapter()>
<android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor,int)>
<org.npr.android.news.StationListActivity$2: void <init>(org.npr.android.news.StationListActivity,java.lang.String)>
<org.npr.android.news.NewsListAdapter$2: void <init>(org.npr.android.news.NewsListAdapter,java.lang.String,int)>
<org.npr.android.news.StationListActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<org.npr.android.news.StationSearchActivity: void <clinit>()>
<org.npr.android.news.PlayerActivity: void startActivityWithoutAnimation(android.content.Intent)>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask: com.google.android.apps.analytics.Event removeNextEvent()>
<org.npr.android.news.NewsStoryActivity: void <init>()>
<android.widget.ProgressBar: void onDraw(android.graphics.Canvas)>
<org.npr.android.util.PlaylistProvider: java.lang.String getSelectionFromId(android.net.Uri,java.lang.String)>
<org.npr.android.util.M3uParser: boolean isUrl(java.lang.String)>
<org.apache.http.params.AbstractHttpParams: void <init>()>
<java.util.Calendar: void set(int,int)>
<org.npr.android.util.PlaylistProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<java.util.Locale: java.util.Locale getDefault()>
<org.npr.android.news.StreamProxy: org.apache.http.HttpRequest readRequest(java.net.Socket)>
<java.lang.String: java.lang.String trim()>
<org.npr.api.Story$Image: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.widget.ListView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.view.KeyEvent: void <init>(int,int)>
<org.npr.android.util.PlsParser: void <init>(java.io.File)>
<android.widget.TextView: void setEnabled(boolean)>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpConnectionMetrics getMetrics()>
<org.npr.api.Station: void <clinit>()>
<java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<android.widget.LinearLayout: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>
<android.widget.TextView: boolean onCheckIsTextEditor()>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<android.widget.ListView: void setAdapter(android.widget.Adapter)>
<android.widget.TextView: void onVisibilityChanged(android.view.View,int)>
<android.widget.ListView: void onFinishInflate()>
<android.widget.TextView: void getFocusedRect(android.graphics.Rect)>
<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<org.npr.android.news.PodcastActivity: org.npr.api.Podcast access$002(org.npr.android.news.PodcastActivity,org.npr.api.Podcast)>
<java.lang.Enum: void <init>(java.lang.String,int)>
<org.npr.android.news.PlayerActivity: void noAnimation()>
<org.npr.android.news.NewsListActivity: void onLowMemory()>
<org.npr.android.news.SearchResultsActivity: void onCreate(android.os.Bundle)>
<android.widget.ListView: void <init>(android.content.Context)>
<org.npr.android.util.Tracker$ActivityMeasurement: void <clinit>()>
<android.widget.ListView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<java.util.Calendar: int get(int)>
<org.npr.android.news.Main: void trackNow()>
<java.util.LinkedList: int size()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: long access$630(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,long)>
<android.widget.ListView: boolean canAnimate()>
<android.widget.ImageView: void <init>(android.content.Context)>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<android.widget.ListView: void onMeasure(int,int)>
<org.npr.api.Podcast: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List)>
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header[] getAllHeaders()>
