<com.google.android.apps.mytracks.SensorStateActivity: void access$400(com.google.android.apps.mytracks.SensorStateActivity)>
<com.google.android.apps.mytracks.io.file.exporter.FileTrackExporter$TrackWriterLocationFactory: void swapLocations()>
<com.google.android.apps.mytracks.util.Api14Adapter$1: void <init>(com.google.android.apps.mytracks.util.Api14Adapter,android.view.MenuItem)>
<com.google.api.client.http.HttpResponse: java.lang.String getStatusMessage()>
<com.google.android.apps.mytracks.util.GoogleLocationUtils: java.lang.String getLocationSettingsName(android.content.Context)>
<com.google.android.gms.common.GooglePlayServicesUtil: boolean a(android.content.res.Resources)>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity: android.content.SharedPreferences access$500(com.google.android.apps.mytracks.settings.AdvancedSettingsActivity)>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataSerializer: void serializeCategory(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: com.google.android.apps.mytracks.content.Sensor$SensorData getBatteryLevel()>
<com.google.api.client.util.DataMap$EntryIterator: void <init>(com.google.api.client.util.DataMap)>
<com.google.common.collect.UnmodifiableListIterator: void <init>()>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: com.google.android.apps.mytracks.content.Waypoint getLastWaypoint(long,com.google.android.apps.mytracks.content.Waypoint$WaypointType)>
<com.google.android.apps.mytracks.TrackListActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>
<android.support.v4.app.FragmentManagerImpl$4: void <init>(android.support.v4.app.FragmentManagerImpl,int,int)>
<com.google.api.client.http.apache.ApacheHttpResponse: int getHeaderCount()>
<com.google.android.gms.internal.q$a: android.content.ComponentName getComponentName()>
<com.google.common.collect.LinkedListMultimap$1: void <init>(com.google.common.collect.LinkedListMultimap,java.lang.Object)>
<com.google.android.apps.analytics.Referrer: int getVisit()>
<com.google.android.apps.mytracks.stats.TripStatistics: void setStopTime(long)>
<com.google.android.apps.mytracks.fragments.ConfirmSyncDialogFragment$2: void onClick(android.content.DialogInterface,int)>
<com.google.api.client.http.ExponentialBackOffPolicy: void <init>(int,double,double,int,int)>
<com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment: android.widget.CheckBox access$300(com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment)>
<com.google.api.client.util.GenericData: void set(java.lang.String,java.lang.Object)>
<com.google.android.apps.mytracks.TrackEditActivity: java.lang.Object onRetainCustomNonConfigurationInstance()>
<com.google.android.gms.location.ActivityRecognitionClient: boolean isConnected()>
<android.widget.ImageView: void <init>(android.content.Context)>
<com.google.android.apps.mytracks.settings.MapSettingsActivity$1: void <init>(com.google.android.apps.mytracks.settings.MapSettingsActivity)>
<com.google.android.apps.mytracks.io.maps.SendMapsAsyncTask: boolean uploadAllTrackPoints(com.google.android.apps.mytracks.content.Track)>
<com.google.android.apps.mytracks.TabsAdapter: void onPageScrollStateChanged(int)>
<com.google.gdata.model.atompub.Draft: void <clinit>()>
<android.appwidget.AppWidgetManager: android.os.Bundle getAppWidgetOptions(int)>
<com.google.api.client.googleapis.json.JsonCContent: void writeTo(java.io.OutputStream)>
<android.os.Bundle: long getLong(java.lang.String)>
<com.google.api.client.http.LowLevelHttpRequest: void <init>()>
<com.google.api.client.googleapis.json.GoogleJsonResponseException: com.google.api.client.googleapis.json.GoogleJsonResponseException 'from'(com.google.api.client.json.JsonFactory,com.google.api.client.http.HttpResponse)>
<com.google.gson.stream.JsonWriter: void string(java.lang.String)>
<com.google.api.services.fusiontables.model.StyleSetting: com.google.api.services.fusiontables.model.StyleSetting setMarkerOptions(com.google.api.services.fusiontables.model.PointStyle)>
<com.google.android.apps.mytracks.io.file.exporter.SaveActivity$4: void onClick(android.content.DialogInterface,int)>
<android.widget.CompoundButton: void setChecked(boolean)>
<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken objectValue()>
<android.location.Location: void <init>(java.lang.String)>
<com.google.android.gms.internal.dz: android.widget.FrameLayout l(android.content.Context)>
<com.google.android.gms.internal.r: android.net.Uri f(java.lang.String)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtils$Factory: void <clinit>()>
<android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)>
<com.google.android.apps.mytracks.SearchListActivity$1$1: void <init>(com.google.android.apps.mytracks.SearchListActivity$1)>
<com.google.api.client.util.DataMap: com.google.api.client.util.DataMap$EntrySet entrySet()>
<android.view.View: int getPaddingLeft()>
<com.google.android.apps.mytracks.util.Api11Adapter$1: void <init>(com.google.android.apps.mytracks.util.Api11Adapter,com.google.android.apps.mytracks.ContextualActionModeCallback,android.widget.ListView)>
<com.google.api.client.http.UriTemplate: java.lang.String getMapPropertyValue(java.lang.String,java.util.Map,boolean,com.google.api.client.http.UriTemplate$CompositeOutput)>
<org.xml.sax.helpers.DefaultHandler: void <init>()>
<com.google.android.apps.mytracks.services.TrackRecordingServiceConnection: void startAndBind()>
<com.google.android.apps.mytracks.SensorStateActivity$1: void run()>
<java.lang.Math: double log1p(double)>
<com.google.api.services.drive.Drive$Builder: com.google.api.services.drive.Drive build()>
<android.support.v4.app.NotificationCompatJellybean: void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList)>
<android.support.v4.view.ViewPager: void enableLayers(boolean)>
<com.google.api.client.http.HttpResponse: java.lang.String parseAsString()>
<com.google.android.apps.mytracks.SearchListActivity: void onResume()>
<com.google.android.apps.mytracks.io.sync.SyncUtils: void updateTrack(com.google.android.apps.mytracks.content.MyTracksProviderUtils,com.google.android.apps.mytracks.content.Track,com.google.api.services.drive.model.File)>
<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>
<android.support.v4.app.LoaderManagerImpl: void <init>(java.lang.String,android.support.v4.app.FragmentActivity,boolean)>
<com.google.common.collect.AbstractMapEntry: java.lang.String toString()>
<android.database.DataSetObserver: void <init>()>
<com.google.api.client.googleapis.media.MediaHttpUploader: com.google.api.client.http.HttpResponse executeUploadInitiation(com.google.api.client.http.GenericUrl)>
<com.google.android.apps.mytracks.io.sendtogoogle.SendRequest: void setDriveSync(boolean)>
<com.google.api.services.fusiontables.Fusiontables$Builder: void <init>(com.google.api.client.http.HttpTransport,com.google.api.client.json.JsonFactory,com.google.api.client.http.HttpRequestInitializer)>
<android.support.v4.view.AccessibilityDelegateCompat: void <init>()>
<android.widget.TabHost: android.widget.TabWidget getTabWidget()>
<com.google.gson.stream.JsonReader$1: void <init>()>
<com.google.gdata.client.GoogleService: void initRequestFactory(java.lang.String)>
<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.android.apps.mytracks.content.DescriptionGeneratorImpl: void writePace(double,java.lang.StringBuilder,int,java.lang.String)>
<android.support.v4.app.NotificationCompatIceCreamSandwich: android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)>
<com.google.api.services.fusiontables.Fusiontables$Builder: com.google.api.services.fusiontables.Fusiontables$Builder setRootUrl(java.lang.String)>
<com.google.android.apps.mytracks.AbstractMyTracksActivity: boolean hideTitle()>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataParserFactory: void <init>(com.google.wireless.gdata.parser.xml.XmlParserFactory)>
<com.google.api.client.util.FieldInfo: java.lang.Class getType()>
<com.google.android.apps.mytracks.io.file.exporter.SaveActivity: void onCreate(android.os.Bundle)>
<com.google.api.client.http.HttpRequestFactory: com.google.api.client.http.HttpTransport getTransport()>
<android.support.v4.app.Fragment: void <init>()>
<java.lang.Throwable: void printStackTrace()>
<com.google.android.apps.mytracks.content.Sensor$SensorData: com.google.android.apps.mytracks.content.Sensor$SensorData$Builder newBuilder()>
<android.location.Location: void <clinit>()>
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment)>
<com.google.android.apps.mytracks.fragments.DeleteMarkerDialogFragment: void onAttach(android.app.Activity)>
<com.google.android.apps.mytracks.services.sensors.ant.AntSensorManager: void setupAntChannel(byte,byte)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: android.location.Location createTrackPoint(android.database.Cursor)>
<com.google.android.apps.mytracks.stats.TripStatistics: void setStartTime(long)>
<com.google.android.apps.mytracks.content.SearchEngine: double scoreTrackResult(com.google.android.apps.mytracks.content.SearchEngine$SearchQuery,com.google.android.apps.mytracks.content.Track)>
<com.google.common.primitives.UnsignedInts: java.lang.String toString(int,int)>
<java.util.HashMap: void putAll(java.util.Map)>
<com.google.gdata.util.ServiceForbiddenException: void <init>(java.net.HttpURLConnection)>
<com.google.gdata.model.QName: int hashCode()>
<com.google.gdata.data.spreadsheet.CellFeed: void <init>()>
<java.net.URL: java.net.URLConnection openConnection()>
<com.google.api.services.drive.Drive$Permissions$List: void <init>(com.google.api.services.drive.Drive$Permissions,java.lang.String)>
<com.google.gdata.data.BaseFeed: void <init>(java.lang.Class)>
<com.google.android.apps.mytracks.MarkerEditActivity: void onStop()>
<com.google.gdata.util.ServiceExceptionInitializer$ErrorsHandler: void <init>(com.google.gdata.util.ServiceExceptionInitializer,com.google.gdata.util.ServiceExceptionInitializer$1)>
<com.google.gdata.data.Category: void <clinit>()>
<android.os.AsyncTask: boolean isCancelled()>
<com.google.api.client.util.ArrayMap: int getDataIndexOfKey(java.lang.Object)>
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl: java.lang.Object newAccessiblityDelegateDefaultImpl()>
<com.google.gdata.util.common.base.CharMatcher$11: void setBits(com.google.gdata.util.common.base.CharMatcher$LookupTable)>
<com.google.gdata.util.ErrorDomain$ErrorCode: com.google.gdata.util.ErrorContent$LocationType getLocationType()>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: com.google.android.apps.mytracks.content.Waypoint getWaypoint(long)>
<com.google.api.client.util.ArrayMap: void setData(int,java.lang.Object,java.lang.Object)>
<android.support.v4.content.ModernAsyncTask$4: void <clinit>()>
<android.widget.TextView: void setMinWidth(int)>
<com.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask: void <init>(android.content.Context)>
<com.google.android.apps.mytracks.content.DataSourceManager: void unregisterListener(com.google.android.apps.mytracks.content.TrackDataType)>
<com.google.common.collect.ImmutableCollection$EmptyImmutableCollection: void <init>()>
<java.util.Arrays: java.lang.String toString(java.lang.Object[])>
<com.google.android.apps.analytics.CustomVariableBuffer: com.google.android.apps.analytics.CustomVariable[] getCustomVariableArray()>
<com.google.api.client.util.GenericData$EntrySet: java.util.Iterator iterator()>
<com.google.gdata.model.atom.Entry: void <clinit>()>
<com.google.gdata.client.spreadsheet.SpreadsheetService: void declareExtensions()>
<org.apache.http.impl.client.AbstractHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>
<android.graphics.Rect: void <init>()>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: android.database.Cursor getTrackPointCursor(long,long,int,boolean)>
<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidTag()>
<com.google.api.client.http.FileContent: com.google.api.client.http.AbstractInputStreamContent setType(java.lang.String)>
<com.google.api.client.json.JsonParser: java.lang.Object parse(java.lang.Class,com.google.api.client.json.CustomizeJsonParser)>
<com.google.gdata.util.common.base.Preconditions: void checkState(boolean,java.lang.Object)>
<com.google.android.apps.mytracks.stats.TripStatistics: void setMinGrade(double)>
<java.util.concurrent.CountDownLatch: void <init>(int)>
<com.google.android.apps.mytracks.util.Api8Adapter: void setTabBackground(android.widget.TabWidget)>
<org.apache.http.HttpHost: int getPort()>
<java.util.LinkedList: java.lang.Object get(int)>
<java.math.BigDecimal: double doubleValue()>
<com.google.android.apps.mytracks.io.maps.SendMapsUtils: boolean uploadSegment(java.lang.String,java.lang.String,java.util.ArrayList,com.google.android.apps.mytracks.io.gdata.maps.MapsClient,java.lang.String,com.google.android.apps.mytracks.io.gdata.maps.MapsGDataConverter)>
<com.google.gdata.util.LogUtils: void logException(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)>
<android.support.v4.app.TaskStackBuilder: android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName)>
<com.google.api.client.http.apache.ApacheHttpTransport: com.google.api.client.http.LowLevelHttpRequest buildDeleteRequest(java.lang.String)>
<com.google.android.apps.mytracks.services.sensors.ant.AntSensorManager: void clearAllChannels()>
<com.google.gdata.util.common.base.CharMatcher$18: com.google.gdata.util.common.base.CharMatcher precomputed()>
<com.google.android.apps.mytracks.io.sendtogoogle.SendRequest: void setAccount(android.accounts.Account)>
<com.google.common.collect.Lists: int computeArrayListCapacity(int)>
<android.view.ViewGroup$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<com.google.android.apps.mytracks.MarkerEditActivity: void <init>()>
<java.io.BufferedReader: void <init>(java.io.Reader)>
<com.google.api.client.http.GenericUrl: void appendRawPathFromParts(java.lang.StringBuilder)>
<java.lang.Class: java.lang.Class forName(java.lang.String)>
<com.google.gson.stream.JsonReader: java.lang.String nextString()>
<com.google.api.client.util.escape.CharEscapers: java.lang.String decodeUri(java.lang.String)>
<com.google.gdata.model.Schema: com.google.gdata.model.ElementMetadataRegistry getElement(com.google.gdata.model.ElementKey)>
<java.math.BigDecimal: boolean equals(java.lang.Object)>
<android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
<java.lang.Math: int max(int,int)>
<android.support.v4.view.ViewConfigurationCompat: void <clinit>()>
<com.google.api.client.googleapis.json.GoogleJsonResponseException: void <init>(com.google.api.client.http.HttpResponse,com.google.api.client.googleapis.json.GoogleJsonError,java.lang.String)>
<com.google.android.gms.location.LocationRequest: void <init>()>
<com.google.api.client.util.escape.PercentEscaper: void <clinit>()>
<com.google.android.apps.mytracks.SensorStateActivity: java.lang.String getHeartRate(com.google.android.apps.mytracks.content.Sensor$SensorDataSet)>
<com.google.api.client.util.DateTime: void <init>(boolean,long,java.lang.Integer)>
<com.google.gdata.util.httputil.FormUrlDecoder: void parseWithCallback(java.lang.String,java.lang.String,com.google.gdata.util.httputil.FormUrlDecoder$Callback)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: int access$502(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,int)>
<com.google.gdata.wireformats.input.AtomServiceDualParser: void <init>()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)>
<android.app.Activity: void onResume()>
<com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager: android.bluetooth.BluetoothAdapter access$100(com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager)>
<com.google.android.apps.mytracks.io.file.exporter.SaveActivity: com.google.android.apps.mytracks.io.file.TrackFileFormat access$300(com.google.android.apps.mytracks.io.file.exporter.SaveActivity)>
<com.google.android.apps.mytracks.fragments.FrequencyDialogFragment: int access$000(com.google.android.apps.mytracks.fragments.FrequencyDialogFragment,int)>
<com.google.gdata.util.VersionConflictException: void <init>(java.net.HttpURLConnection)>
<android.location.Location: void setSpeed(float)>
<com.google.android.apps.mytracks.content.Waypoint: void setIcon(java.lang.String)>
<com.google.android.apps.mytracks.services.TrackRecordingServiceConnection: void unbindAndStop()>
<java.lang.Double: void <init>(double)>
<com.google.api.services.fusiontables.model.StyleFunction: void <clinit>()>
<com.google.api.client.googleapis.services.AbstractGoogleClient: java.lang.String getServicePath()>
<com.google.gdata.util.ServiceForbiddenException: void initResponseCode()>
<com.google.android.gms.internal.ce$c: android.os.IInterface o()>
<com.google.android.apps.mytracks.SearchListActivity: void onDeleteMarkerDone()>
<com.google.android.apps.mytracks.io.sendtogoogle.UploadResultActivity: android.app.Dialog onCreateDialog(int)>
<com.google.common.collect.Iterators$13: java.lang.Object get(int)>
<com.google.gdata.data.spreadsheet.ListFeed: void <init>()>
<com.google.android.apps.mytracks.stats.TripStatistics: double getMaxGrade()>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void writeBeginTracks()>
<android.support.v4.app.DialogFragment: void onDestroyView()>
<com.google.gdata.util.XmlParser$ElementHandler: void <clinit>()>
<com.google.android.apps.mytracks.AbstractMyTracksActivity: void <init>()>
<com.google.android.apps.mytracks.io.maps.SendMapsActivity: void startNextActivity(boolean,boolean)>
<com.google.gdata.util.parser.Chset: void refreshAsciiSet()>
<com.google.android.apps.analytics.HitBuilder: void appendCurrencyValue(java.lang.StringBuilder,java.lang.String,double)>
<java.text.Format: java.lang.String format(java.lang.Object)>
<com.google.android.apps.mytracks.services.sensors.ant.AntSensorManager$ChannelStates: void <init>(java.lang.String,int)>
<com.google.protobuf.GeneratedMessageLite$Builder: void <init>()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: boolean getDebug()>
<com.google.api.client.util.ArrayMap$Entry: boolean equals(java.lang.Object)>
<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException truncatedMessage()>
<com.google.gdata.util.common.base.StringUtil: boolean isEmpty(java.lang.String)>
<com.google.api.services.drive.model.File: java.lang.String getAlternateLink()>
<com.google.api.client.json.gson.GsonGenerator: void writeEndArray()>
<com.google.gdata.client.GoogleService$CaptchaRequiredException: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<java.lang.reflect.Modifier: boolean isPublic(int)>
<java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>
<com.google.android.apps.mytracks.content.Track: long getId()>
<com.google.android.apps.mytracks.TrackListActivity: boolean access$402(com.google.android.apps.mytracks.TrackListActivity,boolean)>
<com.google.android.apps.mytracks.services.sensors.BluetoothSensorManager: void <clinit>()>
<com.google.gdata.client.Service: com.google.gdata.model.Schema getSchema()>
<java.io.File: java.lang.String toString()>
<com.google.android.apps.mytracks.fragments.MyTracksMapFragment$1$1: void <init>(com.google.android.apps.mytracks.fragments.MyTracksMapFragment$1)>
<com.google.android.apps.mytracks.io.sync.SyncUtils: com.google.api.services.drive.Drive getDriveService(com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential)>
<com.google.android.apps.mytracks.settings.SettingsActivity$1: void <init>(com.google.android.apps.mytracks.settings.SettingsActivity)>
<com.google.android.apps.mytracks.stats.ExtremityMonitor: double getMax()>
<android.app.ProgressDialog: void setIndeterminate(boolean)>
<com.google.android.apps.mytracks.MarkerEditActivity: void onStart()>
<com.google.api.services.fusiontables.model.Column: void <init>()>
<com.google.gdata.data.ExtensionDescription: void <init>()>
<com.google.android.apps.mytracks.services.TrackRecordingService: boolean access$202(com.google.android.apps.mytracks.services.TrackRecordingService,boolean)>
<com.google.android.apps.mytracks.content.Waypoint: java.lang.String getName()>
<com.google.android.apps.mytracks.util.Api14Adapter: boolean handleSearchKey(android.view.MenuItem)>
<java.util.AbstractSequentialList: void <init>()>
<com.google.android.apps.mytracks.stats.TripStatistics: void updateLatitudeExtremities(double)>
<com.google.android.apps.mytracks.settings.RecordingSettingsActivity: void configListPreference(int,int,int,boolean)>
<android.provider.ContactsContract$CommonDataKinds$Email: void <clinit>()>
<com.google.android.apps.mytracks.util.GoogleLocationUtils: boolean isAllowed(android.content.Context)>
<java.util.concurrent.FutureTask: boolean cancel(boolean)>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
<com.google.android.apps.mytracks.util.TrackIconUtils: int getIconActivityType(java.lang.String)>
<android.widget.TabHost: void addTab(android.widget.TabHost$TabSpec)>
<com.google.android.apps.analytics.Event: void <init>(com.google.android.apps.analytics.Event,java.lang.String)>
<com.google.common.collect.AbstractIndexedListIterator: java.lang.Object next()>
<com.google.android.apps.mytracks.DeleteAsyncTask: void <init>(com.google.android.apps.mytracks.DeleteActivity,long[])>
<com.google.gdata.model.QName: void <clinit>()>
<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>
<com.google.android.common.gdata.AndroidGDataClient: void close()>
<android.database.Observable: void registerObserver(java.lang.Object)>
<android.app.Activity: void onCreate(android.os.Bundle)>
<com.google.gdata.util.ServiceException: void setResponseBody(java.lang.String)>
<com.google.api.client.http.HttpResponseException: void <init>(com.google.api.client.http.HttpResponse,java.lang.String)>
<com.google.android.apps.mytracks.services.sensors.SensorManagerFactory: com.google.android.apps.mytracks.services.sensors.SensorManager getSystemSensorManager(android.content.Context)>
<com.google.api.client.http.apache.ApacheHttpTransport: boolean supportsMethod(java.lang.String)>
<com.google.api.client.util.LoggingInputStream: void <init>(java.io.InputStream,java.util.logging.Logger,java.util.logging.Level,int)>
<com.google.android.apps.analytics.CustomVariableBuffer: boolean hasCustomVariables()>
<android.support.v4.content.IntentCompatHoneycomb: android.content.Intent makeMainActivity(android.content.ComponentName)>
<com.google.gdata.util.common.net.UriParameterMap$1: void handleParameter(java.lang.String,java.lang.String)>
<com.google.api.client.auth.oauth2.TokenResponseException: com.google.api.client.auth.oauth2.TokenErrorResponse getDetails()>
<android.location.Location: void reset()>
<com.google.android.gms.common.GooglePlayServicesUtil: android.content.Intent a(android.content.Context,int,int)>
<com.google.api.client.googleapis.GoogleHeaders: void setUploadContentLength(java.lang.Long)>
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl: java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat)>
<android.support.v4.app.FragmentManagerImpl: void dispatchDestroyView()>
<java.lang.Math: long min(long,long)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: com.google.android.apps.mytracks.content.MyTracksProviderUtils$LocationIterator getTrackPointLocationIterator(long,long,boolean,com.google.android.apps.mytracks.content.MyTracksProviderUtils$LocationFactory)>
<java.util.NoSuchElementException: void <init>()>
<com.google.android.apps.mytracks.services.TrackRecordingService: void startRecording(boolean)>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: com.google.android.apps.mytracks.content.Sensor$SensorDataSet buildParsed()>
<com.google.android.apps.mytracks.TrackDetailActivity$1$1: void <init>(com.google.android.apps.mytracks.TrackDetailActivity$1)>
<com.google.gdata.data.BaseEntry: void <init>()>
<com.google.android.apps.mytracks.content.TrackDataType: com.google.android.apps.mytracks.content.TrackDataType[] values()>
<android.content.UriMatcher: int match(android.net.Uri)>
<android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder 'from'(android.app.Activity)>
<com.google.api.client.json.gson.GsonParser: double getDoubleValue()>
<com.google.gdata.util.common.base.CharEscaperBuilder: com.google.gdata.util.common.base.CharEscaperBuilder addEscapes(char[],java.lang.String)>
<com.google.common.base.Joiner: com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String)>
<android.content.ContentValues: void put(java.lang.String,java.lang.String)>
<org.apache.http.conn.params.ConnManagerParams: void setTimeout(org.apache.http.params.HttpParams,long)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>
<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>
<android.support.v4.app.Fragment: void onCreate(android.os.Bundle)>
<java.lang.AbstractStringBuilder: void <init>()>
<com.google.android.apps.mytracks.content.MyTracksProvider: java.lang.String getType(android.net.Uri)>
<com.google.android.apps.mytracks.stats.TripStatistics: double getMaxSpeed()>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: android.database.Cursor getWaypointCursor(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int)>
<com.google.android.apps.mytracks.fragments.EulaDialogFragment: void onStart()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void startNewSession(java.lang.String,int,android.content.Context)>
<com.google.gdata.model.atom.Feed: void <clinit>()>
<com.google.gdata.data.ExtensionDescription: void <init>(java.lang.Class,com.google.gdata.util.common.xml.XmlNamespace,java.lang.String,boolean,boolean,boolean,boolean,boolean)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeatureMetadata: java.lang.String getIconUrl()>
<com.google.gdata.model.Schema$RootKey: void <init>(java.lang.Class)>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity$6: void <init>(com.google.android.apps.mytracks.settings.AdvancedSettingsActivity)>
<com.google.android.gsf.Gservices$1$1: void <init>(com.google.android.gsf.Gservices$1,android.os.Handler)>
<android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<android.os.HandlerThread: void <init>(java.lang.String)>
<com.google.api.services.drive.Drive$Files: com.google.api.services.drive.Drive$Files$Update update(java.lang.String,com.google.api.services.drive.model.File,com.google.api.client.http.AbstractInputStreamContent)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: void deleteTrackPointsAndWaypoints(android.content.Context,long)>
<com.google.android.apps.mytracks.maps.FixedSpeedTrackPathDescriptor: double access$100(com.google.android.apps.mytracks.maps.FixedSpeedTrackPathDescriptor)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<java.util.HashMap: int size()>
<java.util.AbstractSequentialList: java.util.Iterator iterator()>
<android.support.v4.app.FragmentPagerAdapter: void finishUpdate(android.view.ViewGroup)>
<com.google.android.apps.mytracks.io.drive.SendDriveAsyncTask: boolean performTask()>
<com.google.gdata.util.NoLongerAvailableException: void initResponseCode()>
<com.google.android.apps.mytracks.io.file.importer.KmzTrackImporter: long parseKml(java.util.zip.ZipInputStream)>
<android.widget.Spinner: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.google.android.apps.mytracks.content.Sensor$SensorData: int getValue()>
<com.google.android.apps.mytracks.fragments.EulaDialogFragment$2: boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent)>
<com.google.android.apps.analytics.AdMobInfo: int generateAdHitId()>
<com.google.android.gms.internal.p: void f(android.os.IBinder)>
<com.google.android.apps.mytracks.io.file.exporter.FileTrackExporter: void <init>(com.google.android.apps.mytracks.content.MyTracksProviderUtils,com.google.android.apps.mytracks.content.Track[],com.google.android.apps.mytracks.io.file.exporter.TrackWriter,com.google.android.apps.mytracks.io.file.exporter.TrackExporterListener)>
<android.os.Handler: android.os.Looper getLooper()>
<com.google.gdata.model.Schema: void <init>(com.google.gdata.model.MetadataRegistry)>
<org.apache.http.client.methods.HttpPost: void <init>(java.net.URI)>
<java.io.FileInputStream: void close()>
<com.google.api.services.fusiontables.model.Column: com.google.api.services.fusiontables.model.Column setName(java.lang.String)>
<com.google.gdata.client.http.HttpGDataRequest: java.net.HttpURLConnection getRequestConnection(java.net.URL)>
<android.support.v4.app.NotificationCompat$Builder: void setFlag(int,boolean)>
<com.google.common.collect.RegularImmutableMap$TerminalEntry: void <init>(java.lang.Object,java.lang.Object)>
<com.google.android.apps.mytracks.services.sensors.ant.SpeedDistanceChannelConfiguration: void <init>()>
<com.google.gdata.client.Service: com.google.gdata.data.IFeed getFeed(java.net.URL,java.lang.Class,java.lang.String)>
<com.google.gdata.util.httputil.FormUrlDecoder: java.lang.String access$100(char[],int,int,java.lang.String)>
<com.google.android.apps.mytracks.TrackDetailActivity: void onCreate(android.os.Bundle)>
<com.google.gdata.client.http.HttpGDataRequest: void handleOAuthProxyErrorResponse()>
<android.support.v4.app.Fragment: void performDestroyView()>
<java.math.BigInteger: double doubleValue()>
<com.google.api.client.util.escape.UnicodeEscaper: void <init>()>
<com.google.android.apps.mytracks.io.file.exporter.SaveActivity: void <init>()>
<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet copyOf(java.lang.Object[])>
<android.support.v4.app.Fragment: void performStop()>
<android.support.v4.app.DialogFragment: void onCreate(android.os.Bundle)>
<com.google.gdata.util.ParseException: void <init>(java.lang.String,java.lang.Throwable)>
<java.io.File: java.lang.String getPath()>
<com.google.gdata.util.XmlParser: void <clinit>()>
<com.google.protobuf.WireFormat: int getTagFieldNumber(int)>
<com.google.common.collect.AbstractMapBasedMultiset$1: com.google.common.collect.Multiset$Entry next()>
<com.google.android.apps.mytracks.util.FileUtils: java.lang.String getPathDisplayName(java.lang.String[])>
<com.google.gson.stream.JsonReader: void setLenient(boolean)>
<com.google.gdata.wireformats.output.AtomServiceGenerator: void <init>()>
<android.support.v4.content.ModernAsyncTask$InternalHandler: void <init>(android.support.v4.content.ModernAsyncTask$1)>
<java.lang.Math: double sin(double)>
<com.google.api.client.http.AbstractInputStreamContent: java.lang.String getEncoding()>
<com.google.api.client.googleapis.extensions.android.accounts.GoogleAccountManager: android.accounts.Account[] getAccounts()>
<com.google.android.apps.mytracks.content.Sensor$SensorData: void <init>()>
<android.content.Intent: android.content.Intent setAction(java.lang.String)>
<com.google.gdata.model.MetadataRegistry: void <init>()>
<com.google.api.client.googleapis.media.MediaHttpUploader: void <init>(com.google.api.client.http.AbstractInputStreamContent,com.google.api.client.http.HttpTransport,com.google.api.client.http.HttpRequestInitializer)>
<com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment: android.database.Cursor getAutoCompleteCursor(android.support.v4.app.FragmentActivity,java.lang.CharSequence)>
<com.google.gdata.data.Feed: void declareExtensions(com.google.gdata.data.ExtensionProfile)>
<android.view.View: void <clinit>()>
<com.google.gdata.model.Schema: com.google.gdata.model.ElementMetadata bind(com.google.gdata.model.ElementKey,com.google.gdata.model.ElementKey,com.google.gdata.model.MetadataContext)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>
<android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb: void <init>()>
<java.io.OutputStream: void flush()>
<com.google.api.client.http.HttpResponse: com.google.api.client.http.HttpHeaders getHeaders()>
<android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: java.lang.Object newEdgeEffect(android.content.Context)>
<com.google.common.collect.Count: boolean equals(java.lang.Object)>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity$1$1: void <init>(com.google.android.apps.mytracks.settings.AdvancedSettingsActivity$1)>
<com.google.android.apps.mytracks.fragments.PlayMultipleDialogFragment: com.google.android.apps.mytracks.fragments.PlayMultipleDialogFragment newInstance(long)>
<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.support.v4.app.FragmentState$1: void <init>()>
<java.net.URI: java.lang.String getHost()>
<com.google.android.gms.internal.x: java.lang.Object b(java.lang.Object,java.lang.Object)>
<android.view.View: boolean isInEditMode()>
<com.google.android.apps.mytracks.services.sensors.ant.AntSensorManager: void <init>(android.content.Context)>
<android.location.Location: float getBearing()>
<com.google.gdata.util.common.base.CharMatcher$8: void <init>()>
<com.google.android.apps.mytracks.content.MyTracksProviderUtils$1: void <init>()>
<java.lang.Enum: boolean equals(java.lang.Object)>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.android.apps.mytracks.io.file.importer.ImportAsyncTask: void setActivity(com.google.android.apps.mytracks.io.file.importer.ImportActivity)>
<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet construct(int,java.lang.Object[])>
<com.google.android.apps.mytracks.TrackListActivity$6: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>
<com.google.gdata.model.MetadataCreatorImpl: com.google.gdata.model.MetadataCreatorImpl setName(com.google.gdata.model.QName)>
<com.google.android.apps.mytracks.fragments.ChooseActivityTypeDialogFragment: void access$100(android.view.View,int)>
<com.google.api.client.json.gson.GsonGenerator: void flush()>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpParser getParser(java.lang.String)>
<com.google.common.collect.ForwardingMultimap: boolean put(java.lang.Object,java.lang.Object)>
<com.google.api.client.http.HttpMediaType: java.nio.charset.Charset getCharsetParameter()>
<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
<android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<com.google.api.client.json.JsonParser: com.google.api.client.json.JsonToken startParsingObjectOrArray()>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: void <init>(com.google.android.apps.mytracks.content.Sensor$1)>
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>
<com.google.android.apps.mytracks.services.TrackRecordingService$2: void onLocationChanged(android.location.Location)>
<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
<com.google.common.primitives.UnsignedInteger: double doubleValue()>
<com.google.common.collect.LinkedHashMultiset: com.google.common.collect.LinkedHashMultiset create()>
<android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl: void <init>()>
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<com.google.android.apps.mytracks.util.TrackIconUtils: int getIconDrawable(java.lang.String)>
<java.util.Vector: void <init>()>
<com.google.api.client.http.HttpHeaders: void setAuthorization(java.lang.String)>
<com.google.android.apps.analytics.AdMobInfo: void <init>()>
<com.google.android.apps.mytracks.TrackDetailActivity$4: void onClick(android.view.View)>
<android.support.v4.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)>
<java.util.TreeMap: void <init>()>
<com.google.android.apps.mytracks.util.TrackRecordingServiceConnectionUtils: void resetRecordingState(android.content.Context)>
<com.google.gdata.client.Service: com.google.gdata.data.IFeed getFeed(java.net.URL,java.lang.Class)>
<com.google.android.apps.mytracks.services.MyTracksLocationManager: com.google.android.gms.location.LocationListener access$400(com.google.android.apps.mytracks.services.MyTracksLocationManager)>
<com.google.api.client.util.ArrayValueMap$ArrayValue: java.lang.Object toArray()>
<com.google.wireless.gdata.parser.xml.XmlGDataParser: void close()>
<com.google.api.client.util.DateTime: void appendInt(java.lang.StringBuilder,int,int)>
<com.google.android.apps.mytracks.TrackDetailActivity: boolean hideTitle()>
<com.google.android.apps.mytracks.TrackEditActivity: android.widget.EditText access$400(com.google.android.apps.mytracks.TrackEditActivity)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: android.database.Cursor getWaypointCursor(long,long,int)>
<com.google.android.apps.mytracks.stats.TripStatistics: void setMovingTime(long)>
<java.util.ArrayList: int hashCode()>
<java.io.File: java.lang.String getName()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>
<com.google.android.apps.analytics.CustomVariable: int getIndex()>
<com.google.android.apps.mytracks.MarkerListActivity$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.widget.TextView: void setGravity(int)>
<android.support.v4.util.SparseArrayCompat: int idealByteArraySize(int)>
<com.google.android.apps.mytracks.content.MyTracksProvider$UrlType: void <init>(java.lang.String,int)>
<com.google.android.apps.mytracks.io.sendtogoogle.SendToGoogleUtils: com.google.android.apps.mytracks.content.Track createNewSegment(com.google.android.apps.mytracks.content.Track,long)>
<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>
<com.google.gdata.client.GoogleAuthTokenFactory: com.google.gdata.client.AuthTokenFactory$AuthToken getAuthToken()>
<android.view.View: void postInvalidateOnAnimation()>
<com.google.android.apps.mytracks.content.TrackDataHub: java.lang.String access$400()>
<com.google.gson.stream.JsonWriter$1: void <clinit>()>
<java.io.File: void <init>(java.io.File,java.lang.String)>
<com.google.api.client.http.HttpHeaders: void addHeader(java.util.logging.Logger,java.lang.StringBuilder,java.lang.StringBuilder,com.google.api.client.http.LowLevelHttpRequest,java.lang.String,java.lang.Object,java.io.Writer)>
<com.google.common.primitives.UnsignedLongs: java.lang.String toString(long)>
<java.util.BitSet: void clear()>
<android.support.v4.content.ModernAsyncTask$1: void <init>()>
<java.lang.Double: boolean isInfinite(double)>
<android.support.v4.app.Fragment: void performCreate(android.os.Bundle)>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence)>
<com.google.api.services.drive.Drive$Permissions: com.google.api.services.drive.Drive$Permissions$Insert insert(java.lang.String,com.google.api.services.drive.model.Permission)>
<com.google.android.apps.mytracks.services.AdaptiveLocationListenerPolicy: int getMinDistance()>
<com.google.android.apps.mytracks.util.Api11Adapter: void configureListViewContextualMenu(android.app.Activity,android.widget.ListView,com.google.android.apps.mytracks.ContextualActionModeCallback)>
<com.google.android.apps.mytracks.fragments.MarkerDetailFragment: void <init>()>
<com.google.android.apps.mytracks.settings.AbstractSettingsActivity: void <init>()>
<com.google.api.services.drive.Drive$Builder: com.google.api.services.drive.Drive$Builder setRootUrl(java.lang.String)>
<android.support.v4.app.FragmentActivity: java.lang.Object getLastCustomNonConfigurationInstance()>
<android.view.View: void clearAnimation()>
<com.google.android.apps.mytracks.HelpActivity: void onSaveInstanceState(android.os.Bundle)>
<com.google.android.common.gdata.AndroidXmlParserFactory: org.xmlpull.v1.XmlSerializer createSerializer()>
<android.util.Log: int d(java.lang.String,java.lang.String)>
<com.google.api.client.util.Types: java.lang.Iterable iterableOf(java.lang.Object)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)>
<com.google.wireless.gdata.serializer.xml.XmlEntryGDataSerializer: void serializeUpdateDate(org.xmlpull.v1.XmlSerializer,java.lang.String)>
<android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)>
<android.support.v4.app.FragmentActivity: void onPause()>
<android.view.View: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>
<com.google.android.apps.mytracks.io.sync.SyncUtils: boolean updateDriveFile(com.google.api.services.drive.Drive,com.google.api.services.drive.model.File,android.content.Context,com.google.android.apps.mytracks.content.MyTracksProviderUtils,com.google.android.apps.mytracks.content.Track,boolean)>
<java.lang.String: int codePointAt(int)>
<com.google.gdata.util.common.net.UriParameterMap: void <init>(com.google.common.collect.ListMultimap)>
<com.google.android.apps.mytracks.io.sync.SyncUtils: void disableSync(android.content.Context)>
<com.google.android.apps.mytracks.fragments.MyTracksMapFragment$1$2: void <init>(com.google.android.apps.mytracks.fragments.MyTracksMapFragment$1)>
<com.google.android.apps.mytracks.content.Sensor$SensorState$1: void <init>()>
<org.apache.http.HttpHost: java.lang.String getHostName()>
<com.google.api.client.googleapis.json.JsonCParser: void <init>(com.google.api.client.json.JsonFactory)>
<com.google.api.client.http.ExponentialBackOffPolicy: long getNextBackOffMillis()>
<com.google.gdata.wireformats.AltFormat$Builder: boolean access$700(com.google.gdata.wireformats.AltFormat$Builder)>
<com.google.android.apps.mytracks.services.sensors.ant.AntSensorManager: void <clinit>()>
<com.google.android.apps.mytracks.services.sensors.ant.CadenceCounter: void <init>()>
<com.google.android.apps.mytracks.io.sync.SyncService: void <clinit>()>
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
<com.google.gdata.wireformats.AltFormat$Builder: com.google.gdata.wireformats.AltFormat access$200(com.google.gdata.wireformats.AltFormat$Builder)>
<android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)>
<android.app.Notification$BigPictureStyle: android.app.Notification$BigPictureStyle bigLargeIcon(android.graphics.Bitmap)>
<com.google.android.apps.mytracks.util.LocationUtils: void decimate(com.google.android.apps.mytracks.content.Track,double)>
<com.google.android.apps.mytracks.fragments.ChartFragment$3: void onClick(android.view.View)>
<com.google.android.apps.mytracks.io.file.exporter.FileTrackExporter$TrackWriterLocationFactory: void <init>(com.google.android.apps.mytracks.io.file.exporter.FileTrackExporter,com.google.android.apps.mytracks.io.file.exporter.FileTrackExporter$1)>
<java.util.TreeSet: java.util.Iterator iterator()>
<com.google.android.apps.mytracks.io.file.exporter.SaveActivity: com.google.android.apps.mytracks.io.file.exporter.SaveAsyncTask access$000(com.google.android.apps.mytracks.io.file.exporter.SaveActivity)>
<android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>
<com.google.api.client.http.UriTemplate$CompositeOutput: void <init>(java.lang.String,int,java.lang.Character,java.lang.String,java.lang.String,boolean,boolean)>
<android.support.v4.view.ViewPager$ViewPositionComparator: void <init>()>
<android.view.animation.AnimationSet: void <init>(boolean)>
<com.google.api.client.json.gson.GsonParser: float getFloatValue()>
<com.google.android.gms.internal.x: void a(boolean,java.lang.Object)>
<com.google.gdata.model.gd.GdAttributes: void <clinit>()>
<com.google.android.gms.internal.z: android.view.View d(android.content.Context,int,int)>
<java.io.PrintWriter: void println(java.lang.Object)>
<com.google.android.apps.mytracks.io.file.exporter.SaveActivity$2: void onClick(android.content.DialogInterface,int)>
<com.google.gdata.wireformats.AltFormat$Builder: com.google.gdata.util.ContentType access$500(com.google.gdata.wireformats.AltFormat$Builder)>
<android.app.Notification$BigPictureStyle: android.app.Notification$BigPictureStyle setSummaryText(java.lang.CharSequence)>
<com.google.android.apps.mytracks.io.file.exporter.SaveActivity: java.lang.Object onRetainNonConfigurationInstance()>
<android.support.v4.app.FragmentPagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)>
<com.google.gdata.model.TransformKey: com.google.gdata.model.TransformKey forTransform(com.google.gdata.model.ElementKey,com.google.gdata.model.MetadataKey,com.google.gdata.model.MetadataContext)>
<java.lang.System: long currentTimeMillis()>
<com.google.gdata.util.common.base.CharMatcher$Or: void setBits(com.google.gdata.util.common.base.CharMatcher$LookupTable)>
<android.app.PendingIntent: void <clinit>()>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: com.google.android.apps.mytracks.content.Sensor$SensorData getPower()>
<com.google.android.apps.mytracks.io.file.exporter.FileTrackExporter: void writeLocations(com.google.android.apps.mytracks.content.Track,long)>
<com.google.android.apps.mytracks.content.TracksColumns: void <clinit>()>
<com.google.android.apps.mytracks.TrackListActivity$9: void <init>(com.google.android.apps.mytracks.TrackListActivity,android.content.Context,int,android.database.Cursor,int)>
<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<android.database.Observable: void unregisterObserver(java.lang.Object)>
<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)>
<com.google.android.apps.mytracks.util.EulaUtils: boolean showEnableSync(android.content.Context)>
<com.google.gdata.client.Service: com.google.gdata.data.IFeed getFeed(com.google.gdata.client.Service$GDataRequest,java.lang.Class,java.lang.String)>
<android.support.v4.app.FragmentManagerImpl: void addBackStackState(android.support.v4.app.BackStackRecord)>
<com.google.android.apps.mytracks.stats.TripStatistics: double getTotalElevationGain()>
<android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl: void <init>()>
<com.google.gson.stream.JsonReader: void skipToEndOfLine()>
<java.lang.Class: java.lang.Class getEnclosingClass()>
<android.widget.EdgeEffect: void <init>(android.content.Context)>
<android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)>
<com.google.gdata.model.AttributeMetadataRegistryBuilder: com.google.gdata.model.AttributeCreatorImpl build(com.google.gdata.model.ElementKey,com.google.gdata.model.AttributeKey,com.google.gdata.model.MetadataContext)>
<com.dsi.ant.exception.AntInterfaceException: void <init>(java.lang.String)>
<android.view.View: int getId()>
<com.google.android.apps.mytracks.settings.MapSettingsActivity: void updatePercentageSummary()>
<android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)>
<com.google.android.apps.mytracks.fragments.EulaDialogFragment: void <init>()>
<com.google.api.client.http.GenericUrl: int hashCode()>
<com.google.android.apps.mytracks.TrackListActivity$7: void onDismiss()>
<com.google.android.apps.mytracks.content.Waypoint: void setStopId(long)>
<com.google.android.common.http.UrlRules$RuleFormatException: void <init>(java.lang.String)>
<com.google.android.gms.internal.a$a: com.google.android.gms.internal.a a(android.os.IBinder)>
<com.google.protobuf.CodedInputStream: void skipRawBytes(int)>
<android.content.Intent: void <init>(android.content.Intent)>
<com.google.android.apps.mytracks.services.MyTracksLocationManager$1: void onConnected(android.os.Bundle)>
<com.google.android.apps.mytracks.services.sensors.SensorManager$1: void <init>(com.google.android.apps.mytracks.services.sensors.SensorManager)>
<com.google.android.apps.mytracks.content.TrackDataHub: void notifyTrackPointsTableUpdate(boolean,java.util.Set,java.util.Set)>
<java.util.Stack: void <init>()>
<com.google.common.base.Throwables: java.lang.RuntimeException propagate(java.lang.Throwable)>
<com.google.api.client.http.javanet.NetHttpResponse: void disconnect()>
<android.app.Notification$Builder: android.app.Notification$Builder setLargeIcon(android.graphics.Bitmap)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: com.google.android.apps.mytracks.content.Sensor$SensorData access$1302(com.google.android.apps.mytracks.content.Sensor$SensorDataSet,com.google.android.apps.mytracks.content.Sensor$SensorData)>
<com.google.api.client.http.UriTemplate: void <clinit>()>
<com.google.android.apps.mytracks.services.MyTracksLocationManager: void close()>
<android.app.Notification$InboxStyle: android.app.Notification$InboxStyle setSummaryText(java.lang.CharSequence)>
<android.widget.RemoteViews: void setChronometer(int,long,java.lang.String,boolean)>
<com.google.common.collect.ImmutableSet$ArrayImmutableSet: java.util.Iterator iterator()>
<android.support.v4.view.ViewCompat$HCViewCompatImpl: void <init>()>
<com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager$ConnectThread: void cancel()>
<com.google.gdata.util.common.base.CharMatcher: void <init>()>
<android.support.v4.content.ModernAsyncTask: boolean cancel(boolean)>
<com.google.wireless.gdata.serializer.xml.XmlEntryGDataSerializer: void <init>(com.google.wireless.gdata.parser.xml.XmlParserFactory,com.google.wireless.gdata.data.Entry)>
<java.lang.Enum: void <init>(java.lang.String,int)>
<com.google.api.client.util.DataMap$EntrySet: java.util.Iterator iterator()>
<android.support.v4.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtils$1: android.location.Location createLocation()>
<com.google.gdata.util.parser.Chset: void <clinit>()>
<com.google.android.apps.analytics.PersistentHitStore: void setAnonymizeIp(boolean)>
<com.google.android.gms.common.GooglePlayServicesUtil: byte[] a(android.content.pm.PackageInfo,byte[][])>
<com.google.android.apps.mytracks.util.CalorieUtils$ActivityType: void <init>(java.lang.String,int)>
<com.google.android.apps.mytracks.io.file.exporter.SaveAsyncTask: void setActivity(com.google.android.apps.mytracks.io.file.exporter.SaveActivity)>
<com.google.android.apps.analytics.NetworkDispatcher: void stop()>
<com.google.android.apps.mytracks.content.Sensor$SensorData: com.google.android.apps.mytracks.content.Sensor$SensorData getDefaultInstance()>
<com.google.android.apps.mytracks.content.DataSourceManager$1: void <clinit>()>
<com.google.gdata.model.atom.Source: void registerMetadata(com.google.gdata.model.MetadataRegistry)>
<com.google.android.apps.mytracks.maps.TrackPathFactory: com.google.android.apps.mytracks.maps.TrackPath getTrackPath(android.content.Context,java.lang.String)>
<com.google.api.client.http.HttpResponse: java.lang.String getContentType()>
<android.location.Location: boolean hasBearing()>
<android.support.v4.app.Fragment: void instantiateChildFragmentManager()>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: com.google.android.apps.mytracks.content.Sensor$SensorDataSet parseFrom(byte[])>
<java.lang.Exception: void <init>()>
<android.app.Service: void onCreate()>
<com.google.gdata.util.ErrorElement: void <init>(com.google.gdata.util.ErrorContent)>
<com.google.api.client.util.Data: boolean isPrimitive(java.lang.reflect.Type)>
<java.io.BufferedInputStream: void close()>
<android.support.v4.app.Fragment: void onAttach(android.app.Activity)>
<com.google.android.apps.mytracks.settings.StatsSettingsActivity: void configRateListPreference(boolean)>
<java.io.StringWriter: void <init>()>
<com.google.common.collect.RegularImmutableMap$EntrySet: void <init>(com.google.common.collect.RegularImmutableMap)>
<com.google.api.client.auth.oauth2.RefreshTokenRequest: com.google.api.client.auth.oauth2.RefreshTokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor)>
<com.google.android.apps.mytracks.content.MyTracksProvider$DatabaseHelper: void <init>(android.content.Context,java.lang.String)>
<com.google.gdata.model.Element: void <clinit>()>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpRequest setBackOffPolicy(com.google.api.client.http.BackOffPolicy)>
<com.google.api.client.json.gson.GsonGenerator: void writeNumber(double)>
<android.os.Bundle: void putBoolean(java.lang.String,boolean)>
<com.google.api.client.util.Types: java.lang.Class getRawArrayComponentType(java.util.List,java.lang.reflect.Type)>
<com.google.common.collect.Lists: java.util.LinkedList newLinkedList()>
<android.content.Context: java.lang.String getString(int,java.lang.Object[])>
<com.google.android.apps.mytracks.services.TrackRecordingService$2$1: void <init>(com.google.android.apps.mytracks.services.TrackRecordingService$2,android.location.Location)>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpRequest setUrl(com.google.api.client.http.GenericUrl)>
<com.google.android.apps.mytracks.HelpActivity: void <init>()>
<com.google.common.collect.EmptyImmutableList: int size()>
<com.google.android.apps.mytracks.settings.MapSettingsActivity: java.lang.String access$400()>
<com.google.api.client.http.ByteArrayContent: long getLength()>
<com.google.gdata.client.Service: void <clinit>()>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter nullValue()>
<com.google.android.gms.internal.t$a: android.os.IBinder asBinder()>
<com.google.gdata.client.Service$ClientStreamProperties: com.google.gdata.model.MetadataContext getMetadataContext()>
<com.google.android.apps.mytracks.services.MyTracksLocationManager$3: void run()>
<com.google.android.apps.mytracks.util.EulaUtils: boolean getValue(android.content.Context,java.lang.String,boolean)>
<android.widget.Spinner: android.os.Parcelable onSaveInstanceState()>
<com.google.android.common.http.GoogleHttpClient: void close()>
<java.io.File: java.io.File[] listFiles()>
<com.google.gdata.util.common.base.Charsets: void <clinit>()>
<com.google.android.apps.mytracks.services.sensors.BluetoothSensorManager: void tearDownChannel()>
<com.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask: int access$402(com.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask,int)>
<com.google.android.apps.mytracks.TrackEditActivity$5: void onClick(android.view.View)>
<com.google.gdata.client.Service$ClientOutputProperties: void init(java.lang.Object)>
<com.google.android.apps.mytracks.content.Track: java.util.ArrayList getLocations()>
<com.google.android.apps.mytracks.io.file.exporter.SaveAsyncTask: void <init>(com.google.android.apps.mytracks.io.file.exporter.SaveActivity,long[],com.google.android.apps.mytracks.io.file.TrackFileFormat,boolean,java.io.File)>
<com.google.api.client.http.HttpRequestFactory: com.google.api.client.http.HttpRequest buildPutRequest(com.google.api.client.http.GenericUrl,com.google.api.client.http.HttpContent)>
<com.google.android.gms.internal.ea: void <init>(android.content.Context)>
<com.google.android.apps.mytracks.SensorStateActivity: int getLayoutResId()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,com.google.android.apps.analytics.HitStore,com.google.android.apps.analytics.Dispatcher,boolean,com.google.android.apps.analytics.Dispatcher$Callbacks)>
<com.google.android.apps.mytracks.util.TrackRecordingServiceConnectionUtils: void stopRecording(android.content.Context,com.google.android.apps.mytracks.services.TrackRecordingServiceConnection,boolean)>
<com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager$ConnectedThread: void cancel()>
<com.google.api.client.json.gson.GsonGenerator: void writeNumber(int)>
<com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager$ConnectThread: void <init>(com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager,android.bluetooth.BluetoothDevice)>
<com.google.android.gms.internal.y: void <clinit>()>
<com.google.gdata.util.ContentType: boolean match(com.google.gdata.util.ContentType)>
<com.google.gdata.util.ServiceException: void setResponse(com.google.gdata.util.ContentType,java.lang.String)>
<android.view.MotionEvent: void <clinit>()>
<com.google.android.apps.mytracks.services.TrackRecordingService: void handleStartCommand(android.content.Intent,int)>
<com.google.gdata.client.Service: void writeRequestData(com.google.gdata.client.Service$GDataRequest,java.lang.Object)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: android.os.Handler access$000(com.google.android.apps.analytics.GoogleAnalyticsTracker)>
<com.google.android.apps.mytracks.services.sensors.ant.ChannelConfiguration: void <init>()>
<org.apache.http.entity.AbstractHttpEntity: void setContentType(java.lang.String)>
<com.google.api.client.util.FieldInfo: void setFieldValue(java.lang.reflect.Field,java.lang.Object,java.lang.Object)>
<com.google.gdata.util.common.base.CharMatcher: com.google.gdata.util.common.base.CharMatcher anyOf(java.lang.CharSequence)>
<com.google.gdata.data.ExtensionProfile: com.google.gdata.data.ExtensionManifest getOrCreateManifest(java.lang.Class)>
<com.google.android.apps.mytracks.TrackDetailActivity$3: void onClick(android.view.View)>
<com.google.android.apps.mytracks.services.sensors.ant.AntSensorManager: void openChannel(byte)>
<com.google.gdata.util.common.base.PercentEscaper: int nextEscapeIndex(java.lang.CharSequence,int,int)>
<com.google.api.client.json.gson.GsonGenerator: void writeNumber(java.math.BigDecimal)>
<com.google.common.collect.Multisets: int sizeImpl(com.google.common.collect.Multiset)>
<com.google.api.client.googleapis.services.AbstractGoogleClientRequest: com.google.api.client.http.HttpResponse executeUnparsed(boolean)>
<android.content.Intent: void <clinit>()>
<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)>
<java.io.OutputStreamWriter: void write(int)>
<com.google.gdata.util.ServiceException: java.lang.String toString()>
<com.google.gdata.client.http.GoogleGDataRequest$GoogleCookieHandler: void <init>()>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity: void deleteTracks(long[])>
<android.support.v4.app.FragmentManager: void <init>()>
<android.view.ViewGroup: boolean hasFocus()>
<com.google.android.apps.mytracks.SearchListActivity: boolean onKeyUp(int,android.view.KeyEvent)>
<com.google.api.client.util.DataMap$Entry: boolean equals(java.lang.Object)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: void <init>(boolean)>
<com.google.api.services.drive.model.File: com.google.api.client.util.DateTime getSharedWithMeDate()>
<android.content.ContextWrapper: void grantUriPermission(java.lang.String,android.net.Uri,int)>
<com.google.common.collect.EmptyImmutableMap: void <init>()>
<com.google.android.apps.analytics.HitBuilder: void appendStringValue(java.lang.StringBuilder,java.lang.String,java.lang.String)>
<com.google.android.apps.mytracks.content.Sensor$SensorData$Builder: com.google.android.apps.mytracks.content.Sensor$SensorData$Builder create()>
<com.google.api.client.http.HttpMediaType: com.google.api.client.http.HttpMediaType removeParameter(java.lang.String)>
<com.google.android.apps.mytracks.util.CalorieUtils$ActivityType: void <clinit>()>
<java.util.Collections: java.util.Map emptyMap()>
<com.google.android.gms.location.LocationClient: boolean isConnected()>
<com.google.gdata.client.spreadsheet.SpreadsheetService$Versions: void <clinit>()>
<com.google.gdata.data.spreadsheet.CustomElementCollection$CustomElement: void <init>(com.google.gdata.data.spreadsheet.CustomElementCollection,java.lang.String)>
<com.google.android.apps.mytracks.services.AbsoluteLocationListenerPolicy: void <init>(long)>
<android.content.ContentValues: void <clinit>()>
<com.google.android.apps.mytracks.services.TrackRecordingService: com.google.android.apps.mytracks.stats.TripStatistics getTripStatistics()>
<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableListMultimap of()>
<com.google.wireless.gdata.serializer.xml.XmlEntryGDataSerializer: void serialize(java.io.OutputStream,int)>
<java.lang.String: void getChars(int,int,char[],int)>
<com.google.gdata.data.AbstractExtension: void enableStrictValidation()>
<com.google.android.apps.mytracks.services.TrackRecordingService: void onDestroy()>
<android.location.Location: void setLatitude(double)>
<com.google.android.apps.mytracks.util.Api11Adapter$1: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>
<com.google.android.apps.mytracks.fragments.MapLayerDialogFragment$1: void onClick(android.content.DialogInterface,int)>
<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>
<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet access$000(int,java.lang.Object[])>
<com.google.api.client.http.apache.ApacheHttpTransport: void <init>(org.apache.http.client.HttpClient)>
<com.google.android.gms.internal.dz: int b(android.content.Context,android.util.AttributeSet)>
<com.google.gdata.model.ElementCreatorImpl$ElementInfo: void <init>(com.google.gdata.model.ElementKey,com.google.gdata.model.ElementCreatorImpl$Action)>
<com.google.api.client.http.FileContent: long getLength()>
<java.lang.String: int lastIndexOf(int)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.lang.Object[])>
<com.google.android.gsf.Gservices: void <clinit>()>
<com.google.android.apps.mytracks.util.GoogleLocationUtils: boolean useGoogleLocationSettings(android.content.Context)>
<com.google.android.apps.mytracks.io.sendtogoogle.SendRequest: boolean isSendFusionTables()>
<com.google.android.apps.mytracks.services.tasks.TimerTaskExecutor: void <init>(com.google.android.apps.mytracks.services.tasks.PeriodicTask,com.google.android.apps.mytracks.services.TrackRecordingService)>
<com.google.android.apps.mytracks.services.TrackRecordingServiceConnection: void unbind()>
<com.google.common.primitives.UnsignedInteger: java.lang.String toString()>
<com.google.api.client.json.gson.GsonParser: com.google.api.client.json.JsonToken nextToken()>
<com.google.api.client.http.HttpHeaders$HeaderParsingFakeLevelHttpRequest: void addHeader(java.lang.String,java.lang.String)>
<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of()>
<com.google.android.gms.maps.SupportMapFragment: void <init>()>
<com.google.android.apps.mytracks.settings.SettingsActivity$4: void onShow(android.content.DialogInterface)>
<android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.google.api.services.drive.DriveRequest: com.google.api.client.googleapis.services.AbstractGoogleClient getAbstractGoogleClient()>
<com.google.android.apps.mytracks.fragments.PlayMultipleDialogFragment: void <init>()>
<com.google.gdata.model.atompub.ServiceDocument: void <clinit>()>
<com.google.common.base.Preconditions: void checkArgument(boolean)>
<android.widget.TextView: void setMinHeight(int)>
<com.google.common.collect.ConcurrentHashMultiset: void clear()>
<com.google.common.collect.SingletonImmutableSet: void <init>(java.lang.Object,int)>
<com.google.android.apps.mytracks.HelpActivity$1: void <init>(com.google.android.apps.mytracks.HelpActivity)>
<java.util.TimerTask: void <init>()>
<com.google.android.apps.mytracks.stats.ExtremityMonitor: void <init>()>
<com.google.gdata.model.ElementMetadataRegistryBuilder: com.google.gdata.model.ElementCreatorImpl build(com.google.gdata.model.ElementKey,com.google.gdata.model.ElementKey,com.google.gdata.model.MetadataContext)>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: com.google.android.apps.mytracks.content.Sensor$SensorData access$1702(com.google.android.apps.mytracks.content.Sensor$SensorDataSet,com.google.android.apps.mytracks.content.Sensor$SensorData)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: java.lang.String access$100()>
<com.google.api.client.http.AbstractInputStreamContent: void copy(java.io.InputStream,java.io.OutputStream,boolean)>
<com.google.android.apps.mytracks.util.DialogUtils$1: void onShow(android.content.DialogInterface)>
<com.google.gdata.wireformats.AltRegistry: void lock()>
<com.google.api.client.http.HttpMediaType: java.lang.String getParameter(java.lang.String)>
<com.google.api.client.http.HttpRequest: boolean isLoggingEnabled()>
<java.lang.Class: int getModifiers()>
<com.google.android.apps.mytracks.services.MyTracksLocationManager: com.google.android.gms.location.LocationListener access$202(com.google.android.apps.mytracks.services.MyTracksLocationManager,com.google.android.gms.location.LocationListener)>
<com.google.android.apps.mytracks.TabsAdapter$TabInfo: void <init>(java.lang.Class,android.os.Bundle)>
<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks: void requestSent()>
<com.google.api.client.util.ArrayMap$Entry: void <init>(com.google.api.client.util.ArrayMap,int)>
<com.google.common.base.Joiner$1: void <init>(com.google.common.base.Joiner,com.google.common.base.Joiner,java.lang.String)>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataSerializer: void serializeSummary(org.xmlpull.v1.XmlSerializer,java.lang.String)>
<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>
<android.widget.MultiAutoCompleteTextView$CommaTokenizer: void <init>()>
<com.google.android.apps.mytracks.io.gdata.AndroidGDataClient: void <init>()>
<com.google.gdata.util.ErrorDomain$ErrorCode: java.lang.String getCodeName()>
<com.google.gdata.util.common.base.CharMatcher$LookupTable: void set(char)>
<android.support.v4.content.IntentCompat$IntentCompatImplHC: android.content.Intent makeMainActivity(android.content.ComponentName)>
<com.google.android.apps.mytracks.TrackListActivity: boolean access$300(com.google.android.apps.mytracks.TrackListActivity)>
<android.widget.ProgressBar: void setIndeterminate(boolean)>
<com.google.api.client.http.HttpMediaType: com.google.api.client.http.HttpMediaType setCharsetParameter(java.nio.charset.Charset)>
<org.apache.http.impl.client.EntityEnclosingRequestWrapper: void <init>(org.apache.http.HttpEntityEnclosingRequest)>
<com.dsi.ant.AntInterface: void finalize()>
<android.support.v4.content.AsyncTaskLoader$LoadTask: void run()>
<com.google.gdata.client.http.GoogleGDataRequest: void setService(com.google.gdata.client.GoogleService)>
<com.google.android.apps.mytracks.fragments.EulaDialogFragment: com.google.android.apps.mytracks.fragments.EulaDialogFragment newInstance(boolean)>
<com.google.gdata.model.batch.BatchOperation: void <clinit>()>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>
<android.support.v4.app.ShareCompat$IntentBuilder: android.content.Intent getIntent()>
<android.widget.RemoteViews: void <init>(java.lang.String,int)>
<android.telephony.PhoneStateListener: void <init>()>
<com.google.gdata.client.GoogleAuthTokenFactory: void setAuthToken(com.google.gdata.client.http.HttpAuthToken)>
<com.google.gdata.model.Schema$RootKey: com.google.gdata.model.Schema$RootKey get(com.google.gdata.model.ElementKey)>
<java.util.HashMap: void <init>(java.util.Map)>
<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>
<java.lang.StringBuffer: void <init>(int)>
<com.google.api.client.json.gson.GsonParser: com.google.common.primitives.UnsignedInteger getUnsignedIntegerValue()>
<com.google.gdata.client.Service$GDataRequest$RequestType: com.google.gdata.client.Service$GDataRequest$RequestType[] values()>
<com.google.gdata.wireformats.AltRegistry$AltHandlers: com.google.gdata.wireformats.input.InputParser access$000(com.google.gdata.wireformats.AltRegistry$AltHandlers)>
<com.google.common.collect.ObjectArrays: void <clinit>()>
<com.google.android.apps.mytracks.content.SearchEngine$1: void <init>()>
<com.google.android.apps.mytracks.content.TrackDataManager: void <init>()>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void writePlacemarkerStyle(java.lang.String,java.lang.String,int,int)>
<com.google.android.gsf.Gservices$1: void <init>(android.content.ContentResolver)>
<com.google.android.apps.mytracks.util.Api10Adapter: void <clinit>()>
<com.google.api.client.json.JsonParser: void skipToKey(java.lang.String)>
<com.google.api.client.http.HttpMediaType: com.google.api.client.http.HttpMediaType setType(java.lang.String)>
<com.google.android.apps.mytracks.widgets.TrackWidgetProvider: void <clinit>()>
<com.google.android.apps.analytics.PersistentHitStore: com.google.android.apps.analytics.Hit[] peekHits(int)>
<java.lang.Character: boolean isLowSurrogate(char)>
<com.google.android.apps.mytracks.util.Api14Adapter: void <init>()>
<org.apache.http.client.methods.HttpOptions: void <init>(java.lang.String)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks: void serverError(int)>
<com.google.android.apps.mytracks.io.spreadsheets.SendSpreadsheetsUtils: java.lang.String getDistance(double,boolean)>
<com.google.gdata.model.Schema$RootKey: void <init>(com.google.gdata.model.QName)>
<com.google.gdata.util.OAuthProxyException: void <init>(java.net.HttpURLConnection)>
<com.google.android.apps.mytracks.fragments.PlayMultipleDialogFragment: com.google.android.apps.mytracks.fragments.PlayMultipleDialogFragment$PlayMultipleCaller access$100(com.google.android.apps.mytracks.fragments.PlayMultipleDialogFragment)>
<com.google.android.apps.mytracks.io.file.importer.ImportActivity: void onAsyncTaskCompleted(int,int,long)>
<com.google.android.apps.mytracks.util.Api14Adapter$1: boolean onQueryTextChange(java.lang.String)>
<com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment: android.widget.CheckBox access$200(com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment)>
<com.google.wireless.gdata.serializer.xml.XmlEntryGDataSerializer: void serializeCategory(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>
<com.google.android.apps.mytracks.content.DataSourceManager$PreferenceListener: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<com.google.api.client.googleapis.extensions.android.accounts.GoogleAccountManager: void <init>(android.accounts.AccountManager)>
<com.google.android.apps.mytracks.services.tasks.PeriodicTaskExecutor: void setMetricUnits(boolean)>
<com.google.api.services.fusiontables.model.StyleSetting: void <init>()>
<com.google.gdata.client.GoogleAuthTokenFactory: void setOAuth2Credentials(com.google.api.client.auth.oauth2.Credential)>
<com.google.api.client.http.AbstractHttpContent: boolean retrySupported()>
<android.appwidget.AppWidgetManager: void updateAppWidgetOptions(int,android.os.Bundle)>
<com.google.android.apps.mytracks.settings.SettingsActivity$5: void onClick(android.content.DialogInterface,int)>
<com.google.android.apps.mytracks.TabsAdapter: int getCount()>
<com.google.api.services.drive.model.File: com.google.api.services.drive.model.File setParents(java.util.List)>
<com.google.wireless.gdata.data.Entry: java.lang.String getSummary()>
<com.google.android.apps.mytracks.services.sensors.PolarMessageParser: int getFrameSize()>
<com.google.android.apps.mytracks.io.file.exporter.FileTrackExporter: void setLocationTime(android.location.Location,long)>
<org.apache.http.params.AbstractHttpParams: void <init>()>
<android.widget.Spinner: void onRestoreInstanceState(android.os.Parcelable)>
<com.google.common.primitives.UnsignedLongs: void <clinit>()>
<com.google.api.client.http.MultipartRelatedContent: void <init>(com.google.api.client.http.HttpContent,com.google.api.client.http.HttpContent[])>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpRequest setRequestMethod(java.lang.String)>
<com.google.gdata.util.common.base.PercentEscaper: void <init>(java.lang.String,boolean)>
<com.google.api.services.drive.Drive$Builder: void <init>(com.google.api.client.http.HttpTransport,com.google.api.client.json.JsonFactory,com.google.api.client.http.HttpRequestInitializer)>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(double)>
<java.util.ArrayList: void <init>(int)>
<com.google.common.collect.ImmutableMap: java.util.Set entrySet()>
<com.google.android.apps.mytracks.content.Waypoint: com.google.android.apps.mytracks.content.Waypoint$WaypointType getType()>
<android.support.v4.app.FragmentManagerImpl$1: void <init>(android.support.v4.app.FragmentManagerImpl)>
<com.google.wireless.gdata.serializer.xml.XmlEntryGDataSerializer: void declareEntryNamespaces(org.xmlpull.v1.XmlSerializer)>
<com.google.android.apps.mytracks.services.AbsoluteLocationListenerPolicy: int getMinDistance()>
<com.google.gdata.util.NotAcceptableException: void <init>(java.net.HttpURLConnection)>
<java.io.PrintWriter: void <init>(java.io.OutputStream)>
<android.content.Intent: android.content.Intent setFlags(int)>
<android.support.v4.app.DialogFragment: android.app.Dialog getDialog()>
<java.util.LinkedList: int size()>
<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException recursionLimitExceeded()>
<java.util.concurrent.ConcurrentHashMap: boolean isEmpty()>
<com.google.api.client.util.DataMap$EntrySet: void <init>(com.google.api.client.util.DataMap)>
<android.os.Build: void <clinit>()>
<com.google.gdata.model.ElementCreatorImpl$Action: void <clinit>()>
<com.google.api.client.http.ExponentialBackOffPolicy: int getRandomValueFromInterval(double,double,int)>
<com.google.android.gms.common.GooglePlayServicesUtil: java.lang.String a(android.content.Context,int)>
<com.google.android.apps.mytracks.fragments.MyTracksMapFragment: com.google.android.gms.location.LocationListener access$202(com.google.android.apps.mytracks.fragments.MyTracksMapFragment,com.google.android.gms.location.LocationListener)>
<com.google.android.apps.mytracks.services.sensors.BluetoothSensorManager$1: void run()>
<com.google.api.client.auth.oauth2.RefreshTokenRequest: com.google.api.client.auth.oauth2.TokenRequest setGrantType(java.lang.String)>
<com.google.android.apps.mytracks.fragments.FrequencyDialogFragment: int getFrequencyValue(int)>
<java.util.AbstractSet: boolean removeAll(java.util.Collection)>
<android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1: void <init>()>
<com.google.android.apps.mytracks.io.sendtogoogle.AbstractSendActivity$1: void <init>(com.google.android.apps.mytracks.io.sendtogoogle.AbstractSendActivity)>
<com.google.android.apps.mytracks.io.file.exporter.KmzTrackExporter: void <init>(com.google.android.apps.mytracks.content.MyTracksProviderUtils,com.google.android.apps.mytracks.io.file.exporter.FileTrackExporter,com.google.android.apps.mytracks.content.Track[],android.content.Context)>
<com.google.common.collect.ImmutableListMultimap: java.util.List get(java.lang.Object)>
<com.google.android.apps.mytracks.util.GoogleFeedbackUtils$1: void <init>()>
<android.content.ContentProvider: void <init>()>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataSerializer: void serializeUpdateDate(org.xmlpull.v1.XmlSerializer,java.lang.String)>
<com.google.android.apps.mytracks.services.TrackRecordingService: java.util.concurrent.ExecutorService access$1200(com.google.android.apps.mytracks.services.TrackRecordingService)>
<java.io.File: java.io.File getParentFile()>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void writeWaypoint(com.google.android.apps.mytracks.content.Waypoint)>
<com.google.android.apps.mytracks.TabsAdapter: void <init>(android.support.v4.app.FragmentActivity,android.widget.TabHost,android.support.v4.view.ViewPager)>
<java.lang.Class: java.lang.String getName()>
<com.google.android.gms.internal.ce: android.location.Location getLastLocation()>
<com.google.android.apps.mytracks.TrackListActivity: void showStartupDialogs()>
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: void postInvalidateOnAnimation(android.view.View)>
<android.app.Dialog: void setTitle(int)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsGDataConverter: void <init>()>
<com.google.api.client.http.javanet.NetHttpResponse: java.lang.String getHeaderValue(int)>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesAsyncTask: void <clinit>()>
<com.google.android.apps.mytracks.services.TrackRecordingService: void unregisterLocationListener()>
<android.support.v4.util.SparseArrayCompat: void gc()>
<com.google.gdata.client.GoogleAuthTokenFactory$OAuth2Token: void <init>(com.google.api.client.auth.oauth2.Credential)>
<com.google.api.services.drive.Drive$Files$List: com.google.api.services.drive.Drive$Files$List setQ(java.lang.String)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl$1: java.lang.Object next()>
<android.support.v4.content.Loader: void reset()>
<com.google.android.apps.mytracks.util.PreferencesUtils: java.lang.String getString(android.content.Context,int,java.lang.String)>
<com.google.android.gms.location.ActivityRecognitionClient: void <init>(android.content.Context,com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks,com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener)>
<com.google.api.client.http.EmptyContent: java.lang.String getType()>
<com.google.android.apps.mytracks.io.maps.SendMapsActivity: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.String)>
<com.google.api.client.http.HttpResponse: int getStatusCode()>
<com.google.api.client.util.ArrayMap$Entry: java.lang.Object getValue()>
<android.os.Looper: void loop()>
<android.widget.Spinner: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.common.collect.Count: java.lang.String toString()>
<com.google.common.collect.UnmodifiableIterator: void <init>()>
<android.content.ContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)>
<com.google.android.apps.mytracks.settings.ChartSettingsActivity: void updateUi()>
<com.google.android.apps.mytracks.util.SystemUtils: android.os.PowerManager$WakeLock acquireWakeLock(android.content.Context,android.os.PowerManager$WakeLock)>
<com.google.api.client.json.JsonParser: java.lang.Object parseValue(java.lang.reflect.Field,java.lang.reflect.Type,java.util.ArrayList,java.lang.Object,com.google.api.client.json.CustomizeJsonParser)>
<org.apache.http.conn.scheme.PlainSocketFactory: void <init>()>
<java.lang.Void: void <clinit>()>
<com.google.api.client.util.ArrayMap$EntryIterator: boolean hasNext()>
<com.google.android.apps.mytracks.HelpActivity: void onEulaDone()>
<com.google.android.apps.mytracks.io.sync.SyncAdapter: void <init>(android.content.Context)>
<com.google.android.apps.mytracks.content.MyTracksProvider: void <init>()>
<com.google.gdata.wireformats.AltRegistry$AltHandlers: com.google.gdata.wireformats.output.OutputGenerator access$100(com.google.gdata.wireformats.AltRegistry$AltHandlers)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeature: void setColor(int)>
<java.util.zip.ZipOutputStream: void close()>
<com.google.gdata.client.CoreErrorDomain: void <clinit>()>
<com.google.gdata.util.ServiceException: void <init>(java.lang.String)>
<java.lang.Thread: boolean holdsLock(java.lang.Object)>
<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void <init>()>
<com.google.android.apps.mytracks.MarkerListActivity$2: void <init>(com.google.android.apps.mytracks.MarkerListActivity)>
<java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>
<com.google.android.apps.mytracks.stats.TripStatistics: long getTotalTime()>
<com.google.android.apps.mytracks.MarkerEditActivity: void onCreate(android.os.Bundle)>
<com.google.gson.stream.JsonReader: void checkLenient()>
<com.google.common.collect.Maps: java.util.HashMap newHashMap()>
<com.google.common.base.Preconditions: java.lang.String badPositionIndex(int,int,java.lang.String)>
<com.google.android.apps.mytracks.fragments.ChooseActivityTypeImageAdapter: void <init>(android.content.Context,java.util.List,int,int,int)>
<com.google.api.client.http.javanet.NetHttpResponse: java.lang.String getContentEncoding()>
<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>
<android.widget.Scroller: void startScroll(int,int,int,int,int)>
<com.google.api.client.repackaged.org.apache.commons.codec.binary.StringUtils: byte[] getBytesUnchecked(java.lang.String,java.lang.String)>
<com.google.android.gms.internal.cd: void removeLocationUpdates(com.google.android.gms.location.LocationListener)>
<com.google.api.services.drive.model.ParentReference: com.google.api.services.drive.model.ParentReference setId(java.lang.String)>
<com.google.common.base.Preconditions: int checkPositionIndex(int,int,java.lang.String)>
<java.lang.Math: float min(float,float)>
<android.widget.Scroller: void abortAnimation()>
<com.google.gdata.util.ServiceException: void <init>(java.lang.String,java.lang.Throwable)>
<com.google.android.apps.mytracks.content.SearchEngineProvider: android.provider.SearchRecentSuggestions newHelper(android.content.Context)>
<java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>
<com.google.api.client.util.Data: java.lang.Object parsePrimitiveValue(java.lang.reflect.Type,java.lang.String)>
<java.util.HashMap: void clear()>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>
<com.dsi.ant.AntInterface: boolean initService(android.content.Context,com.dsi.ant.AntInterface$ServiceListener)>
<java.io.FilterInputStream: void close()>
<android.os.Looper: void prepare()>
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl: java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat)>
<com.google.api.client.http.AbstractInputStreamContent: void <init>(java.lang.String)>
<com.google.api.client.googleapis.services.AbstractGoogleClientRequest: java.lang.Object execute()>
<com.google.android.apps.mytracks.util.BluetoothDeviceUtils: void populateDeviceLists(android.bluetooth.BluetoothAdapter,java.util.List,java.util.List)>
<com.google.api.client.http.apache.ApacheHttpTransport: com.google.api.client.http.LowLevelHttpRequest buildPatchRequest(java.lang.String)>
<com.google.android.apps.mytracks.io.maps.SendMapsAsyncTask: boolean fetchSendMapId(com.google.android.apps.mytracks.content.Track)>
<com.google.android.gms.internal.p$a: void <init>(com.google.android.gms.internal.p,android.os.Looper)>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity: void onCheckPermissionDone(java.lang.String,boolean,android.content.Intent)>
<java.io.PrintWriter: void print(java.lang.String)>
<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>
<com.google.android.apps.mytracks.fragments.EnableSyncDialogFragment: android.app.Dialog createDialog()>
<com.google.gdata.util.ServiceExceptionInitializer: void parse(com.google.gdata.util.ContentType,java.lang.String)>
<android.os.Bundle: boolean isEmpty()>
<com.dsi.ant.exception.AntServiceNotConnectedException: void <init>()>
<com.google.android.apps.mytracks.content.TrackPointsColumns: void <clinit>()>
<com.google.api.client.http.MultipartRelatedContent: void writeTo(java.io.OutputStream)>
<com.google.api.client.http.GZipContent: void <init>(com.google.api.client.http.HttpContent,java.lang.String)>
<android.util.SparseArray: int size()>
<java.lang.StringBuilder: void <init>(int)>
<com.google.android.gms.common.GooglePlayServicesUtil: android.content.Context getRemoteContext(android.content.Context)>
<com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger valueOf(java.lang.String,int)>
<android.support.v4.util.TimeUtils: int accumField(int,int,boolean,int)>
<android.app.Service: boolean stopSelfResult(int)>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpRequest setThrowExceptionOnExecuteError(boolean)>
<com.google.android.apps.mytracks.services.TrackRecordingServiceConnection$1: void <init>(com.google.android.apps.mytracks.services.TrackRecordingServiceConnection)>
<java.io.PrintWriter: void print(java.lang.Object)>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential: void initialize(com.google.api.client.http.HttpRequest)>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void writeCloseSegment()>
<com.google.gdata.util.parser.Chset: boolean testRanges(char)>
<com.google.gdata.util.ContentType: boolean equals(java.lang.Object)>
<com.google.android.apps.mytracks.io.drive.SendDriveAsyncTask: void invalidateToken()>
<com.google.gdata.util.ErrorDomain$ErrorCode: java.lang.String getDebugInfo()>
<com.google.gdata.util.ErrorDomain$ErrorCode: void <init>(com.google.gdata.util.ErrorDomain,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.google.wireless.gdata.client.GDataServiceClient: com.google.wireless.gdata.data.Entry createEntry(java.lang.String,java.lang.String,com.google.wireless.gdata.data.Entry)>
<com.google.android.gms.location.LocationClient: void connect()>
<java.lang.Thread: boolean interrupted()>
<com.google.api.services.fusiontables.model.Template: void <init>()>
<android.app.Activity: void showDialog(int)>
<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>
<com.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask$3: void onInit(int)>
<java.util.LinkedList: java.lang.Object getLast()>
<com.google.gdata.data.AbstractExtension$1: void <init>()>
<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>
<com.google.api.client.util.Types: java.lang.reflect.Type getActualParameterAtPosition(java.lang.reflect.Type,java.lang.Class,int)>
<com.google.android.apps.mytracks.settings.RecordingSettingsActivity: void setMinRecordingIntervalSummaryAndOptions(java.lang.String[],java.lang.String[],java.lang.String[])>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks: void <init>(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,com.google.android.apps.analytics.NetworkDispatcher$1)>
<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>
<com.google.android.apps.mytracks.settings.ChartSettingsActivity: void <init>()>
<com.google.android.apps.mytracks.fragments.MyTracksMapFragment: com.google.android.apps.mytracks.services.MyTracksLocationManager access$000(com.google.android.apps.mytracks.fragments.MyTracksMapFragment)>
<android.content.SearchRecentSuggestionsProvider: void setupSuggestions(java.lang.String,int)>
<com.google.wireless.gdata.data.Entry: java.lang.String getTitle()>
<com.google.android.gms.auth.GoogleAuthUtil: void a(android.content.Context)>
<com.google.gdata.util.NotModifiedException: void <init>(java.net.HttpURLConnection)>
<com.google.api.client.util.Data: java.lang.reflect.Type resolveWildcardTypeOrTypeVariable(java.util.List,java.lang.reflect.Type)>
<com.google.common.collect.SingletonImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>
<com.google.android.apps.mytracks.settings.MapSettingsActivity: void access$200(com.google.android.apps.mytracks.settings.MapSettingsActivity,android.preference.Preference,int,int)>
<com.google.api.services.fusiontables.model.Table: com.google.api.services.fusiontables.model.Table setName(java.lang.String)>
<com.google.android.apps.mytracks.TrackEditActivity: void onCheckPermissionDone(java.lang.String,boolean,android.content.Intent)>
<com.google.android.apps.analytics.PersistentHitStore: void putEvent(com.google.android.apps.analytics.Event,android.database.sqlite.SQLiteDatabase,boolean)>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest: void <init>(com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient,java.lang.String,java.lang.String,java.lang.Object,java.lang.Class)>
<com.google.android.apps.mytracks.services.TrackRecordingServiceConnection: void bindService(boolean)>
<com.google.api.client.http.AbstractHttpContent: long getLength()>
<com.google.android.apps.analytics.Event: void setUseServerTime(boolean)>
<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken advance()>
<com.google.common.collect.ForwardingMultimap: void <init>()>
<android.app.Notification$BigPictureStyle: void <init>(android.app.Notification$Builder)>
<com.google.gdata.model.atom.Link: void <clinit>()>
<com.google.gdata.model.TransformKey: com.google.gdata.model.MetadataKey getKey()>
<com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState: void <init>(java.lang.String,int)>
<com.google.android.apps.analytics.PersistentHitStore: com.google.android.apps.analytics.CustomVariableBuffer getVisitorVarBuffer(android.database.sqlite.SQLiteDatabase)>
<com.google.android.apps.mytracks.fragments.ChooseAccountDialogFragment$3: void onClick(android.content.DialogInterface,int)>
<com.google.android.apps.mytracks.fragments.ConfirmDeleteDialogFragment: com.google.android.apps.mytracks.fragments.ConfirmDeleteDialogFragment newInstance(long[])>
<com.google.android.apps.mytracks.io.file.importer.ImportActivity: int access$200(com.google.android.apps.mytracks.io.file.importer.ImportActivity)>
<com.google.android.apps.mytracks.io.file.exporter.SaveAsyncTask: void access$100(com.google.android.apps.mytracks.io.file.exporter.SaveAsyncTask,java.lang.Object[])>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<com.google.android.apps.mytracks.SensorStateActivity: void onPause()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks: void <init>(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread)>
<com.google.gdata.util.common.xml.parsing.SecureGenericXMLFactory: com.google.gdata.util.common.xml.parsing.SecureGenericXMLFactory$SecureEntityResolver access$100()>
<com.google.api.services.drive.Drive$Files$Insert: com.google.api.services.drive.Drive$Files$Insert setConvert(java.lang.Boolean)>
<android.os.Bundle: void putLong(java.lang.String,long)>
<com.google.android.gms.common.GooglePlayServicesUtil: int c(int)>
<android.support.v4.view.AccessibilityDelegateCompat: void <clinit>()>
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.google.android.apps.mytracks.io.file.importer.GpxFileTrackImporter: long importFile(java.io.InputStream)>
<android.support.v4.content.Loader: void <init>(android.content.Context)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeature: void <init>()>
<com.google.gdata.util.common.base.Pair: void <init>(java.lang.Object,java.lang.Object)>
<java.util.UUID: java.util.UUID fromString(java.lang.String)>
<android.os.Build$VERSION: void <clinit>()>
<com.google.gdata.wireformats.input.ElementParser: com.google.gdata.wireformats.input.ElementParser of(com.google.gdata.wireformats.AltFormat,java.lang.Class)>
<android.view.View: void setPadding(int,int,int,int)>
<android.support.v4.app.LoaderManagerImpl: void doReportStart()>
<com.google.android.apps.mytracks.content.Track: void setLocations(java.util.ArrayList)>
<com.google.android.gms.internal.u$a$a: void <init>(android.os.IBinder)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: void <clinit>()>
<com.google.api.client.http.InputStreamContent: boolean retrySupported()>
<com.google.android.apps.mytracks.util.TrackIconUtils: java.util.List getAllIconValues()>
<com.dsi.ant.exception.AntRemoteException: void <init>(android.os.RemoteException)>
<com.google.android.gms.internal.p$e: void <init>(com.google.android.gms.internal.p)>
<com.google.gdata.client.Service$ClientStreamProperties: void <init>(com.google.gdata.client.Service,com.google.gdata.client.Service$GDataRequest)>
<com.google.android.apps.mytracks.services.TrackRecordingService: double access$1002(com.google.android.apps.mytracks.services.TrackRecordingService,double)>
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: void setImportantForAccessibility(android.view.View,int)>
<com.google.android.apps.mytracks.content.SearchEngine: double scoreWaypointResult(com.google.android.apps.mytracks.content.SearchEngine$SearchQuery,com.google.android.apps.mytracks.content.Waypoint)>
<java.lang.Math: long round(double)>
<com.google.android.apps.mytracks.widgets.TrackWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>
<com.google.api.client.http.ExponentialBackOffPolicy: void <init>()>
<com.google.android.gms.location.LocationClient: android.location.Location getLastLocation()>
<java.io.FileNotFoundException: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.services.sensors.ZephyrMessageParser: int findNextAlignment(byte[])>
<com.google.android.gms.internal.y: android.net.Uri i(java.lang.String)>
<com.google.api.client.util.escape.CharEscapers: java.lang.String escapeUriPath(java.lang.String)>
<com.google.wireless.gdata.serializer.xml.XmlEntryGDataSerializer: void serializeContent(org.xmlpull.v1.XmlSerializer,java.lang.String)>
<android.app.Notification$Builder: android.app.Notification$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)>
<com.google.android.apps.mytracks.TrackEditActivity: void <init>()>
<android.support.v4.content.Loader: boolean isReset()>
<com.google.android.apps.mytracks.services.sensors.ant.BikeCadenceChannelConfiguration: void <init>()>
<com.google.android.apps.mytracks.settings.MapSettingsActivity$6: void <init>(com.google.android.apps.mytracks.settings.MapSettingsActivity,android.preference.EditTextPreference)>
<com.google.android.apps.analytics.PersistentHitStore: void writeEventToDatabase(com.google.android.apps.analytics.Event,com.google.android.apps.analytics.Referrer,android.database.sqlite.SQLiteDatabase,boolean)>
<com.google.api.client.http.AbstractInputStreamContent: void writeTo(java.io.OutputStream)>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity$4: void <init>(com.google.android.apps.mytracks.settings.AdvancedSettingsActivity)>
<java.lang.StringBuffer: java.lang.String toString()>
<com.google.gdata.client.http.GoogleGDataRequest: void <init>(com.google.gdata.client.Service$GDataRequest$RequestType,java.net.URL,com.google.gdata.util.ContentType,com.google.gdata.client.http.HttpAuthToken,java.util.Map,java.util.Map,com.google.gdata.client.http.HttpUrlConnectionSource)>
<com.google.android.gsf.Gservices: java.lang.Object getVersionToken(android.content.ContentResolver)>
<com.google.gdata.client.http.HttpGDataRequest: void <clinit>()>
<com.google.android.apps.mytracks.TrackDetailActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<android.app.Activity: void startActivity(android.content.Intent)>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter endArray()>
<android.support.v4.app.DialogFragment: void <init>()>
<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>
<java.util.zip.ZipEntry: void <init>(java.lang.String)>
<com.google.android.common.http.UrlRules: com.google.android.common.http.UrlRules$Rule matchRule(java.lang.String)>
<com.google.api.client.util.Types$1: void <init>(java.lang.Object)>
<android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)>
<com.google.gdata.model.ElementCreatorImpl: com.google.gdata.model.ElementCreator addElement(com.google.gdata.model.ElementKey)>
<com.google.gdata.client.http.GoogleGDataRequest: java.util.logging.Logger access$000()>
<com.google.android.apps.mytracks.io.spreadsheets.SendSpreadsheetsAsyncTask: void closeConnection()>
<com.google.api.client.http.HttpHeaders$HeaderParsingFakeLevelHttpRequest: void <init>(com.google.api.client.http.HttpHeaders,com.google.api.client.http.HttpHeaders$ParseHeaderState)>
<com.google.common.base.Joiner: com.google.common.base.Joiner useForNull(java.lang.String)>
<com.google.android.apps.mytracks.fragments.DeleteMarkerDialogFragment$1$1: void run()>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity: void onSpreadsheetsPermissionSuccess()>
<com.google.api.client.http.UrlEncodedContent: void writeTo(java.io.OutputStream)>
<android.support.v4.app.LoaderManagerImpl: void doStop()>
<com.google.android.apps.mytracks.widgets.TrackWidgetConfigActivity: void configSpinner(android.widget.Spinner,java.util.List,int)>
<android.widget.RemoteViews: void setTextColor(int,int)>
<com.google.android.apps.mytracks.SensorStateActivity: void updateFromSystemSensorManager()>
<com.google.api.client.googleapis.services.AbstractGoogleClient$Builder: java.lang.String getRootUrl()>
<com.google.api.client.http.HttpTransport: void <clinit>()>
<com.google.gdata.util.parser.Chset$Range: void <init>(int,int)>
<com.google.gdata.util.ServiceException: com.google.gdata.client.authn.oauthproxy.OAuthProxyResponse getOAuthProxyResponse()>
<com.google.api.client.util.escape.CharEscapers: java.lang.String escapeUriQuery(java.lang.String)>
<com.google.wireless.gdata.data.Entry: void setCategory(java.lang.String)>
<com.google.android.apps.mytracks.MarkerListActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesAsyncTask: boolean prepareAndUploadPoints(com.google.api.services.fusiontables.Fusiontables,java.lang.String,com.google.android.apps.mytracks.content.Track,java.util.List,boolean)>
<com.google.gdata.model.ElementKey: void <init>(com.google.gdata.model.QName,java.lang.Class,java.lang.Class)>
<com.google.android.apps.mytracks.util.StringUtils: java.lang.String formatDateTimeIso8601(long)>
<com.google.gson.internal.JsonReaderInternalAccess: void <init>()>
<android.support.v4.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)>
<com.google.android.gms.internal.dz: com.google.android.gms.internal.dt o(android.content.Context)>
<com.google.android.gms.internal.dz: android.net.Uri bt()>
<com.google.api.client.json.gson.GsonGenerator: void writeStartArray()>
<com.google.gdata.util.VersionRegistry: java.util.List getDefaultVersions()>
<com.google.android.apps.mytracks.util.Api8Adapter: void invalidMenu(android.app.Activity)>
<android.support.v4.app.FragmentManagerImpl: void attachFragment(android.support.v4.app.Fragment,int,int)>
<org.apache.http.impl.AbstractHttpClientConnection: void receiveResponseEntity(org.apache.http.HttpResponse)>
<com.google.android.apps.mytracks.fragments.ConfirmSyncDialogFragment$1: void <init>(com.google.android.apps.mytracks.fragments.ConfirmSyncDialogFragment)>
<com.google.api.client.http.AbstractHttpContent: void <init>(com.google.api.client.http.HttpMediaType)>
<com.google.android.apps.mytracks.services.tasks.PeriodicTaskExecutor: void restore()>
<java.lang.ThreadLocal: java.lang.Object get()>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.GenericUrl getUrl()>
<java.io.FileInputStream: void <init>(java.io.File)>
<com.google.android.apps.mytracks.util.PreferencesUtils: double getWeightDisplayValue(android.content.Context)>
<android.app.Activity: boolean isFinishing()>
<android.support.v4.util.TimeUtils: int formatDurationLocked(long,int)>
<com.google.android.apps.mytracks.fragments.ChooseActivityTypeDialogFragment$2: void onShow(android.content.DialogInterface)>
<com.google.android.apps.mytracks.stats.TripStatistics: void <clinit>()>
<com.google.api.client.util.ClassInfo$1: void <init>(com.google.api.client.util.ClassInfo)>
<android.support.v4.widget.EdgeEffectCompatIcs: java.lang.Object newEdgeEffect(android.content.Context)>
<android.support.v4.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)>
<com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment$1: void <init>(com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment)>
<com.google.android.apps.mytracks.io.file.exporter.KmzTrackExporter: boolean writeTrack(java.io.OutputStream)>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity: void onCreate(android.os.Bundle)>
<android.support.v4.app.NotificationCompat$Builder: void <init>(android.content.Context)>
<com.google.android.apps.mytracks.TrackController: long access$300(com.google.android.apps.mytracks.TrackController)>
<android.support.v4.view.ViewPager: void setCurrentItem(int)>
<java.math.BigInteger: int hashCode()>
<com.google.gdata.model.atompub.Categories: void <clinit>()>
<java.io.IOException: java.lang.Throwable getCause()>
<com.google.android.apps.mytracks.util.Api19Adapter: boolean hasLocationMode()>
<com.google.android.apps.mytracks.content.TrackDataHub: long access$302(com.google.android.apps.mytracks.content.TrackDataHub,long)>
<com.google.android.apps.mytracks.services.sensors.BluetoothSensorManager: void setUpChannel()>
<com.google.android.apps.mytracks.SearchListActivity$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.widget.LinearLayout: void setGravity(int)>
<com.google.api.client.http.javanet.NetHttpTransport: com.google.api.client.http.javanet.NetHttpRequest buildRequest(java.lang.String,java.lang.String)>
<java.lang.Object: void wait(long)>
<java.text.NumberFormat: java.text.NumberFormat getNumberInstance(java.util.Locale)>
<com.google.android.apps.mytracks.io.gdata.AndroidGDataClient$PostRequestCreator: void <init>(java.lang.String,org.apache.http.HttpEntity)>
<com.google.api.client.http.UrlEncodedParser: void parse(java.lang.String,java.lang.Object)>
<android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: void <init>()>
<android.os.Bundle: boolean containsKey(java.lang.String)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: int getWaypointCount(long)>
<com.google.android.apps.mytracks.util.Api14Adapter$1: boolean onQueryTextSubmit(java.lang.String)>
<com.google.common.collect.Sets: java.util.HashSet newHashSet()>
<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])>
<java.util.zip.ZipOutputStream: void write(byte[],int,int)>
<com.google.wireless.gdata.client.HttpException: void <init>(java.lang.String,int,java.io.InputStream)>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity: android.app.Dialog onCreateDialog(int)>
<com.google.api.client.http.HttpResponseException: void <init>(com.google.api.client.http.HttpResponse)>
<com.google.gdata.wireformats.AltRegistry: com.google.gdata.wireformats.output.OutputGenerator getGenerator(com.google.gdata.wireformats.AltFormat)>
<com.google.android.apps.mytracks.AbstractMyTracksActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.google.android.apps.mytracks.stats.TripStatisticsUpdater: void updateTime(long)>
<com.google.api.client.http.HttpResponse: java.io.InputStream getContent()>
<android.support.v4.app.NotificationCompat$NotificationCompatImplBase: android.app.Notification build(android.support.v4.app.NotificationCompat$Builder)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: android.location.Location findTrackPointBy(java.lang.String,java.lang.String[])>
<com.google.common.collect.ImmutableSet$ArrayImmutableSet: int size()>
<com.google.gdata.model.Schema: com.google.gdata.model.Schema$RootKey getRootKey(com.google.gdata.model.AttributeKey)>
<com.google.android.apps.mytracks.widgets.TrackWidgetProvider: void updateMovingTime(android.content.Context,android.widget.RemoteViews,int[],com.google.android.apps.mytracks.stats.TripStatistics)>
<com.google.android.apps.mytracks.io.spreadsheets.SendSpreadsheetsActivity: com.google.android.apps.mytracks.io.sendtogoogle.AbstractSendAsyncTask createAsyncTask()>
<android.support.v4.util.LogWriter: void <init>(java.lang.String)>
<java.lang.String: void <clinit>()>
<android.support.v4.app.NoSaveStateFrameLayout: android.view.ViewGroup wrap(android.view.View)>
<com.google.api.client.http.json.JsonHttpContent: com.google.api.client.json.JsonFactory getJsonFactory()>
<android.graphics.Typeface: void <clinit>()>
<com.google.wireless.gdata.data.Entry: void setSummary(java.lang.String)>
<com.google.android.apps.mytracks.settings.RecordingSettingsActivity: void setAutoResumeTrackTimeoutSummaryAndOptions(java.lang.String[],java.lang.String[],java.lang.String[])>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(long)>
<com.google.android.apps.mytracks.content.Track: void setIcon(java.lang.String)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: android.database.Cursor getWaypointCursor(java.lang.String,java.lang.String[],java.lang.String,int)>
<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.gdata.data.spreadsheet.ListEntry: void <clinit>()>
<com.google.gdata.util.parser.Chset: com.google.gdata.util.parser.Chset difference(com.google.gdata.util.parser.Chset,com.google.gdata.util.parser.Chset)>
<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle setBigContentTitle(java.lang.CharSequence)>
<android.support.v4.app.FragmentActivity$2: android.view.View findViewById(int)>
<java.math.BigInteger: java.lang.String toString(int)>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()>
<com.google.api.client.http.HttpHeaders: void parseHeader(java.lang.String,java.lang.String,com.google.api.client.http.HttpHeaders$ParseHeaderState)>
<com.google.android.apps.mytracks.settings.AbstractSettingsActivity: void updatePreferenceSummary(android.preference.Preference,java.lang.String[],java.lang.String[],java.lang.String)>
<com.google.android.gms.internal.aa: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.gdata.util.httputil.FormUrlDecoder: java.lang.String getCanonicalEncodingName(java.lang.String)>
<com.google.android.apps.mytracks.SearchListActivity: void <clinit>()>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask: void dispatchSomePendingHits(boolean)>
<com.google.common.collect.ImmutableSet$Builder: void <init>(int)>
<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: void <init>(int,boolean)>
<com.google.gson.stream.JsonReader: void endObject()>
<com.google.android.apps.mytracks.io.file.exporter.SaveActivity: long[] access$100(com.google.android.apps.mytracks.io.file.exporter.SaveActivity)>
<com.google.android.apps.mytracks.content.DescriptionGeneratorImpl: void writeElevation(double,java.lang.StringBuilder,int,java.lang.String)>
<com.google.android.apps.mytracks.io.file.importer.ImportAsyncTask: java.lang.Boolean doInBackground(java.lang.Void[])>
<java.util.concurrent.FutureTask: void run()>
<com.google.gdata.client.Service: com.google.gdata.util.common.net.UriParameterMap access$000(com.google.gdata.client.Service$GDataRequest)>
<com.google.android.apps.mytracks.TrackListActivity: void onFileTypeDone(int,com.google.android.apps.mytracks.io.file.TrackFileFormat)>
<com.google.api.client.http.HttpRequestFactory: com.google.api.client.http.HttpRequest buildPostRequest(com.google.api.client.http.GenericUrl,com.google.api.client.http.HttpContent)>
<com.google.android.gms.internal.r: android.content.Intent g(java.lang.String)>
<com.google.api.client.http.UriTemplate: java.lang.String expand(java.lang.String,java.lang.Object,boolean)>
<com.google.gdata.util.ContentType: int hashCode()>
<com.google.protobuf.CodedInputStream: boolean skipField(int)>
<com.google.android.apps.mytracks.fragments.EnableSyncDialogFragment: void onCancel(android.content.DialogInterface)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: com.google.android.apps.mytracks.content.Waypoint createWaypoint(android.database.Cursor)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void startNewSession(java.lang.String,android.content.Context)>
<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener)>
<com.google.gson.stream.JsonReader: void close()>
<android.widget.TextView: void setTextSize(int,float)>
<com.google.android.apps.mytracks.fragments.ChartFragment$3: void <init>(com.google.android.apps.mytracks.fragments.ChartFragment)>
<java.lang.Throwable: java.lang.String getMessage()>
<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>
<com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment: android.widget.MultiAutoCompleteTextView access$000(com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment)>
<java.lang.String: boolean equals(java.lang.Object)>
<com.google.android.apps.analytics.PersistentHitStore: boolean setReferrerDatabase(android.database.sqlite.SQLiteDatabase,android.content.ContentValues)>
<com.google.android.apps.mytracks.services.sensors.ant.AntSensorManager$1: void <init>(com.google.android.apps.mytracks.services.sensors.ant.AntSensorManager)>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesUtils: java.lang.String getKmlPoint(android.location.Location)>
<com.google.android.apps.mytracks.util.Api8Adapter: boolean isGoogleFeedbackAvailable()>
<android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb: android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle)>
<com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment$2: void <init>(com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeatureMetadata: void setTitle(java.lang.String)>
<com.google.wireless.gdata.data.Entry: void setAuthor(java.lang.String)>
<android.support.v4.app.FragmentManagerImpl$4: void run()>
<com.google.android.common.http.UrlRules$Rule: java.lang.String apply(java.lang.String)>
<java.lang.StringBuilder: java.lang.String toString()>
<android.support.v4.view.ViewCompatJB: int getImportantForAccessibility(android.view.View)>
<com.google.wireless.gdata.data.Entry: void setCategoryScheme(java.lang.String)>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment: android.widget.RadioGroup access$400(com.google.android.apps.mytracks.fragments.ExportDialogFragment)>
<android.view.ViewGroup: void removeAllViews()>
<com.google.api.client.util.ClassInfo: com.google.api.client.util.ClassInfo of(java.lang.Class,boolean)>
<android.support.v4.app.FragmentActivity: void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View)>
<android.support.v4.app.LoaderManagerImpl: void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo)>
<java.util.Collections: void sort(java.util.List,java.util.Comparator)>
<java.util.HashMap: void <init>(int)>
<com.google.android.apps.mytracks.services.tasks.CheckPermissionAsyncTask: void setActivity(android.app.Activity)>
<com.google.android.apps.mytracks.settings.SettingsActivity: void onDrivePermissionSuccess()>
<com.google.protobuf.CodedInputStream: boolean refillBuffer(boolean)>
<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>
<com.google.gdata.wireformats.AltRegistry: void register(com.google.gdata.wireformats.AltFormat,com.google.gdata.wireformats.input.InputParser,com.google.gdata.wireformats.output.OutputGenerator)>
<com.google.android.apps.mytracks.content.Waypoint: java.lang.String getDescription()>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity$3: void <init>(com.google.android.apps.mytracks.settings.AdvancedSettingsActivity)>
<com.google.api.client.http.HttpHeaders: java.lang.String getContentType()>
<java.util.Locale: java.util.Locale getDefault()>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<android.view.View: android.os.IBinder getWindowToken()>
<android.content.ComponentName: void <clinit>()>
<android.database.Observable: void <init>()>
<com.google.android.apps.mytracks.settings.MapSettingsActivity: void configPercentagePreference()>
<android.support.v4.app.FragmentManagerImpl: void detachFragment(android.support.v4.app.Fragment,int,int)>
<com.google.wireless.gdata.client.GDataServiceClient: void <init>(com.google.wireless.gdata.client.GDataClient,com.google.wireless.gdata.client.GDataParserFactory)>
<android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.content.TrackDataManager: java.util.Set getListeners(com.google.android.apps.mytracks.content.TrackDataType)>
<com.google.common.collect.SingletonImmutableMap: void <init>(java.lang.Object,java.lang.Object)>
<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableListIterator listIterator(int)>
<com.google.gdata.util.common.base.CharMatcher$6: void <init>()>
<android.view.View: android.content.Context getContext()>
<com.google.gdata.data.spreadsheet.ListEntry: void <init>()>
<android.net.http.AndroidHttpClient: org.apache.http.entity.AbstractHttpEntity getCompressedEntity(byte[],android.content.ContentResolver)>
<android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>
<com.google.gdata.util.parser.Repeat: int parse(char[],int,int,java.lang.Object)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>
<com.google.gdata.util.ContentType: java.util.Map getAttributes()>
<android.app.Notification$Builder: android.app.Notification getNotification()>
<com.google.gdata.util.common.base.CharEscapers$2: void <init>()>
<android.os.Looper: android.os.Looper getMainLooper()>
<android.support.v4.view.ViewCompatJB: void setImportantForAccessibility(android.view.View,int)>
<com.google.common.collect.RegularImmutableSet: void <init>(java.lang.Object[],int,java.lang.Object[],int)>
<com.google.android.apps.mytracks.fragments.ChooseActivityTypeDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.google.android.apps.mytracks.io.maps.SendMapsAsyncTask: boolean prepareAndUploadPoints(com.google.android.apps.mytracks.content.Track,java.util.List,boolean)>
<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.google.android.apps.mytracks.settings.SettingsActivity: void onCheckPermissionDone(java.lang.String,boolean,android.content.Intent)>
<android.widget.TabHost: void <init>(android.content.Context)>
<android.support.v4.app.FragmentActivity: void invalidateSupportFragment(java.lang.String)>
<android.widget.Scroller: int getCurrX()>
<org.apache.http.message.AbstractHttpMessage: void <init>()>
<com.google.gdata.data.spreadsheet.ListEntry: void init()>
<com.google.api.client.http.apache.ApacheHttpTransport: void <init>()>
<com.google.android.apps.mytracks.services.MyTracksLocationManager$1$1: void <init>(com.google.android.apps.mytracks.services.MyTracksLocationManager$1)>
<com.google.android.apps.mytracks.MarkerDetailActivity: void <clinit>()>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void writePhotoOverlay(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.location.Location,java.lang.String,float)>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<com.google.gdata.util.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>
<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
<com.google.android.apps.mytracks.services.sensors.SensorManager: void setSensorState(com.google.android.apps.mytracks.content.Sensor$SensorState)>
<java.util.ArrayList: java.lang.Object get(int)>
<com.google.android.apps.mytracks.MarkerEditActivity: void updateUiByMarkerId()>
<com.google.android.apps.mytracks.content.DataSource: void registerContentObserver(android.net.Uri,android.database.ContentObserver)>
<com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()>
<com.google.android.gms.location.ActivityRecognitionResultCreator: void <init>()>
<java.lang.Short: void <clinit>()>
<android.appwidget.AppWidgetProvider: void onAppWidgetOptionsChanged(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle)>
<com.google.android.apps.mytracks.content.Track: void setName(java.lang.String)>
<com.google.android.apps.mytracks.MarkerListActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
<com.google.android.apps.mytracks.TrackListActivity: void access$1200(com.google.android.apps.mytracks.TrackListActivity,boolean,boolean)>
<com.google.gdata.util.XmlParser: void parse(org.xml.sax.InputSource)>
<com.google.api.client.http.AbstractInputStreamContent: void copy(java.io.InputStream,java.io.OutputStream)>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpContent getContent()>
<com.google.common.primitives.UnsignedLongs: long remainder(long,long)>
<com.google.api.client.util.DataMap$Entry: java.lang.String getKey()>
<com.google.api.client.util.GenericData: java.lang.Object put(java.lang.Object,java.lang.Object)>
<android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>
<com.google.android.apps.analytics.PipelinedRequester: void installCallbacks(com.google.android.apps.analytics.PipelinedRequester$Callbacks)>
<com.google.api.client.repackaged.org.apache.commons.codec.binary.StringUtils: byte[] getBytesUtf8(java.lang.String)>
<android.app.Notification$Builder: android.app.Notification$Builder setSound(android.net.Uri,int)>
<org.apache.http.message.AbstractHttpMessage: void addHeader(java.lang.String,java.lang.String)>
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>
<java.lang.Integer: java.lang.String toHexString(int)>
<com.google.api.client.googleapis.media.MediaUploadExponentialBackOffPolicy: long getNextBackOffMillis()>
<com.google.android.apps.mytracks.content.Waypoint: long getId()>
<com.google.api.client.googleapis.services.AbstractGoogleClient: void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)>
<com.google.android.apps.mytracks.DeleteActivity: java.lang.Object onRetainNonConfigurationInstance()>
<com.google.android.apps.mytracks.TrackEditActivity$2: void onFocusChange(android.view.View,boolean)>
<java.util.Date: void <init>(long)>
<com.google.api.client.http.HttpMediaType: com.google.api.client.http.HttpMediaType setSubType(java.lang.String)>
<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>
<com.google.android.apps.mytracks.content.Waypoint: void setName(java.lang.String)>
<android.support.v4.widget.CursorAdapter: android.database.Cursor getCursor()>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment$2: void <init>(com.google.android.apps.mytracks.fragments.ExportDialogFragment)>
<com.google.android.apps.mytracks.stats.TripStatistics: long getMovingTime()>
<com.google.android.apps.mytracks.io.sendtogoogle.AbstractSendActivity$1: void onCancel(android.content.DialogInterface)>
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment)>
<com.google.android.apps.mytracks.util.SystemUtils: java.lang.String getMyTracksVersion(android.content.Context)>
<android.support.v4.app.FragmentManagerImpl: void hideFragment(android.support.v4.app.Fragment,int,int)>
<com.google.android.apps.mytracks.fragments.EulaDialogFragment: com.google.android.apps.mytracks.fragments.EulaDialogFragment$EulaCaller access$000(com.google.android.apps.mytracks.fragments.EulaDialogFragment)>
<com.google.android.apps.mytracks.util.TrackRecordingServiceConnectionUtils: void startConnection(android.content.Context,com.google.android.apps.mytracks.services.TrackRecordingServiceConnection)>
<com.google.android.gms.location.LocationRequest: com.google.android.gms.location.LocationRequest setInterval(long)>
<java.util.ArrayList: boolean contains(java.lang.Object)>
<android.support.v4.view.ViewPager: int getClientWidth()>
<org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine getRequestLine()>
<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.android.apps.mytracks.TrackEditActivity: void onChooseActivityTypeDone(java.lang.String,boolean)>
<com.google.android.apps.mytracks.fragments.ConfirmSyncDialogFragment: void <init>()>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void writeEndWaypoints()>
<com.google.api.client.auth.oauth2.TokenRequest: com.google.api.client.auth.oauth2.TokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor)>
<com.google.android.apps.mytracks.fragments.ChooseActivityTypeDialogFragment$1: void onClick(android.content.DialogInterface,int)>
<com.google.android.apps.mytracks.MarkerListActivity$1: boolean onClick(int,int[],long[])>
<com.google.gdata.util.VersionRegistry: void mergeVersions(java.util.List,java.util.List)>
<com.google.android.apps.mytracks.content.Sensor$SensorData$Builder: void <init>()>
<com.google.gdata.util.common.xml.XmlWriter$Attribute: void <init>(java.lang.String,java.lang.String)>
<com.google.api.client.util.escape.Platform$1: void <init>()>
<com.google.android.apps.mytracks.io.gdata.maps.MapsMapMetadata: void setDescription(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore$DataBaseHelper: void <init>(android.content.Context,java.lang.String,int,com.google.android.apps.analytics.PersistentHitStore)>
<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>
<com.google.common.primitives.UnsignedInteger: int intValue()>
<com.google.android.apps.mytracks.fragments.DeleteMarkerDialogFragment: com.google.android.apps.mytracks.fragments.DeleteMarkerDialogFragment$DeleteMarkerCaller access$000(com.google.android.apps.mytracks.fragments.DeleteMarkerDialogFragment)>
<com.google.gdata.data.spreadsheet.SpreadsheetFeed: void declareExtensions(com.google.gdata.data.ExtensionProfile)>
<com.google.api.services.drive.Drive$Files: com.google.api.services.drive.Drive$Files$Insert insert(com.google.api.services.drive.model.File)>
<java.lang.String: void <init>(byte[],int,int,java.lang.String)>
<android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb: android.app.Notification build(android.support.v4.app.NotificationCompat$Builder)>
<com.google.wireless.gdata.parser.xml.XmlGDataParser: void <init>(java.io.InputStream,org.xmlpull.v1.XmlPullParser)>
<com.google.android.apps.mytracks.maps.FixedSpeedTrackPathDescriptor$1: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<com.google.android.gms.internal.ce: void disconnect()>
<android.os.ParcelFileDescriptor: void <clinit>()>
<com.google.android.apps.mytracks.TrackEditActivity: android.widget.AutoCompleteTextView access$000(com.google.android.apps.mytracks.TrackEditActivity)>
<com.google.common.collect.LinkedHashMultiset: int count(java.lang.Object)>
<com.google.wireless.gdata.data.Entry: void setDeleted(boolean)>
<com.google.android.apps.mytracks.content.TrackDataManager: java.util.EnumSet getTrackDataTypes(com.google.android.apps.mytracks.content.TrackDataListener)>
<com.google.api.client.util.ClassInfo: boolean isEnum()>
<com.google.android.apps.mytracks.content.Track: void setSharedOwner(java.lang.String)>
<com.google.gdata.util.XmlParser: void throwParseException(com.google.gdata.util.ParseException)>
<com.google.api.client.util.ArrayMap$Entry: java.lang.Object getKey()>
<android.preference.Preference: void <init>(android.content.Context)>
<com.google.android.apps.mytracks.settings.RecordingSettingsActivity: void onCreate(android.os.Bundle)>
<com.google.gdata.wireformats.AltRegistry$AltHandlers: void <init>(com.google.gdata.wireformats.input.InputParser,com.google.gdata.wireformats.output.OutputGenerator)>
<com.google.wireless.gdata.parser.xml.XmlGDataParser: com.google.wireless.gdata.data.Entry createEntry()>
<java.io.File: void <clinit>()>
<com.google.android.apps.mytracks.io.maps.SendMapsUtils: java.lang.String createNewMap(java.lang.String,java.lang.String,boolean,com.google.android.apps.mytracks.io.gdata.maps.MapsClient,java.lang.String)>
<android.support.v4.view.ViewPager$3: void <init>(android.support.v4.view.ViewPager)>
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>
<com.google.android.apps.mytracks.content.DescriptionGeneratorImpl: void writeDistance(double,java.lang.StringBuilder,int,java.lang.String)>
<com.google.api.client.http.EmptyContent: void <init>()>
<org.apache.http.entity.HttpEntityWrapper: void <init>(org.apache.http.HttpEntity)>
<com.google.android.apps.mytracks.TrackListActivity: void onDeleted()>
<com.google.api.client.http.FileContent: com.google.api.client.http.FileContent setType(java.lang.String)>
<android.view.View: android.view.ViewParent getParent()>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesAsyncTask: void invalidateToken()>
<android.support.v4.util.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)>
<com.google.wireless.gdata.data.Entry: java.lang.String getId()>
<com.google.android.apps.mytracks.services.tasks.CheckPermissionAsyncTask: boolean performTask()>
<com.google.api.client.http.HttpMediaType: com.google.api.client.http.HttpMediaType fromString(java.lang.String)>
<com.google.android.apps.analytics.AdMobInfo: com.google.android.apps.analytics.AdMobInfo getInstance()>
<com.google.api.client.util.DataMap$Entry: java.lang.Object getKey()>
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1: void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl,android.support.v4.view.AccessibilityDelegateCompat)>
<com.google.gdata.data.spreadsheet.WorksheetEntry: void <clinit>()>
<com.google.wireless.gdata.data.Entry: void setId(java.lang.String)>
<com.google.android.common.http.GoogleHttpClient$WrappedLayeredSocketFactory: void <init>(com.google.android.common.http.GoogleHttpClient,org.apache.http.conn.scheme.LayeredSocketFactory,com.google.android.common.http.GoogleHttpClient$1)>
<com.google.gdata.util.parser.Parser: com.google.gdata.util.parser.Parser optional()>
<com.google.android.apps.mytracks.MarkerListActivity: java.lang.String[] access$400()>
<com.google.android.gms.internal.bb$5: void onClick(android.view.View)>
<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>
<com.google.api.services.drive.Drive: void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)>
<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>
<com.google.android.apps.mytracks.MarkerListActivity: void onCreate(android.os.Bundle)>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataSerializer: void serializePublicationDate(org.xmlpull.v1.XmlSerializer,java.lang.String)>
<com.google.api.client.http.MultipartRelatedContent: boolean retrySupported()>
<android.support.v4.app.FragmentActivity: void onAttachFragment(android.support.v4.app.Fragment)>
<android.app.Activity: void dismissDialog(int)>
<com.google.android.apps.mytracks.stats.TripStatistics: void setCalorie(double)>
<com.google.android.apps.mytracks.util.StatsUtils: void setElevationValue(android.content.Context,android.view.View,int,double,boolean)>
<com.google.android.apps.mytracks.widgets.TrackWidgetConfigActivity: android.widget.Spinner access$300(com.google.android.apps.mytracks.widgets.TrackWidgetConfigActivity)>
<android.app.Activity: android.content.Intent getIntent()>
<com.google.android.apps.analytics.PersistentHitStore: void <init>(android.content.Context,java.lang.String,int)>
<com.google.android.gms.common.SignInButton: void d(android.content.Context)>
<android.support.v4.app.NotificationCompat: android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000()>
<com.google.gdata.util.common.base.CharMatcher$9: void <init>()>
<java.util.Vector: java.lang.Object get(int)>
<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<com.google.api.client.http.javanet.NetHttpRequest: void <init>(java.lang.String,java.net.HttpURLConnection)>
<android.support.v4.view.PagerAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<com.google.android.apps.mytracks.TrackListActivity: boolean access$702(com.google.android.apps.mytracks.TrackListActivity,boolean)>
<java.io.PrintWriter: void println()>
<com.google.api.client.http.HttpResponse: boolean isSuccessStatusCode()>
<com.google.api.client.http.HttpRequest: int getContentLoggingLimit()>
<com.google.android.apps.mytracks.TabsAdapter: void onTabChanged(java.lang.String)>
<java.util.HashSet: void <init>(int)>
<com.google.api.services.fusiontables.Fusiontables$Query$Sql: void <init>(com.google.api.services.fusiontables.Fusiontables$Query,java.lang.String)>
<com.google.gdata.util.common.xml.XmlNamespace: void <init>(java.lang.String,java.lang.String)>
<android.app.Activity: boolean onSearchRequested()>
<android.support.v4.app.FragmentManagerImpl$1: void run()>
<com.google.common.collect.ImmutableAsList: void <init>()>
<com.google.gdata.util.common.base.CharMatcher$13: void setBits(com.google.gdata.util.common.base.CharMatcher$LookupTable)>
<com.google.api.client.util.GenericData$EntryIterator: java.lang.Object next()>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity: void access$300(com.google.android.apps.mytracks.settings.AdvancedSettingsActivity)>
<com.google.android.apps.mytracks.io.file.exporter.SaveAsyncTask: void <clinit>()>
<java.lang.Character$UnicodeBlock: void <clinit>()>
<android.app.IntentService: void onCreate()>
<java.io.File: boolean isDirectory()>
<java.util.AbstractMap: boolean equals(java.lang.Object)>
<com.google.android.gms.internal.bb$1: void <init>(com.google.android.gms.internal.bb)>
<com.google.api.client.auth.oauth2.Credential: void <init>(com.google.api.client.auth.oauth2.Credential$AccessMethod,com.google.api.client.http.HttpTransport,com.google.api.client.json.JsonFactory,java.lang.String,com.google.api.client.http.HttpExecuteInterceptor,com.google.api.client.http.HttpRequestInitializer,java.util.List,com.google.api.client.util.Clock)>
<android.support.v4.app.NotificationCompat$Builder: android.app.Notification build()>
<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable)>
<android.support.v4.app.Fragment: void onHiddenChanged(boolean)>
<com.google.android.apps.mytracks.services.TrackRecordingService$5: void run()>
<com.google.common.primitives.UnsignedLong: java.lang.String toString()>
<android.support.v4.app.FragmentPagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)>
<com.google.android.gms.location.LocationRequest: void H(int)>
<com.google.android.apps.mytracks.services.ControlRecordingService: void <clinit>()>
<android.support.v4.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>
<com.google.android.apps.mytracks.widgets.TrackWidgetProvider: void updateTotalTime(android.content.Context,android.widget.RemoteViews,int[],com.google.android.apps.mytracks.stats.TripStatistics,boolean,boolean)>
<com.google.android.apps.mytracks.stats.ExtremityMonitor: double getMin()>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest: java.io.IOException newExceptionOnError(com.google.api.client.http.HttpResponse)>
<com.google.android.apps.mytracks.util.PreferencesUtils: long getLong(android.content.Context,int)>
<com.google.common.collect.SingletonImmutableMap: java.lang.Object get(java.lang.Object)>
<com.google.gdata.data.ExtensionDescription: void setRepeatable(boolean)>
<com.google.android.apps.mytracks.io.sendtogoogle.SendRequest: void setSendMaps(boolean)>
<com.google.api.client.json.gson.GsonFactory: com.google.api.client.json.JsonParser createJsonParser(java.io.InputStream,java.nio.charset.Charset)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsMapMetadata: boolean getSearchable()>
<com.google.gdata.util.common.base.CharMatcher$1: void <init>()>
<com.google.gdata.client.http.HttpGDataRequest: java.net.URL getRequestUrl()>
<com.google.api.client.json.Json: void <clinit>()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: com.google.android.apps.analytics.Dispatcher$Callbacks access$900(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: boolean access$1602(com.google.android.apps.mytracks.content.Sensor$SensorDataSet,boolean)>
<android.widget.FrameLayout: void <init>(android.content.Context)>
<com.google.api.client.util.ArrayMap$EntrySet: java.util.Iterator iterator()>
<java.util.Collections: java.util.Set singleton(java.lang.Object)>
<com.google.gdata.util.parser.Action: int parse(char[],int,int,java.lang.Object)>
<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>
<com.google.gson.stream.JsonReader: void nextNull()>
<com.google.api.client.googleapis.services.AbstractGoogleClient: java.lang.String getBaseUrl()>
<android.location.Location: long getTime()>
<java.util.ArrayList: java.util.Iterator iterator()>
<com.google.api.client.auth.oauth2.TokenRequest: com.google.api.client.auth.oauth2.TokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer)>
<com.google.android.apps.mytracks.io.maps.SendMapsAsyncTask: void <init>(com.google.android.apps.mytracks.io.maps.SendMapsActivity,long,android.accounts.Account,com.google.android.apps.mytracks.content.MyTracksProviderUtils)>
<com.google.android.apps.mytracks.TrackDetailActivity: boolean access$202(com.google.android.apps.mytracks.TrackDetailActivity,boolean)>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity: void <clinit>()>
<com.google.android.apps.mytracks.fragments.ChooseActivityDialogFragment: void onAttach(android.app.Activity)>
<com.google.android.apps.mytracks.util.EulaUtils: boolean hasAcceptedEula(android.content.Context)>
<com.google.android.apps.mytracks.settings.MapSettingsActivity: void <clinit>()>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential: void <init>(android.content.Context,java.lang.String)>
<com.google.android.gms.internal.p: android.os.IInterface o()>
<android.location.Location: float distanceTo(android.location.Location)>
<android.support.v4.util.SparseArrayCompat: void <init>()>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity$2: void <init>(com.google.android.apps.mytracks.settings.AdvancedSettingsActivity)>
<com.google.api.client.util.Types: java.lang.reflect.Type getMapValueParameter(java.lang.reflect.Type)>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity: long access$002(com.google.android.apps.mytracks.settings.AdvancedSettingsActivity,long)>
<java.lang.Long: java.lang.Long valueOf(java.lang.String)>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpRequest setEnableGZipContent(boolean)>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesActivity: com.google.android.apps.mytracks.io.sendtogoogle.AbstractSendAsyncTask createAsyncTask()>
<com.google.api.client.util.LoggingOutputStream: void <init>(java.io.OutputStream,java.util.logging.Logger,java.util.logging.Level,int)>
<com.google.android.apps.mytracks.io.sendtogoogle.AbstractSendAsyncTask: void <init>(com.google.android.apps.mytracks.io.sendtogoogle.AbstractSendActivity)>
<com.google.android.gms.common.GooglePlayServicesUtil: java.lang.String b(android.content.Context,int,int)>
<com.google.api.client.http.MultipartRelatedContent: boolean isTextBasedContentType(java.lang.String)>
<com.google.android.apps.mytracks.content.DataSourceManager: void registerListener(com.google.android.apps.mytracks.content.TrackDataType)>
<com.google.gdata.wireformats.output.DualModeGenerator: void <init>(com.google.gdata.wireformats.output.CharacterGenerator)>
<com.google.gdata.wireformats.AltRegistry: com.google.gdata.wireformats.input.InputParser getParser(com.google.gdata.wireformats.AltFormat)>
<com.google.api.client.http.apache.ApacheHttpTransport: com.google.api.client.http.LowLevelHttpRequest buildPutRequest(java.lang.String)>
<com.google.api.client.json.gson.GsonGenerator: void writeNumber(com.google.common.primitives.UnsignedInteger)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeature: void setIconUrl(java.lang.String)>
<com.google.android.apps.mytracks.settings.RecordingSettingsActivity: void setRecordingDistanceIntervalSummaryAndOptions(java.lang.String[],java.lang.String[],java.lang.String[],boolean)>
<java.io.File: int hashCode()>
<com.google.api.client.googleapis.MethodOverride: void <init>(boolean)>
<com.google.android.apps.mytracks.TrackListActivity$10: void onCancel(android.content.DialogInterface)>
<com.google.android.apps.mytracks.TrackListActivity$5: void onClick(android.view.View)>
<com.google.gdata.util.common.xml.parsing.SecureGenericXMLFactory$SecureSAXParserFactory: void setFeature(java.lang.String,boolean)>
<android.support.v4.view.ViewCompatJB: void postOnAnimation(android.view.View,java.lang.Runnable)>
<android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
<com.google.api.client.extensions.android.AndroidUtils: boolean isMinimumSdkLevel(int)>
<java.lang.Long: long parseLong(java.lang.String,int)>
<com.google.android.apps.mytracks.services.MyTracksLocationManager$5: void <init>(com.google.android.apps.mytracks.services.MyTracksLocationManager,com.google.android.gms.location.LocationListener)>
<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder add(java.lang.Object)>
<com.google.api.client.http.HttpRequest: boolean getFollowRedirects()>
<com.google.android.apps.mytracks.io.spreadsheets.SendSpreadsheetsAsyncTask: void <clinit>()>
<android.text.util.Linkify: void <clinit>()>
<com.google.android.apps.mytracks.fragments.MarkerDetailFragment$1: void <init>(com.google.android.apps.mytracks.fragments.MarkerDetailFragment)>
<com.google.api.services.fusiontables.Fusiontables: com.google.api.services.fusiontables.Fusiontables$Template template()>
<com.google.android.apps.mytracks.content.DataSourceManager: void <clinit>()>
<com.google.android.apps.mytracks.content.Sensor$SensorData: boolean access$502(com.google.android.apps.mytracks.content.Sensor$SensorData,boolean)>
<com.google.android.gms.internal.aa: void c(android.content.res.Resources)>
<com.google.api.client.http.HttpHeaders: void <init>()>
<com.google.api.services.fusiontables.model.Column: com.google.api.services.fusiontables.model.Column setType(java.lang.String)>
<com.google.android.apps.mytracks.io.sendtogoogle.AbstractSendActivity: void onAsyncTaskCompleted(boolean,java.lang.String)>
<com.google.android.gms.internal.t$a: void <init>()>
<com.google.android.gms.internal.bc$a: void <init>()>
<com.google.api.services.drive.Drive$Files$List: void <init>(com.google.api.services.drive.Drive$Files)>
<com.google.gdata.model.MetadataRegistry: java.util.Map getElements()>
<android.widget.RemoteViews: void setImageViewResource(int,int)>
<com.google.android.gms.internal.p$d: void <init>(com.google.android.gms.internal.p)>
<com.google.api.client.util.ArrayMap: java.lang.Object get(java.lang.Object)>
<android.widget.TextView: void setEnabled(boolean)>
<com.google.android.apps.mytracks.services.sensors.BluetoothSensorManager: android.bluetooth.BluetoothAdapter getDefaultBluetoothAdapter()>
<com.google.gdata.client.http.GoogleGDataRequest: void handleErrorResponse()>
<com.google.android.apps.mytracks.TrackDetailActivity: void onDeleted()>
<android.support.v4.content.ModernAsyncTask: android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>
<com.google.android.apps.mytracks.content.Waypoint: android.location.Location getLocation()>
<android.support.v4.app.DialogFragment: void onDetach()>
<com.google.android.apps.mytracks.fragments.ConfirmSyncDialogFragment: void onCancel(android.content.DialogInterface)>
<android.support.v4.view.ViewCompatJB: void postInvalidateOnAnimation(android.view.View)>
<java.net.URI: java.lang.String toString()>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: boolean hasPower()>
<android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb: void <init>()>
<com.google.android.apps.mytracks.TrackDetailActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
<com.google.api.client.googleapis.media.MediaHttpUploader: void addMethodOverride(com.google.api.client.http.HttpRequest)>
<java.lang.StringBuilder: java.lang.StringBuilder append(float)>
<com.google.common.collect.AbstractMultiset$EntrySet: java.util.Iterator iterator()>
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.support.v4.view.ViewCompat$ICSViewCompatImpl: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>
<com.google.gdata.util.ErrorElement: java.lang.String getInternalReason()>
<android.content.SearchRecentSuggestionsProvider: void <init>()>
<com.google.api.client.http.javanet.NetHttpTransport: com.google.api.client.http.LowLevelHttpRequest buildDeleteRequest(java.lang.String)>
<com.google.api.client.auth.oauth2.Credential: void <init>(com.google.api.client.auth.oauth2.Credential$AccessMethod)>
<com.google.android.apps.mytracks.content.Sensor$SensorData: boolean hasValue()>
<com.google.android.apps.mytracks.content.MyTracksProvider: android.net.Uri insertTrack(android.net.Uri,android.content.ContentValues)>
<com.google.gdata.client.http.GoogleGDataRequest$Factory: void <init>()>
<com.google.android.apps.mytracks.SensorStateActivity: void onResume()>
<com.google.api.client.http.LogContent: java.lang.String getType()>
<org.apache.http.entity.StringEntity: void <init>(java.lang.String)>
<android.support.v4.content.IntentCompat: void <clinit>()>
<com.google.api.client.json.JsonParser: void parse(java.util.ArrayList,java.lang.Object,com.google.api.client.json.CustomizeJsonParser)>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity: void onResume()>
<com.google.common.collect.ImmutableSet: int chooseTableSize(int)>
<com.google.android.apps.mytracks.SearchListActivity: boolean handleContextItem(int,int[])>
<android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeature: android.location.Location getPoint(int)>
<com.google.android.apps.mytracks.content.TrackDataHub: com.google.android.apps.mytracks.content.TrackDataHub newInstance(android.content.Context)>
<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>
<com.google.android.gms.internal.dt: void bc()>
<com.google.gdata.util.EntityTooLargeException: void <init>(java.net.HttpURLConnection)>
<com.google.android.apps.mytracks.io.sync.SyncUtils: void disableSyncForAll(android.content.Context)>
<java.lang.Integer: void <clinit>()>
<com.google.android.apps.mytracks.util.FileUtils: java.lang.String getExtension(java.lang.String)>
<org.apache.http.client.methods.HttpRequestBase: void abort()>
<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder setHeartRate(com.google.android.apps.mytracks.content.Sensor$SensorData)>
<com.google.android.apps.mytracks.content.Sensor: void internalForceInit()>
<com.google.android.apps.mytracks.io.file.exporter.SaveActivity: java.lang.String access$200(com.google.android.apps.mytracks.io.file.exporter.SaveActivity)>
<android.support.v4.view.ViewCompatHC: long getFrameTime()>
<java.util.concurrent.LinkedBlockingQueue: void <init>()>
<com.google.api.client.http.apache.ApacheHttpResponse: java.lang.String getHeaderValue(int)>
<com.google.common.collect.ImmutableCollection$Builder: int expandedCapacity(int,int)>
<android.graphics.ColorFilter: void finalize()>
<java.lang.Object: void <init>()>
<android.app.Service: void onDestroy()>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: void deleteTrack(android.content.Context,long)>
<com.google.api.client.http.javanet.NetHttpRequest: void addHeader(java.lang.String,java.lang.String)>
<com.google.android.apps.mytracks.services.tasks.PeriodicTaskExecutor: void <init>(com.google.android.apps.mytracks.services.TrackRecordingService,com.google.android.apps.mytracks.services.tasks.PeriodicTaskFactory)>
<com.google.android.apps.mytracks.fragments.ChooseActivityDialogFragment: void <init>()>
<com.google.android.apps.mytracks.services.sensors.ant.ChannelConfiguration: void setInitializing(boolean)>
<android.widget.TextView: void <init>(android.content.Context)>
<java.util.AbstractSet: boolean equals(java.lang.Object)>
<com.google.android.common.http.UrlRules: void <clinit>()>
<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<java.lang.Class: java.lang.Object cast(java.lang.Object)>
<com.google.common.collect.Count: int hashCode()>
<java.io.BufferedWriter: void flush()>
<com.google.android.apps.mytracks.services.TrackRecordingService: void sendTrackBroadcast(int,long)>
<com.google.android.apps.mytracks.io.file.importer.ImportAsyncTask: java.util.List getFiles()>
<com.google.android.apps.mytracks.settings.SettingsActivity: java.lang.Object onRetainNonConfigurationInstance()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void cancelPendingDispatches()>
<com.google.android.apps.mytracks.io.sendtogoogle.SendRequest: void setDriveSharePublic(boolean)>
<com.google.api.client.http.HttpRequest: void <init>(com.google.api.client.http.HttpTransport,java.lang.String)>
<com.google.android.apps.mytracks.MarkerListActivity$5: void <init>(com.google.android.apps.mytracks.MarkerListActivity,long)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<com.google.android.apps.mytracks.util.PreferencesUtils: void setBoolean(android.content.Context,int,boolean)>
<org.apache.http.client.methods.HttpTrace: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeatureMetadata: void setType(int)>
<com.google.android.apps.mytracks.content.TrackDataHub: boolean access$1302(com.google.android.apps.mytracks.content.TrackDataHub,boolean)>
<com.google.android.apps.mytracks.io.file.exporter.SaveAsyncTask: long[] access$000(com.google.android.apps.mytracks.io.file.exporter.SaveAsyncTask)>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesActivity: void <init>()>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<com.google.android.gms.internal.dz: int a(android.content.Context,android.util.AttributeSet)>
<com.google.android.common.gdata.AndroidGDataClient: org.apache.http.HttpEntity createEntityForEntry(com.google.wireless.gdata.serializer.GDataSerializer,int)>
<android.support.v4.util.SparseArrayCompat: int size()>
<android.app.AlertDialog: void setIcon(int)>
<com.google.android.apps.mytracks.fragments.AbstractMyTracksDialogFragment$1: void onShow(android.content.DialogInterface)>
<com.google.common.collect.Iterators$1: boolean hasNext()>
<com.google.android.apps.mytracks.util.FileUtils: java.lang.String getPath(java.lang.String[])>
<com.google.common.collect.AbstractMapBasedMultiset: java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultiset)>
<com.google.android.apps.mytracks.content.TrackDataHub$9: void run()>
<com.google.android.apps.mytracks.content.Sensor$SensorData$Builder: com.google.android.apps.mytracks.content.Sensor$SensorData buildPartial()>
<com.google.api.client.http.GenericUrl: java.lang.String buildAuthority()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: void <init>(com.google.android.apps.analytics.Dispatcher$Callbacks,java.lang.String,com.google.android.apps.analytics.NetworkDispatcher)>
<com.google.android.apps.mytracks.content.MyTracksLocation: void setSensorDataSet(com.google.android.apps.mytracks.content.Sensor$SensorDataSet)>
<com.google.android.apps.mytracks.fragments.PlayMultipleDialogFragment: long[] access$000(com.google.android.apps.mytracks.fragments.PlayMultipleDialogFragment,android.util.SparseBooleanArray)>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<android.os.Binder: android.os.IInterface queryLocalInterface(java.lang.String)>
<com.google.android.apps.mytracks.services.TrackRecordingServiceConnection: void bindIfStarted()>
<android.support.v4.content.Loader: boolean takeContentChanged()>
<com.google.api.client.http.apache.ApacheHttpResponse: void <init>(org.apache.http.client.methods.HttpRequestBase,org.apache.http.HttpResponse)>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesUtils: void <clinit>()>
<com.google.gdata.client.http.JdkHttpUrlConnectionSource: void <clinit>()>
<com.google.android.apps.mytracks.AbstractMyTracksActivity: void onHomeSelected()>
<android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)>
<android.os.Bundle: void putString(java.lang.String,java.lang.String)>
<com.google.api.client.http.HttpResponse: java.lang.Object parseAs(java.lang.Class)>
<com.google.android.apps.mytracks.content.Waypoint: long getStartId()>
<com.google.android.apps.mytracks.MarkerEditActivity: void access$100(com.google.android.apps.mytracks.MarkerEditActivity)>
<com.google.api.client.json.gson.GsonParser: void <init>(com.google.api.client.json.gson.GsonFactory,com.google.gson.stream.JsonReader)>
<java.util.Timer: int purge()>
<com.google.android.apps.mytracks.content.Track: java.lang.String getCategory()>
<java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
<com.google.api.client.googleapis.extensions.android.accounts.GoogleAccountManager: android.accounts.Account getAccountByName(java.lang.String)>
<android.widget.CompoundButton: void <init>(android.content.Context)>
<android.support.v4.view.AccessibilityDelegateCompatJellyBean$1: void <init>(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean)>
<com.google.gdata.client.SimpleCookieManager: void <init>()>
<android.app.Activity: void onPause()>
<com.google.android.apps.mytracks.MapOverlay$1: void <init>(com.google.android.apps.mytracks.MapOverlay)>
<com.google.api.client.http.GenericUrl: java.lang.String build()>
<com.google.android.apps.mytracks.TrackDetailActivity: void onHomeSelected()>
<java.util.Calendar: void set(int,int)>
<com.google.android.apps.mytracks.fragments.EulaDialogFragment: void onCancel(android.content.DialogInterface)>
<com.google.api.client.http.GenericUrl: java.lang.String getFragment()>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: com.google.android.apps.mytracks.content.Sensor$SensorData getHeartRate()>
<com.google.gdata.model.MetadataRegistry: com.google.gdata.model.AttributeMetadataRegistryBuilder getOrCreateAttribute(com.google.gdata.model.AttributeKey)>
<com.google.api.client.googleapis.media.MediaHttpUploader: long getMediaContentLength()>
<com.google.android.gms.internal.p$e: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<com.google.gdata.util.ServiceException: void <init>(java.lang.Throwable)>
<com.google.gson.stream.JsonReader: void <init>(java.io.Reader)>
<com.google.gdata.util.ErrorDomain: java.lang.String getDomainName()>
<java.util.WeakHashMap: void <init>()>
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>
<com.google.android.apps.mytracks.util.Api11Adapter$1: void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean)>
<com.google.android.apps.mytracks.services.ControlRecordingService: void onHandleIntent(android.content.Intent,com.google.android.apps.mytracks.services.ITrackRecordingService)>
<com.google.android.apps.mytracks.fragments.AbstractMyTracksDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.google.android.apps.mytracks.settings.StatsSettingsActivity$1: void <init>(com.google.android.apps.mytracks.settings.StatsSettingsActivity)>
<com.google.android.apps.mytracks.settings.SensorSettingsActivity: void onResume()>
<com.google.android.apps.mytracks.stats.TripStatistics: double getMinElevation()>
<com.google.api.client.googleapis.services.AbstractGoogleClient$Builder: com.google.api.client.http.HttpRequestInitializer getHttpRequestInitializer()>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeatureMetadata: void setColor(int)>
<com.google.gdata.util.common.net.UriParameterMap: void <clinit>()>
<java.io.FileOutputStream: void close()>
<com.google.gdata.util.parser.Parser: com.google.gdata.util.parser.Parser star()>
<com.google.android.gms.internal.bc$a$a: android.os.IBinder asBinder()>
<android.support.v4.app.NotificationCompat$NotificationCompatImplBase: void <init>()>
<com.google.gdata.model.MetadataRegistry: java.util.Map getAttributes()>
<com.google.common.collect.RegularImmutableMap: com.google.common.collect.RegularImmutableMap$LinkedEntry newLinkedEntry(java.lang.Object,java.lang.Object,com.google.common.collect.RegularImmutableMap$LinkedEntry)>
<org.apache.http.params.HttpConnectionParams: void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)>
<com.google.android.apps.mytracks.io.drive.SendDriveActivity: java.lang.Class getNextClass(boolean)>
<com.google.android.gms.location.LocationClient: void requestLocationUpdates(com.google.android.gms.location.LocationRequest,com.google.android.gms.location.LocationListener,android.os.Looper)>
<com.google.android.apps.mytracks.io.file.importer.KmzTrackImporter: void readImageFile(java.util.zip.ZipInputStream,java.lang.String)>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataParser: void <init>(java.io.InputStream,org.xmlpull.v1.XmlPullParser)>
<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy build()>
<com.google.api.client.googleapis.extensions.android.gms.auth.GooglePlayServicesAvailabilityIOException: com.google.android.gms.auth.UserRecoverableAuthException getCause()>
<android.support.v4.widget.CursorAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)>
<com.google.android.apps.mytracks.io.sendtogoogle.AbstractSendActivity: void onCreate(android.os.Bundle)>
<com.google.android.apps.analytics.Event: int getTimestampCurrent()>
<com.google.common.collect.AbstractMultiset: java.util.Set entrySet()>
<com.google.android.common.http.GoogleHttpClient$BlockedRequestException: void <init>(com.google.android.common.http.UrlRules$Rule)>
<java.io.BufferedWriter: void <init>(java.io.Writer)>
<android.util.Log: int i(java.lang.String,java.lang.String)>
<com.google.android.apps.mytracks.util.Api9Adapter: void <clinit>()>
<com.google.android.apps.mytracks.content.Track: void <clinit>()>
<android.support.v4.app.FragmentManagerImpl: void enqueueAction(java.lang.Runnable,boolean)>
<com.google.gdata.util.VersionRegistry: void resetThreadVersion()>
<com.google.gdata.wireformats.AltRegistry: void <init>(com.google.gdata.wireformats.AltRegistry)>
<android.os.Bundle: int getInt(java.lang.String)>
<com.google.gdata.util.common.base.StringUtil: java.util.Collection string2Collection(java.lang.String,java.lang.String,boolean,java.util.Collection)>
<org.apache.http.HttpHost: void <init>(java.lang.String,int)>
<com.google.android.apps.mytracks.services.sensors.ant.CombinedBikeChannelConfiguration: void <init>()>
<com.google.android.gms.location.LocationClient: void <init>(android.content.Context,com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks,com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener)>
<com.google.android.apps.mytracks.fragments.ChartFragment: void <init>()>
<com.google.android.apps.mytracks.HelpActivity: int getLayoutResId()>
<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>
<java.util.ArrayList: boolean add(java.lang.Object)>
<android.support.v4.content.IntentCompat$IntentCompatImplBase: android.content.Intent makeMainActivity(android.content.ComponentName)>
<com.google.android.gms.internal.q: void <init>(android.content.Context)>
<com.google.gdata.data.BaseEntry: java.util.Set getCategories()>
<com.google.api.client.http.HttpRequest: java.lang.String normalizeMediaType(java.lang.String)>
<com.google.api.client.json.JsonToken: com.google.api.client.json.JsonToken[] values()>
<com.google.android.apps.mytracks.TrackEditActivity: com.google.android.apps.mytracks.content.MyTracksProviderUtils access$500(com.google.android.apps.mytracks.TrackEditActivity)>
<java.util.TreeMap: java.util.Set entrySet()>
<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException sizeLimitExceeded()>
<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken readLiteral()>
<com.google.android.gms.location.ActivityRecognitionClient: void removeActivityUpdates(android.app.PendingIntent)>
<java.lang.Integer: int parseInt(java.lang.String)>
<com.google.api.client.http.HttpRequestFactory: void <init>(com.google.api.client.http.HttpTransport,com.google.api.client.http.HttpRequestInitializer)>
<com.google.api.client.util.ArrayValueMap$ArrayValue: void <init>(java.lang.Class)>
<com.google.api.services.drive.Drive: void <clinit>()>
<com.google.android.apps.mytracks.widgets.TrackWidgetConfigActivity: int access$000(com.google.android.apps.mytracks.widgets.TrackWidgetConfigActivity)>
<com.google.wireless.gdata.data.Entry: java.lang.String getEmail()>
<com.google.android.apps.mytracks.io.file.importer.ImportActivity$1: void <init>(com.google.android.apps.mytracks.io.file.importer.ImportActivity)>
<android.view.View: void setVisibility(int)>
<com.google.android.apps.mytracks.util.PreferencesUtils: void storeWeightValue(android.content.Context,java.lang.String)>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpRequest setInterceptor(com.google.api.client.http.HttpExecuteInterceptor)>
<com.google.android.gms.internal.u$a$a: void e(com.google.android.gms.internal.t,int,java.lang.String,android.os.Bundle)>
<java.io.IOException: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.services.tasks.PeriodicTaskExecutor: void shutdown()>
<com.google.android.apps.mytracks.content.TrackDataHub: void runInHanderThread(java.lang.Runnable)>
<com.google.android.apps.mytracks.content.Track: void <init>()>
<com.google.android.gms.internal.dz: void bm()>
<com.google.gdata.util.common.base.StringUtil: void <clinit>()>
<com.google.android.apps.mytracks.content.Waypoint: void setDescription(java.lang.String)>
<com.google.api.client.util.DataMap$EntryIterator: java.util.Map$Entry next()>
<com.google.api.client.json.JsonParser: void <init>()>
<com.google.gdata.util.common.base.PercentEscaper: java.lang.String escape(java.lang.String)>
<com.google.android.gms.internal.dz$a: void onClick(android.view.View)>
<android.support.v4.util.TimeUtils: int printField(char[],int,char,int,boolean,int)>
<android.support.v4.view.ViewPager: void access$000(android.support.v4.view.ViewPager,int)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>
<com.google.gdata.client.Service: com.google.gdata.util.Version getProtocolVersion()>
<com.google.wireless.gdata.parser.xml.XmlGDataParser: void handleAuthor(com.google.wireless.gdata.data.Entry)>
<com.google.android.apps.mytracks.TrackDetailActivity: void onNewIntent(android.content.Intent)>
<com.google.android.apps.mytracks.content.TrackDataHub: void notifyPreferenceChanged(java.lang.String)>
<com.google.gdata.util.common.xml.parsing.SecureGenericXMLFactory: javax.xml.parsers.SAXParserFactory getSAXParserFactory(javax.xml.parsers.SAXParserFactory)>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity: void shareTrack(long)>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpRequest setContent(com.google.api.client.http.HttpContent)>
<com.google.android.gms.common.GooglePlayServicesUtil: android.app.Dialog getErrorDialog(int,android.app.Activity,int,android.content.DialogInterface$OnCancelListener)>
<com.google.api.client.util.GenericData: com.google.api.client.util.ClassInfo getClassInfo()>
<com.google.android.apps.mytracks.services.ControlRecordingService: void <init>()>
<com.google.android.apps.mytracks.io.file.exporter.SaveAsyncTask: java.lang.Boolean saveAllTracks()>
<com.google.android.gms.internal.p: android.content.Context getContext()>
<android.content.ContextWrapper: void <init>(android.content.Context)>
<com.google.api.client.googleapis.services.AbstractGoogleClient: java.lang.String getApplicationName()>
<com.google.android.apps.mytracks.io.spreadsheets.SendSpreadsheetsAsyncTask: java.net.URL getWorksheetUrl(com.google.gdata.client.spreadsheet.SpreadsheetService,java.lang.String)>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential: com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential usingOAuth2(android.content.Context,java.lang.String,java.lang.String[])>
<com.google.common.collect.Collections2: java.util.Collection cast(java.lang.Iterable)>
<com.google.android.apps.mytracks.services.TrackRecordingService: int access$902(com.google.android.apps.mytracks.services.TrackRecordingService,int)>
<com.google.api.client.auth.oauth2.RefreshTokenRequest: void <init>(com.google.api.client.http.HttpTransport,com.google.api.client.json.JsonFactory,com.google.api.client.http.GenericUrl,java.lang.String)>
<com.google.android.gms.auth.GooglePlayServicesAvailabilityException: void <init>(int,java.lang.String,android.content.Intent)>
<com.google.android.apps.analytics.AdHitIdGenerator: void <init>()>
<com.google.wireless.gdata.data.Entry: java.lang.String getHtmlUri()>
<android.support.v4.app.Fragment$1: android.view.View findViewById(int)>
<com.google.android.apps.mytracks.fragments.FrequencyDialogFragment: android.app.Dialog createDialog()>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpRequest setUnsuccessfulResponseHandler(com.google.api.client.http.HttpUnsuccessfulResponseHandler)>
<com.google.gdata.client.Service: java.lang.Class classOf(java.lang.Object)>
<com.google.android.common.gdata.AndroidXmlParserFactory: org.xmlpull.v1.XmlPullParser createParser()>
<com.google.android.apps.mytracks.TrackDetailActivity$3: void <init>(com.google.android.apps.mytracks.TrackDetailActivity)>
<android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()>
<com.google.android.apps.mytracks.stats.DoubleBuffer: void reset()>
<com.google.gdata.client.GoogleAuthTokenFactory$OAuth2Token: boolean refreshToken()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void setProductVersion(java.lang.String,java.lang.String)>
<com.google.android.apps.mytracks.TrackEditActivity$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.google.android.apps.mytracks.fragments.MarkerDetailFragment$2: void <init>(com.google.android.apps.mytracks.fragments.MarkerDetailFragment)>
<com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>
<com.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask: void listenToPhoneState(android.telephony.PhoneStateListener,int)>
<com.google.gdata.util.common.base.CharMatcher: com.google.gdata.util.common.base.CharMatcher or(com.google.gdata.util.common.base.CharMatcher)>
<com.google.gdata.util.common.xml.parsing.SecureGenericXMLFactory$SecureSAXParserFactory: void setValidating(boolean)>
<com.google.api.services.fusiontables.FusiontablesRequest: void <init>(com.google.api.services.fusiontables.Fusiontables,java.lang.String,java.lang.String,java.lang.Object,java.lang.Class)>
<com.google.gdata.util.ErrorDomain$ErrorCode: java.lang.String getSendReport()>
<com.google.android.apps.mytracks.TrackEditActivity$5: void <init>(com.google.android.apps.mytracks.TrackEditActivity)>
<com.google.android.apps.mytracks.MarkerListActivity$5: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<com.google.api.client.http.HttpTransport: void <init>()>
<com.google.common.collect.AbstractMapEntry: int hashCode()>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpHeaders getResponseHeaders()>
<com.google.android.apps.mytracks.stats.TripStatistics: int getLeft()>
<com.google.common.collect.Maps: java.util.HashMap newHashMap(java.util.Map)>
<com.google.android.gms.internal.ea: void setTextColor(int)>
<com.google.android.apps.analytics.Event: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int)>
<com.google.api.client.http.javanet.NetHttpRequest: void setTimeout(int,int)>
<android.support.v4.app.NavUtils$NavUtilsImplBase: void <init>()>
<org.apache.http.conn.params.ConnManagerParams: void setMaxTotalConnections(org.apache.http.params.HttpParams,int)>
<com.google.api.services.fusiontables.Fusiontables$Style$Insert: void <init>(com.google.api.services.fusiontables.Fusiontables$Style,java.lang.String,com.google.api.services.fusiontables.model.StyleSetting)>
<com.google.api.client.auth.oauth2.Credential: java.lang.String getAccessToken()>
<com.google.android.apps.mytracks.services.sensors.ant.ChannelConfiguration: void setChannelState(com.google.android.apps.mytracks.services.sensors.ant.AntSensorManager$ChannelStates)>
<com.google.android.gms.internal.u$a: com.google.android.gms.internal.u h(android.os.IBinder)>
<com.google.wireless.gdata.serializer.xml.XmlEntryGDataSerializer: java.lang.String getContentType()>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.google.android.gms.internal.dz: void setType(int)>
<com.google.android.apps.analytics.PersistentHitStore: boolean endTransaction(android.database.sqlite.SQLiteDatabase)>
<com.google.android.apps.mytracks.stats.TripStatistics: void setTotalTime(long)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: android.net.Uri insertTrack(com.google.android.apps.mytracks.content.Track)>
<com.google.gdata.data.BaseEntry$EntryState: void <init>()>
<android.os.Bundle: void putLongArray(java.lang.String,long[])>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks access$1200(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread)>
<org.xml.sax.InputSource: void <init>(java.io.Reader)>
<android.app.Notification$Builder: android.app.Notification$Builder setPriority(int)>
<com.google.wireless.gdata.parser.xml.XmlGDataParser: void handleExtraElementInEntry(com.google.wireless.gdata.data.Entry)>
<com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment: void <init>()>
<com.google.android.apps.mytracks.services.MyTracksLocationManager: void requestLocationUpdates(long,float,com.google.android.gms.location.LocationListener)>
<com.google.android.gms.internal.x: java.lang.Object d(java.lang.Object)>
<java.util.zip.ZipInputStream: void closeEntry()>
<com.google.android.apps.mytracks.TrackDetailActivity$1: void <init>(com.google.android.apps.mytracks.TrackDetailActivity)>
<com.google.gdata.util.common.base.UnicodeEscaper: int codePointAt(java.lang.CharSequence,int,int)>
<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>
<com.google.common.collect.RegularImmutableMap: int chooseTableSize(int)>
<com.google.android.apps.mytracks.TrackListActivity: void onStart()>
<com.google.api.client.util.Types: java.lang.reflect.ParameterizedType getSuperParameterizedType(java.lang.reflect.Type,java.lang.Class)>
<com.google.android.apps.mytracks.io.gdata.AndroidGDataClient: org.apache.http.HttpEntity createEntityForEntry(com.google.wireless.gdata.serializer.GDataSerializer,int)>
<com.google.api.client.http.UriTemplate$CompositeOutput: int getVarNameStartIndex()>
<java.io.StringWriter: java.lang.String toString()>
<com.google.api.client.auth.oauth2.BearerToken: com.google.api.client.auth.oauth2.Credential$AccessMethod authorizationHeaderAccessMethod()>
<com.google.android.apps.mytracks.settings.AbstractSettingsActivity$1: void <init>(com.google.android.apps.mytracks.settings.AbstractSettingsActivity,java.lang.String[],java.lang.String[],android.preference.Preference$OnPreferenceChangeListener)>
<com.google.android.apps.analytics.PersistentHitStore: com.google.android.apps.analytics.Hit[] peekHits()>
<com.google.android.apps.mytracks.MarkerEditActivity$2: void <init>(com.google.android.apps.mytracks.MarkerEditActivity,boolean)>
<com.google.android.apps.mytracks.fragments.DeleteMarkerDialogFragment$1$1: void <init>(com.google.android.apps.mytracks.fragments.DeleteMarkerDialogFragment$1)>
<com.google.gdata.data.spreadsheet.RecordFeed: void <init>()>
<com.google.android.apps.mytracks.io.file.importer.ImportActivity: int access$100(com.google.android.apps.mytracks.io.file.importer.ImportActivity)>
<android.util.Log: int v(java.lang.String,java.lang.String)>
<android.support.v4.content.ContextCompatJellybean: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)>
<com.google.gdata.model.transforms.atompub.AtompubVersionTransforms: void <clinit>()>
<java.util.concurrent.LinkedBlockingQueue: java.lang.Object take()>
<android.text.SpannableString: void <init>(java.lang.CharSequence)>
<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>
<android.widget.FrameLayout$LayoutParams: void <init>(int,int,int)>
<com.google.protobuf.CodedInputStream: int readInt32()>
<com.google.api.client.util.GenericData$EntryIterator: void <init>(com.google.api.client.util.GenericData,com.google.api.client.util.DataMap$EntrySet)>
<com.google.gdata.client.Service: com.google.gdata.client.Service$GDataRequest createRequest(com.google.gdata.client.Service$GDataRequest$RequestType,java.net.URL,com.google.gdata.util.ContentType)>
<com.google.gdata.util.common.base.CharEscapers$1: void <init>()>
<com.google.common.collect.Iterators$2: void <init>()>
<com.google.common.primitives.Ints: int saturatedCast(long)>
<android.support.v4.app.BackStackRecord: void run()>
<com.google.android.apps.mytracks.util.StatsUtils: void setDistanceValue(android.content.Context,android.view.View,double,boolean)>
<com.google.gdata.wireformats.XmlWireFormat: void <init>()>
<com.google.common.base.Joiner$MapJoiner: void <init>(com.google.common.base.Joiner,java.lang.String,com.google.common.base.Joiner$1)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])>
<android.support.v4.app.BackStackRecord: int commitAllowingStateLoss()>
<java.util.ArrayList: boolean remove(java.lang.Object)>
<com.google.gdata.util.common.base.UnicodeEscaper: void <init>()>
<com.google.android.apps.mytracks.stats.ExtremityMonitor: void set(double,double)>
<org.apache.http.impl.SocketHttpClientConnection: void close()>
<com.google.android.gsf.Gservices: void ensureCacheInitializedLocked(android.content.ContentResolver)>
<com.google.api.client.json.gson.GsonGenerator: void writeNull()>
<com.google.android.apps.mytracks.stats.TripStatistics: double getMinGrade()>
<com.google.android.common.gdata.AndroidGDataClient$PostRequestCreator: void <init>(java.lang.String,org.apache.http.HttpEntity)>
<com.google.gdata.util.XmlParser: javax.xml.parsers.SAXParserFactory getSAXParserFactory()>
<android.support.v4.app.Fragment: void onPause()>
<android.app.Dialog: void <init>(android.content.Context)>
<com.google.common.collect.Iterators$1: java.lang.Object next()>
<android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
<android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>
<com.google.gdata.model.MetadataRegistry: com.google.gdata.model.MetadataRegistry register(com.google.gdata.model.ElementKey)>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesAsyncTask: boolean uploadAllTrackPoints(com.google.api.services.fusiontables.Fusiontables,java.lang.String,com.google.android.apps.mytracks.content.Track)>
<com.google.android.apps.mytracks.services.sensors.SensorUtils: java.lang.String getStateAsString(com.google.android.apps.mytracks.content.Sensor$SensorState,android.content.Context)>
<com.google.api.client.json.GenericJson: java.lang.String toString()>
<com.google.android.apps.mytracks.io.sendtogoogle.SendRequest: void setSendFusionTables(boolean)>
<com.google.android.apps.mytracks.TrackListActivity: java.lang.String[] access$1400()>
<java.util.HashMap: java.util.Set entrySet()>
<com.google.api.client.googleapis.GoogleHeaders: void setUploadContentType(java.lang.String)>
<com.google.android.apps.mytracks.stats.TripStatistics: void setBounds(int,int,int,int)>
<com.google.gdata.util.common.base.CharMatcher$Or: boolean matches(char)>
<com.google.gdata.model.TransformKey: void <init>(com.google.gdata.model.ElementKey,com.google.gdata.model.MetadataKey,com.google.gdata.model.MetadataContext)>
<com.google.android.apps.mytracks.SearchListActivity: void onStart()>
<java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>
<com.google.common.collect.LinkedHashMultiset: int add(java.lang.Object,int)>
<android.view.MotionEvent: void finalize()>
<com.google.common.collect.RegularImmutableAsList: void <init>(com.google.common.collect.ImmutableCollection,java.lang.Object[])>
<com.google.api.services.fusiontables.model.PointStyle: void <init>()>
<com.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask$3: void <init>(com.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask)>
<java.util.HashSet: boolean add(java.lang.Object)>
<com.google.api.client.http.HttpStatusCodes: boolean isRedirect(int)>
<android.content.Intent: java.lang.String getAction()>
<com.dsi.ant.AntInterface$1: void <init>(com.dsi.ant.AntInterface)>
<android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float)>
<com.google.android.apps.mytracks.content.TrackDataHub: int access$1502(com.google.android.apps.mytracks.content.TrackDataHub,int)>
<com.google.android.apps.analytics.NetworkDispatcher: org.apache.http.HttpHost access$200(com.google.android.apps.analytics.NetworkDispatcher)>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void reportStart()>
<com.google.android.apps.analytics.AdMobInfo: void <clinit>()>
<com.google.android.apps.analytics.NetworkDispatcher: void dispatchHits(com.google.android.apps.analytics.Hit[])>
<com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager: void cancelThreads()>
<com.google.api.client.http.AbstractInputStreamContent: java.lang.String getType()>
<com.google.android.apps.mytracks.util.DialogUtils$2: void onShow(android.content.DialogInterface)>
<com.google.gdata.wireformats.AltFormat$Builder: com.google.gdata.wireformats.AltFormat$Builder setWireFormat(com.google.gdata.wireformats.WireFormat)>
<com.google.android.apps.mytracks.io.maps.SendMapsAsyncTask: boolean uploadSegment(java.lang.String,java.util.ArrayList)>
<com.google.api.client.http.UriTemplate: java.lang.String getListPropertyValue(java.lang.String,java.util.Iterator,boolean,com.google.api.client.http.UriTemplate$CompositeOutput)>
<com.google.api.client.googleapis.MethodOverride: boolean overrideThisMethod(com.google.api.client.http.HttpRequest)>
<com.google.android.apps.mytracks.services.MyTracksLocationManager: com.google.android.gms.location.LocationListener access$200(com.google.android.apps.mytracks.services.MyTracksLocationManager)>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<com.google.api.client.googleapis.GoogleHeaders: void <init>(com.google.api.client.http.HttpHeaders)>
<com.google.api.client.http.apache.ApacheHttpResponse: void disconnect()>
<com.google.android.apps.mytracks.services.AbsoluteLocationListenerPolicy: long getDesiredPollingInterval()>
<com.google.android.apps.mytracks.settings.SensorSettingsActivity: void <init>()>
<com.google.wireless.gdata.data.Entry: java.lang.String getCategory()>
<java.util.HashMap: void <init>()>
<android.support.v4.app.DialogFragment: void onAttach(android.app.Activity)>
<com.google.api.client.http.javanet.NetHttpTransport: com.google.api.client.http.LowLevelHttpRequest buildPostRequest(java.lang.String)>
<com.google.android.apps.mytracks.io.file.importer.ImportActivity: boolean access$300(com.google.android.apps.mytracks.io.file.importer.ImportActivity)>
<android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
<com.google.common.collect.Maps: java.util.LinkedHashMap newLinkedHashMap()>
<com.google.android.apps.mytracks.content.TrackDataHub: com.google.android.apps.mytracks.content.DataSource newDataSource()>
<java.lang.Exception: void <init>(java.lang.String)>
<android.widget.Spinner: void setAdapter(android.widget.Adapter)>
<com.google.api.client.util.LoggingOutputStream: com.google.api.client.util.LoggingByteArrayOutputStream getLogStream()>
<com.google.common.collect.ImmutableCollection$EmptyImmutableCollection: void <clinit>()>
<com.google.api.client.http.apache.ApacheHttpResponse: int getStatusCode()>
<android.view.MotionEvent: void <init>()>
<com.google.android.apps.mytracks.services.TrackRecordingService: com.google.android.apps.mytracks.services.LocationListenerPolicy access$502(com.google.android.apps.mytracks.services.TrackRecordingService,com.google.android.apps.mytracks.services.LocationListenerPolicy)>
<android.support.v4.util.SparseArrayCompat: void clear()>
<java.util.concurrent.locks.ReentrantLock: void <init>()>
<com.google.android.apps.mytracks.io.gdata.GDataClientFactory: void <clinit>()>
<com.google.gdata.wireformats.input.ElementParser: void <init>(com.google.gdata.wireformats.AltFormat,java.lang.Class)>
<com.google.android.gms.common.GooglePlayServicesUtil: android.app.Dialog a(int,android.app.Activity,int,android.content.DialogInterface$OnCancelListener,int)>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity: void onResetPreferencesConfirmed()>
<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>
<com.google.protobuf.CodedInputStream: long readRawLittleEndian64()>
<java.util.ArrayList: void ensureCapacity(int)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder access$800()>
<com.google.gdata.util.common.base.CharMatcher$14: void setBits(com.google.gdata.util.common.base.CharMatcher$LookupTable)>
<com.google.api.client.util.ArrayMap: void <init>()>
<com.google.android.apps.mytracks.TrackEditActivity: void onActivityResult(int,int,android.content.Intent)>
<java.text.SimpleDateFormat: java.text.DateFormat getDateTimeInstance()>
<com.google.android.apps.mytracks.io.file.importer.ImportActivity$3: void onCancel(android.content.DialogInterface)>
<com.google.gdata.data.ExtensionPoint: boolean addExtension(com.google.gdata.data.Extension,java.lang.Class)>
<com.google.api.client.util.ArrayMap$EntrySet: void <init>(com.google.api.client.util.ArrayMap)>
<android.support.v4.view.ViewCompat$ICSViewCompatImpl: void <init>()>
<com.google.android.apps.mytracks.fragments.MarkerDetailFragment$2: void onClick(android.view.View)>
<java.lang.Long: long parseLong(java.lang.String)>
<android.support.v4.app.NotificationCompatJellybean: android.app.Notification build()>
<com.google.api.services.drive.DriveRequest: void <init>(com.google.api.services.drive.Drive,java.lang.String,java.lang.String,java.lang.Object,java.lang.Class)>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity$5: void onClick(android.content.DialogInterface,int)>
<com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)>
<com.google.android.gms.internal.ce$c: void n()>
<com.google.android.apps.mytracks.content.Track: void setStartId(long)>
<android.app.Activity: android.view.View findViewById(int)>
<java.util.AbstractSet: void <init>()>
<com.google.gdata.util.ContentType: void <init>(java.lang.String)>
<android.support.v4.app.FragmentManagerImpl: void <init>()>
<android.support.v4.app.LoaderManagerImpl: android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>
<com.google.common.primitives.UnsignedLong: com.google.common.primitives.UnsignedLong asUnsigned(long)>
<com.google.android.apps.mytracks.AggregatedStatsActivity: int getLayoutResId()>
<com.google.api.client.json.gson.GsonFactory: com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.Writer)>
<com.google.android.gms.location.LocationRequest: void c(long)>
<java.lang.String: char[] toCharArray()>
<com.google.gdata.client.Service$GDataRequest$RequestType: void <init>(java.lang.String,int)>
<java.net.URL: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.util.Api8Adapter: void setAppWidgetSize(android.appwidget.AppWidgetManager,int,int)>
<com.google.android.apps.mytracks.services.sensors.ant.AntSensorValue: void <init>()>
<com.google.api.client.util.ArrayMap: java.lang.Object valueAtDataIndex(int)>
<com.google.android.apps.mytracks.settings.SettingsActivity: void onDrivePermissionFailure()>
<com.google.android.apps.mytracks.io.file.TrackFileFormat: void <clinit>()>
<com.google.protobuf.AbstractMessageLite$Builder: com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream)>
<com.google.gdata.model.ElementKey: com.google.gdata.model.ElementKey of(com.google.gdata.model.QName)>
<com.google.api.client.http.ByteArrayContent: com.google.api.client.http.ByteArrayContent setType(java.lang.String)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()>
<com.google.android.apps.mytracks.util.DialogUtils$1: void <init>(android.content.Context,android.app.AlertDialog)>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder: void <init>(com.google.api.client.http.HttpTransport,com.google.api.client.json.JsonFactory,java.lang.String,java.lang.String,com.google.api.client.http.HttpRequestInitializer,boolean)>
<com.google.api.services.fusiontables.Fusiontables$Template$Insert: void <init>(com.google.api.services.fusiontables.Fusiontables$Template,java.lang.String,com.google.api.services.fusiontables.model.Template)>
<com.google.android.apps.mytracks.SearchListActivity: boolean access$400(com.google.android.apps.mytracks.SearchListActivity,int,int[])>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpHeaders getHeaders()>
<com.google.gdata.client.http.HttpGDataRequest$Factory: com.google.gdata.client.Service$GDataRequest createRequest(com.google.gdata.client.Service$GDataRequest$RequestType,java.net.URL,com.google.gdata.util.ContentType)>
<android.widget.ListView: void <init>(android.content.Context)>
<com.google.api.client.json.JsonParser: java.lang.Object parseAndClose(java.lang.Class,com.google.api.client.json.CustomizeJsonParser)>
<com.google.android.apps.analytics.Event: int getUserId()>
<com.google.gdata.wireformats.output.WireFormatOutputGenerator: void <init>()>
<android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)>
<com.google.android.apps.mytracks.content.TrackDataHub$2: void run()>
<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>
<com.google.android.apps.mytracks.TrackDetailActivity$4: void <init>(com.google.android.apps.mytracks.TrackDetailActivity)>
<android.support.v4.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>
<com.google.api.client.http.LogContent: boolean retrySupported()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: void <init>(com.google.android.apps.analytics.Dispatcher$Callbacks,com.google.android.apps.analytics.PipelinedRequester,java.lang.String,com.google.android.apps.analytics.NetworkDispatcher)>
<android.support.v4.util.SparseArrayCompat: void <init>(int)>
<com.google.api.services.drive.model.File: java.lang.String getId()>
<com.google.android.apps.mytracks.util.CalorieUtils: double getCalorie(android.location.Location,android.location.Location,double,double,com.google.android.apps.mytracks.util.CalorieUtils$ActivityType)>
<com.google.android.apps.mytracks.fragments.ChartFragment: void zoomOut()>
<java.net.URL: java.lang.String getQuery()>
<com.google.gdata.model.atom.Person: void <clinit>()>
<com.google.android.apps.mytracks.io.file.importer.AbstractFileTrackImporter: void <init>(android.content.Context,long,com.google.android.apps.mytracks.content.MyTracksProviderUtils)>
<com.google.api.client.googleapis.media.MediaUploadExponentialBackOffPolicy: void <init>(com.google.api.client.googleapis.media.MediaHttpUploader)>
<com.google.wireless.gdata.parser.ParseException: void <init>(java.lang.String,java.lang.Throwable)>
<com.google.protobuf.WireFormat: int getTagWireType(int)>
<com.google.android.apps.mytracks.services.sensors.SensorUtils: byte crc8PushByte(byte,byte)>
<com.google.api.services.fusiontables.model.Template: com.google.api.services.fusiontables.model.Template setTableId(java.lang.String)>
<com.google.android.apps.mytracks.content.DataSource: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>
<com.google.android.apps.mytracks.BootReceiver: void <clinit>()>
<com.google.gdata.model.Schema: com.google.common.collect.ImmutableMap buildAttributes(com.google.gdata.model.MetadataRegistry,com.google.gdata.model.Schema)>
<com.google.android.apps.mytracks.services.sensors.SensorManager: com.google.android.apps.mytracks.content.Sensor$SensorState getSensorState()>
<com.google.gdata.model.ElementCreatorImpl: com.google.gdata.model.ElementCreator addUndeclaredElementMarker()>
<android.webkit.WebViewClient: void <init>()>
<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>
<com.google.android.apps.mytracks.services.TrackRecordingService$1: void <init>(com.google.android.apps.mytracks.services.TrackRecordingService)>
<com.dsi.ant.AntInterface: void goToMarket(android.content.Context,java.lang.String)>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpMethod getMethod()>
<com.google.common.base.Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.api.services.drive.model.Permission: com.google.api.services.drive.model.Permission setType(java.lang.String)>
<com.google.android.apps.mytracks.fragments.ChooseActivityDialogFragment: java.util.List getDisplayInfos(android.support.v4.app.FragmentActivity)>
<com.google.api.client.auth.oauth2.RefreshTokenRequest: com.google.api.client.auth.oauth2.TokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl)>
<com.google.android.apps.mytracks.util.Api11Adapter: void configureActionBarHomeAsUp(android.app.Activity)>
<com.google.gdata.client.http.HttpGDataRequest$Factory: com.google.gdata.client.Service$GDataRequest getRequest(com.google.gdata.client.Service$GDataRequest$RequestType,java.net.URL,com.google.gdata.util.ContentType)>
<com.google.gdata.util.common.base.CharMatcher$3: void setBits(com.google.gdata.util.common.base.CharMatcher$LookupTable)>
<android.support.v4.app.FragmentManagerImpl: void dispatchStart()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>
<com.google.android.apps.mytracks.SearchListActivity$1: void <init>(com.google.android.apps.mytracks.SearchListActivity)>
<com.google.android.apps.analytics.NetworkDispatcher: void setDryRun(boolean)>
<com.google.api.services.fusiontables.model.Table: com.google.api.services.fusiontables.model.Table setDescription(java.lang.String)>
<android.graphics.Bitmap$CompressFormat: void <init>(java.lang.String,int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<android.support.v4.view.ViewCompat$HCViewCompatImpl: long getFrameTime()>
<java.lang.System: int identityHashCode(java.lang.Object)>
<com.google.android.apps.mytracks.widgets.TrackWidgetConfigActivity: void addItem(java.util.List,int)>
<java.io.OutputStream: void close()>
<android.support.v4.app.NotificationCompat: void <clinit>()>
<android.widget.TabHost: void setCurrentTab(int)>
<com.google.android.apps.mytracks.SearchListActivity: boolean onContextItemSelected(android.view.MenuItem)>
<com.google.api.client.auth.oauth2.Credential: boolean refreshToken()>
<com.google.android.apps.mytracks.MarkerListActivity: boolean onKeyUp(int,android.view.KeyEvent)>
<com.google.api.client.http.MultipartRelatedContent: java.lang.String getBoundary()>
<java.lang.String: java.lang.String valueOf(long)>
<com.google.android.apps.mytracks.TrackListActivity: com.google.android.apps.mytracks.SectionResourceCursorAdapter access$1500(com.google.android.apps.mytracks.TrackListActivity)>
<com.google.android.apps.mytracks.stats.TripStatistics: long getStopTime()>
<com.google.gdata.util.ErrorElement: com.google.gdata.util.ErrorElement setInternalReason(java.lang.String)>
<com.google.gson.stream.JsonToken: void <init>(java.lang.String,int)>
<com.google.api.client.http.javanet.NetHttpTransport: com.google.api.client.http.LowLevelHttpRequest buildHeadRequest(java.lang.String)>
<com.google.android.apps.mytracks.settings.StatsSettingsActivity: void onCreate(android.os.Bundle)>
<com.google.gdata.util.common.xml.parsing.SecureGenericXMLFactory$SecureSAXParserFactory: void setNamespaceAware(boolean)>
<android.support.v4.app.FragmentPagerAdapter: long getItemId(int)>
<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.api.services.drive.model.File: void <init>()>
<com.google.android.apps.analytics.CustomVariableBuffer: void setCustomVariable(com.google.android.apps.analytics.CustomVariable)>
<com.google.api.client.util.FieldInfo: void <clinit>()>
<com.google.gdata.util.parser.Chset: void <init>(char,char)>
<com.google.android.gms.location.LocationRequest: com.google.android.gms.location.LocationRequest setFastestInterval(long)>
<com.google.android.apps.mytracks.services.sensors.ant.CombinedBikeChannelConfiguration: int getDeviceIdKey()>
<com.google.android.apps.mytracks.io.maps.SendMapsUtils: boolean uploadWaypoint(java.lang.String,com.google.android.apps.mytracks.content.Waypoint,com.google.android.apps.mytracks.io.gdata.maps.MapsClient,java.lang.String,com.google.android.apps.mytracks.io.gdata.maps.MapsGDataConverter)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeatureMetadata: int getType()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesActivity: void startNextActivity(boolean,boolean)>
<com.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask: void <clinit>()>
<com.google.common.collect.Hashing: int smear(int)>
<com.google.android.apps.mytracks.util.Api16Adapter: void <init>()>
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: void postOnAnimation(android.view.View,java.lang.Runnable)>
<com.google.android.apps.mytracks.TrackController: android.os.Handler access$600(com.google.android.apps.mytracks.TrackController)>
<com.google.api.client.googleapis.services.AbstractGoogleClient: void <clinit>()>
<com.google.gdata.wireformats.AltFormat: void <clinit>()>
<com.google.android.apps.mytracks.util.Api11Adapter$1: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>
<com.google.api.client.util.escape.PercentEscaper: char[] escape(int)>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesAsyncTask: void setTemplate(com.google.api.services.fusiontables.Fusiontables,java.lang.String)>
<com.google.android.apps.mytracks.io.gdata.maps.MapFeatureEntry: java.util.Map getAllAttributes()>
<android.app.Notification$Builder: android.app.Notification$Builder setWhen(long)>
<com.google.api.client.auth.oauth2.TokenResponseException: void <init>(com.google.api.client.http.HttpResponse,com.google.api.client.auth.oauth2.TokenErrorResponse,java.lang.String)>
<com.google.android.apps.mytracks.MarkerListActivity: boolean access$302(com.google.android.apps.mytracks.MarkerListActivity,boolean)>
<com.google.android.apps.mytracks.widgets.TrackWidgetConfigActivity$2: void onClick(android.view.View)>
<com.google.android.apps.mytracks.content.DescriptionGeneratorImpl: java.lang.String generateTripStatisticsDescription(com.google.android.apps.mytracks.stats.TripStatistics,boolean)>
<java.util.AbstractSet: int hashCode()>
<com.google.android.apps.analytics.Event: boolean isSessionInitialized()>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataSerializer: void serialize(java.io.OutputStream,int)>
<java.util.HashMap: java.lang.Object remove(java.lang.Object)>
<com.google.common.primitives.UnsignedInts: long toLong(int)>
<com.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask: void start()>
<com.google.android.apps.mytracks.io.sendtogoogle.SendToGoogleUtils: void <clinit>()>
<com.google.android.apps.mytracks.widgets.TrackWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>
<com.google.android.apps.analytics.CustomVariableBuffer: com.google.android.apps.analytics.CustomVariable getCustomVariableAt(int)>
<com.google.android.apps.mytracks.fragments.ConfirmDeleteDialogFragment: void <init>()>
<com.google.gdata.client.SimpleCookieManager: void clearCookies()>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.support.v4.view.ViewCompat$JBViewCompatImpl: int getImportantForAccessibility(android.view.View)>
<java.lang.Long: java.lang.String toString(long,int)>
<com.google.android.apps.mytracks.TrackListActivity: long access$002(com.google.android.apps.mytracks.TrackListActivity,long)>
<com.google.android.gms.internal.dz: android.widget.ProgressBar m(android.content.Context)>
<java.lang.Integer: java.lang.Integer valueOf(int)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,boolean)>
<android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask: void run()>
<org.apache.http.params.BasicHttpParams: void <init>()>
<android.view.View: void startAnimation(android.view.animation.Animation)>
<com.google.android.apps.mytracks.io.file.importer.KmzTrackImporter: void <clinit>()>
<com.google.common.collect.ObjectArrays: java.lang.Object[] newArray(java.lang.Object[],int)>
<com.google.gdata.client.Service$ClientInputProperties: void init()>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setSmallIcon(int)>
<com.google.gdata.model.ElementKey: java.lang.Class getElementType()>
<com.google.gdata.client.GoogleAuthTokenFactory$OAuth2Token: java.lang.String getAuthorizationHeader(java.net.URL,java.lang.String)>
<com.google.android.apps.analytics.Event: int getTimestampPrevious()>
<android.widget.TabHost: int getCurrentTab()>
<com.google.android.apps.mytracks.io.gdata.AndroidGDataClient: java.io.InputStream createEntry(java.lang.String,java.lang.String,com.google.wireless.gdata.serializer.GDataSerializer)>
<android.support.v4.view.ViewConfigurationCompatFroyo: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>
<com.google.common.collect.RegularImmutableAsList: void <init>(com.google.common.collect.ImmutableCollection,com.google.common.collect.ImmutableList)>
<com.google.protobuf.WireFormat: void <clinit>()>
<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>
<android.view.ViewGroup: void <init>(android.content.Context)>
<com.google.android.apps.mytracks.MarkerDetailActivity: void <init>()>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void writeHeader(com.google.android.apps.mytracks.content.Track[])>
<java.lang.RuntimeException: void <init>()>
<com.google.gdata.util.NotImplementedException: void initResponseCode()>
<com.google.gdata.util.common.base.CharEscaperBuilder: com.google.gdata.util.common.base.CharEscaperBuilder addEscape(char,java.lang.String)>
<com.google.android.apps.mytracks.util.Api8Adapter: boolean hasDialogTitleDivider()>
<com.google.api.client.http.apache.ApacheHttpResponse: java.io.InputStream getContent()>
<android.support.v4.content.Loader: boolean isStarted()>
<com.google.android.apps.mytracks.MarkerEditActivity$1: void onClick(android.view.View)>
<java.util.LinkedList: boolean add(java.lang.Object)>
<android.preference.PreferenceActivity: android.preference.PreferenceManager getPreferenceManager()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: long access$630(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,long)>
<com.google.android.apps.mytracks.content.MyTracksProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<com.google.android.apps.mytracks.util.StringUtils: java.lang.String[] getDistanceParts(android.content.Context,double,boolean)>
<com.google.protobuf.CodedInputStream: long readUInt64()>
<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential$RequestHandler: void <init>(com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential)>
<java.util.zip.ZipOutputStream: void closeEntry()>
<com.google.android.gms.internal.dz$a: void <init>(com.google.android.gms.internal.dz,com.google.android.gms.plus.PlusOneButton$OnPlusOneClickListener)>
<android.support.v4.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)>
<android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)>
<java.util.HashSet: int size()>
<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>
<android.app.Dialog: void setOnShowListener(android.content.DialogInterface$OnShowListener)>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesUtils: java.lang.String getMapUrl(com.google.android.apps.mytracks.content.Track,java.lang.String)>
<com.google.android.gsf.Gservices: java.util.Map getStringsByPrefix(android.content.ContentResolver,java.lang.String[])>
<com.google.android.gms.common.SignInButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.support.v4.view.ViewCompat$GBViewCompatImpl: void <init>()>
<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>
<com.google.gdata.util.common.base.CharEscapers$JavascriptCharEscaper: void <init>(char[][])>
<java.lang.Object: boolean equals(java.lang.Object)>
<com.google.android.apps.mytracks.io.file.importer.ImportAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
<com.google.gdata.util.common.base.CharMatcher$15: void <init>(char,char)>
<com.google.android.apps.mytracks.services.TrackRecordingService: void onCreate()>
<android.content.ContentUris: android.net.Uri$Builder appendId(android.net.Uri$Builder,long)>
<com.google.common.collect.LinkedHashMultiset: void <init>()>
<com.google.android.apps.analytics.CustomVariable: java.lang.String getName()>
<com.google.android.gms.internal.bb: void <init>()>
<com.google.android.apps.mytracks.util.StringUtils: java.lang.String formatDistance(android.content.Context,double,boolean)>
<com.google.gdata.util.httputil.FormUrlDecoder$ValueAction: void handle(char[],int,int,com.google.gdata.util.httputil.FormUrlDecoder$Result)>
<com.google.android.apps.mytracks.fragments.ChooseAccountDialogFragment: void onCancel(android.content.DialogInterface)>
<com.google.api.client.util.DataMap$EntrySet: com.google.api.client.util.DataMap$EntryIterator iterator()>
<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<java.lang.System: long nanoTime()>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<com.google.protobuf.ExtensionRegistryLite: com.google.protobuf.ExtensionRegistryLite getEmptyRegistry()>
<com.google.common.collect.RegularImmutableMap: com.google.common.collect.RegularImmutableMap$LinkedEntry[] createEntryArray(int)>
<com.google.gdata.util.httputil.FormUrlDecoder$NameAction: void <init>(com.google.gdata.util.httputil.FormUrlDecoder$1)>
<java.lang.NullPointerException: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.content.WaypointCreationRequest$Creator: void <init>()>
<com.google.android.apps.mytracks.services.ControlRecordingService: void waitConnected()>
<com.google.android.apps.mytracks.MarkerDetailActivity: void onCreate(android.os.Bundle)>
<com.google.android.apps.mytracks.content.Waypoint: void setPhotoUrl(java.lang.String)>
<java.util.ArrayList: void <init>()>
<com.google.android.apps.mytracks.io.file.exporter.KmzTrackExporter: void readFromFile(java.util.zip.ZipOutputStream,android.net.Uri)>
<java.util.ArrayList: boolean addAll(java.util.Collection)>
<com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager$ConnectedThread: void <init>(com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager,android.bluetooth.BluetoothSocket)>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesAsyncTask: void updateProgress(int,int)>
<com.google.android.apps.mytracks.content.TrackDataHub: void <clinit>()>
<java.io.FilterOutputStream: void flush()>
<com.google.gdata.model.MetadataRegistry: com.google.gdata.model.ElementMetadataRegistryBuilder getOrCreateElement(com.google.gdata.model.ElementKey)>
<android.support.v4.view.PagerAdapter: void <init>()>
<com.google.android.apps.mytracks.io.file.importer.AbstractFileTrackImporter: void <clinit>()>
<com.google.api.client.googleapis.services.AbstractGoogleClient: com.google.api.client.googleapis.services.GoogleClientRequestInitializer getGoogleClientRequestInitializer()>
<com.google.wireless.gdata.data.Entry: void setTitle(java.lang.String)>
<com.google.api.client.json.gson.GsonGenerator: void writeString(java.lang.String)>
<com.google.android.apps.mytracks.util.StatsUtils: android.view.View getView(android.app.Activity,android.view.View,int)>
<com.google.android.common.gdata.AndroidGDataClient: void <init>(android.content.Context)>
<com.google.android.apps.mytracks.services.TrackRecordingServiceConnection$2: void <init>(com.google.android.apps.mytracks.services.TrackRecordingServiceConnection)>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<android.widget.Scroller: int getCurrY()>
<com.google.api.client.http.json.JsonHttpContent: void writeTo(java.io.OutputStream)>
<com.google.android.apps.mytracks.TrackListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<com.google.api.client.http.javanet.NetHttpResponse: java.io.InputStream getContent()>
<com.google.android.apps.mytracks.util.TrackIconUtils: void setMenuIconColor(android.view.MenuItem)>
<com.google.android.apps.mytracks.fragments.MyTracksMapFragment$11: void <init>(com.google.android.apps.mytracks.fragments.MyTracksMapFragment)>
<java.lang.Thread: void sleep(long)>
<com.google.gdata.data.ExtensionProfile: java.lang.Class extensionPointClass(java.lang.Class)>
<android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase: void <init>()>
<com.google.android.apps.mytracks.util.GoogleEarthUtils: void <clinit>()>
<com.google.android.apps.mytracks.content.MyTracksProviderUtils$Factory: void <init>()>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesAsyncTask: void <init>(com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesActivity,long,android.accounts.Account)>
<com.google.android.apps.mytracks.services.TrackRecordingService: void startForegroundService(android.app.PendingIntent,int)>
<com.google.android.apps.mytracks.TrackController$1: void run()>
<com.google.android.apps.mytracks.util.PreferencesUtils: java.lang.String getKey(android.content.Context,int)>
<java.io.PrintWriter: void print(int)>
<android.support.v4.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)>
<java.io.File: boolean exists()>
<com.google.api.client.util.StringUtils: void <clinit>()>
<com.google.api.client.googleapis.MethodOverride: void <init>()>
<java.lang.Character: char forDigit(int,int)>
<com.google.api.client.auth.oauth2.Credential: com.google.api.client.auth.oauth2.Credential setFromTokenResponse(com.google.api.client.auth.oauth2.TokenResponse)>
<com.google.gdata.wireformats.AltRegistry: void <init>()>
<android.support.v4.content.Loader$ForceLoadContentObserver: void <init>(android.support.v4.content.Loader)>
<com.google.android.apps.mytracks.util.Api16Adapter: int getAppWidgetSizeDefault(android.os.Bundle)>
<java.lang.String: java.lang.String toUpperCase()>
<com.google.android.apps.mytracks.services.TrackRecordingService: void onStart(android.content.Intent,int)>
<java.io.InputStreamReader: void close()>
<com.google.api.services.drive.Drive$Builder: com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setServicePath(java.lang.String)>
<com.google.gdata.wireformats.AltRegistry: com.google.gdata.wireformats.AltFormat lookupName(java.lang.String)>
<com.google.gdata.util.LoggableInputStream: void <init>(java.util.logging.Logger,java.io.InputStream)>
<com.google.api.client.http.HttpRequest: java.lang.String getRequestMethod()>
<com.google.android.apps.mytracks.services.sensors.ZephyrMessageParser: void <init>()>
<com.google.android.apps.mytracks.util.StatsUtils: void setGradeValue(android.content.Context,android.view.View,int,double)>
<android.support.v4.app.FragmentState: void <init>(android.support.v4.app.Fragment)>
<com.google.gdata.util.common.base.CharEscapers$FastCharEscaper: void <init>(char[][],char,char)>
<android.support.v4.app.LoaderManagerImpl: boolean hasRunningLoaders()>
<com.google.gdata.util.parser.Chset: void merge(int,com.google.gdata.util.parser.Chset$Range)>
<com.google.api.client.http.apache.ApacheHttpTransport: com.google.api.client.http.apache.ApacheHttpRequest buildHeadRequest(java.lang.String)>
<com.google.android.apps.mytracks.io.sync.SyncService: void onCreate()>
<android.support.v4.app.FragmentActivity: void onStart()>
<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int,int)>
<com.google.common.collect.Iterators$1: void <init>()>
<com.google.gdata.util.parser.Chset: void <init>()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker$DispatcherCallbacks$1: void run()>
<com.google.gdata.client.http.HttpGDataRequest: java.io.OutputStream getRequestStream()>
<android.support.v4.content.Loader: void deliverResult(java.lang.Object)>
<com.google.gdata.data.ExtensionPoint: void <init>()>
<com.google.android.gms.internal.bc$a$a: void <init>(android.os.IBinder)>
<android.util.Base64: java.lang.String encodeToString(byte[],int)>
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>
<com.google.android.apps.mytracks.settings.RecordingSettingsActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
<com.google.android.apps.mytracks.SensorStateActivity: void <clinit>()>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesUtils: java.lang.String formatSqlValues(java.lang.String[])>
<android.support.v4.app.Fragment: void onDetach()>
<com.google.android.apps.mytracks.io.spreadsheets.SendSpreadsheetsAsyncTask: boolean addTrackInfo(com.google.gdata.client.spreadsheet.SpreadsheetService,java.net.URL,com.google.android.apps.mytracks.content.Track)>
<com.google.android.apps.mytracks.TrackDetailActivity$5: void <init>(com.google.android.apps.mytracks.TrackDetailActivity)>
<com.google.android.apps.mytracks.util.LocationUtils: boolean isValidLocation(android.location.Location)>
<com.google.gdata.util.common.base.CharEscapers$JavaCharEscaper: void <init>(char[][])>
<com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger valueOf(java.lang.String)>
<com.google.gdata.data.ExtensionDescription: void setLocalName(java.lang.String)>
<android.provider.SearchRecentSuggestions: void <init>(android.content.Context,java.lang.String,int)>
<java.util.ArrayList: java.lang.Object remove(int)>
<com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>
<android.view.ViewGroup: void bringChildToFront(android.view.View)>
<android.os.Parcel: void <clinit>()>
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
<android.view.View: void setFocusable(boolean)>
<com.google.api.client.util.escape.PercentEscaper: boolean[] createSafeOctets(java.lang.String)>
<com.google.api.client.googleapis.services.AbstractGoogleClient: com.google.api.client.util.ObjectParser getObjectParser()>
<com.google.android.apps.mytracks.io.maps.SendMapsAsyncTask: void updateProgress(int,int)>
<android.graphics.ColorMatrixColorFilter: void <init>(float[])>
<com.google.android.gms.internal.dz$a: void onPlusOneClick(android.content.Intent)>
<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)>
<com.google.android.common.gdata.AndroidGDataClient: void <init>(android.content.Context,java.lang.String)>
<com.google.android.gms.location.LocationRequest: com.google.android.gms.location.LocationRequest setSmallestDisplacement(float)>
<com.google.android.apps.mytracks.content.Sensor$SensorData$Builder: com.google.android.apps.mytracks.content.Sensor$SensorData$Builder setState(com.google.android.apps.mytracks.content.Sensor$SensorState)>
<com.google.android.apps.mytracks.content.Track: void setSharedWithMe(boolean)>
<com.google.gdata.model.MetadataKey: com.google.gdata.model.QName getId()>
<org.apache.http.client.methods.HttpHead: void <init>(java.lang.String)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: void dispatchHits(com.google.android.apps.analytics.Hit[])>
<com.google.api.client.googleapis.media.MediaHttpUploader: void updateStateAndNotifyListener(com.google.api.client.googleapis.media.MediaHttpUploader$UploadState)>
<android.support.v4.app.Fragment: void performReallyStop()>
<com.google.android.apps.mytracks.io.sendtogoogle.AbstractSendAsyncTask: void setActivity(com.google.android.apps.mytracks.io.sendtogoogle.AbstractSendActivity)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: boolean hasCadence()>
<com.google.android.apps.mytracks.SensorStateActivity: void onStart()>
<com.google.gdata.model.MetadataCreatorImpl: com.google.gdata.model.MetadataCreatorImpl setVisible(boolean)>
<android.graphics.Color: int blue(int)>
<com.google.android.gms.internal.ce: java.lang.String b()>
<com.google.android.apps.mytracks.content.Sensor$SensorData$Builder: com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>
<com.google.gdata.model.Element: com.google.gdata.model.ElementKey getDefaultKey(java.lang.Class)>
<com.google.gdata.model.ElementCreatorImpl: com.google.gdata.model.ElementCreator setName(com.google.gdata.model.QName)>
<com.google.api.client.googleapis.services.AbstractGoogleClientRequest: com.google.api.client.http.HttpResponse executeUnparsed()>
<android.appwidget.AppWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>
<com.google.api.client.googleapis.services.AbstractGoogleClient: com.google.api.client.http.HttpRequestFactory getRequestFactory()>
<com.google.android.apps.mytracks.content.MyTracksProviderUtils$Factory: com.google.android.apps.mytracks.content.MyTracksProviderUtils get(android.content.Context)>
<com.google.gdata.model.atompub.Collection: void <clinit>()>
<com.google.android.apps.mytracks.fragments.InstallEarthDialogFragment$1: void onClick(android.content.DialogInterface,int)>
<java.lang.String: boolean matches(java.lang.String)>
<com.google.android.gms.internal.bc$a: com.google.android.gms.internal.bc j(android.os.IBinder)>
<android.preference.EditTextPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: java.lang.Object newAccessiblityDelegateDefaultImpl()>
<com.google.android.apps.mytracks.services.sensors.ZephyrMessageParser: boolean isValid(byte[])>
<com.google.common.base.Charsets: void <clinit>()>
<com.google.android.apps.mytracks.util.TrackUtils: void updateTrack(android.content.Context,com.google.android.apps.mytracks.content.Track,java.lang.String,java.lang.String,java.lang.String,com.google.android.apps.mytracks.content.MyTracksProviderUtils,com.google.android.apps.mytracks.services.TrackRecordingServiceConnection,boolean)>
<com.google.api.client.http.UriTemplate$CompositeOutput: boolean requiresVarAssignment()>
<com.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask$1: void <init>(com.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask)>
<com.google.gdata.client.Service: com.google.gdata.util.Version initProtocolVersion(java.lang.Class)>
<com.google.api.client.http.HttpTransport: com.google.api.client.http.HttpRequestFactory createRequestFactory(com.google.api.client.http.HttpRequestInitializer)>
<org.apache.http.conn.params.ConnPerRouteBean: void <init>(int)>
<com.google.api.client.googleapis.json.JsonCParser: com.google.api.client.json.JsonParser initializeParser(com.google.api.client.json.JsonParser)>
<com.google.gdata.util.AuthenticationException: void <clinit>()>
<java.lang.String: java.lang.String trim()>
<android.app.Dialog: void setCancelable(boolean)>
<com.google.api.client.auth.oauth2.Credential: com.google.api.client.auth.oauth2.Credential setExpirationTimeMilliseconds(java.lang.Long)>
<java.io.InputStream: void reset()>
<com.google.android.gms.internal.ce: void requestLocationUpdates(com.google.android.gms.location.LocationRequest,com.google.android.gms.location.LocationListener,android.os.Looper)>
<com.google.gdata.data.spreadsheet.CustomElementCollection: void <init>()>
<android.location.Location: void setTime(long)>
<com.google.gdata.util.common.base.CharEscapers: com.google.gdata.util.common.base.CharEscaperBuilder newBasicXmlEscapeBuilder()>
<android.app.Notification$InboxStyle: android.app.Notification$InboxStyle addLine(java.lang.CharSequence)>
<com.google.android.apps.mytracks.content.SearchEngine: java.util.SortedSet search(com.google.android.apps.mytracks.content.SearchEngine$SearchQuery)>
<java.util.BitSet: void set(int)>
<com.google.android.apps.mytracks.MarkerEditActivity: void access$000(com.google.android.apps.mytracks.MarkerEditActivity)>
<com.google.gdata.data.Source: void <init>()>
<com.google.common.collect.Sets$ImprovedAbstractSet: void <init>()>
<com.google.gdata.util.httputil.FormUrlDecoder$NameAction: void <init>()>
<com.google.gdata.util.parser.Chset: int find(int)>
<java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>
<com.google.android.gms.location.LocationRequest: void <clinit>()>
<com.google.api.client.googleapis.json.JsonCContent: void <init>(com.google.api.client.json.JsonFactory,java.lang.Object)>
<android.support.v4.app.Fragment: java.lang.String getString(int,java.lang.Object[])>
<com.google.api.services.fusiontables.Fusiontables$Table: com.google.api.services.fusiontables.Fusiontables$Table$Insert insert(com.google.api.services.fusiontables.model.Table)>
<java.io.PrintWriter: void println(int)>
<com.google.android.apps.mytracks.content.DataSource: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>
<com.google.android.apps.mytracks.services.sensors.SensorManagerFactory: com.google.android.apps.mytracks.services.sensors.SensorManager getSensorManager(android.content.Context,boolean)>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity: void updateUi()>
<com.google.android.apps.mytracks.settings.SettingsActivity: void <init>()>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpRequest setRetryOnExecuteIOException(boolean)>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void stop()>
<com.google.android.apps.mytracks.TrackDetailActivity: com.google.android.apps.mytracks.services.TrackRecordingServiceConnection access$600(com.google.android.apps.mytracks.TrackDetailActivity)>
<com.google.android.apps.mytracks.util.Api9Adapter: void applyPreferenceChanges(android.content.SharedPreferences$Editor)>
<android.content.Intent: android.content.Intent setData(android.net.Uri)>
<org.apache.http.client.methods.HttpRequestBase: void <init>()>
<android.content.Intent: void removeExtra(java.lang.String)>
<com.google.gdata.model.atom.Author: void <clinit>()>
<android.app.Activity: void setTitle(java.lang.CharSequence)>
<com.google.android.apps.mytracks.util.CalorieUtils: double getWalkingVo2(double,double)>
<java.util.TreeSet: boolean add(java.lang.Object)>
<com.google.android.apps.mytracks.settings.SensorSettingsActivity: void configBluetoothSensor()>
<android.support.v4.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)>
<com.google.android.apps.mytracks.settings.RecordingSettingsActivity: void setMaxRecordingDistanceSummaryAndOptions(java.lang.String[],java.lang.String[],java.lang.String[],boolean)>
<com.google.android.apps.analytics.Event: com.google.android.apps.analytics.CustomVariableBuffer getCustomVariableBuffer()>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeatureMetadata: java.lang.String getTitle()>
<com.google.android.apps.mytracks.content.Waypoint: java.lang.String getPhotoUrl()>
<java.io.InputStream: int read(byte[])>
<com.google.android.apps.mytracks.MarkerListActivity$1: void onPrepare(android.view.Menu,int[],long[],boolean)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: boolean hasHeartRate()>
<com.google.api.client.googleapis.media.MediaHttpUploader: com.google.api.client.googleapis.media.MediaHttpUploader setInitiationHeaders(com.google.api.client.googleapis.GoogleHeaders)>
<com.google.android.apps.mytracks.util.PreferencesUtils: boolean isMetricUnits(android.content.Context)>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment: java.util.ArrayList access$100(com.google.android.apps.mytracks.fragments.ExportDialogFragment)>
<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void setEntity(org.apache.http.HttpEntity)>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<com.google.android.apps.mytracks.TrackListActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
<com.google.android.apps.mytracks.services.TrackRecordingService$1: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity: void onPause()>
<com.google.gdata.util.httputil.FormUrlDecoder: boolean requiresByteLevelDecoding(java.lang.String)>
<com.google.wireless.gdata.data.Entry: void setEmail(java.lang.String)>
<com.google.android.gms.auth.GoogleAuthException: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.content.TrackDataHub$1: void <init>(com.google.android.apps.mytracks.content.TrackDataHub)>
<com.google.android.apps.mytracks.MarkerDetailActivity: void onDeleteMarkerDone()>
<com.google.api.client.json.gson.GsonParser: java.lang.String getCurrentName()>
<com.google.android.apps.mytracks.util.PreferencesUtils: boolean isReportSpeed(android.content.Context)>
<com.google.android.apps.mytracks.fragments.ChooseAccountDialogFragment$2: void <init>(com.google.android.apps.mytracks.fragments.ChooseAccountDialogFragment)>
<com.google.android.apps.mytracks.TrackListActivity$2$1: void <init>(com.google.android.apps.mytracks.TrackListActivity$2)>
<android.support.v4.app.FragmentPagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)>
<com.google.android.apps.mytracks.content.Sensor$SensorData$Builder: com.google.android.apps.mytracks.content.Sensor$SensorData$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>
<com.google.android.apps.mytracks.services.sensors.ant.HeartRateChannelConfiguration: void <init>()>
<com.google.gdata.util.common.base.CharMatcher: com.google.gdata.util.common.base.CharMatcher inRange(char,char)>
<com.google.android.apps.mytracks.TrackEditActivity$4: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<com.google.api.client.http.HttpStatusCodes: boolean isSuccess(int)>
<com.google.gdata.util.common.base.CharMatcher$Or: void <init>(java.util.List)>
<com.google.android.apps.mytracks.MarkerDetailActivity: int getLayoutResId()>
<com.google.android.apps.mytracks.content.MyTracksLocation: void reset()>
<com.google.api.client.http.HttpResponseException: java.lang.StringBuilder computeMessageBuffer(com.google.api.client.http.HttpResponse)>
<com.google.android.gms.internal.ce: android.os.IInterface b(com.google.android.gms.internal.ce)>
<java.math.BigDecimal: int intValue()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void start(java.lang.String,int,android.content.Context,com.google.android.apps.analytics.HitStore,com.google.android.apps.analytics.Dispatcher,boolean)>
<com.google.common.primitives.UnsignedLong: int intValue()>
<com.google.common.collect.EmptyImmutableMap: com.google.common.collect.ImmutableSet entrySet()>
<java.util.HashSet: java.util.Iterator iterator()>
<android.support.v4.app.Fragment: void initState()>
<com.google.gdata.data.AbstractExtension: void <clinit>()>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<com.google.common.primitives.UnsignedLongs: long flip(long)>
<android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase: android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle)>
<com.google.android.apps.mytracks.fragments.MarkerDetailFragment$1$1: void onAnimationEnd(android.view.animation.Animation)>
<com.google.android.apps.mytracks.fragments.FileTypeDialogFragment$1: void onClick(android.content.DialogInterface,int)>
<com.google.android.apps.mytracks.stats.TripStatistics: void updateGradeExtremities(double)>
<org.xml.sax.helpers.ParserAdapter: void parse(org.xml.sax.InputSource)>
<com.google.gdata.util.ServiceException: void <init>(java.net.HttpURLConnection)>
<com.google.api.client.util.escape.UnicodeEscaper: char[] growBuffer(char[],int,int)>
<java.util.AbstractSequentialList: java.lang.Object get(int)>
<com.google.android.apps.mytracks.io.file.exporter.FileTrackExporter: void <clinit>()>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataParserFactory: com.google.wireless.gdata.parser.GDataParser createParser(java.lang.Class,java.io.InputStream)>
<com.google.gdata.data.batch.BatchUtils: void declareExtensions(com.google.gdata.data.ExtensionProfile)>
<com.google.api.client.util.ArrayValueMap: void <init>(java.lang.Object)>
<com.google.api.client.http.UrlEncodedParser: java.lang.Object parseValue(java.lang.reflect.Type,java.util.List,java.lang.String)>
<com.google.gdata.util.RedirectRequiredException: void <init>(java.net.HttpURLConnection)>
<com.google.gdata.util.ServiceException: com.google.gdata.util.ContentType getResponseContentType()>
<com.google.android.apps.mytracks.maps.FixedSpeedTrackPathDescriptor: double access$102(com.google.android.apps.mytracks.maps.FixedSpeedTrackPathDescriptor,double)>
<com.google.android.apps.mytracks.SensorStateActivity: void onStop()>
<java.lang.Float: boolean isInfinite(float)>
<com.google.gdata.model.MetadataRegistry: void dirty()>
<com.google.android.gms.internal.z$a: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.TrackEditActivity: void onChooseAccountDone(java.lang.String)>
<com.google.api.client.util.ArrayMap: int getIndexOfKey(java.lang.Object)>
<com.google.api.client.http.InputStreamContent: long getLength()>
<com.google.api.client.http.AbstractInputStreamContent: com.google.api.client.http.AbstractInputStreamContent setType(java.lang.String)>
<com.google.api.client.json.JsonParser: void parseMap(java.lang.reflect.Field,java.util.Map,java.lang.reflect.Type,java.util.ArrayList,com.google.api.client.json.CustomizeJsonParser)>
<org.xml.sax.helpers.ParserAdapter: void <init>(org.xml.sax.Parser)>
<com.google.android.apps.mytracks.settings.MapSettingsActivity$4: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<android.content.ContextWrapper: android.content.Context createPackageContext(java.lang.String,int)>
<com.google.android.apps.mytracks.MarkerListActivity: android.support.v4.widget.ResourceCursorAdapter access$500(com.google.android.apps.mytracks.MarkerListActivity)>
<com.google.android.apps.mytracks.io.file.importer.KmzTrackImporter: byte[] getKml(java.util.zip.ZipInputStream)>
<com.google.common.collect.ObjectArrays: java.lang.Object checkElementNotNull(java.lang.Object,int)>
<com.google.android.apps.analytics.PersistentHitStore: void setSampleRate(int)>
<com.google.android.gms.internal.q: com.google.android.gms.internal.q e(android.content.Context)>
<com.google.android.apps.mytracks.services.MyTracksLocationManager: void removeLocationUpdates(com.google.android.gms.location.LocationListener)>
<com.google.api.client.http.javanet.NetHttpTransport: com.google.api.client.http.LowLevelHttpRequest buildPutRequest(java.lang.String)>
<com.google.common.collect.LinkedListMultimap: com.google.common.collect.LinkedListMultimap$Node addNode(java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node)>
<com.google.api.client.http.HttpRequest: void sleep(long)>
<com.google.android.gms.common.SignInButton: android.widget.Button c(android.content.Context,int,int)>
<com.google.gdata.util.ParseException: void <init>(java.lang.Throwable)>
<com.google.gdata.util.common.base.CharMatcher$3: void <init>()>
<com.google.android.apps.mytracks.util.FileUtils: java.lang.String buildUniqueFileName(java.io.File,java.lang.String,java.lang.String)>
<com.google.api.client.util.Types$1$1: java.lang.Object next()>
<com.google.gdata.data.ExtensionDescription: boolean isRepeatable()>
<com.google.android.apps.mytracks.content.SearchEngine: void scoreWaypointResults(java.util.Collection,com.google.android.apps.mytracks.content.SearchEngine$SearchQuery,java.util.Collection)>
<com.google.gdata.data.Source$SourceState: void <init>()>
<android.support.v4.app.NotificationCompatJellybean: void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,int,java.lang.CharSequence)>
<com.google.android.apps.mytracks.services.TrackRecordingService: void showNotification(boolean)>
<com.google.android.apps.mytracks.content.DescriptionGeneratorImpl: java.lang.String generateTrackDescription(com.google.android.apps.mytracks.content.Track,java.util.Vector,java.util.Vector,boolean)>
<com.google.gdata.util.common.base.CharMatcher$11: void <init>(char)>
<android.content.Intent: android.content.Intent setPackage(java.lang.String)>
<com.google.android.apps.mytracks.stats.TripStatistics: void setTotalDistance(double)>
<java.util.LinkedHashSet: void <init>()>
<com.google.android.apps.mytracks.MarkerListActivity: void onStop()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener)>
<com.google.api.client.http.HttpMediaType: java.lang.String getSubType()>
<com.google.android.apps.mytracks.services.TrackRecordingService: int onStartCommand(android.content.Intent,int,int)>
<android.support.v4.app.Fragment: android.content.res.Resources getResources()>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.apps.mytracks.settings.RecordingSettingsActivity$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<com.google.gdata.model.AttributeCreatorImpl: com.google.gdata.model.AttributeCreator setVisible(boolean)>
<com.google.wireless.gdata.data.Entry: void setEditUri(java.lang.String)>
<java.lang.Exception: java.lang.Throwable initCause(java.lang.Throwable)>
<com.google.android.apps.mytracks.settings.SensorSettingsActivity: void updateUiBySensorType(java.lang.String)>
<com.google.gdata.util.ContentType: java.lang.String getAttribute(java.lang.String)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: void access$200(com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl,android.database.Cursor,com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl$CachedTrackPointsIndexes,android.location.Location)>
<com.google.android.gms.internal.a$a$a: android.os.Bundle a(java.lang.String,java.lang.String,android.os.Bundle)>
<java.lang.StringBuilder: java.lang.StringBuilder append(double)>
<com.google.android.apps.mytracks.content.SearchEngine: void scoreTrackResults(java.util.Collection,com.google.android.apps.mytracks.content.SearchEngine$SearchQuery,java.util.Collection)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeature: int getColor()>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment$ExportType: void <init>(java.lang.String,int,int)>
<com.google.api.client.http.apache.ApacheHttpResponse: java.lang.String getHeaderName(int)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: long getFirstWaypointId(long)>
<com.google.android.apps.mytracks.io.file.TrackFileFormat$2: void <init>(java.lang.String,int)>
<com.google.android.apps.mytracks.fragments.FileTypeDialogFragment: void onAttach(android.app.Activity)>
<com.google.gdata.util.httputil.FormUrlDecoder$NameAction: void handle(char[],int,int,com.google.gdata.util.httputil.FormUrlDecoder$Result)>
<android.content.BroadcastReceiver: void <init>()>
<android.widget.TextView: void setTextSize(float)>
<com.google.api.client.util.DataMap$EntryIterator: java.lang.Object next()>
<android.widget.TextView: java.lang.CharSequence getText()>
<com.google.android.apps.mytracks.io.maps.SendMapsActivity: com.google.android.apps.mytracks.io.sendtogoogle.AbstractSendAsyncTask createAsyncTask()>
<android.net.Uri$Builder: android.net.Uri build()>
<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[])>
<com.google.common.collect.ImmutableSet: void <init>()>
<java.lang.Class: void <init>()>
<android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>
<com.google.api.services.drive.model.Permission: void <init>()>
<android.os.Bundle: void <init>(android.os.Bundle)>
<com.google.android.gms.internal.ea: void setSingleLine()>
<com.google.android.apps.mytracks.io.file.exporter.KmzTrackExporter: void addImage(java.util.zip.ZipOutputStream,java.lang.String)>
<org.apache.http.impl.SocketHttpClientConnection: boolean isOpen()>
<com.google.common.collect.SingletonImmutableList: int size()>
<org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>
<com.google.android.apps.mytracks.services.tasks.TimerTaskExecutor: void shutdown()>
<com.google.gdata.model.MetadataRegistry: com.google.gdata.model.MetadataRegistry registerClass(java.lang.Class)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: long access$1102(com.google.android.apps.mytracks.content.Sensor$SensorDataSet,long)>
<com.google.gdata.client.GoogleService$AccountDisabledException: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.util.Api14Adapter$2: boolean onSuggestionSelect(int)>
<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>
<java.net.URL: java.lang.String toString()>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeatureMetadata: void <init>()>
<com.google.api.client.util.DateTime: java.lang.String toString()>
<com.google.api.client.json.gson.GsonParser: short getShortValue()>
<com.google.android.apps.mytracks.fragments.ChooseActivityTypeDialogFragment: void onAttach(android.app.Activity)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>
<com.google.android.apps.mytracks.MapOverlay: java.lang.String access$100(com.google.android.apps.mytracks.MapOverlay)>
<com.google.android.apps.mytracks.SearchListActivity: void handleIntent(android.content.Intent)>
<java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataParserFactory: com.google.wireless.gdata.serializer.GDataSerializer createSerializer(com.google.wireless.gdata.data.Entry)>
<com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager: com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager$ConnectThread access$302(com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager,com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager$ConnectThread)>
<com.google.android.apps.mytracks.SensorStateActivity$1: void <init>(com.google.android.apps.mytracks.SensorStateActivity)>
<com.google.api.client.http.HttpHeaders: void setUserAgent(java.lang.String)>
<com.google.android.apps.mytracks.fragments.InstallEarthDialogFragment: android.app.Dialog createDialog()>
<com.google.common.collect.ConcurrentHashMultiset: void <init>(java.util.concurrent.ConcurrentMap)>
<android.content.Intent: android.content.Intent setType(java.lang.String)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeatureMetadata: java.lang.String getDescription()>
<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>
<android.appwidget.AppWidgetManager: void <init>()>
<android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>
<com.google.android.gms.internal.aa: void a(android.content.res.Resources,int,int)>
<com.google.gdata.util.ErrorDomain$ErrorCode: void <init>(com.google.gdata.util.ErrorDomain,java.lang.String)>
<com.google.android.apps.mytracks.maps.FixedSpeedTrackPathDescriptor: android.content.Context access$000(com.google.android.apps.mytracks.maps.FixedSpeedTrackPathDescriptor)>
<android.support.v4.app.FragmentStatePagerAdapter: void <init>(android.support.v4.app.FragmentManager)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsMapMetadata: java.lang.String getGDataEditUri()>
<com.google.android.apps.mytracks.services.TrackRecordingServiceConnection: void setTrackRecordingService(com.google.android.apps.mytracks.services.ITrackRecordingService)>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpConnectionMetrics getMetrics()>
<com.google.api.client.util.LoggingOutputStream: void write(byte[],int,int)>
<android.view.MotionEvent: int getAction()>
<android.support.v4.content.Loader: void startLoading()>
<java.util.AbstractCollection: void <init>()>
<com.google.common.base.Preconditions: java.lang.String badElementIndex(int,int,java.lang.String)>
<android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>
<java.lang.String: void <init>(byte[],java.lang.String)>
<android.support.v4.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor,int)>
<android.support.v4.view.ViewPager: void removeNonDecorViews()>
<com.google.android.apps.mytracks.io.backup.BackupPreferencesListener: void <init>(android.content.Context)>
<com.google.android.apps.mytracks.SearchListActivity: long access$100(com.google.android.apps.mytracks.SearchListActivity)>
<com.google.api.client.http.HttpResponse: com.google.api.client.http.HttpRequest getRequest()>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeature: int getType()>
<com.google.protobuf.ExtensionRegistryLite: void <init>(boolean)>
<com.google.android.apps.mytracks.settings.MapSettingsActivity: void configImeActionDone(android.preference.EditTextPreference)>
<com.google.android.apps.mytracks.services.MyTracksLocationManager$4: void run()>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.apps.mytracks.io.file.exporter.SaveAsyncTask: java.lang.Boolean doInBackground(java.lang.Void[])>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient: void <init>(com.google.api.client.http.HttpTransport,com.google.api.client.http.HttpRequestInitializer,java.lang.String,java.lang.String,com.google.api.client.json.JsonObjectParser,com.google.api.client.googleapis.services.GoogleClientRequestInitializer,java.lang.String,boolean)>
<com.google.android.apps.analytics.CustomVariable: void <init>(int,java.lang.String,java.lang.String,int)>
<com.google.android.apps.mytracks.util.GoogleFeedbackUtils: void <clinit>()>
<android.os.AsyncTask: void publishProgress(java.lang.Object[])>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity$6$1: void <init>(com.google.android.apps.mytracks.settings.AdvancedSettingsActivity$6)>
<com.google.common.collect.ImmutableCollection: com.google.common.collect.ImmutableList asList()>
<com.google.android.apps.mytracks.SensorStateActivity: void <init>()>
<com.google.android.apps.mytracks.io.sendtogoogle.SendRequest: void setDriveShareEmails(java.lang.String)>
<com.google.android.apps.mytracks.content.Sensor$SensorData: boolean isInitialized()>
<com.google.android.apps.mytracks.util.Api8Adapter: void hideTitle(android.app.Activity)>
<com.google.android.apps.mytracks.fragments.ConfirmSyncDialogFragment: android.app.Dialog createDialog()>
<com.google.android.apps.mytracks.services.MyTracksLocationManager$4: void <init>(com.google.android.apps.mytracks.services.MyTracksLocationManager,long,float,com.google.android.gms.location.LocationListener)>
<com.google.android.apps.mytracks.util.Api14Adapter$2: boolean onSuggestionClick(int)>
<com.google.gdata.util.AuthenticationException: void <init>(java.net.HttpURLConnection)>
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>
<com.google.android.apps.mytracks.stats.ExtremityMonitor: boolean update(double)>
<com.google.api.client.auth.oauth2.TokenRequest$1: void <init>(com.google.api.client.auth.oauth2.TokenRequest)>
<java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<com.google.android.apps.mytracks.io.file.exporter.SaveActivity$1: void <init>(com.google.android.apps.mytracks.io.file.exporter.SaveActivity)>
<com.google.gdata.wireformats.AltFormat: boolean isSelectableByType()>
<com.google.api.client.googleapis.GoogleHeaders: void <init>()>
<com.google.api.client.json.JsonParser: java.lang.String skipToKey(java.util.Set)>
<android.preference.Preference: void setSummary(int)>
<com.google.android.apps.analytics.AnalyticsParameterEncoder: java.lang.String encode(java.lang.String,java.lang.String)>
<com.google.common.collect.ImmutableMap$Builder: void <init>()>
<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask: com.google.android.apps.analytics.Hit removeNextHit()>
<android.app.Activity: void setResult(int)>
<android.net.http.AndroidHttpClient: void modifyRequestToAcceptGzipResponse(org.apache.http.HttpRequest)>
<java.util.EnumMap: void <init>(java.lang.Class)>
<com.google.android.apps.mytracks.content.Sensor$SensorData$Builder: com.google.android.apps.mytracks.content.Sensor$SensorData$Builder mergeFrom(com.google.android.apps.mytracks.content.Sensor$SensorData)>
<android.support.v4.app.TaskStackBuilder: void <clinit>()>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeature: void setType(int)>
<com.google.android.apps.mytracks.io.sendtogoogle.UploadResultActivity$4: void <init>(com.google.android.apps.mytracks.io.sendtogoogle.UploadResultActivity)>
<com.google.api.client.util.FieldInfo: void <init>(java.lang.reflect.Field,java.lang.String)>
<java.lang.Boolean: void <init>(boolean)>
<java.lang.Math: double ceil(double)>
<android.content.Context: java.lang.String getString(int)>
<com.google.gdata.model.MetadataRegistry: void whitelistAttributes()>
<android.os.Bundle: void <init>()>
<android.view.InputEvent: void <init>()>
<com.google.android.apps.mytracks.io.sync.SyncAdapter: void <clinit>()>
<com.google.android.apps.mytracks.settings.ChartSettingsActivity: void onCreate(android.os.Bundle)>
<com.google.android.apps.mytracks.util.TrackIconUtils: void setMenuIconColor(android.view.Menu)>
<android.content.IntentFilter: void <clinit>()>
<com.google.api.services.drive.model.File: java.util.List getOwnerNames()>
<com.google.api.client.http.FileContent: boolean retrySupported()>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter name(java.lang.String)>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity: void <clinit>()>
<com.google.android.apps.mytracks.util.Api8Adapter: boolean handleSearchKey(android.view.MenuItem)>
<com.google.android.apps.mytracks.io.sync.SyncUtils: boolean isInMyTracksAndValid(com.google.api.services.drive.model.File,java.lang.String)>
<com.google.android.apps.mytracks.stats.TripStatisticsUpdater: void <clinit>()>
<com.google.android.apps.mytracks.content.TrackDataHub: int access$1400(com.google.android.apps.mytracks.content.TrackDataHub)>
<java.lang.ThreadLocal: void set(java.lang.Object)>
<com.google.api.client.googleapis.services.AbstractGoogleClientRequest: com.google.api.client.http.HttpRequest buildHttpRequest(boolean)>
<com.google.api.client.util.DateTime: void <clinit>()>
<com.google.api.client.http.InputStreamContent: com.google.api.client.http.AbstractInputStreamContent setType(java.lang.String)>
<com.google.common.collect.ImmutableMap: void <init>()>
<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>
<com.google.common.collect.AbstractMultiset: java.util.Set createEntrySet()>
<com.google.android.apps.mytracks.io.file.importer.ImportActivity: com.google.android.apps.mytracks.io.file.importer.ImportAsyncTask access$000(com.google.android.apps.mytracks.io.file.importer.ImportActivity)>
<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>
<com.google.api.client.auth.oauth2.BearerToken$AuthorizationHeaderAccessMethod: void <init>()>
<com.google.api.client.googleapis.services.AbstractGoogleClient$Builder: com.google.api.client.googleapis.services.GoogleClientRequestInitializer getGoogleClientRequestInitializer()>
<com.google.android.gms.internal.dz: void bh()>
<com.google.android.apps.mytracks.io.file.importer.ImportActivity: void <init>()>
<com.google.api.services.drive.Drive$Files$Update: void <init>(com.google.api.services.drive.Drive$Files,java.lang.String,com.google.api.services.drive.model.File)>
<com.google.android.gms.common.SignInButton: void <init>(android.content.Context)>
<android.preference.PreferenceActivity: void onDestroy()>
<com.google.android.apps.mytracks.io.file.importer.ImportActivity$1: void onCancel(android.content.DialogInterface)>
<android.appwidget.AppWidgetManager: void updateAppWidget(int,android.widget.RemoteViews)>
<com.google.gdata.wireformats.AltFormat$Builder: com.google.gdata.wireformats.AltFormat$Builder setAcceptableTypes(com.google.gdata.util.ContentType[])>
<com.google.android.gms.internal.r: android.content.Intent e(java.lang.String)>
<com.google.gdata.model.atompub.Control: void <clinit>()>
<com.google.api.services.drive.model.File: com.google.api.services.drive.model.File setTitle(java.lang.String)>
<java.io.IOException: void <init>()>
<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder penaltyLog()>
<com.google.android.apps.mytracks.io.gdata.maps.MapsMapMetadata: java.lang.String getDescription()>
<com.google.android.apps.mytracks.io.sendtogoogle.SendToGoogleUtils: com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential getGoogleAccountCredential(android.content.Context,java.lang.String,java.lang.String)>
<com.google.common.primitives.UnsignedLong: double doubleValue()>
<android.widget.AbsListView: android.util.SparseBooleanArray getCheckedItemPositions()>
<java.io.OutputStream: void <init>()>
<com.google.android.apps.mytracks.fragments.FileTypeDialogFragment: void <init>()>
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder penaltyLog()>
<com.google.android.apps.mytracks.settings.RecordingSettingsActivity: void configFrequencyPreference(int,int,int,boolean)>
<com.google.gdata.client.Service: void <init>()>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity: void onConfirmDeleteDone(long[])>
<com.google.gdata.model.MetadataContext: com.google.gdata.model.MetadataContext forContext(com.google.gdata.wireformats.AltFormat,java.lang.String,com.google.gdata.util.Version)>
<com.google.gdata.wireformats.AltFormat$Builder: com.google.gdata.wireformats.AltFormat build()>
<com.google.android.apps.mytracks.services.MyTracksLocationManager: void requestLastLocation(com.google.android.gms.location.LocationListener)>
<com.google.gdata.model.ElementCreatorImpl: com.google.gdata.model.ElementCreatorImpl addElement(com.google.gdata.model.ElementKey,com.google.gdata.model.ElementCreatorImpl$Action)>
<com.google.android.apps.mytracks.SearchListActivity$2: void onPrepare(android.view.Menu,int[],long[],boolean)>
<com.google.api.client.http.HttpHeaders: java.lang.String getUserAgent()>
<com.google.gdata.util.NotModifiedException: void initResponseCode()>
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: int getImportantForAccessibility(android.view.View)>
<com.google.android.apps.analytics.CustomVariableBuffer: void clearCustomVariableAt(int)>
<com.google.gdata.model.Schema$RootKey: com.google.gdata.model.Schema$RootKey access$000(com.google.gdata.model.ElementKey)>
<android.support.v4.widget.CursorAdapter$MyDataSetObserver: void <init>(android.support.v4.widget.CursorAdapter)>
<com.google.gdata.model.ElementKey: com.google.gdata.model.ElementKey of(com.google.gdata.model.QName,java.lang.Class)>
<com.google.common.collect.RegularImmutableList: void <init>(java.lang.Object[])>
<com.google.common.collect.RegularImmutableMap$TerminalEntry: com.google.common.collect.RegularImmutableMap$LinkedEntry next()>
<com.google.api.client.json.gson.GsonGenerator: void writeNumber(com.google.common.primitives.UnsignedLong)>
<java.util.Timer: void scheduleAtFixedRate(java.util.TimerTask,java.util.Date,long)>
<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
<java.util.ArrayList: boolean equals(java.lang.Object)>
<android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment)>
<com.google.android.apps.mytracks.util.GoogleLocationUtils: boolean isEnforceable(android.content.Context)>
<com.google.common.collect.AbstractMapBasedMultiset$1$1: int getCount()>
<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>
<android.support.v4.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
<com.google.android.gms.internal.ca$a: void <init>()>
<android.support.v4.view.AccessibilityDelegateCompatIcs: java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge)>
<com.google.android.apps.mytracks.util.TrackIconUtils$1: void <init>(android.content.Context,int,java.lang.StringBuilder[],android.content.Context)>
<com.google.android.apps.mytracks.content.TrackDataHub: boolean access$1300(com.google.android.apps.mytracks.content.TrackDataHub)>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment$3: void <clinit>()>
<com.google.android.gsf.Gservices: java.lang.String getString(android.content.ContentResolver,java.lang.String,java.lang.String)>
<javax.xml.parsers.SAXParserFactory: void <init>()>
<com.google.android.common.gdata.AndroidGDataClient: java.io.InputStream logInputStreamContents(java.io.InputStream)>
<com.google.android.apps.mytracks.services.MyTracksLocationManager: float access$500(com.google.android.apps.mytracks.services.MyTracksLocationManager)>
<java.util.concurrent.ConcurrentHashMap: void clear()>
<com.google.api.client.json.GenericJson: void <init>()>
<android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl: void <init>()>
<com.google.android.apps.mytracks.fragments.PlayMultipleDialogFragment: long[] getChecked(android.util.SparseBooleanArray)>
<com.google.api.client.json.JsonObjectParser: java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.Class)>
<com.google.gdata.data.BaseFeed: void declareExtensions(com.google.gdata.data.ExtensionProfile)>
<com.google.gdata.util.Version: com.google.gdata.util.Version findServiceVersion(java.util.Collection,java.lang.Class)>
<com.google.android.apps.analytics.HitBuilder: java.lang.String x10Escape(java.lang.String)>
<com.google.gdata.model.ElementCreatorImpl: void <clinit>()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<java.lang.Byte: void <init>(byte)>
<com.google.android.apps.mytracks.TrackDetailActivity: void onResume()>
<com.google.gdata.util.parser.Chset: void set(com.google.gdata.util.parser.Chset$Range)>
<com.google.gdata.util.common.net.UriParameterMap: com.google.gdata.util.common.net.UriParameterMap parse(java.lang.String)>
<com.google.android.apps.analytics.Event: void setVisits(int)>
<com.google.gdata.model.AttributeCreatorImpl: com.google.gdata.model.AttributeCreatorImpl setVisible(boolean)>
<com.google.common.collect.EmptyImmutableSet: void <clinit>()>
<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>
<com.google.android.common.http.GoogleHttpClient: void <init>(android.content.Context,java.lang.String,boolean)>
<com.google.android.apps.analytics.PersistentHitStore: void deleteHit(long)>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment: void onAttach(android.app.Activity)>
<com.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask$2: void <init>(com.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask)>
<com.google.android.apps.mytracks.io.sendtogoogle.UploadResultActivity$3: void <init>(com.google.android.apps.mytracks.io.sendtogoogle.UploadResultActivity)>
<java.lang.Number: void <init>()>
<com.google.common.primitives.UnsignedLong: com.google.common.primitives.UnsignedLong valueOf(java.lang.String,int)>
<android.os.Bundle: long[] getLongArray(java.lang.String)>
<com.google.android.gms.internal.v$a: com.google.android.gms.internal.v i(android.os.IBinder)>
<com.google.android.apps.mytracks.SearchListActivity: android.widget.ArrayAdapter access$300(com.google.android.apps.mytracks.SearchListActivity)>
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String)>
<com.google.android.apps.mytracks.io.file.exporter.SaveActivity$3: void onCancel(android.content.DialogInterface)>
<com.google.android.apps.mytracks.fragments.FileTypeDialogFragment: com.google.android.apps.mytracks.fragments.FileTypeDialogFragment$FileTypeCaller access$000(com.google.android.apps.mytracks.fragments.FileTypeDialogFragment)>
<java.lang.Math: int min(int,int)>
<com.google.api.client.http.HttpResponse: java.nio.charset.Charset getContentCharset()>
<com.google.api.client.http.HttpMediaType: java.lang.String build()>
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>
<com.google.android.apps.mytracks.TrackController: android.widget.TextView access$500(com.google.android.apps.mytracks.TrackController)>
<com.google.gdata.util.common.base.CharEscaperBuilder: com.google.gdata.util.common.base.CharEscaper toEscaper()>
<android.content.Intent: long getLongExtra(java.lang.String,long)>
<com.google.common.collect.EmptyImmutableMap: java.util.Set entrySet()>
<com.google.android.gms.auth.GoogleAuthUtil: boolean b(java.lang.String)>
<com.google.android.apps.mytracks.fragments.EulaDialogFragment: void onAttach(android.app.Activity)>
<com.google.android.apps.mytracks.services.MyTracksLocationManager: boolean isGpsProviderEnabled()>
<com.google.android.apps.mytracks.stats.TripStatistics: double getAverageSpeed()>
<com.google.gdata.data.ExtensionProfile: void declare(java.lang.Class,com.google.gdata.data.ExtensionDescription)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsMapMetadata: void setSearchable(boolean)>
<com.google.common.collect.RegularImmutableMap$EntrySet: java.util.Iterator iterator()>
<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.google.api.services.drive.Drive$Builder: com.google.api.services.drive.Drive$Builder setServicePath(java.lang.String)>
<java.lang.Class: java.lang.Class getComponentType()>
<com.google.gdata.model.MetadataContext: com.google.gdata.model.MetadataContext forAlt(com.google.gdata.wireformats.AltFormat)>
<com.google.api.client.json.JsonObjectParser: void <init>(com.google.api.client.json.JsonFactory)>
<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableListIterator listIterator()>
<com.google.gdata.util.XmlParser: void <init>()>
<com.google.android.apps.mytracks.services.MyTracksLocationManager: com.google.android.gms.location.LocationListener access$402(com.google.android.apps.mytracks.services.MyTracksLocationManager,com.google.android.gms.location.LocationListener)>
<com.google.common.collect.ImmutableSet$ArrayImmutableSet: void <init>(java.lang.Object[])>
<com.google.gdata.wireformats.input.AtomServiceDataParser: void <init>()>
<org.xml.sax.helpers.ParserAdapter: void setContentHandler(org.xml.sax.ContentHandler)>
<java.lang.Class: boolean isEnum()>
<java.util.logging.Level: void <clinit>()>
<java.util.HashMap: boolean containsKey(java.lang.Object)>
<com.google.android.apps.analytics.Event: int getRandomVal()>
<com.google.gdata.client.http.HttpGDataRequest$Factory: void setAuthToken(com.google.gdata.client.AuthTokenFactory$AuthToken)>
<com.google.android.apps.mytracks.maps.DynamicSpeedTrackPathDescriptor: android.content.Context access$000(com.google.android.apps.mytracks.maps.DynamicSpeedTrackPathDescriptor)>
<com.google.common.collect.RegularImmutableMap: com.google.common.collect.ImmutableSet createEntrySet()>
<android.support.v4.app.Fragment$1: void <init>(android.support.v4.app.Fragment)>
<android.database.SQLException: void <init>(java.lang.String)>
<android.content.ContentProvider: android.content.Context getContext()>
<android.support.v4.content.ModernAsyncTask$WorkerRunnable: void <init>()>
<com.google.android.apps.mytracks.settings.SettingsActivity$2: void onShow(android.content.DialogInterface)>
<com.google.api.client.http.GenericUrl: void setRawPath(java.lang.String)>
<android.widget.CompoundButton: void setButtonDrawable(android.graphics.drawable.Drawable)>
<android.os.SystemClock: long uptimeMillis()>
<com.google.android.apps.mytracks.io.sendtogoogle.UploadResultActivity: void <clinit>()>
<com.google.android.apps.mytracks.content.Track: void setNumberOfPoints(int)>
<android.preference.PreferenceActivity: void <init>()>
<com.google.android.apps.mytracks.MarkerEditActivity: void saveMarker()>
<com.google.android.apps.mytracks.util.PreferencesUtils: float getFloat(android.content.Context,int,float)>
<com.google.gdata.data.ExtensionPoint: void setExtension(com.google.gdata.data.Extension)>
<com.google.api.client.json.gson.GsonGenerator: void <init>(com.google.api.client.json.gson.GsonFactory,com.google.gson.stream.JsonWriter)>
<com.google.gdata.util.common.base.CharMatcher$14: boolean matches(char)>
<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>
<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidEndTag()>
<com.google.android.apps.analytics.Event: com.google.android.apps.analytics.Item getItem()>
<com.google.android.apps.mytracks.TrackListActivity: boolean access$302(com.google.android.apps.mytracks.TrackListActivity,boolean)>
<com.google.gdata.client.http.GoogleGDataRequest$Factory: com.google.gdata.client.Service$GDataRequest createRequest(com.google.gdata.client.Service$GDataRequest$RequestType,java.net.URL,com.google.gdata.util.ContentType)>
<android.view.View: void requestLayout()>
<com.google.api.client.http.HttpHeaders: java.lang.Object parseValue(java.lang.reflect.Type,java.util.List,java.lang.String)>
<com.google.gdata.client.GoogleService$InvalidCredentialsException: void <init>(java.lang.String)>
<com.google.api.client.auth.oauth2.TokenRequest$1: void initialize(com.google.api.client.http.HttpRequest)>
<com.google.gdata.model.transforms.atompub.AtompubVersionTransforms: void addTransforms(com.google.gdata.model.MetadataRegistry)>
<com.google.android.apps.mytracks.TrackDetailActivity: com.google.android.apps.mytracks.TrackController access$300(com.google.android.apps.mytracks.TrackDetailActivity)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl$1: android.location.Location next()>
<android.support.v4.app.FragmentActivity: void onStop()>
<com.google.android.apps.mytracks.content.Sensor$SensorState: com.google.android.apps.mytracks.content.Sensor$SensorState[] values()>
<com.google.api.services.drive.Drive$Files$Insert: void <init>(com.google.api.services.drive.Drive$Files,com.google.api.services.drive.model.File,com.google.api.client.http.AbstractInputStreamContent)>
<java.lang.Thread: void setName(java.lang.String)>
<com.google.android.apps.mytracks.util.StringUtils: java.lang.String formatDecimal(double)>
<com.google.gdata.client.GoogleService: void tokenChanged(com.google.gdata.client.AuthTokenFactory$AuthToken)>
<com.google.gdata.client.GoogleAuthTokenFactory: java.lang.String getAuthToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.google.common.collect.AbstractMapBasedMultiset$1: java.lang.Object next()>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>
<com.google.android.apps.mytracks.SectionResourceCursorAdapter: int getSharedWithMeIndex()>
<com.google.api.client.http.apache.ApacheHttpResponse: java.lang.String getContentEncoding()>
<com.google.android.apps.mytracks.TrackListActivity: void access$1300(com.google.android.apps.mytracks.TrackListActivity)>
<android.support.v4.app.DialogFragment: void dismissInternal(boolean)>
<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>
<com.google.gdata.data.spreadsheet.SpreadsheetFeed: void <init>()>
<com.google.api.client.util.GenericData$Flags: void <init>(java.lang.String,int)>
<com.google.api.client.auth.oauth2.Credential: com.google.api.client.auth.oauth2.Credential setAccessToken(java.lang.String)>
<com.google.android.apps.mytracks.settings.AbstractSettingsActivity$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<com.google.android.apps.mytracks.fragments.PlayMultipleDialogFragment: void loadData()>
<com.google.android.apps.mytracks.io.file.importer.GpxFileTrackImporter: void <init>(android.content.Context)>
<com.google.android.apps.mytracks.content.Waypoint: void <clinit>()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: long access$602(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,long)>
<com.google.android.apps.mytracks.TrackDetailActivity: void onPlayMultipleDone(long[])>
<android.support.v4.app.BackStackState: void <clinit>()>
<com.google.common.collect.ImmutableList: void <init>()>
<com.google.android.apps.mytracks.util.Api8Adapter: boolean revertMenuIconColor()>
<com.google.common.primitives.UnsignedLong: float floatValue()>
<com.google.gdata.util.common.base.CharMatcher$18: boolean matches(char)>
<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>
<com.google.android.apps.mytracks.io.sendtogoogle.SendRequest: void <init>(long)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: long getLastTrackPointId(long)>
<android.widget.ArrayAdapter: android.widget.ArrayAdapter createFromResource(android.content.Context,int,int)>
<com.google.android.apps.mytracks.io.file.exporter.SaveAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
<com.google.android.apps.mytracks.MarkerEditActivity: void addMarker()>
<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>
<com.google.android.apps.mytracks.DeleteActivity: void <init>()>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void writeLocation(android.location.Location)>
<com.google.protobuf.UninitializedMessageException: com.google.protobuf.InvalidProtocolBufferException asInvalidProtocolBufferException()>
<java.util.Collections: java.util.List unmodifiableList(java.util.List)>
<org.apache.http.message.BasicHttpRequest: void <init>(org.apache.http.RequestLine)>
<com.google.gdata.wireformats.AltFormat$Builder: com.google.gdata.wireformats.AltFormat$Builder setAcceptableXmlTypes()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: int access$500(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread)>
<android.support.v4.app.Fragment: void setArguments(android.os.Bundle)>
<com.google.android.gms.auth.UserRecoverableAuthException: void <init>(java.lang.String,android.content.Intent)>
<java.io.File: boolean mkdirs()>
<java.io.Writer: java.io.Writer append(char)>
<com.google.gdata.util.common.xml.parsing.SecureGenericXMLFactory: void <clinit>()>
<com.google.gdata.util.common.net.UriParameterMap: java.lang.String getFirst(java.lang.String)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>
<com.google.api.client.http.apache.ApacheHttpTransport: com.google.api.client.http.LowLevelHttpRequest buildGetRequest(java.lang.String)>
<android.support.v4.app.DialogFragment: void onStart()>
<com.google.android.apps.mytracks.settings.SensorSettingsActivity: void onCreate(android.os.Bundle)>
<com.google.android.apps.mytracks.TrackListActivity$6: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<com.google.android.apps.mytracks.services.sensors.PolarMessageParser: boolean isValid(byte[])>
<com.google.android.apps.mytracks.content.DataSourceManager: void unregisterAllListeners()>
<com.google.api.client.googleapis.extensions.android.gms.auth.GooglePlayServicesAvailabilityIOException: com.google.android.gms.auth.GooglePlayServicesAvailabilityException getCause()>
<com.google.gdata.wireformats.output.AtomDualGenerator: void <init>()>
<java.lang.Thread: void <init>()>
<com.google.android.gms.common.GooglePlayServicesUtil: boolean f()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>
<com.google.android.apps.mytracks.stats.TripStatisticsUpdater: void addLocation(android.location.Location,int,boolean,com.google.android.apps.mytracks.util.CalorieUtils$ActivityType,double)>
<android.support.v4.view.ViewPager: void initViewPager()>
<java.lang.Boolean: boolean getBoolean(java.lang.String)>
<com.google.android.apps.mytracks.fragments.MyTracksMapFragment$1: void <init>(com.google.android.apps.mytracks.fragments.MyTracksMapFragment)>
<com.google.android.apps.mytracks.io.sendtogoogle.UploadResultActivity$3: void onClick(android.content.DialogInterface,int)>
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.support.v4.app.FragmentManagerImpl: void startPendingDeferredFragments()>
<com.google.android.apps.mytracks.settings.MapSettingsActivity: int access$300(com.google.android.apps.mytracks.settings.MapSettingsActivity,int,int)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeatureMetadata: void setDescription(java.lang.String)>
<com.google.android.apps.mytracks.TrackDetailActivity: void onStart()>
<android.widget.Spinner: int getBaseline()>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: float getHeading(long,android.location.Location)>
<com.google.android.apps.mytracks.io.gdata.maps.MapFeatureEntry: void setAttribute(java.lang.String,java.lang.String)>
<com.google.android.gsf.Gservices: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<com.google.android.apps.mytracks.TrackListActivity: boolean onSearchRequested()>
<com.google.gdata.model.ElementCreatorImpl$Action: void <init>(java.lang.String,int)>
<com.google.api.client.http.javanet.NetHttpRequest: com.google.api.client.http.LowLevelHttpResponse execute()>
<com.google.common.collect.EmptyImmutableMap: com.google.common.collect.ImmutableSet createEntrySet()>
<com.google.gdata.data.ExtensionDescription: java.lang.String getLocalName()>
<com.google.common.collect.ImmutableCollection$Builder: com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable)>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<com.google.android.apps.mytracks.DeleteActivity: com.google.android.apps.mytracks.DeleteAsyncTask access$000(com.google.android.apps.mytracks.DeleteActivity)>
<java.lang.Thread: void start()>
<android.os.HandlerThread: android.os.Looper getLooper()>
<com.google.gdata.util.parser.Chset: void clear(com.google.gdata.util.parser.Chset$Range)>
<com.google.api.client.http.UriTemplate: java.lang.String expand(java.lang.String,java.lang.String,java.lang.Object,boolean)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: boolean hasBatteryLevel()>
<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.app.Activity: android.content.ComponentName getComponentName()>
<com.google.gdata.model.ElementMetadataRegistryBuilder: void <init>(com.google.gdata.model.MetadataRegistry)>
<com.google.android.gms.internal.p: void <init>(android.content.Context,com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks,com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener,java.lang.String[])>
<com.google.android.apps.mytracks.io.file.exporter.SaveAsyncTask$1: void onProgressUpdate(int,int)>
<android.support.v4.app.FragmentManagerImpl: void reportBackStackChanged()>
<com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment$4: void onClick(android.content.DialogInterface,int)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsGDataConverter: com.google.wireless.gdata.data.Entry getMapEntryForMetadata(com.google.android.apps.mytracks.io.gdata.maps.MapsMapMetadata)>
<android.support.v4.app.Fragment: void performActivityCreated(android.os.Bundle)>
<com.google.android.apps.mytracks.TabsAdapter$DummyTabFactory: void <init>(android.content.Context)>
<com.google.android.apps.mytracks.SearchListActivity: boolean access$002(com.google.android.apps.mytracks.SearchListActivity,boolean)>
<com.google.android.apps.mytracks.util.DialogUtils: android.app.ProgressDialog createProgressDialog(boolean,android.content.Context,int,android.content.DialogInterface$OnCancelListener,java.lang.Object[])>
<android.os.Environment: java.lang.String getExternalStorageState()>
<com.google.android.apps.mytracks.io.maps.SendMapsAsyncTask: void <init>(com.google.android.apps.mytracks.io.maps.SendMapsActivity,long,android.accounts.Account)>
<com.google.android.apps.mytracks.TrackListActivity: com.google.android.apps.mytracks.services.TrackRecordingServiceConnection getTrackRecordingServiceConnection()>
<com.google.android.apps.mytracks.SearchListActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void retain()>
<com.google.android.apps.mytracks.TrackController: void onResume(boolean,boolean)>
<android.graphics.Color: int red(int)>
<com.google.android.apps.mytracks.SensorStateActivity: java.lang.String getLastSensorTime(com.google.android.apps.mytracks.content.Sensor$SensorDataSet)>
<com.google.gdata.data.ExtensionDescription: boolean allowsArbitraryXml()>
<com.dsi.ant.AntInterface: void ANTAssignChannel(byte,byte,byte)>
<com.google.api.client.util.ArrayMap: java.lang.Object getKey(int)>
<com.google.android.apps.mytracks.settings.SettingsActivity: com.google.android.apps.mytracks.services.tasks.CheckPermissionAsyncTask access$102(com.google.android.apps.mytracks.settings.SettingsActivity,com.google.android.apps.mytracks.services.tasks.CheckPermissionAsyncTask)>
<android.view.View: void saveHierarchyState(android.util.SparseArray)>
<com.google.android.apps.mytracks.io.file.exporter.SaveActivity: android.app.Dialog onCreateDialog(int)>
<java.lang.Math: float abs(float)>
<com.google.android.apps.mytracks.content.MyTracksProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
<com.google.common.collect.ImmutableSet: void <clinit>()>
<com.google.api.client.auth.oauth2.Credential: com.google.api.client.auth.oauth2.Credential setRefreshToken(java.lang.String)>
<java.lang.String: java.lang.String substring(int,int)>
<com.google.android.apps.mytracks.fragments.ChooseAccountDialogFragment: android.app.Dialog createDialog()>
<android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>
<java.util.Locale: void <clinit>()>
<com.google.api.client.util.DataMap$Entry: int hashCode()>
<com.google.android.apps.mytracks.TrackListActivity$8: void <init>(com.google.android.apps.mytracks.TrackListActivity)>
<java.util.LinkedList: java.lang.Object poll()>
<com.google.android.gms.auth.UserRecoverableAuthException: android.content.Intent getIntent()>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<java.lang.Object: int hashCode()>
<com.google.gson.stream.JsonReader: void beginArray()>
<com.google.api.client.http.UriTemplate: com.google.api.client.http.UriTemplate$CompositeOutput getCompositeOutput(java.lang.String)>
<com.google.api.client.util.FieldInfo: java.lang.Object getFieldValue(java.lang.reflect.Field,java.lang.Object)>
<java.lang.Byte: java.lang.Byte valueOf(java.lang.String)>
<com.google.api.client.util.Types: java.lang.reflect.Type getBound(java.lang.reflect.WildcardType)>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity: void checkPermissions()>
<com.google.common.primitives.Longs: int compare(long,long)>
<com.google.android.apps.mytracks.content.MyTracksProvider: android.net.Uri insertTrackPoint(android.net.Uri,android.content.ContentValues)>
<android.net.http.AndroidHttpClient: java.io.InputStream getUngzippedContent(org.apache.http.HttpEntity)>
<com.google.android.apps.mytracks.content.SearchEngine: double getTimeBoost(com.google.android.apps.mytracks.content.SearchEngine$SearchQuery,long)>
<com.google.android.apps.mytracks.AggregatedStatsActivity: void onCreate(android.os.Bundle)>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setOngoing(boolean)>
<com.google.gdata.util.AuthenticationException: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.services.TrackRecordingService: boolean isPaused()>
<com.google.gdata.util.parser.Parser: com.google.gdata.util.parser.Parser plus()>
<com.google.android.apps.mytracks.content.Sensor$SensorState: void <clinit>()>
<com.google.android.apps.mytracks.TrackListActivity: void onEulaDone()>
<com.google.android.apps.mytracks.content.TrackDataHub: void notifyWaypointsTableUpdate(java.util.Set)>
<com.google.gdata.util.ServiceExceptionInitializer: void <init>(com.google.gdata.util.ServiceException)>
<android.database.DataSetObservable: void notifyChanged()>
<com.google.android.apps.mytracks.io.file.importer.ImportAsyncTask: void <clinit>()>
<android.os.StrictMode: void setVmPolicy(android.os.StrictMode$VmPolicy)>
<com.google.gdata.wireformats.AltFormat$Builder: com.google.gdata.wireformats.AltFormat$Builder addAllowedInputFormats(com.google.gdata.wireformats.AltFormat[])>
<com.google.common.base.Throwables: void propagateIfInstanceOf(java.lang.Throwable,java.lang.Class)>
<android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean: android.app.Notification build(android.support.v4.app.NotificationCompat$Builder)>
<com.google.common.base.Joiner: void <init>(java.lang.String)>
<com.google.gdata.util.common.base.StringUtil: java.lang.String makeSafe(java.lang.String)>
<com.google.android.apps.mytracks.TrackListActivity$7: void <init>(com.google.android.apps.mytracks.TrackListActivity)>
<com.google.wireless.gdata.parser.xml.XmlGDataParser: void handleEntry(com.google.wireless.gdata.data.Entry)>
<com.google.common.collect.EmptyImmutableMap: boolean isPartialView()>
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1: void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl,android.support.v4.view.AccessibilityDelegateCompat)>
<android.support.v4.app.Fragment: void performResume()>
<com.google.android.apps.mytracks.content.Track: void setCategory(java.lang.String)>
<com.google.android.gms.internal.q$a$a: void <init>(com.google.android.gms.internal.q$a)>
<com.google.gdata.client.GoogleService$AccountDeletedException: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.TrackListActivity$5: void <init>(com.google.android.apps.mytracks.TrackListActivity)>
<com.google.android.apps.mytracks.util.IntentUtils: android.content.Intent newIntent(android.content.Context,java.lang.Class)>
<com.google.gdata.util.ServiceException: java.lang.String getInternalReason()>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: android.content.ContentValues createContentValues(com.google.android.apps.mytracks.content.Waypoint)>
<com.google.api.client.googleapis.services.AbstractGoogleClientRequest: void initializeMediaUpload(com.google.api.client.http.AbstractInputStreamContent)>
<com.google.android.apps.mytracks.TrackEditActivity: void onSaveInstanceState(android.os.Bundle)>
<com.google.android.apps.mytracks.fragments.EulaDialogFragment$3: void onClick(android.content.DialogInterface,int)>
<com.google.android.apps.mytracks.content.TrackDataType: void <clinit>()>
<com.google.android.apps.mytracks.TrackListActivity: void checkGooglePlayServices()>
<com.google.android.apps.mytracks.io.gdata.maps.MapFeatureEntry: void setPrivacy(java.lang.String)>
<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<android.view.View: void <init>(android.content.Context)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsClient: java.lang.String getMapIdFromMapEntryId(java.lang.String)>
<com.google.api.client.http.javanet.NetHttpTransport: com.google.api.client.http.javanet.NetHttpRequest buildPostRequest(java.lang.String)>
<com.google.android.apps.analytics.Event: com.google.android.apps.analytics.Transaction getTransaction()>
<com.google.android.apps.mytracks.settings.SettingsActivity: void configPreference(int,java.lang.Class)>
<com.google.android.apps.mytracks.content.DataSourceManager: android.os.Handler access$000(com.google.android.apps.mytracks.content.DataSourceManager)>
<com.google.gdata.client.http.GoogleGDataRequest: void <clinit>()>
<java.util.HashSet: void clear()>
<android.support.v4.content.Loader: void onAbandon()>
<com.google.api.client.json.gson.GsonParser: com.google.api.client.json.JsonParser skipChildren()>
<com.google.gdata.client.http.HttpGDataRequest$Factory: void setAuthToken(com.google.gdata.client.http.HttpAuthToken)>
<com.google.android.apps.mytracks.fragments.MyTracksMapFragment: boolean isSelectedTrackRecording()>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataSerializer: void serializeAuthor(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>
<com.google.api.client.googleapis.media.MediaHttpUploader: void setContentAndHeadersOnCurrentRequest(long)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: long getCreationTime()>
<com.google.api.client.json.JsonParser: com.google.api.client.json.JsonToken startParsing()>
<com.google.api.services.fusiontables.Fusiontables$Builder: com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setRootUrl(java.lang.String)>
<java.util.Arrays: boolean equals(byte[],byte[])>
<com.google.api.services.drive.Drive$Files: com.google.api.services.drive.Drive$Files$Insert insert(com.google.api.services.drive.model.File,com.google.api.client.http.AbstractInputStreamContent)>
<com.google.api.services.fusiontables.model.StyleFunction: com.google.api.services.fusiontables.model.StyleFunction setColumnName(java.lang.String)>
<org.apache.http.impl.AbstractHttpClientConnection: void <init>()>
<com.google.android.apps.analytics.NetworkDispatcher: void <init>(java.lang.String,java.lang.String)>
<com.google.api.client.http.HttpMediaType: java.lang.String quoteString(java.lang.String)>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>
<com.google.api.client.auth.oauth2.TokenRequest: void <init>(com.google.api.client.http.HttpTransport,com.google.api.client.json.JsonFactory,com.google.api.client.http.GenericUrl,java.lang.String)>
<com.google.api.client.http.GenericUrl: java.util.List toPathParts(java.lang.String)>
<com.google.wireless.gdata.serializer.xml.XmlEntryGDataSerializer: void serializeLink(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.lang.String)>
<com.google.common.collect.Ordering: void <init>()>
<com.google.android.apps.analytics.PipelinedRequester: void <init>(org.apache.http.HttpHost)>
<com.google.common.collect.EmptyImmutableMap: void <clinit>()>
<com.google.api.client.http.javanet.NetHttpResponse: java.lang.String getStatusLine()>
<com.google.gdata.util.XmlBlob: void <clinit>()>
<com.google.android.apps.mytracks.content.TrackDataHub: void <init>(android.content.Context,com.google.android.apps.mytracks.content.TrackDataManager,com.google.android.apps.mytracks.content.MyTracksProviderUtils,int)>
<com.google.android.apps.mytracks.io.file.importer.ImportActivity$4: void <init>(com.google.android.apps.mytracks.io.file.importer.ImportActivity,android.app.Dialog)>
<com.google.android.apps.mytracks.SearchListActivity: void prepareTrackForDisplay(com.google.android.apps.mytracks.content.Track,java.util.Map)>
<com.google.android.apps.mytracks.SearchListActivity: void access$600(com.google.android.apps.mytracks.SearchListActivity,com.google.android.apps.mytracks.content.SearchEngine$SearchQuery)>
<com.google.common.base.Joiner: void <init>(com.google.common.base.Joiner)>
<android.support.v4.content.IntentCompat$IntentCompatImplBase: void <init>()>
<com.google.gdata.model.atom.Source: void <clinit>()>
<com.google.api.client.http.LogContent: void writeTo(java.io.OutputStream)>
<com.google.android.apps.mytracks.io.file.exporter.KmzTrackExporter: void addImages(java.util.zip.ZipOutputStream)>
<com.google.android.apps.mytracks.settings.AbstractSettingsActivity: int getIndex(java.lang.String[],java.lang.String)>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonScope peek()>
<android.support.v4.content.CursorLoader: void onStopLoading()>
<android.location.Location: float getSpeed()>
<java.io.ByteArrayInputStream: void <init>(byte[])>
<com.google.android.apps.mytracks.settings.StatsSettingsActivity: void <init>()>
<com.google.api.services.drive.Drive$Permissions: void <init>(com.google.api.services.drive.Drive)>
<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>
<com.google.gdata.util.common.base.CharMatcher$13: boolean matches(char)>
<android.support.v4.content.ModernAsyncTask$3: void <init>(android.support.v4.content.ModernAsyncTask,java.util.concurrent.Callable)>
<com.google.android.apps.mytracks.util.Api14Adapter: void configureActionBarHomeAsUp(android.app.Activity)>
<android.content.SearchRecentSuggestionsProvider: boolean onCreate()>
<java.lang.Exception: java.lang.String toString()>
<com.google.gdata.data.Feed: void <init>()>
<android.support.v4.widget.CursorAdapter$MyDataSetObserver: void <init>(android.support.v4.widget.CursorAdapter,android.support.v4.widget.CursorAdapter$1)>
<com.google.android.apps.mytracks.io.file.importer.KmlFileTrackImporter: void <init>(android.content.Context,long)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsClient: java.lang.String getFeaturesFeed(java.lang.String)>
<com.google.gdata.data.spreadsheet.TableFeed: void <init>()>
<com.google.api.services.drive.Drive$Permissions$Insert: void <init>(com.google.api.services.drive.Drive$Permissions,java.lang.String,com.google.api.services.drive.model.Permission)>
<com.google.android.apps.mytracks.TrackDetailActivity: void updateMenuItems(boolean,boolean)>
<com.google.common.collect.EmptyImmutableList: java.lang.Object get(int)>
<com.google.gdata.wireformats.output.AtomGenerator: void <init>()>
<com.google.android.apps.mytracks.util.GoogleEarthUtils: boolean isEarthInstalled(android.content.Context)>
<com.google.android.apps.mytracks.content.TrackDataManager: void <clinit>()>
<com.google.android.apps.mytracks.content.Waypoint$WaypointType: void <init>(java.lang.String,int)>
<com.google.android.apps.mytracks.fragments.ChooseActivityDialogFragment$DisplayInfo: android.content.pm.ResolveInfo access$400(com.google.android.apps.mytracks.fragments.ChooseActivityDialogFragment$DisplayInfo)>
<com.google.android.apps.mytracks.maps.FixedSpeedTrackPathDescriptor: double access$200(com.google.android.apps.mytracks.maps.FixedSpeedTrackPathDescriptor)>
<com.google.common.collect.ImmutableCollection: void <init>()>
<com.google.android.apps.mytracks.settings.MapSettingsActivity: void configTrackColorModePerference()>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential$RequestHandler: boolean handleResponse(com.google.api.client.http.HttpRequest,com.google.api.client.http.HttpResponse,boolean)>
<com.google.android.apps.mytracks.TrackEditActivity: void onStart()>
<org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()>
<com.google.common.collect.Multisets$2: void <init>()>
<com.google.api.client.http.javanet.NetHttpTransport: com.google.api.client.http.javanet.NetHttpRequest buildGetRequest(java.lang.String)>
<com.google.android.apps.analytics.CustomVariableBuffer: void <init>()>
<com.google.android.apps.mytracks.content.Track: void setModifiedTime(long)>
<com.google.android.apps.analytics.Event: int getTimestampFirst()>
<com.google.gdata.data.batch.BatchId: com.google.gdata.data.ExtensionDescription getDefaultDescription()>
<android.app.Activity: void invalidateOptionsMenu()>
<com.google.android.gms.internal.ea: void a(android.net.Uri)>
<com.google.common.primitives.UnsignedLongs: long parseUnsignedLong(java.lang.String,int)>
<com.google.android.gms.internal.p: void disconnect()>
<com.google.android.gms.common.GooglePlayServicesUtil: boolean c(android.content.Context)>
<java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>
<java.net.URI: java.net.URI create(java.lang.String)>
<com.google.api.client.http.HttpResponse: void ignore()>
<com.google.api.client.http.javanet.NetHttpResponse: int getHeaderCount()>
<com.google.gdata.util.ServiceException: void setHttpErrorCodeOverride(int)>
<com.google.api.services.drive.Drive: com.google.api.services.drive.Drive$Permissions permissions()>
<android.support.v4.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
<java.lang.Class: java.lang.Package getPackage()>
<com.google.api.client.http.ByteArrayContent: java.io.InputStream getInputStream()>
<com.google.android.apps.mytracks.fragments.EnableSyncDialogFragment$2: void <init>(com.google.android.apps.mytracks.fragments.EnableSyncDialogFragment)>
<com.google.android.apps.mytracks.fragments.MapLayerDialogFragment: int[] access$000()>
<com.google.api.client.http.HttpHeaders: java.lang.String getRange()>
<com.google.android.apps.mytracks.SensorStateActivity: void access$200(com.google.android.apps.mytracks.SensorStateActivity)>
<com.google.gdata.util.common.base.CharMatcher: void setBits(com.google.gdata.util.common.base.CharMatcher$LookupTable)>
<android.app.Notification$Builder: android.app.Notification$Builder setNumber(int)>
<android.support.v4.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.google.android.apps.mytracks.services.sensors.ant.AntSensorManager: void tearDownChannel()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.google.android.apps.mytracks.util.Api8Adapter: void applyPreferenceChanges(android.content.SharedPreferences$Editor)>
<android.support.v4.view.ViewPager: void setAdapter(android.support.v4.view.PagerAdapter)>
<com.google.android.apps.mytracks.io.sendtogoogle.SendRequest$1: void <init>()>
<java.lang.Class: boolean desiredAssertionStatus()>
<android.content.Intent: android.content.Intent makeMainActivity(android.content.ComponentName)>
<com.google.gdata.model.AttributeKey: com.google.gdata.model.AttributeKey of(com.google.gdata.model.QName,java.lang.Class)>
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: void setLayerType(android.view.View,int,android.graphics.Paint)>
<com.google.android.gms.internal.r: android.content.Intent h(java.lang.String)>
<android.appwidget.AppWidgetProvider: void <init>()>
<com.google.api.client.http.HttpMediaType: java.lang.String getType()>
<java.lang.ClassCastException: void <init>(java.lang.String)>
<java.lang.IndexOutOfBoundsException: void <init>()>
<com.google.gdata.util.XmlParser$ElementHandler: void <init>()>
<com.google.android.apps.analytics.CustomVariable: int getScope()>
<com.google.gdata.data.spreadsheet.RowCount: com.google.gdata.data.ExtensionDescription getDefaultDescription()>
<com.google.gdata.util.parser.Parser: com.google.gdata.util.parser.Parser action(com.google.gdata.util.parser.Callback)>
<com.google.android.apps.mytracks.content.DataSource: void unregisterContentObserver(android.database.ContentObserver)>
<com.google.api.services.fusiontables.Fusiontables: com.google.api.services.fusiontables.Fusiontables$Table table()>
<com.google.android.apps.mytracks.io.sync.SyncUtils: boolean isInMyTracks(com.google.api.services.drive.model.File,java.lang.String)>
<android.widget.BaseAdapter: void notifyDataSetInvalidated()>
<com.google.api.client.auth.oauth2.TokenRequest$1$1: void <init>(com.google.api.client.auth.oauth2.TokenRequest$1,com.google.api.client.http.HttpExecuteInterceptor)>
<com.google.gdata.util.common.net.UriParameterMap: java.util.List get(java.lang.String)>
<com.google.gdata.model.atom.Source$Generator: void <clinit>()>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity$1: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<com.google.android.apps.mytracks.content.Waypoint: void setCategory(java.lang.String)>
<android.support.v4.app.Fragment: void performDestroy()>
<com.google.common.collect.Iterators: java.lang.Object getOnlyElement(java.util.Iterator)>
<com.google.android.apps.mytracks.BootReceiver: void <init>()>
<com.google.android.apps.mytracks.util.EulaUtils: void setValue(android.content.Context,java.lang.String,boolean)>
<com.google.android.common.http.GoogleHttpClient$WrappedSocketFactory: void <init>(com.google.android.common.http.GoogleHttpClient,org.apache.http.conn.scheme.SocketFactory,com.google.android.common.http.GoogleHttpClient$1)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask: void <init>(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,com.google.android.apps.analytics.Hit[])>
<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectAll()>
<android.os.Parcel: android.os.Parcel obtain()>
<android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)>
<com.google.android.gms.internal.ab: java.lang.String a(java.lang.String,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,java.lang.String)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: com.google.android.apps.mytracks.content.Waypoint getNextStatisticsWaypointAfter(com.google.android.apps.mytracks.content.Waypoint)>
<com.google.android.apps.mytracks.services.tasks.SplitPeriodicTaskFactory: com.google.android.apps.mytracks.services.tasks.PeriodicTask create(android.content.Context)>
<com.google.gdata.wireformats.input.AtomDataParser: void <init>()>
<android.app.Activity: void onStart()>
<com.google.android.apps.mytracks.SearchListActivity$7: void <init>(com.google.android.apps.mytracks.SearchListActivity)>
<com.google.gdata.wireformats.AltFormat$Builder: com.google.gdata.wireformats.AltFormat$Builder setContentType(com.google.gdata.util.ContentType)>
<com.google.android.apps.mytracks.TrackEditActivity$3: boolean onTouch(android.view.View,android.view.MotionEvent)>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.google.android.apps.mytracks.services.MyTracksLocationManager: android.os.Handler access$700(com.google.android.apps.mytracks.services.MyTracksLocationManager)>
<com.google.gdata.client.Service$ClientInputProperties: com.google.gdata.util.ContentType getContentType()>
<com.google.android.apps.mytracks.fragments.ConfirmDeleteDialogFragment: com.google.android.apps.mytracks.fragments.ConfirmDeleteDialogFragment$ConfirmDeleteCaller access$000(com.google.android.apps.mytracks.fragments.ConfirmDeleteDialogFragment)>
<com.google.api.client.http.InputStreamContent: com.google.api.client.http.InputStreamContent setLength(long)>
<android.widget.Spinner: boolean onTouchEvent(android.view.MotionEvent)>
<com.google.api.services.fusiontables.Fusiontables: void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)>
<com.google.android.apps.mytracks.TrackEditActivity$6: void onClick(android.view.View)>
<com.google.api.client.googleapis.json.JsonCParser: java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.reflect.Type)>
<com.google.android.apps.mytracks.settings.MapSettingsActivity$5: boolean onPreferenceClick(android.preference.Preference)>
<com.google.api.client.json.gson.GsonParser: java.lang.String getText()>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesActivity: java.lang.Class getNextClass(com.google.android.apps.mytracks.io.sendtogoogle.SendRequest,boolean)>
<com.google.android.apps.mytracks.maps.DynamicSpeedTrackPathDescriptor: void <init>(android.content.Context)>
<com.google.android.apps.mytracks.settings.MapSettingsActivity: void configSpeedPreference(android.preference.EditTextPreference,int,int)>
<com.google.android.apps.mytracks.util.PreferencesUtils: float getDefaultWeight(android.content.Context)>
<java.lang.Enum: int hashCode()>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpResponse receiveResponseHeader()>
<com.google.android.apps.mytracks.TrackController$1: void <init>(com.google.android.apps.mytracks.TrackController)>
<com.google.common.collect.AbstractMapBasedMultiset$1$1: java.lang.Object getElement()>
<com.google.android.apps.mytracks.services.AdaptiveLocationListenerPolicy: void <init>(long,long,int)>
<android.os.Handler: boolean hasMessages(int)>
<java.io.InputStream: void mark(int)>
<java.util.concurrent.locks.ReentrantLock: void unlock()>
<com.google.gdata.model.atompub.Edited: void <clinit>()>
<com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager$ConnectedThread: void run()>
<android.view.animation.Animation: void setDuration(long)>
<com.google.api.client.http.HttpTransport: com.google.api.client.http.HttpRequest buildRequest()>
<com.google.api.client.util.DateTime: void <init>(long)>
<android.app.Activity: void startActivities(android.content.Intent[])>
<com.google.android.apps.mytracks.io.file.TrackFileFormat: com.google.android.apps.mytracks.io.file.TrackFileFormat[] values()>
<com.google.api.client.http.javanet.NetHttpTransport: com.google.api.client.http.LowLevelHttpRequest buildRequest(java.lang.String,java.lang.String)>
<com.google.gdata.model.Schema$RootKey: com.google.gdata.model.Schema$RootKey access$100(com.google.gdata.model.AttributeKey)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: com.google.android.apps.analytics.GoogleAnalyticsTracker getInstance()>
<com.google.gson.stream.JsonReader: int getLineNumber()>
<java.util.ArrayList: int size()>
<com.google.api.client.json.gson.GsonParser$1: void <clinit>()>
<com.google.android.apps.mytracks.io.maps.SendMapsActivity: java.lang.Class getNextClass(com.google.android.apps.mytracks.io.sendtogoogle.SendRequest,boolean)>
<com.google.android.apps.mytracks.HelpActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.google.android.apps.mytracks.services.TrackRecordingServiceConnection: com.google.android.apps.mytracks.services.ITrackRecordingService getServiceIfBound()>
<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>
<com.google.api.client.util.escape.CharEscapers: java.lang.String escapeUri(java.lang.String)>
<android.app.Notification$Builder: android.app.Notification$Builder setOnlyAlertOnce(boolean)>
<com.google.gson.stream.JsonReader: void beginObject()>
<com.google.android.apps.mytracks.widgets.TrackWidgetProvider: void setItem(android.content.Context,android.widget.RemoteViews,int[],int,com.google.android.apps.mytracks.stats.TripStatistics,boolean,boolean,boolean,boolean)>
<com.google.android.apps.mytracks.content.TrackDataHub: long access$300(com.google.android.apps.mytracks.content.TrackDataHub)>
<com.google.android.apps.mytracks.util.CalorieUtils: void clearCalorie(com.google.android.apps.mytracks.content.MyTracksProviderUtils,com.google.android.apps.mytracks.content.Track)>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>
<com.google.android.apps.mytracks.io.file.importer.ImportActivity: void <clinit>()>
<android.view.View: int getScrollX()>
<android.content.Intent: android.os.Bundle getExtras()>
<com.google.api.services.fusiontables.model.Table: void <init>()>
<java.lang.NumberFormatException: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.util.FileUtils: java.lang.String sanitizeFileName(java.lang.String)>
<com.google.common.collect.EmptyImmutableList: void <init>()>
<com.google.api.client.util.ClassInfo: void <init>(java.lang.Class,boolean)>
<com.google.api.services.fusiontables.Fusiontables$Template: com.google.api.services.fusiontables.Fusiontables$Template$Insert insert(java.lang.String,com.google.api.services.fusiontables.model.Template)>
<com.google.gdata.util.parser.Sequence: void <init>(com.google.gdata.util.parser.Parser,com.google.gdata.util.parser.Parser)>
<com.google.android.apps.mytracks.TrackDetailActivity: com.google.android.apps.mytracks.services.TrackRecordingServiceConnection getTrackRecordingServiceConnection()>
<com.google.android.apps.mytracks.util.Api8Adapter: void configureSearchWidget(android.app.Activity,android.view.MenuItem,com.google.android.apps.mytracks.TrackController)>
<android.location.Location: boolean hasSpeed()>
<com.google.android.gms.internal.v$a$a: com.google.android.gms.internal.bc a(com.google.android.gms.internal.bc,int,int)>
<com.google.gdata.client.http.HttpGDataRequest$Factory: void setHeader(java.lang.String,java.lang.String)>
<java.util.AbstractCollection: java.lang.String toString()>
<com.google.android.apps.mytracks.util.CalorieUtils: com.google.android.apps.mytracks.content.Waypoint getNextStatisticsWaypoint(com.google.android.apps.mytracks.content.MyTracksProviderUtils,android.database.Cursor)>
<com.google.gdata.util.ErrorDomain$ErrorCode: java.lang.String getInternalReason()>
<com.google.android.apps.mytracks.DeleteActivity: void onCreate(android.os.Bundle)>
<com.google.android.apps.mytracks.settings.StatsSettingsActivity: void access$000(com.google.android.apps.mytracks.settings.StatsSettingsActivity,boolean)>
<com.google.android.apps.mytracks.fragments.ChartFragment: void zoomIn()>
<com.google.api.client.http.HttpHeaders: void fromHttpHeaders(com.google.api.client.http.HttpHeaders)>
<com.google.android.apps.mytracks.fragments.PlayMultipleDialogFragment$1: void <init>(com.google.android.apps.mytracks.fragments.PlayMultipleDialogFragment)>
<android.os.Handler: void removeMessages(int)>
<com.google.android.apps.mytracks.fragments.PlayMultipleDialogFragment: android.app.Dialog createDialog()>
<com.google.common.base.Preconditions: int checkElementIndex(int,int)>
<com.google.gdata.client.http.HttpGDataRequest: boolean isOAuthProxyErrorResponse()>
<com.google.android.apps.mytracks.content.Waypoint: void setType(com.google.android.apps.mytracks.content.Waypoint$WaypointType)>
<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder expandFor(int)>
<android.location.Location: void setBearing(float)>
<com.google.android.apps.analytics.Event: void setUserId(int)>
<com.google.android.apps.mytracks.TrackListActivity: void onConfirmSyncDone(boolean)>
<com.google.api.client.http.ByteArrayContent: boolean retrySupported()>
<com.google.android.gms.internal.cd$a: void <init>(com.google.android.gms.location.LocationListener)>
<com.google.android.apps.mytracks.services.tasks.PeriodicTaskExecutor: boolean isDistanceFrequency()>
<com.google.android.apps.mytracks.settings.SettingsActivity$6: boolean onPreferenceClick(android.preference.Preference)>
<com.google.android.gms.internal.cd: void <init>(android.content.Context,com.google.android.gms.internal.ch)>
<com.google.android.apps.mytracks.content.DataSourceManager$TracksTableObserver: void <init>(com.google.android.apps.mytracks.content.DataSourceManager)>
<com.google.android.apps.mytracks.MapOverlay: void <clinit>()>
<com.google.android.apps.mytracks.TrackEditActivity: void onStop()>
<com.google.android.apps.mytracks.fragments.MarkerDetailFragment: android.os.Handler access$300(com.google.android.apps.mytracks.fragments.MarkerDetailFragment)>
<com.google.gdata.util.VersionRegistry: com.google.gdata.util.VersionRegistry get()>
<android.app.Activity: void removeDialog(int)>
<com.google.protobuf.CodedInputStream: int pushLimit(int)>
<com.google.api.client.auth.oauth2.TokenRequest: com.google.api.client.auth.oauth2.TokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl)>
<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>
<com.google.android.apps.mytracks.TrackDetailActivity: void onActivityResult(int,int,android.content.Intent)>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpExecuteInterceptor getInterceptor()>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity: void onMapsPermissionSuccess()>
<com.google.android.apps.mytracks.maps.DynamicSpeedTrackPathDescriptor: int access$102(com.google.android.apps.mytracks.maps.DynamicSpeedTrackPathDescriptor,int)>
<com.google.android.apps.mytracks.io.file.exporter.SaveActivity: void onAsyncTaskCompleted(int,int,java.lang.String)>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAuthIOException: com.google.android.gms.auth.GoogleAuthException getCause()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void maybeScheduleNextDispatch()>
<com.google.android.apps.mytracks.io.file.importer.GpxFileTrackImporter: void <init>(android.content.Context,com.google.android.apps.mytracks.content.MyTracksProviderUtils)>
<com.google.android.apps.mytracks.settings.SettingsActivity$4: void <init>(com.google.android.apps.mytracks.settings.SettingsActivity,android.app.Dialog)>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment: void <init>()>
<com.google.gdata.wireformats.AltFormat$Builder: com.google.gdata.wireformats.AltFormat$Builder setSelectableByType(boolean)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeature: java.lang.String getAndroidId()>
<com.dsi.ant.exception.AntInterfaceException: void <init>()>
<com.google.api.client.googleapis.services.AbstractGoogleClient$Builder: java.lang.String getApplicationName()>
<android.widget.Spinner: void <init>(android.content.Context)>
<com.google.api.client.http.javanet.NetHttpResponse: java.lang.String getReasonPhrase()>
<com.google.api.client.http.apache.ApacheHttpTransport: com.google.api.client.http.LowLevelHttpRequest buildHeadRequest(java.lang.String)>
<com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager: void <clinit>()>
<android.app.Notification$Builder: android.app.Notification$Builder setAutoCancel(boolean)>
<com.google.api.client.json.gson.GsonParser: com.google.api.client.json.JsonFactory getFactory()>
<com.google.api.services.fusiontables.Fusiontables$Style: com.google.api.services.fusiontables.Fusiontables$Style$Insert insert(java.lang.String,com.google.api.services.fusiontables.model.StyleSetting)>
<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>
<com.google.android.gms.internal.q$a: void a(com.google.android.gms.internal.p$e)>
<com.google.android.apps.mytracks.content.Waypoint: void <init>()>
<java.lang.Double: java.lang.Double valueOf(java.lang.String)>
<com.google.gdata.wireformats.output.XmlGenerator: void <clinit>()>
<com.google.android.apps.mytracks.stats.TripStatistics: void <init>()>
<com.google.common.primitives.UnsignedLong: boolean equals(java.lang.Object)>
<com.google.android.apps.mytracks.fragments.FrequencyDialogFragment$1: void onClick(android.content.DialogInterface,int)>
<com.google.android.apps.mytracks.content.TrackDataHub: void notifyTracksTableUpdate(java.util.Set)>
<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet build()>
<com.google.common.collect.EmptyImmutableListMultimap: void <init>()>
<com.google.gdata.util.ServiceException: com.google.gdata.util.ServiceException addSibling(com.google.gdata.util.ServiceException)>
<com.google.android.apps.mytracks.TrackDetailActivity: void <init>()>
<com.google.android.apps.mytracks.services.TrackRecordingService$ServiceBinder: void <init>(com.google.android.apps.mytracks.services.TrackRecordingService)>
<com.google.gdata.wireformats.AltRegistry: void registerFormat(com.google.gdata.wireformats.AltFormat)>
<com.google.android.apps.mytracks.fragments.MarkerDetailFragment: java.lang.Runnable access$200(com.google.android.apps.mytracks.fragments.MarkerDetailFragment)>
<com.google.api.client.auth.oauth2.Credential: com.google.api.client.auth.oauth2.Credential setExpiresInSeconds(java.lang.Long)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: com.google.android.apps.mytracks.content.Sensor$SensorData getBatteryLevel()>
<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient: com.google.api.client.json.JsonObjectParser newObjectParser(com.google.api.client.json.JsonFactory,boolean)>
<android.support.v4.app.FragmentManagerImpl: void showFragment(android.support.v4.app.Fragment,int,int)>
<java.lang.String: void <init>(byte[])>
<com.google.api.client.util.escape.UnicodeEscaper: java.lang.String escapeSlow(java.lang.String,int)>
<com.google.gdata.util.ServiceException: java.lang.String nullsafe(java.lang.String)>
<java.lang.Character: boolean isLetterOrDigit(char)>
<java.io.InputStreamReader: void <init>(java.io.InputStream)>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<com.google.android.apps.mytracks.TrackListActivity$10: void <init>(com.google.android.apps.mytracks.TrackListActivity)>
<android.widget.Spinner: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
<android.location.Location: float bearingTo(android.location.Location)>
<com.google.android.apps.mytracks.io.sendtogoogle.SendRequest: android.accounts.Account getAccount()>
<com.google.android.apps.mytracks.io.file.TrackFileFormat: com.google.android.apps.mytracks.io.file.TrackFileFormat valueOf(java.lang.String)>
<android.support.v4.app.FragmentPagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)>
<android.content.Intent: boolean hasExtra(java.lang.String)>
<com.google.api.client.auth.oauth2.TokenRequest: com.google.api.client.auth.oauth2.TokenRequest setGrantType(java.lang.String)>
<android.text.SpannableStringInternal: void <init>()>
<android.os.Handler: boolean sendMessage(android.os.Message)>
<com.google.gdata.client.Service: java.lang.Object parseResponseData(com.google.gdata.data.ParseSource,com.google.gdata.wireformats.input.InputProperties,java.lang.Class)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: android.location.Location getLastValidTrackPoint(long)>
<com.google.android.apps.mytracks.fragments.ChartFragment$2: void <init>(com.google.android.apps.mytracks.fragments.ChartFragment)>
<java.lang.String: boolean contains(java.lang.CharSequence)>
<android.app.Notification$Builder: android.app.Notification$Builder setContent(android.widget.RemoteViews)>
<android.content.Intent: android.content.ComponentName getComponent()>
<com.google.gdata.data.ExtensionProfile: void addDeclarations(com.google.gdata.data.Kind$Adaptor)>
<com.google.android.apps.mytracks.fragments.MyTracksMapFragment: boolean access$102(com.google.android.apps.mytracks.fragments.MyTracksMapFragment,boolean)>
<com.google.android.apps.mytracks.settings.ChartSettingsActivity: void onResume()>
<com.google.android.gms.internal.bb$5: void <init>(com.google.android.gms.internal.bb,android.content.Context,int)>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment: android.widget.Spinner access$000(com.google.android.apps.mytracks.fragments.ExportDialogFragment)>
<com.google.gdata.model.transforms.atom.AtomVersionTransforms: void <clinit>()>
<com.google.android.apps.mytracks.io.file.TrackFileFormat: void <init>(java.lang.String,int,com.google.android.apps.mytracks.io.file.TrackFileFormat$1)>
<com.google.api.client.googleapis.media.MediaHttpUploader: com.google.api.client.googleapis.media.MediaHttpUploader setInitiationRequestMethod(java.lang.String)>
<com.google.android.apps.mytracks.io.sync.SyncUtils: com.google.api.services.drive.model.File insertDriveFile(com.google.api.services.drive.Drive,java.lang.String,java.lang.String,java.io.File,boolean)>
<com.google.gdata.client.http.HttpGDataRequest: void setEtag(java.lang.String)>
<com.google.android.apps.mytracks.TrackController: long getTotalTime()>
<com.google.api.client.util.LoggingByteArrayOutputStream: void close()>
<com.google.gdata.util.PreconditionFailedException: void <init>(java.net.HttpURLConnection)>
<android.app.Notification$BigPictureStyle: android.app.Notification$BigPictureStyle bigPicture(android.graphics.Bitmap)>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<com.google.android.apps.analytics.PersistentHitStore: void putCustomVariables(com.google.android.apps.analytics.Event,android.database.sqlite.SQLiteDatabase)>
<com.google.android.apps.mytracks.fragments.FrequencyDialogFragment$1: void <init>(com.google.android.apps.mytracks.fragments.FrequencyDialogFragment,int)>
<android.support.v4.util.SparseArrayCompat: int keyAt(int)>
<com.google.api.client.auth.oauth2.Credential: com.google.api.client.auth.oauth2.TokenResponse executeRefreshToken()>
<com.google.gson.stream.JsonReader: boolean nextBoolean()>
<com.google.android.apps.mytracks.util.ChartURLGenerator: java.lang.String getChartUrl(java.util.Vector,java.util.Vector,com.google.android.apps.mytracks.content.Track,android.content.Context)>
<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>
<android.support.v4.content.AsyncTaskLoader: void <init>(android.content.Context)>
<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>
<com.google.gdata.client.GoogleService: java.net.URL handleRedirectException(com.google.gdata.util.RedirectRequiredException)>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>
<com.google.common.collect.RegularImmutableList: java.lang.Object get(int)>
<com.google.gdata.client.Service: com.google.gdata.util.Version getVersion()>
<com.google.api.client.util.escape.PercentEscaper: java.lang.String escape(java.lang.String)>
<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: java.lang.Object newEdgeEffect(android.content.Context)>
<android.os.Handler: void removeMessages(int,java.lang.Object)>
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder detectAll()>
<com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>
<android.os.Binder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<com.google.gdata.client.http.JdkHttpUrlConnectionSource: java.net.HttpURLConnection openConnection(java.net.URL)>
<com.google.gdata.client.Service$ClientOutputProperties: com.google.gdata.util.ContentType getContentType()>
<android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich: android.app.Notification build(android.support.v4.app.NotificationCompat$Builder)>
<java.util.HashSet: void <init>(java.util.Collection)>
<android.widget.Spinner: void onMeasure(int,int)>
<com.google.api.client.http.HttpTransport: com.google.api.client.http.HttpRequestFactory createRequestFactory()>
<com.google.android.apps.mytracks.services.sensors.SensorManager: void stopSensor()>
<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>
<com.google.android.apps.mytracks.content.SearchEngine$ScoredResult: void <init>(com.google.android.apps.mytracks.content.Track,double)>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean)>
<java.io.Writer: void <init>()>
<com.google.android.apps.mytracks.content.MyTracksProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
<com.google.api.services.fusiontables.Fusiontables$Table: void <init>(com.google.api.services.fusiontables.Fusiontables)>
<com.google.android.apps.mytracks.services.sensors.BluetoothSensorManager$2: void <init>(com.google.android.apps.mytracks.services.sensors.BluetoothSensorManager,android.os.Looper)>
<com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getToken(android.content.Context,java.lang.String,java.lang.String,android.os.Bundle)>
<com.google.android.apps.mytracks.TrackListActivity: boolean access$102(com.google.android.apps.mytracks.TrackListActivity,boolean)>
<com.dsi.ant.AntInterface: void releaseService()>
<com.google.android.apps.mytracks.util.DialogUtils: android.app.Dialog createConfirmationDialog(android.content.Context,int,java.lang.String,android.content.DialogInterface$OnClickListener)>
<com.google.android.gsf.Gservices: boolean getBoolean(android.content.ContentResolver,java.lang.String,boolean)>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataSerializer: void serializeLink(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.lang.String)>
<com.google.common.collect.SingletonImmutableMap: void <init>(java.util.Map$Entry)>
<com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager: android.os.Handler access$600(com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager)>
<com.google.android.apps.mytracks.util.Api11Adapter: void setTitleAndSubtitle(android.app.Activity,java.lang.String,java.lang.String)>
<android.location.Location: java.lang.String convert(double,int)>
<android.speech.tts.TextToSpeech: void shutdown()>
<com.google.android.apps.mytracks.util.PreferencesUtils: int getInt(android.content.Context,int,int)>
<com.google.android.gms.auth.GoogleAuthUtil: java.lang.String getToken(android.content.Context,java.lang.String,java.lang.String)>
<com.google.api.services.drive.Drive: void <init>(com.google.api.client.http.HttpTransport,com.google.api.client.http.HttpRequestInitializer,java.lang.String,java.lang.String,com.google.api.client.json.JsonObjectParser,com.google.api.client.googleapis.services.GoogleClientRequestInitializer,java.lang.String,boolean)>
<com.google.android.apps.mytracks.content.Track: long getModifiedTime()>
<java.lang.String: java.lang.String toString()>
<com.google.android.apps.mytracks.stats.TripStatistics: void setMaxElevation(double)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void <init>()>
<com.google.gdata.client.Service: com.google.gdata.wireformats.AltRegistry getAltRegistry()>
<com.google.common.collect.AbstractMapBasedMultiset$1: void <init>(com.google.common.collect.AbstractMapBasedMultiset,java.util.Iterator)>
<com.google.android.apps.mytracks.services.TrackRecordingService: android.os.IBinder onBind(android.content.Intent)>
<org.apache.http.client.methods.HttpDelete: void <init>(java.lang.String)>
<java.lang.Long: java.lang.Long valueOf(long)>
<com.google.android.apps.mytracks.services.sensors.ant.BikeCadenceChannelConfiguration: int getDeviceIdKey()>
<com.google.android.apps.mytracks.util.Api11Adapter: void invalidMenu(android.app.Activity)>
<com.google.android.apps.mytracks.widgets.TrackWidgetConfigActivity$1: void <init>(com.google.android.apps.mytracks.widgets.TrackWidgetConfigActivity)>
<com.google.android.apps.mytracks.io.gdata.AndroidGDataClient: java.io.InputStream getUngzippedContent(org.apache.http.HttpEntity)>
<com.google.android.apps.mytracks.content.Waypoint: void setId(long)>
<com.google.api.client.json.gson.GsonFactory: void <init>()>
<com.google.gson.stream.JsonReader: java.lang.String nextString(char)>
<com.google.android.apps.mytracks.TrackListActivity: boolean access$802(com.google.android.apps.mytracks.TrackListActivity,boolean)>
<java.lang.Math: long max(long,long)>
<com.google.android.apps.mytracks.util.TrackRecordingServiceConnectionUtils: void updateCalorie(com.google.android.apps.mytracks.services.TrackRecordingServiceConnection)>
<com.google.api.client.util.Data: java.util.Collection newCollectionInstance(java.lang.reflect.Type)>
<com.google.android.apps.mytracks.services.MyTracksLocationManager$1: void <init>(com.google.android.apps.mytracks.services.MyTracksLocationManager)>
<com.google.android.apps.mytracks.io.file.TrackFileFormat$5: void <init>()>
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: void <init>()>
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>
<com.google.android.apps.mytracks.fragments.FrequencyDialogFragment: com.google.android.apps.mytracks.fragments.FrequencyDialogFragment newInstance(int,int,int)>
<java.lang.ThreadLocal: void remove()>
<com.google.android.gms.internal.z: com.google.android.gms.internal.v f(android.content.Context)>
<com.google.wireless.gdata.GDataException: void <init>(java.lang.String,java.lang.Throwable)>
<com.google.common.collect.AbstractMapBasedMultiset: int add(java.lang.Object,int)>
<org.apache.http.client.methods.HttpRequestBase: void setURI(java.net.URI)>
<com.google.android.apps.mytracks.services.tasks.SplitPeriodicTask: void shutdown()>
<java.math.BigInteger: void <init>(java.lang.String,int)>
<com.google.android.apps.mytracks.content.TrackDataHub: void access$500(com.google.android.apps.mytracks.content.TrackDataHub,com.google.android.apps.mytracks.content.TrackDataListener)>
<android.app.Activity: void setIntent(android.content.Intent)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl$1: long getLocationId()>
<com.google.android.apps.mytracks.services.tasks.PeriodicTaskExecutor: boolean isTimeFrequency()>
<com.google.android.apps.mytracks.settings.SensorSettingsActivity$1: boolean onPreferenceClick(android.preference.Preference)>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesAsyncTask: void createNewPoint(com.google.api.services.fusiontables.Fusiontables,java.lang.String,java.lang.String,java.lang.String,android.location.Location,java.lang.String)>
<java.util.Collections: void <clinit>()>
<com.google.api.client.http.apache.ApacheHttpResponse: java.lang.String getStatusLine()>
<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>
<com.google.common.base.Joiner$1: com.google.common.base.Joiner useForNull(java.lang.String)>
<com.google.android.apps.mytracks.io.file.exporter.FileTrackExporter: boolean writeTrack(java.io.OutputStream)>
<android.support.v4.app.Fragment: void performStart()>
<com.google.common.collect.ImmutableMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>
<java.io.File: java.lang.String getAbsolutePath()>
<com.google.android.apps.mytracks.content.MyTracksProvider: com.google.android.apps.mytracks.content.MyTracksProvider$UrlType getUrlType(android.net.Uri)>
<android.app.Notification$Builder: android.app.Notification$Builder setDefaults(int)>
<android.support.v4.app.ActivityCompatHoneycomb: void invalidateOptionsMenu(android.app.Activity)>
<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap copyOf(java.util.Map)>
<com.google.gdata.wireformats.AltFormat$Builder: com.google.common.collect.ImmutableSet$Builder access$800(com.google.gdata.wireformats.AltFormat$Builder)>
<com.google.android.gms.internal.dz: java.lang.String bu()>
<com.google.android.apps.analytics.HitBuilder: java.lang.String constructItemRequestPath(com.google.android.apps.analytics.Event,com.google.android.apps.analytics.Referrer)>
<com.google.gdata.util.httputil.FormUrlDecoder$Result: void <init>(java.lang.String)>
<android.view.accessibility.AccessibilityEvent: void <init>()>
<java.util.ArrayList: boolean isEmpty()>
<com.google.api.client.json.gson.GsonGenerator: void writeBoolean(boolean)>
<com.google.gdata.util.common.base.CharEscapers: com.google.gdata.util.common.base.Escaper uriEscaper()>
<com.google.gdata.model.MetadataContext: void <init>(com.google.gdata.wireformats.AltFormat,java.lang.String,com.google.gdata.util.Version)>
<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet$Builder builder()>
<com.google.android.apps.mytracks.TrackListActivity: void <clinit>()>
<com.google.gdata.model.MetadataContext: com.google.gdata.model.MetadataContext forVersion(com.google.gdata.util.Version)>
<android.support.v4.app.FragmentManagerImpl: void dispatchReallyStop()>
<com.google.api.client.json.gson.GsonParser: long getLongValue()>
<android.os.Handler: void <init>()>
<com.google.android.apps.mytracks.util.StringUtils: java.lang.String formatDecimal(double,int)>
<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>
<com.google.android.apps.mytracks.stats.TripStatistics: void setMaxGrade(double)>
<com.google.api.client.util.ClassInfo: boolean getIgnoreCase()>
<android.support.v4.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>
<android.animation.ValueAnimator: long getFrameDelay()>
<com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>
<com.google.android.apps.mytracks.util.GoogleFeedbackUtils: void bindFeedback(android.content.Context)>
<com.google.api.services.drive.Drive$Files: com.google.api.services.drive.Drive$Files$Get get(java.lang.String)>
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int)>
<com.google.gdata.data.ExtensionProfile: void declareArbitraryXmlExtension(java.lang.Class)>
<com.google.api.services.drive.model.File: com.google.api.services.drive.model.File$Labels getLabels()>
<com.google.android.apps.mytracks.services.MyTracksLocationManager: float access$502(com.google.android.apps.mytracks.services.MyTracksLocationManager,float)>
<com.google.common.collect.ImmutableCollection$EmptyImmutableCollection: void <init>(com.google.common.collect.ImmutableCollection$1)>
<com.google.gdata.data.BaseFeed$FeedState: void <init>()>
<com.google.wireless.gdata.data.Entry: void setPublicationDate(java.lang.String)>
<com.google.gdata.util.InvalidEntryException: void initResponseCode()>
<android.support.v4.content.AsyncTaskLoader: boolean cancelLoad()>
<com.google.gdata.util.common.base.StringUtil: java.lang.String megastrip(java.lang.String,boolean,boolean,java.lang.String)>
<java.io.ByteArrayInputStream: long skip(long)>
<com.google.android.apps.mytracks.util.FileUtils: void updateMediaScanner(android.content.Context,android.net.Uri)>
<android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment,int,int)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: boolean isInitialized()>
<com.google.android.apps.mytracks.content.Waypoint: void setStartId(long)>
<com.google.api.client.http.HttpRequest: boolean getThrowExceptionOnExecuteError()>
<com.google.gdata.util.common.base.CharMatcher$11: boolean matches(char)>
<android.support.v4.app.Fragment: void onDestroy()>
<com.google.android.apps.mytracks.TrackListActivity: void updateMenuItems(boolean,boolean)>
<com.google.common.collect.SingletonImmutableSet: java.util.Iterator iterator()>
<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<com.google.android.apps.mytracks.MarkerDetailActivity$MarkerDetailPagerAdapter: void <init>(com.google.android.apps.mytracks.MarkerDetailActivity,android.support.v4.app.FragmentManager)>
<com.google.api.client.http.HttpRequest: com.google.api.client.util.ObjectParser getParser()>
<com.google.android.apps.mytracks.TabsAdapter: void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle)>
<com.google.android.apps.mytracks.settings.RecordingSettingsActivity: void <init>()>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesAsyncTask: void createNewLineString(com.google.api.services.fusiontables.Fusiontables,java.lang.String,com.google.android.apps.mytracks.content.Track)>
<com.google.gdata.util.ContentType: void <clinit>()>
<com.google.android.gms.internal.o: void onClick(android.content.DialogInterface,int)>
<android.text.TextUtils: void <clinit>()>
<com.google.android.apps.mytracks.TrackListActivity: void onPlayMultipleDone(long[])>
<com.google.api.services.fusiontables.Fusiontables$Query: void <init>(com.google.api.services.fusiontables.Fusiontables)>
<android.content.IntentFilter: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.TrackEditActivity: void access$100(com.google.android.apps.mytracks.TrackEditActivity,java.lang.String)>
<android.support.v4.widget.CursorAdapter$ChangeObserver: void <init>(android.support.v4.widget.CursorAdapter)>
<com.google.android.apps.mytracks.stats.TripStatistics: double getAverageMovingSpeed()>
<android.app.Notification$Builder: android.app.Notification$Builder setUsesChronometer(boolean)>
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: void <init>()>
<com.google.android.apps.mytracks.AbstractMyTracksActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<android.support.v4.app.LoaderManagerImpl: void doStart()>
<android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
<com.google.gdata.data.Kind$AdaptableHelper: void <init>()>
<com.google.android.apps.mytracks.MarkerEditActivity$1: void <init>(com.google.android.apps.mytracks.MarkerEditActivity)>
<com.google.android.apps.mytracks.io.sendtogoogle.AbstractSendAsyncTask: java.lang.Boolean doInBackground(java.lang.Void[])>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesUtils: java.lang.String escapeSqlString(java.lang.String)>
<android.text.format.DateUtils: void <clinit>()>
<android.net.Uri$Builder: android.net.Uri$Builder path(java.lang.String)>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataSerializer: void serializeId(org.xmlpull.v1.XmlSerializer,java.lang.String)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: boolean hasHeartRate()>
<com.google.gdata.client.GoogleService: com.google.gdata.data.IFeed getFeed(java.net.URL,java.lang.Class,java.lang.String)>
<com.google.gdata.client.Service$ClientOutputProperties: void <init>(com.google.gdata.client.Service,com.google.gdata.client.Service$GDataRequest,java.lang.Object)>
<com.google.android.apps.mytracks.io.file.TrackFileFormat: java.lang.String getExtension()>
<com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager: com.google.android.apps.mytracks.content.Sensor$SensorState getSensorState()>
<com.google.protobuf.CodedInputStream: int readRawVarint32()>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void writeEndTracks()>
<com.google.android.apps.mytracks.io.gdata.maps.MapsClient: void <init>(com.google.wireless.gdata.client.GDataClient,com.google.wireless.gdata.client.GDataParserFactory)>
<com.google.gdata.client.GoogleService: com.google.gdata.client.Service$GDataRequest createRequest(com.google.gdata.client.Service$GDataRequest$RequestType,java.net.URL,com.google.gdata.util.ContentType)>
<com.google.android.apps.mytracks.TrackController: boolean access$200(com.google.android.apps.mytracks.TrackController)>
<android.view.View: void postOnAnimation(java.lang.Runnable)>
<com.google.android.apps.mytracks.SearchListActivity: long access$102(com.google.android.apps.mytracks.SearchListActivity,long)>
<android.view.ViewGroup: int getChildCount()>
<com.google.android.apps.mytracks.stats.ExtremityMonitor: boolean hasData()>
<android.support.v4.app.LoaderManagerImpl: void doReportNextStart()>
<java.io.PrintWriter: void println(boolean)>
<java.security.SecureRandom: void <init>()>
<android.app.Activity: void registerForContextMenu(android.view.View)>
<java.util.Calendar: long getTimeInMillis()>
<android.app.Notification$BigTextStyle: void <init>(android.app.Notification$Builder)>
<com.google.android.apps.mytracks.io.sendtogoogle.SendToGoogleUtils: void cancelNotification(android.content.Context,int)>
<com.google.android.apps.mytracks.settings.SensorSettingsActivity$2: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<com.google.api.client.util.DateTime: boolean equals(java.lang.Object)>
<android.support.v4.app.NotificationCompatJellybean: void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean)>
<com.google.android.apps.mytracks.TrackDetailActivity: void onSaveInstanceState(android.os.Bundle)>
<android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManager getSupportLoaderManager()>
<android.support.v4.app.LoaderManagerImpl: void <clinit>()>
<com.google.android.apps.mytracks.content.Sensor$SensorData: void initFields()>
<com.google.android.apps.mytracks.settings.MapSettingsActivity: void onCreate(android.os.Bundle)>
<com.google.gdata.data.ExtensionProfile: void declareAdditionalNamespace(com.google.gdata.util.common.xml.XmlNamespace)>
<com.google.android.gms.internal.ba: boolean t(int)>
<com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState: void <clinit>()>
<com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator emptyIterator()>
<com.google.android.apps.mytracks.TrackDetailActivity$2: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<com.google.android.apps.analytics.Event: void setCustomVariableBuffer(com.google.android.apps.analytics.CustomVariableBuffer)>
<com.google.android.apps.mytracks.services.sensors.ant.HeartRateChannelConfiguration: int getDeviceIdKey()>
<com.google.android.apps.mytracks.io.file.exporter.KmzTrackExporter: void readFromScaledBitmap(java.util.zip.ZipOutputStream,android.net.Uri,int)>
<com.google.android.gms.internal.q: boolean a(java.lang.String,com.google.android.gms.internal.p$e)>
<java.util.ArrayList: void add(int,java.lang.Object)>
<com.google.android.gms.common.GooglePlayServicesUtil: int isGooglePlayServicesAvailable(android.content.Context)>
<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>
<com.google.api.client.util.GenericData$Flags: void <clinit>()>
<com.google.android.gms.internal.q$a: com.google.android.gms.internal.q$a$a r()>
<com.google.android.apps.mytracks.io.file.importer.ImportActivity$2: void onClick(android.content.DialogInterface,int)>
<com.google.android.apps.mytracks.util.FileUtils: java.io.File getPhotoDir(long)>
<com.google.android.apps.mytracks.util.DialogUtils: void setDialogTitleDivider(android.content.Context,android.app.Dialog)>
<android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
<android.app.Notification$Builder: android.app.Notification$Builder setVibrate(long[])>
<com.google.android.apps.mytracks.util.LocationUtils: void <clinit>()>
<com.google.android.gms.internal.h: android.os.IBinder d()>
<com.google.android.apps.mytracks.services.sensors.BluetoothSensorManager: com.google.android.apps.mytracks.content.Sensor$SensorState getSensorState()>
<com.google.api.client.http.UriTemplate$CompositeOutput: com.google.api.client.http.UriTemplate$CompositeOutput[] values()>
<com.google.android.apps.mytracks.util.Api11Adapter$1: int[] getCheckedPositions(android.widget.ListView)>
<com.google.api.client.http.ByteArrayContent: void <init>(java.lang.String,byte[])>
<com.google.protobuf.WireFormat: int makeTag(int,int)>
<android.os.Bundle: void <clinit>()>
<android.support.v4.app.FragmentManagerImpl: void dispatchDestroy()>
<com.google.gdata.util.common.base.CharMatcher: com.google.gdata.util.common.base.CharMatcher is(char)>
<java.lang.RuntimeException: void <init>(java.lang.Throwable)>
<com.google.android.apps.mytracks.stats.TripStatistics: void setMinElevation(double)>
<com.google.gdata.client.spreadsheet.SpreadsheetService: java.lang.String getServiceVersion()>
<com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager: void <init>(android.bluetooth.BluetoothAdapter,android.os.Handler,com.google.android.apps.mytracks.services.sensors.MessageParser)>
<com.google.android.apps.mytracks.fragments.ChooseAccountDialogFragment$1: void <init>(com.google.android.apps.mytracks.fragments.ChooseAccountDialogFragment)>
<com.google.api.client.googleapis.media.MediaHttpUploader$UploadState: void <init>(java.lang.String,int)>
<com.google.api.client.http.GenericUrl: java.lang.String toString()>
<com.google.android.apps.mytracks.io.file.TrackFileFormat$3: void <init>(java.lang.String,int)>
<java.lang.Short: void <init>(short)>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity$1: void <init>(com.google.android.apps.mytracks.AbstractSendToGoogleActivity)>
<com.google.api.client.json.gson.GsonFactory: com.google.api.client.json.JsonParser createJsonParser(java.io.Reader)>
<com.google.gdata.wireformats.input.CharacterParser: void <init>(com.google.gdata.wireformats.AltFormat,java.lang.Class)>
<android.widget.Spinner: boolean performClick()>
<android.support.v4.content.ModernAsyncTask$Status: void <init>(java.lang.String,int)>
<com.google.api.client.http.json.JsonHttpContent: java.lang.Object getData()>
<com.google.gson.stream.StringPool: java.lang.String get(char[],int,int)>
<com.google.gson.stream.JsonReader: java.lang.String nextLiteral(boolean)>
<android.support.v4.view.ViewPager: void <clinit>()>
<com.google.android.apps.mytracks.io.file.TrackFileFormat$4: void <init>(java.lang.String,int)>
<java.math.BigDecimal: int hashCode()>
<com.google.android.gms.auth.GoogleAuthUtil: void invalidateToken(android.content.Context,java.lang.String)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.android.apps.mytracks.services.sensors.ant.AntSensorManager$ChannelStates: void <clinit>()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$RequesterCallbacks: void pipelineModeChanged(boolean)>
<com.google.android.apps.mytracks.services.TrackRecordingService$ServiceBinder: void access$1800(com.google.android.apps.mytracks.services.TrackRecordingService$ServiceBinder)>
<android.app.Activity: void <clinit>()>
<com.google.android.apps.mytracks.settings.SensorSettingsActivity: void updateAntSensor(int,int,boolean)>
<java.lang.Thread: void <init>(java.lang.Runnable)>
<android.app.Notification$InboxStyle: void <init>(android.app.Notification$Builder)>
<com.google.android.gms.internal.p: void connect()>
<com.google.gdata.wireformats.AltFormat$Builder: void <init>(com.google.gdata.wireformats.AltFormat$1)>
<com.google.android.apps.mytracks.MarkerListActivity: long access$202(com.google.android.apps.mytracks.MarkerListActivity,long)>
<com.google.common.collect.RegularImmutableMap$NonTerminalEntry: void <init>(java.lang.Object,java.lang.Object,com.google.common.collect.RegularImmutableMap$LinkedEntry)>
<com.google.android.gms.internal.dz: int d(int,int)>
<java.lang.String: boolean startsWith(java.lang.String)>
<java.lang.Long: void <init>(long)>
<java.lang.StringBuffer: void <init>()>
<com.google.common.collect.ImmutableCollection$Builder: void <init>()>
<com.google.android.apps.mytracks.io.file.importer.KmlFileTrackImporter: void <init>(android.content.Context,long,com.google.android.apps.mytracks.content.MyTracksProviderUtils)>
<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>
<android.net.TrafficStats: long getUidTxBytes(int)>
<android.support.v4.view.ViewPager$1: void <init>()>
<com.google.gdata.data.AbstractExtension: void disableStrictValidation()>
<com.google.android.apps.mytracks.stats.DoubleBuffer: void <init>(int)>
<com.google.api.client.http.javanet.NetHttpRequest: void setContent(com.google.api.client.http.HttpContent)>
<com.google.api.client.util.ArrayValueMap: void put(java.lang.reflect.Field,java.lang.Class,java.lang.Object)>
<com.google.common.collect.EmptyImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>
<java.lang.String: boolean endsWith(java.lang.String)>
<com.google.gdata.util.common.base.PercentEscaper: boolean[] createSafeOctets(java.lang.String)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: com.google.android.apps.mytracks.content.Track createTrack(android.database.Cursor)>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesAsyncTask: boolean setPermission(com.google.android.apps.mytracks.content.Track,java.lang.String)>
<com.google.android.apps.mytracks.content.SearchEngine: double getTitleBoost(com.google.android.apps.mytracks.content.SearchEngine$SearchQuery,java.lang.String,java.lang.String,java.lang.String)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask access$402(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask)>
<com.google.gdata.util.parser.Chset: void <init>(java.lang.String)>
<android.provider.SearchRecentSuggestions: void saveRecentQuery(java.lang.String,java.lang.String)>
<android.support.v4.app.Fragment: void performPause()>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity: java.lang.String access$400()>
<com.google.android.apps.analytics.PersistentHitStore: void startNewVisit()>
<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>
<com.google.android.apps.mytracks.util.ChartURLGenerator: double getNormalizedDistance(double,com.google.android.apps.mytracks.content.Track)>
<com.google.api.client.json.JsonParser: void parseArray(java.lang.reflect.Field,java.util.Collection,java.lang.reflect.Type,java.util.ArrayList,com.google.api.client.json.CustomizeJsonParser)>
<com.google.gdata.util.ServiceException: void setInternalReason(java.lang.String)>
<com.google.android.apps.mytracks.TrackController: boolean access$000(com.google.android.apps.mytracks.TrackController)>
<com.google.android.apps.mytracks.content.MyTracksProvider$UrlType: com.google.android.apps.mytracks.content.MyTracksProvider$UrlType[] values()>
<com.google.android.apps.mytracks.BootReceiver: void onReceive(android.content.Context,android.content.Intent)>
<org.apache.http.params.HttpProtocolParams: void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion)>
<java.lang.Error: void <init>()>
<android.view.animation.AlphaAnimation: void <init>(float,float)>
<android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.google.android.common.http.GoogleHttpClient: org.apache.http.impl.client.RequestWrapper wrapRequest(org.apache.http.client.methods.HttpUriRequest)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeature: int getLineWidth()>
<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap fromEntryList(java.util.List)>
<com.google.gdata.model.ElementCreatorImpl: com.google.gdata.model.ElementCreatorImpl setName(com.google.gdata.model.QName)>
<com.google.common.collect.LinkedListMultimap: boolean put(java.lang.Object,java.lang.Object)>
<com.google.android.apps.mytracks.fragments.ChooseActivityDialogFragment: void onCancel(android.content.DialogInterface)>
<com.google.android.apps.mytracks.content.TrackDataHub: int access$1402(com.google.android.apps.mytracks.content.TrackDataHub,int)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeatureMetadata: int getLineWidth()>
<com.google.android.apps.mytracks.services.TrackRecordingService: boolean isRecording()>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment: void setExternalStorageOption(android.widget.RadioButton,com.google.android.apps.mytracks.io.file.TrackFileFormat)>
<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>
<com.google.gdata.client.http.HttpGDataRequest: void <init>(com.google.gdata.client.Service$GDataRequest$RequestType,java.net.URL,com.google.gdata.util.ContentType,com.google.gdata.client.http.HttpAuthToken,java.util.Map,java.util.Map,com.google.gdata.client.http.HttpUrlConnectionSource)>
<com.google.android.apps.mytracks.SensorStateActivity: com.google.android.apps.mytracks.services.TrackRecordingServiceConnection access$000(com.google.android.apps.mytracks.SensorStateActivity)>
<com.google.android.apps.mytracks.io.sync.SyncService: android.os.IBinder onBind(android.content.Intent)>
<org.apache.http.message.BasicHttpEntityEnclosingRequest: void setEntity(org.apache.http.HttpEntity)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeature: void setDescription(java.lang.String)>
<java.util.concurrent.TimeUnit: void <clinit>()>
<com.google.gdata.data.ExtensionProfile: void declareArbitraryXmlExtension(java.lang.Class,boolean)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<com.google.android.apps.mytracks.fragments.ConfirmDeleteDialogFragment: android.app.Dialog createDialog()>
<com.google.api.services.fusiontables.Fusiontables$Template: void <init>(com.google.api.services.fusiontables.Fusiontables)>
<com.google.gdata.util.common.base.UnicodeEscaper: java.lang.String escapeSlow(java.lang.String,int)>
<com.google.common.collect.RegularImmutableMap$EntrySet: com.google.common.collect.UnmodifiableIterator iterator()>
<com.google.wireless.gdata.data.Entry: java.lang.String getAuthor()>
<com.google.android.apps.mytracks.MarkerDetailActivity$1: void <init>(com.google.android.apps.mytracks.MarkerDetailActivity)>
<java.lang.Character: void <init>(char)>
<java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>
<android.support.v4.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,int)>
<org.apache.http.HttpVersion: void <clinit>()>
<android.app.Activity: boolean requestWindowFeature(int)>
<com.google.gdata.model.MetadataRegistry: com.google.gdata.model.AttributeCreator build(com.google.gdata.model.ElementKey,com.google.gdata.model.AttributeKey,com.google.gdata.model.MetadataContext)>
<com.google.android.apps.mytracks.util.Api11Adapter$2: void onFocusChange(android.view.View,boolean)>
<java.lang.InterruptedException: void <init>()>
<com.google.gdata.util.common.base.CharEscaper$2: void <init>()>
<com.google.api.client.util.GenericData: java.lang.Object put(java.lang.String,java.lang.Object)>
<com.google.android.apps.mytracks.widgets.TrackWidgetProvider: void updateAverageMovingSpeed(android.content.Context,android.widget.RemoteViews,int[],com.google.android.apps.mytracks.stats.TripStatistics,boolean,boolean)>
<com.google.gdata.util.common.base.CharMatcher$LookupTable: void <init>()>
<com.google.gdata.data.spreadsheet.Namespaces: void <clinit>()>
<com.google.android.apps.mytracks.io.file.importer.KmlFileTrackImporter: long importFile(java.io.InputStream)>
<com.google.android.apps.mytracks.fragments.MyTracksMapFragment: com.google.android.gms.location.LocationListener access$200(com.google.android.apps.mytracks.fragments.MyTracksMapFragment)>
<com.google.android.apps.mytracks.settings.AbstractSettingsActivity: void configureListPreference(android.preference.ListPreference,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,android.preference.Preference$OnPreferenceChangeListener)>
<com.google.android.apps.mytracks.io.sendtogoogle.UploadResultActivity$2: void <init>(com.google.android.apps.mytracks.io.sendtogoogle.UploadResultActivity)>
<java.lang.Short: java.lang.Short valueOf(short)>
<com.google.common.collect.EmptyImmutableList: void <clinit>()>
<com.google.gdata.model.MetadataRegistry: boolean isRegistered(com.google.gdata.model.ElementKey)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int)>
<android.os.Handler: void removeCallbacks(java.lang.Runnable)>
<com.google.common.collect.ObjectArrays: java.lang.Object[] arraysCopyOf(java.lang.Object[],int)>
<com.google.android.apps.mytracks.MarkerEditActivity: com.google.android.apps.mytracks.content.Waypoint access$300(com.google.android.apps.mytracks.MarkerEditActivity)>
<com.google.android.apps.mytracks.io.file.importer.ImportActivity$4: void onShow(android.content.DialogInterface)>
<android.support.v4.view.ViewPager$2: void <init>()>
<com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager: void access$200(com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager,com.google.android.apps.mytracks.content.Sensor$SensorState)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<com.google.android.apps.mytracks.io.spreadsheets.SendSpreadsheetsActivity: void <init>()>
<com.google.android.apps.mytracks.stats.TripStatistics: int getTop()>
<java.util.EnumSet: java.util.EnumSet copyOf(java.util.EnumSet)>
<com.google.common.collect.ImmutableSet$ArrayImmutableSet: com.google.common.collect.UnmodifiableIterator iterator()>
<com.google.gdata.wireformats.WireFormat: void <init>(java.lang.String)>
<java.lang.String: int indexOf(java.lang.String,int)>
<com.google.android.apps.mytracks.TrackListActivity: long access$000(com.google.android.apps.mytracks.TrackListActivity)>
<com.google.api.client.http.HttpMethod: void <init>(java.lang.String,int)>
<android.app.Notification$Style: void <init>()>
<com.dsi.ant.exception.AntServiceNotConnectedException: void <init>(java.lang.String)>
<com.google.gdata.client.GoogleService$NotVerifiedException: void <init>(java.lang.String)>
<com.google.android.apps.analytics.Event: void <init>(long,java.lang.String,int,int,int,int,int,java.lang.String,java.lang.String,java.lang.String,int,int,int)>
<com.google.api.services.fusiontables.FusiontablesRequest: com.google.api.services.fusiontables.Fusiontables getAbstractGoogleClient()>
<java.util.Arrays: void sort(char[])>
<java.util.AbstractCollection: boolean addAll(java.util.Collection)>
<com.google.api.client.http.ByteCountingOutputStream: void <init>()>
<com.google.android.apps.mytracks.services.TrackRecordingService: android.content.Context access$000(com.google.android.apps.mytracks.services.TrackRecordingService)>
<android.app.Activity: void startActivityForResult(android.content.Intent,int)>
<com.google.gdata.util.common.base.CharMatcher$4: void <init>()>
<com.google.gdata.data.spreadsheet.CellFeed: void declareExtensions(com.google.gdata.data.ExtensionProfile)>
<com.google.common.primitives.UnsignedLongs: long divide(long,long)>
<com.google.api.client.http.apache.ApacheHttpTransport: com.google.api.client.http.apache.ApacheHttpRequest buildPostRequest(java.lang.String)>
<com.google.android.apps.mytracks.settings.SensorSettingsActivity: void access$000(com.google.android.apps.mytracks.settings.SensorSettingsActivity,java.lang.String)>
<com.google.api.client.http.apache.ApacheHttpRequest: void <init>(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpRequestBase)>
<com.google.android.gms.internal.dz: android.widget.LinearLayout$LayoutParams bj()>
<com.google.api.client.util.ArrayMap: void setDataCapacity(int)>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataParser: com.google.wireless.gdata.data.Entry createEntry()>
<android.support.v4.view.PagerAdapter: float getPageWidth(int)>
<com.google.android.apps.mytracks.content.Waypoint: long getTrackId()>
<com.dsi.ant.exception.AntRemoteException: void <init>(java.lang.String,android.os.RemoteException)>
<com.google.gdata.util.common.base.CharEscaperBuilder$CharArrayDecorator: void <init>(char[][])>
<android.support.v4.app.NoSaveStateFrameLayout: void <init>(android.content.Context)>
<com.google.android.apps.mytracks.fragments.MarkerDetailFragment$1$1: void <init>(com.google.android.apps.mytracks.fragments.MarkerDetailFragment$1)>
<com.google.api.client.http.LogContent: void <init>(com.google.api.client.http.HttpContent,java.lang.String,java.lang.String,long,int)>
<com.google.android.apps.mytracks.TrackController: void <init>(android.app.Activity,com.google.android.apps.mytracks.services.TrackRecordingServiceConnection,boolean,android.view.View$OnClickListener,android.view.View$OnClickListener)>
<com.google.android.apps.mytracks.settings.MapSettingsActivity$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<android.view.View: boolean postDelayed(java.lang.Runnable,long)>
<com.google.gdata.client.http.HttpGDataRequest: void setConnectTimeout(int)>
<com.google.android.apps.mytracks.SearchListActivity: void <init>()>
<java.util.zip.ZipInputStream: void close()>
<com.google.gdata.util.httputil.FormUrlDecoder$ValueAction: void <init>()>
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl: void <init>()>
<com.google.android.apps.mytracks.services.sensors.ZephyrMessageParser: void <clinit>()>
<com.google.android.apps.mytracks.stats.TripStatistics: void <init>(com.google.android.apps.mytracks.stats.TripStatistics)>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesAsyncTask: void closeConnection()>
<com.google.wireless.gdata.data.Entry: java.lang.String getPublicationDate()>
<com.google.android.apps.mytracks.content.SearchEngineProvider: void <init>()>
<java.lang.String: java.lang.String substring(int)>
<com.google.android.apps.mytracks.services.sensors.SensorManagerFactory: void releaseTempSensorManager()>
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment)>
<com.google.common.collect.EmptyImmutableSet: void <init>()>
<com.google.android.apps.mytracks.fragments.EulaDialogFragment$2: void <init>(com.google.android.apps.mytracks.fragments.EulaDialogFragment)>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void writeSensorStyle(java.lang.String,java.lang.String)>
<com.google.common.collect.RegularImmutableList: int size()>
<com.google.gdata.util.ServiceException: java.util.List getHttpHeader(java.lang.String)>
<com.google.api.client.http.javanet.NetHttpTransport: boolean supportsMethod(java.lang.String)>
<android.support.v4.content.ModernAsyncTask: void <init>()>
<java.lang.Class: boolean isInstance(java.lang.Object)>
<android.support.v4.view.ViewPager: void populate(int)>
<com.google.android.gms.internal.r: void <clinit>()>
<com.google.android.apps.mytracks.io.sync.SyncUtils: com.google.api.services.drive.model.File updateDriveFile(com.google.api.services.drive.Drive,com.google.api.services.drive.model.File,java.lang.String,java.io.File,boolean)>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity: void exportTrackToGoogle(long,com.google.android.apps.mytracks.fragments.ExportDialogFragment$ExportType,android.accounts.Account)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.gdata.wireformats.input.AbstractParser: void <init>(com.google.gdata.wireformats.AltFormat,java.lang.Class)>
<com.google.android.apps.mytracks.fragments.EulaDialogFragment$1: void onClick(android.content.DialogInterface,int)>
<com.google.android.apps.mytracks.util.PreferencesUtils: void addToList(android.content.Context,int,java.lang.String,java.lang.String)>
<android.app.backup.BackupManager: void dataChanged()>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: int access$000(com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl)>
<com.google.gdata.data.spreadsheet.WorksheetFeed: void <init>()>
<com.google.android.apps.mytracks.content.TrackDataHub: void stop()>
<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.util.TypedValue: void <init>()>
<com.google.gdata.util.AuthenticationException: void initFromAuthHeader(java.lang.String)>
<org.apache.http.conn.params.ConnManagerParams: void setMaxConnectionsPerRoute(org.apache.http.params.HttpParams,org.apache.http.conn.params.ConnPerRoute)>
<org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>
<com.google.android.apps.mytracks.io.spreadsheets.SendSpreadsheetsAsyncTask: boolean performTask()>
<com.google.api.client.util.Data: java.util.Map newMapInstance(java.lang.Class)>
<java.lang.Object: void notify()>
<com.google.gdata.util.XmlBlob: void <init>()>
<com.google.api.client.http.GZipContent: java.lang.String getEncoding()>
<java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>
<com.google.api.client.googleapis.media.MediaHttpUploader$UploadState: void <clinit>()>
<com.google.common.collect.LinkedListMultimap: java.util.List get(java.lang.Object)>
<java.util.concurrent.atomic.AtomicBoolean: void <init>()>
<com.google.gson.stream.JsonScope: void <clinit>()>
<android.support.v4.app.FragmentManagerImpl: void performPendingDeferredStart(android.support.v4.app.Fragment)>
<android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
<android.app.ProgressDialog: void <init>(android.content.Context)>
<com.google.android.apps.mytracks.fragments.ChooseActivityTypeImageAdapter: void setSelected(int)>
<com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager: com.google.android.apps.mytracks.services.sensors.MessageParser access$500(com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager)>
<com.google.common.collect.AbstractMapBasedMultiset$1$1: void <init>(com.google.common.collect.AbstractMapBasedMultiset$1,java.util.Map$Entry)>
<com.google.gdata.util.common.base.UnicodeEscaper: char[] growBuffer(char[],int,int)>
<com.google.android.apps.mytracks.util.DialogUtils: android.app.ProgressDialog createHorizontalProgressDialog(android.content.Context,int,android.content.DialogInterface$OnCancelListener,java.lang.Object[])>
<com.google.gdata.client.GoogleAuthTokenFactory$UserToken: void <init>(java.lang.String)>
<com.google.gdata.data.spreadsheet.ListFeed: void declareExtensions(com.google.gdata.data.ExtensionProfile)>
<android.view.animation.DecelerateInterpolator: void <init>(float)>
<android.view.View: void setImportantForAccessibility(int)>
<com.google.gdata.model.ElementCreatorImpl: com.google.gdata.model.AttributeCreatorImpl addAttribute(com.google.gdata.model.AttributeKey)>
<android.graphics.Rect: void <clinit>()>
<com.google.gdata.client.http.HttpGDataRequest: java.io.InputStream getResponseStream()>
<com.google.android.apps.mytracks.widgets.TrackWidgetConfigActivity$2: void <init>(com.google.android.apps.mytracks.widgets.TrackWidgetConfigActivity)>
<com.google.android.apps.mytracks.content.TrackDataHub$1: void run()>
<java.net.URL: java.lang.String toExternalForm()>
<com.google.android.apps.mytracks.widgets.TrackWidgetProvider: void updateAverageSpeed(android.content.Context,android.widget.RemoteViews,int[],com.google.android.apps.mytracks.stats.TripStatistics,boolean,boolean)>
<com.google.android.apps.analytics.PersistentHitStore: void <init>(android.content.Context)>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)>
<com.google.android.apps.mytracks.services.sensors.PolarSensorManager: void <init>(android.content.Context)>
<com.google.api.client.http.javanet.NetHttpResponse: int getStatusCode()>
<com.google.common.primitives.UnsignedInts: int parseUnsignedInt(java.lang.String,int)>
<com.google.protobuf.CodedInputStream: void <init>(byte[],int,int)>
<com.google.gdata.util.parser.Sequence: int parse(char[],int,int,java.lang.Object)>
<com.google.gdata.util.ErrorElement: void <init>()>
<com.google.gdata.util.ParseException: void initResponseCode()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: void <init>(com.google.android.apps.analytics.Dispatcher$Callbacks,java.lang.String,com.google.android.apps.analytics.NetworkDispatcher,com.google.android.apps.analytics.NetworkDispatcher$1)>
<android.support.v4.app.FragmentState: void <clinit>()>
<com.google.gdata.data.spreadsheet.ColCount: com.google.gdata.data.ExtensionDescription getDefaultDescription()>
<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>
<com.google.gdata.util.parser.Parser: com.google.gdata.util.parser.Parser repeat(int,int)>
<android.location.Location: void distanceBetween(double,double,double,double,float[])>
<com.google.gdata.util.common.net.UriParameterMap: void merge(java.lang.String,java.nio.charset.Charset)>
<com.google.android.apps.mytracks.content.Track: long getStartId()>
<com.google.android.apps.mytracks.TrackDetailActivity: boolean onTrackballEvent(android.view.MotionEvent)>
<com.google.wireless.gdata.data.Entry: void setContent(java.lang.String)>
<android.support.v4.app.LoaderManager: void <init>()>
<android.content.ContextWrapper: java.io.File getCacheDir()>
<com.google.android.apps.mytracks.AggregatedStatsActivity: void <init>()>
<com.google.api.client.googleapis.extensions.android.gms.auth.UserRecoverableAuthIOException: com.google.android.gms.auth.UserRecoverableAuthException getCause()>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment$ExportType: com.google.android.apps.mytracks.fragments.ExportDialogFragment$ExportType valueOf(java.lang.String)>
<com.google.gdata.wireformats.AltFormat: java.lang.String getName()>
<com.google.android.common.gdata.AndroidGDataClient: java.io.InputStream createAndExecuteMethod(com.google.android.common.gdata.AndroidGDataClient$HttpRequestCreator,java.lang.String,java.lang.String)>
<com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>
<android.support.v4.content.Loader: void onForceLoad()>
<com.google.common.collect.ImmutableMultimap: boolean put(java.lang.Object,java.lang.Object)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<android.app.backup.BackupManager: void <init>(android.content.Context)>
<com.google.api.client.json.gson.GsonParser: byte getByteValue()>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: void <init>(android.content.ContentResolver)>
<com.google.android.apps.mytracks.fragments.ChooseActivityDialogFragment$DisplayInfo: void <init>(com.google.android.apps.mytracks.fragments.ChooseActivityDialogFragment,android.content.pm.ResolveInfo,java.lang.CharSequence,java.lang.CharSequence,android.graphics.drawable.Drawable)>
<com.google.api.client.http.InputStreamContent: com.google.api.client.http.InputStreamContent setRetrySupported(boolean)>
<com.google.api.client.util.ArrayMap$EntryIterator: void <init>(com.google.api.client.util.ArrayMap)>
<android.view.ViewGroup: void removeView(android.view.View)>
<com.google.android.apps.mytracks.settings.AbstractSettingsActivity: void onDestroy()>
<com.google.android.apps.mytracks.util.CalorieUtils: com.google.android.apps.mytracks.util.CalorieUtils$ActivityType getActivityType(android.content.Context,java.lang.String)>
<org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>
<com.google.wireless.gdata.data.XmlUtils: java.lang.String extractChildText(org.xmlpull.v1.XmlPullParser)>
<android.support.v4.content.AsyncTaskLoader$LoadTask: void <init>(android.support.v4.content.AsyncTaskLoader)>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter beginObject()>
<com.google.android.apps.mytracks.fragments.ConfirmDeleteDialogFragment: void onAttach(android.app.Activity)>
<com.google.common.collect.Iterators: void <clinit>()>
<com.google.android.apps.mytracks.settings.SettingsActivity$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<com.google.android.apps.mytracks.io.sendtogoogle.SendRequest: void <clinit>()>
<android.view.View: int getVisibility()>
<com.google.android.apps.mytracks.TrackController: void update(boolean,boolean)>
<java.net.URI: int getPort()>
<android.support.v4.app.NotificationCompatJellybean: void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: com.google.android.apps.mytracks.content.Sensor$SensorData getPower()>
<android.support.v4.app.NavUtils$NavUtilsImplBase: java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo)>
<com.google.common.collect.Maps: java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object)>
<android.util.AndroidRuntimeException: void <init>(java.lang.String)>
<com.google.gdata.data.batch.BatchInterrupted: com.google.gdata.data.ExtensionDescription getDefaultDescription()>
<com.google.android.apps.mytracks.settings.RecordingSettingsActivity: void configDefaultActivity()>
<com.google.android.apps.mytracks.HelpActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: boolean access$1002(com.google.android.apps.mytracks.content.Sensor$SensorDataSet,boolean)>
<com.google.api.client.http.javanet.NetHttpTransport: com.google.api.client.http.javanet.NetHttpRequest buildHeadRequest(java.lang.String)>
<com.google.gdata.client.http.HttpGDataRequest: void execute()>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.apps.mytracks.services.TrackRecordingService: com.google.android.apps.mytracks.services.tasks.PeriodicTaskExecutor access$300(com.google.android.apps.mytracks.services.TrackRecordingService)>
<android.text.TextUtils: java.lang.String[] split(java.lang.String,java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void <clinit>()>
<com.google.android.gms.internal.cd$a: void <init>(com.google.android.gms.location.LocationListener,android.os.Looper)>
<com.google.gdata.model.ElementCreatorImpl: com.google.gdata.model.ElementCreatorImpl addElement(com.google.gdata.model.ElementKey)>
<android.support.v4.content.ModernAsyncTask$Status: void <clinit>()>
<com.google.android.apps.mytracks.services.AdaptiveLocationListenerPolicy: long getDesiredPollingInterval()>
<com.google.gdata.model.atom.Contributor: void <clinit>()>
<com.google.android.apps.mytracks.TrackListActivity: com.google.android.apps.mytracks.content.MyTracksProviderUtils access$1000(com.google.android.apps.mytracks.TrackListActivity)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeatureMetadata: int getColor()>
<java.util.IdentityHashMap: java.util.Set entrySet()>
<com.google.android.apps.mytracks.io.spreadsheets.SendSpreadsheetsUtils: java.lang.String getSpeed(double,boolean)>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAuthIOException: void <init>(com.google.android.gms.auth.GoogleAuthException)>
<android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)>
<com.google.api.client.util.Types: java.lang.Object newInstance(java.lang.Class)>
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy build()>
<com.google.android.apps.mytracks.SensorStateActivity: java.lang.String access$100()>
<com.google.api.client.util.Types: java.lang.reflect.Type resolveTypeVariable(java.util.List,java.lang.reflect.TypeVariable)>
<com.google.android.apps.mytracks.fragments.EnableSyncDialogFragment: void onAttach(android.app.Activity)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: com.google.android.apps.analytics.PipelinedRequester access$800(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread)>
<com.google.common.collect.Count: int getAndAdd(int)>
<java.util.EnumMap: java.lang.Object get(java.lang.Object)>
<com.google.gdata.data.batch.BatchUtils: void declareFeedExtensions(com.google.gdata.data.ExtensionProfile)>
<com.google.api.client.http.GenericUrl: void addQueryParams(java.util.Set,java.lang.StringBuilder)>
<com.google.android.gms.maps.SupportMapFragment$b: void <init>(android.support.v4.app.Fragment)>
<com.google.android.apps.mytracks.fragments.InstallEarthDialogFragment$1: void <init>(com.google.android.apps.mytracks.fragments.InstallEarthDialogFragment)>
<java.util.TreeSet: int size()>
<android.util.Log: boolean isLoggable(java.lang.String,int)>
<android.support.v4.view.ViewCompatICS: void setAccessibilityDelegate(android.view.View,java.lang.Object)>
<com.google.android.gms.location.ActivityRecognitionResult: void <clinit>()>
<com.google.api.client.util.Data: void <clinit>()>
<com.google.api.client.http.apache.ApacheHttpTransport: com.google.api.client.http.apache.ApacheHttpRequest buildPatchRequest(java.lang.String)>
<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator)>
<com.google.gdata.util.ErrorDomain$ErrorCode: java.lang.String getDomainName()>
<com.google.android.apps.mytracks.io.file.importer.ImportAsyncTask: void <init>(com.google.android.apps.mytracks.io.file.importer.ImportActivity,boolean,com.google.android.apps.mytracks.io.file.TrackFileFormat,java.lang.String)>
<android.support.v4.content.CursorLoader: void deliverResult(android.database.Cursor)>
<com.google.gdata.util.VersionRegistry: java.util.List getThreadVersions()>
<com.google.wireless.gdata.data.StringUtils: boolean isEmpty(java.lang.String)>
<com.google.gdata.wireformats.AltFormat: boolean equals(java.lang.Object)>
<java.lang.Boolean: void <clinit>()>
<com.google.android.apps.mytracks.TrackListActivity: boolean onKeyUp(int,android.view.KeyEvent)>
<com.google.android.apps.mytracks.DeleteAsyncTask: java.lang.Boolean doInBackground(java.lang.Void[])>
<com.google.android.apps.mytracks.io.sendtogoogle.UploadResultActivity$1: void onClick(android.content.DialogInterface,int)>
<android.content.ComponentName: java.lang.String getPackageName()>
<com.google.android.apps.mytracks.services.tasks.CheckPermissionAsyncTask: boolean retryTask()>
<com.google.android.common.http.GoogleHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
<android.content.IntentFilter: void <init>()>
<com.google.android.apps.mytracks.content.Track: java.lang.String getDescription()>
<com.google.android.apps.mytracks.MarkerListActivity: void <clinit>()>
<com.google.android.apps.mytracks.io.file.exporter.SaveActivity$5: void onShow(android.content.DialogInterface)>
<java.util.LinkedList: void addLast(java.lang.Object)>
<com.google.android.apps.mytracks.services.sensors.SensorUtils$1: void <clinit>()>
<com.google.android.apps.mytracks.TrackListActivity: void onResume()>
<com.google.android.gms.internal.ce$c: com.google.android.gms.internal.cc az()>
<com.google.android.apps.mytracks.fragments.ConfirmDeleteDialogFragment$1: void <init>(com.google.android.apps.mytracks.fragments.ConfirmDeleteDialogFragment,long[])>
<com.google.android.apps.mytracks.util.TrackIconUtils: void setIconSpinner(android.widget.Spinner,java.lang.String)>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void writePlacemark(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.location.Location)>
<com.google.android.apps.mytracks.DeleteActivity$1: void <init>(com.google.android.apps.mytracks.DeleteActivity)>
<com.google.android.gms.internal.p: void a(java.lang.String[])>
<java.lang.String: java.lang.String valueOf(char)>
<android.preference.DialogPreference: void onClick(android.content.DialogInterface,int)>
<com.dsi.ant.AntInterface: boolean stopRequestForceClaimInterface()>
<com.google.android.apps.mytracks.io.file.TrackFileFormat$1: void <init>(java.lang.String,int)>
<com.google.android.apps.mytracks.util.PreferencesUtils: boolean getBoolean(android.content.Context,int,boolean)>
<com.google.android.apps.mytracks.io.sendtogoogle.UploadResultActivity$2: void onCancel(android.content.DialogInterface)>
<com.google.android.apps.mytracks.TrackListActivity$3: void onPrepare(android.view.Menu,int[],long[],boolean)>
<android.support.v4.widget.SimpleCursorAdapter: void findColumns(java.lang.String[])>
<com.google.common.collect.RegularImmutableAsList: com.google.common.collect.UnmodifiableListIterator listIterator(int)>
<com.google.android.apps.mytracks.TrackListActivity: void onActivityResult(int,int,android.content.Intent)>
<android.support.v4.view.ViewPager: void completeScroll(boolean)>
<com.google.common.primitives.UnsignedLongs: int compare(long,long)>
<android.support.v4.view.ViewPager: void <init>(android.content.Context)>
<com.google.android.apps.mytracks.content.Sensor$SensorData$Builder: com.google.android.apps.mytracks.content.Sensor$SensorData$Builder setValue(int)>
<android.widget.TextView: void setTypeface(android.graphics.Typeface)>
<java.util.Random: void <init>()>
<com.google.common.collect.AbstractMapBasedMultiset: java.util.Iterator entryIterator()>
<com.google.android.apps.mytracks.TrackEditActivity: com.google.android.apps.mytracks.services.TrackRecordingServiceConnection access$600(com.google.android.apps.mytracks.TrackEditActivity)>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpRequest setParser(com.google.api.client.util.ObjectParser)>
<com.google.api.client.auth.oauth2.TokenRequest: com.google.api.client.http.HttpResponse executeUnparsed()>
<com.google.android.apps.mytracks.stats.TripStatistics: int getBottom()>
<com.google.android.apps.mytracks.util.DialogUtils: android.app.ProgressDialog createSpinnerProgressDialog(android.content.Context,int,android.content.DialogInterface$OnCancelListener)>
<android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<com.google.gdata.util.common.base.CharMatcher: com.google.gdata.util.common.base.CharMatcher precomputed()>
<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)>
<com.google.android.apps.mytracks.TrackListActivity$6: void onLoaderReset(android.support.v4.content.Loader)>
<com.google.android.apps.mytracks.widgets.TrackWidgetProvider: void updateAllAppWidgets(android.content.Context,long)>
<com.google.android.apps.mytracks.util.PreferencesUtils: void setFloat(android.content.Context,int,float)>
<com.google.android.apps.mytracks.io.sendtogoogle.SendToGoogleUtils: void sendNotification(android.content.Context,java.lang.String,android.content.Intent,int)>
<com.google.gdata.wireformats.AltFormat$Builder: com.google.gdata.wireformats.AltFormat$Builder check()>
<android.support.v4.app.FragmentManagerImpl: void <clinit>()>
<java.lang.Math: int round(float)>
<com.google.android.gms.location.ActivityRecognitionClient: void connect()>
<com.google.android.apps.mytracks.util.Api8Adapter: void configureActionBarHomeAsUp(android.app.Activity)>
<com.google.common.collect.Iterators$14: boolean hasNext()>
<com.google.android.apps.mytracks.io.sendtogoogle.UploadResultActivity: void onCreate(android.os.Bundle)>
<com.google.android.apps.mytracks.fragments.MapLayerDialogFragment: void <clinit>()>
<com.google.android.apps.mytracks.io.sync.SyncUtils: com.google.api.services.drive.model.File insertDriveFile(com.google.api.services.drive.Drive,java.lang.String,android.content.Context,com.google.android.apps.mytracks.content.MyTracksProviderUtils,com.google.android.apps.mytracks.content.Track,boolean,boolean)>
<com.google.android.apps.mytracks.services.TrackRecordingServiceConnection: void <clinit>()>
<com.google.api.services.fusiontables.Fusiontables$Builder: com.google.api.services.fusiontables.Fusiontables build()>
<android.content.ContextWrapper: void startActivity(android.content.Intent)>
<com.google.android.apps.mytracks.widgets.TrackWidgetProvider: void onAppWidgetOptionsChanged(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle)>
<com.google.android.apps.mytracks.fragments.MapLayerDialogFragment$1: void <init>(com.google.android.apps.mytracks.fragments.MapLayerDialogFragment)>
<com.google.gdata.util.ServiceExceptionInitializer$ErrorsHandler: void <init>(com.google.gdata.util.ServiceExceptionInitializer)>
<com.google.gdata.model.transforms.atompub.AtompubVersionTransforms: void addAtompubTransform(com.google.gdata.model.MetadataRegistry,com.google.gdata.model.ElementKey)>
<com.google.api.client.http.UriTemplate$CompositeOutput: java.lang.String getExplodeJoiner()>
<com.google.gdata.util.httputil.FormUrlDecoder$ValueAction: void handle(char[],int,int,java.lang.Object)>
<com.google.android.apps.mytracks.io.sendtogoogle.SendToGoogleUtils: java.util.ArrayList prepareLocations(com.google.android.apps.mytracks.content.Track,java.util.List)>
<com.google.api.client.http.javanet.NetHttpResponse: java.lang.String getContentType()>
<com.google.api.client.util.DataMap$Entry: java.lang.Object getValue()>
<android.content.ContentValues: void <init>()>
<com.google.android.apps.mytracks.content.SearchEngine: void <clinit>()>
<com.google.api.client.json.gson.GsonParser: java.math.BigInteger getBigIntegerValue()>
<com.google.android.apps.mytracks.SearchListActivity$1: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<java.lang.Character: int toCodePoint(char,char)>
<com.google.android.apps.mytracks.settings.MapSettingsActivity: void storeSpeedValue(int,int,int,int,java.lang.String)>
<com.google.android.apps.mytracks.services.MyTracksLocationManager: void <init>(android.content.Context,android.os.Looper,boolean)>
<android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
<java.lang.Integer: void <init>(int)>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setWhen(long)>
<android.location.Location: float getAccuracy()>
<com.google.gdata.client.Service: com.google.gdata.client.Service$GDataRequest createInsertRequest(java.net.URL)>
<com.google.gdata.wireformats.AltFormat: void <init>(com.google.gdata.wireformats.AltFormat$Builder)>
<com.google.android.apps.mytracks.util.CalorieUtils: double getRunningVo2(double,double)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl$1: void close()>
<android.widget.BaseAdapter: void notifyDataSetChanged()>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesAsyncTask: boolean performTask()>
<com.google.gdata.client.http.HttpGDataRequest: void setReadTimeout(int)>
<com.google.gdata.data.ExtensionProfile: void <init>()>
<com.google.android.apps.mytracks.fragments.ChartFragment$1: void <init>(com.google.android.apps.mytracks.fragments.ChartFragment)>
<com.google.android.apps.mytracks.services.MyTracksLocationManager: com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks access$800(com.google.android.apps.mytracks.services.MyTracksLocationManager)>
<com.google.android.apps.mytracks.io.drive.SendDriveActivity: com.google.android.apps.mytracks.io.sendtogoogle.AbstractSendAsyncTask createAsyncTask()>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment findFragmentByTag(java.lang.String)>
<com.google.android.apps.analytics.PipelinedRequester: void finishedCurrentRequests()>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: android.database.Cursor getTrackCursor(java.lang.String,java.lang.String[],java.lang.String)>
<com.google.android.apps.mytracks.content.SearchEngine: double squash(double)>
<com.google.android.apps.mytracks.services.MyTracksLocationManager$2: void <init>(com.google.android.apps.mytracks.services.MyTracksLocationManager)>
<com.google.gdata.util.Version: void addImpliedVersion(com.google.gdata.util.Version)>
<com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>
<com.google.gson.stream.StringPool: void <init>()>
<com.google.android.apps.mytracks.io.sendtogoogle.UploadResultActivity: android.app.Dialog access$000(com.google.android.apps.mytracks.io.sendtogoogle.UploadResultActivity)>
<java.math.BigInteger: float floatValue()>
<java.util.Stack: java.lang.Object push(java.lang.Object)>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void <init>(android.content.Context,boolean,boolean)>
<com.google.android.apps.mytracks.io.sendtogoogle.SendRequest: boolean isSendMaps()>
<com.google.android.gms.internal.ce: void removeLocationUpdates(com.google.android.gms.location.LocationListener)>
<com.google.gdata.model.atom.Feed: void registerMetadata(com.google.gdata.model.MetadataRegistry)>
<com.google.android.apps.mytracks.content.Waypoint$WaypointType: com.google.android.apps.mytracks.content.Waypoint$WaypointType[] values()>
<com.google.android.apps.mytracks.util.Api11Adapter: boolean hasDialogTitleDivider()>
<com.google.gdata.data.spreadsheet.ListEntry: com.google.gdata.data.spreadsheet.CustomElementCollection getCustomElements()>
<com.google.common.collect.SingletonImmutableMap: com.google.common.collect.ImmutableSet createEntrySet()>
<com.google.gson.stream.JsonScope: void <init>(java.lang.String,int)>
<com.google.android.apps.mytracks.settings.SettingsActivity$2: void <init>(com.google.android.apps.mytracks.settings.SettingsActivity,android.app.Dialog)>
<com.google.android.apps.mytracks.fragments.DeleteMarkerDialogFragment$1: void <init>(com.google.android.apps.mytracks.fragments.DeleteMarkerDialogFragment,android.support.v4.app.FragmentActivity,long[])>
<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void <init>(android.support.v4.app.LoaderManagerImpl,int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>
<com.google.android.apps.mytracks.MarkerListActivity: com.google.android.apps.mytracks.content.Track access$000(com.google.android.apps.mytracks.MarkerListActivity)>
<com.google.android.apps.mytracks.stats.TripStatistics: double getMaxElevation()>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeature: java.lang.String getTitle()>
<com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)>
<java.lang.Math: double abs(double)>
<android.view.accessibility.AccessibilityRecord: void <init>()>
<com.google.android.apps.mytracks.util.TrackIconUtils: java.lang.String getIconValue(android.content.Context,java.lang.String)>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()>
<com.google.api.client.util.ArrayMap: void ensureCapacity(int)>
<com.google.api.client.json.gson.GsonGenerator: void writeNumber(java.math.BigInteger)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: com.google.android.apps.mytracks.content.Sensor$SensorData access$1502(com.google.android.apps.mytracks.content.Sensor$SensorDataSet,com.google.android.apps.mytracks.content.Sensor$SensorData)>
<android.support.v4.app.ShareCompat$IntentBuilder: void <init>(android.app.Activity)>
<java.lang.Thread: java.lang.Thread currentThread()>
<com.google.android.apps.mytracks.services.tasks.CheckPermissionAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
<com.google.android.apps.mytracks.util.Api11Adapter: void setTabBackground(android.widget.TabWidget)>
<android.graphics.Color: int argb(int,int,int,int)>
<java.io.File: boolean delete()>
<com.google.android.apps.analytics.Event: boolean getAnonymizeIp()>
<com.google.api.client.http.apache.ApacheHttpRequest: void setContent(com.google.api.client.http.HttpContent)>
<com.google.gdata.util.common.base.CharMatcher$2: boolean matches(char)>
<com.google.android.apps.mytracks.MapOverlay$1: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<android.support.v4.app.FragmentActivity: java.lang.String viewToString(android.view.View)>
<com.google.api.client.googleapis.services.AbstractGoogleClient$Builder: com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setRootUrl(java.lang.String)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker$DispatcherCallbacks$1: void <init>(com.google.android.apps.analytics.GoogleAnalyticsTracker$DispatcherCallbacks)>
<com.google.android.apps.mytracks.services.sensors.ant.AntSensorManager$3: void <init>(com.google.android.apps.mytracks.services.sensors.ant.AntSensorManager)>
<com.google.android.apps.mytracks.util.Api8Adapter: void <init>()>
<java.lang.Enum: int ordinal()>
<com.dsi.ant.AntInterface: void <clinit>()>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: com.google.android.apps.mytracks.content.Sensor$SensorData getCadence()>
<org.apache.http.client.methods.HttpRequestBase: java.net.URI getURI()>
<android.support.v4.app.FragmentPagerAdapter: java.lang.String makeFragmentName(int,long)>
<com.google.android.apps.mytracks.TrackListActivity: boolean handleContextItem(int,long[])>
<com.google.android.apps.mytracks.content.Sensor$SensorData$Builder: com.google.android.apps.mytracks.content.Sensor$SensorData$Builder access$100()>
<com.google.gdata.util.common.net.UriParameterMap: com.google.gdata.util.common.net.UriParameterMap parse(java.lang.String,java.nio.charset.Charset)>
<com.google.android.apps.mytracks.settings.MapSettingsActivity: void updateUiByTrackColorMode(java.lang.String)>
<org.apache.http.message.AbstractHttpMessage: org.apache.http.params.HttpParams getParams()>
<com.google.gdata.client.CoreErrorDomain: void <init>()>
<java.lang.Character: boolean isSupplementaryCodePoint(int)>
<android.support.v4.app.FragmentManagerImpl: void checkStateLoss()>
<com.google.gdata.data.batch.BatchUtils: void declareEntryExtensions(com.google.gdata.data.ExtensionProfile)>
<com.google.common.collect.ImmutableList: com.google.common.collect.UnmodifiableIterator iterator()>
<com.google.android.apps.mytracks.content.SearchEngine: void <init>(com.google.android.apps.mytracks.content.MyTracksProviderUtils)>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity: void onDrivePermissionSuccess()>
<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>
<android.app.IntentService: void onDestroy()>
<com.google.android.apps.mytracks.stats.TripStatisticsUpdater: com.google.android.apps.mytracks.stats.TripStatistics getTripStatistics()>
<com.google.android.gms.internal.cd$b: void <init>(com.google.android.gms.location.LocationListener,android.os.Looper)>
<android.support.v4.content.Loader: void stopLoading()>
<com.google.android.apps.mytracks.settings.StatsSettingsActivity: void configUnitsListPreference()>
<com.google.android.apps.mytracks.services.sensors.BluetoothSensorManager: boolean isEnabled()>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesUtils: void appendLocation(android.location.Location,java.lang.StringBuilder)>
<com.google.android.apps.mytracks.content.SearchEngine$SearchQuery: void <init>(java.lang.String,android.location.Location,long,long)>
<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder expandFor(int)>
<java.util.Vector: int size()>
<com.google.android.apps.mytracks.MarkerListActivity$2$1: void <init>(com.google.android.apps.mytracks.MarkerListActivity$2)>
<com.google.android.apps.mytracks.fragments.MyTracksMapFragment: boolean access$300(com.google.android.apps.mytracks.fragments.MyTracksMapFragment)>
<java.io.File: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.content.TrackDataHub: com.google.android.apps.mytracks.content.DataSourceManager access$000(com.google.android.apps.mytracks.content.TrackDataHub)>
<com.google.android.apps.mytracks.util.Api8Adapter: boolean handleSearchMenuSelection(android.app.Activity)>
<com.google.android.apps.mytracks.util.Api11Adapter$2: void <init>(com.google.android.apps.mytracks.util.Api11Adapter,com.google.android.apps.mytracks.TrackController)>
<com.google.android.apps.mytracks.services.sensors.PolarMessageParser: int findNextAlignment(byte[])>
<com.google.gdata.model.MetadataRegistry: com.google.gdata.model.Schema buildSchema()>
<java.util.Timer: void <init>(java.lang.String)>
<com.google.gdata.wireformats.input.XmlInputParser: void <init>(com.google.gdata.wireformats.AltFormat,java.lang.Class)>
<com.google.android.gms.internal.v$a$a: void <init>(android.os.IBinder)>
<com.google.gson.stream.JsonReader: void expect(com.google.gson.stream.JsonToken)>
<com.google.api.services.fusiontables.FusiontablesRequest: com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient getAbstractGoogleClient()>
<com.google.gdata.util.common.base.CharMatcher$18: void <init>(com.google.gdata.util.common.base.CharMatcher,com.google.gdata.util.common.base.CharMatcher$LookupTable)>
<android.util.EventLog: int writeEvent(int,java.lang.Object[])>
<com.google.android.apps.mytracks.maps.MultiColorTrackPath: void <init>(android.content.Context,com.google.android.apps.mytracks.maps.TrackPathDescriptor)>
<com.google.gdata.model.MetadataContext: void <clinit>()>
<android.support.v4.app.FragmentManagerImpl: void dispatchCreate()>
<android.support.v4.view.ViewPager: void populate()>
<android.app.Activity: void onPrepareDialog(int,android.app.Dialog,android.os.Bundle)>
<android.widget.TextView: void setTextColor(int)>
<com.google.api.services.fusiontables.model.Table: void <clinit>()>
<com.google.android.apps.mytracks.services.tasks.PeriodicTaskExecutor: void <clinit>()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: boolean dispatch()>
<com.google.api.client.googleapis.services.AbstractGoogleClient$Builder: com.google.api.client.http.HttpTransport getTransport()>
<java.lang.Class: boolean isInterface()>
<com.google.android.apps.mytracks.content.Waypoint: double getLength()>
<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: com.google.android.apps.mytracks.content.Sensor$SensorDataSet buildPartial()>
<com.google.api.client.util.Clock$1: long currentTimeMillis()>
<com.google.gdata.util.common.net.UriEncoder: void <clinit>()>
<com.google.android.apps.mytracks.util.Api8Adapter: void <clinit>()>
<com.google.android.apps.mytracks.content.DataSourceManager: void updateListeners(java.util.EnumSet)>
<com.google.api.client.util.escape.PercentEscaper: int nextEscapeIndex(java.lang.CharSequence,int,int)>
<com.google.android.apps.mytracks.fragments.ChooseAccountDialogFragment: android.accounts.Account[] access$100(com.google.android.apps.mytracks.fragments.ChooseAccountDialogFragment)>
<java.util.Arrays: int binarySearch(char[],char)>
<java.lang.String: java.lang.String[] split(java.lang.String)>
<com.google.common.collect.Multisets: void <clinit>()>
<com.google.gdata.data.ExtensionManifest: void <init>(java.lang.Class)>
<android.support.v4.app.LoaderManagerImpl: void finishRetain()>
<com.google.android.apps.mytracks.util.FileUtils: boolean isExternalStorageWriteable()>
<com.google.android.apps.mytracks.fragments.ConfirmDeleteDialogFragment$1: void onClick(android.content.DialogInterface,int)>
<com.google.android.apps.mytracks.TrackEditActivity: void <clinit>()>
<com.google.api.services.fusiontables.Fusiontables: void <clinit>()>
<com.google.android.apps.mytracks.services.TrackRecordingService: void <init>()>
<com.google.api.services.fusiontables.Fusiontables$Builder: com.google.api.services.fusiontables.Fusiontables$Builder setServicePath(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession()>
<com.google.android.apps.mytracks.stats.TripStatisticsUpdater: void updateSpeed(long,double,long,double)>
<com.google.protobuf.CodedInputStream: byte readRawByte()>
<com.google.gdata.wireformats.AltFormat$Builder: java.util.Set access$600(com.google.gdata.wireformats.AltFormat$Builder)>
<com.google.protobuf.AbstractMessageLite$Builder: com.google.protobuf.AbstractMessageLite$Builder mergeFrom(byte[])>
<com.google.android.apps.mytracks.io.gdata.maps.MapsClient: java.lang.String buildMapUrl(java.lang.String)>
<android.view.View: void setWillNotDraw(boolean)>
<android.support.v4.app.DialogFragment: void dismiss()>
<com.google.android.apps.mytracks.fragments.ChooseActivityTypeDialogFragment: void updateWeightContainer(android.view.View,int)>
<com.google.api.client.http.LogContent: java.lang.String getEncoding()>
<com.google.api.client.googleapis.MethodOverride: void intercept(com.google.api.client.http.HttpRequest)>
<com.google.android.apps.mytracks.content.Track: java.lang.String getIcon()>
<android.support.v4.app.TaskStackBuilder: void startActivities()>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataParser: void handleExtraLinkInEntry(java.lang.String,java.lang.String,java.lang.String,com.google.wireless.gdata.data.Entry)>
<com.google.android.apps.mytracks.TrackListActivity: boolean onContextItemSelected(android.view.MenuItem)>
<com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>
<android.support.v4.view.AccessibilityDelegateCompatIcs: java.lang.Object newAccessibilityDelegateDefaultImpl()>
<com.google.android.apps.mytracks.util.UriUtils: boolean isFileUri(android.net.Uri)>
<com.google.gdata.util.common.net.UriParameterMap: com.google.common.collect.Multimap delegate()>
<java.util.IdentityHashMap: void <init>()>
<com.google.android.apps.mytracks.util.StringUtils: java.lang.String formatWeight(double)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: com.google.android.apps.mytracks.content.Sensor$SensorData getHeartRate()>
<com.google.android.apps.mytracks.stats.TripStatistics: int getRight()>
<com.google.api.client.json.JsonGenerator: void <init>()>
<com.google.android.gms.internal.dt: void a(android.net.Uri,int)>
<com.google.android.apps.mytracks.TrackController: void onPause()>
<com.google.android.apps.mytracks.content.DataSource: void <init>(android.content.Context)>
<com.google.gdata.client.GoogleAuthTokenFactory: java.lang.String makePostRequest(java.net.URL,java.util.Map)>
<android.app.Activity: void onActivityResult(int,int,android.content.Intent)>
<com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager: void setState(com.google.android.apps.mytracks.content.Sensor$SensorState)>
<com.google.api.services.fusiontables.model.Table: com.google.api.services.fusiontables.model.Table setColumns(java.util.List)>
<com.google.android.apps.mytracks.fragments.MyTracksMapFragment: android.location.Location access$602(com.google.android.apps.mytracks.fragments.MyTracksMapFragment,android.location.Location)>
<java.util.Random: int nextInt()>
<com.google.android.gms.location.ActivityRecognitionResult: boolean hasResult(android.content.Intent)>
<com.google.android.gms.internal.dz: android.content.Context k(android.content.Context)>
<com.google.gdata.util.common.xml.parsing.SecureGenericXMLFactory$SecureSAXParserFactory: void setXIncludeAware(boolean)>
<java.lang.Enum: java.lang.String name()>
<com.google.android.apps.mytracks.services.TrackRecordingService: int access$802(com.google.android.apps.mytracks.services.TrackRecordingService,int)>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter open(com.google.gson.stream.JsonScope,java.lang.String)>
<com.google.common.collect.ForwardingObject: void <init>()>
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
<android.support.v4.content.Loader: void forceLoad()>
<android.support.v4.app.TaskStackBuilder: void startActivities(android.os.Bundle)>
<com.google.android.apps.analytics.CustomVariableBuffer: void throwOnInvalidIndex(int)>
<android.support.v4.view.AccessibilityDelegateCompatIcs$1: void <init>(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge)>
<com.google.api.client.http.EmptyContent: java.lang.String getEncoding()>
<com.google.gson.stream.JsonWriter: void <init>(java.io.Writer)>
<android.database.SQLException: void <init>()>
<com.google.gdata.wireformats.output.CharacterGenerator: void <init>()>
<com.google.gdata.util.Version: java.util.List getImpliedVersions()>
<com.google.android.apps.mytracks.util.TrackRecordingServiceConnectionUtils: void pauseTrack(com.google.android.apps.mytracks.services.TrackRecordingServiceConnection)>
<com.google.api.client.http.apache.ApacheHttpRequest: void setTimeout(int,int)>
<com.google.gdata.model.gd.Namespaces: void <clinit>()>
<android.app.Notification$InboxStyle: android.app.Notification$InboxStyle setBigContentTitle(java.lang.CharSequence)>
<com.google.protobuf.CodedInputStream: int readRawLittleEndian32()>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity: void enableSync(android.accounts.Account)>
<com.google.api.client.util.LoggingByteArrayOutputStream: void <init>(java.util.logging.Logger,java.util.logging.Level,int)>
<java.math.BigDecimal: java.lang.String toString()>
<com.google.gdata.model.QName: void <init>(com.google.gdata.util.common.xml.XmlNamespace,java.lang.String)>
<android.view.ContextThemeWrapper: void <init>()>
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>
<com.google.wireless.gdata.data.Entry: void setHtmlUri(java.lang.String)>
<android.support.v4.app.NotificationCompatHoneycomb: android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: void <init>()>
<com.google.api.client.http.ExponentialBackOffPolicy: void incrementCurrentInterval()>
<com.google.android.apps.mytracks.settings.MapSettingsActivity$2: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<com.google.android.apps.mytracks.stats.TripStatistics: double getTotalDistance()>
<com.google.api.client.http.HttpResponseException: int getStatusCode()>
<com.google.api.client.http.FileContent: java.io.InputStream getInputStream()>
<java.lang.Double: java.lang.String toString(double)>
<com.google.android.apps.mytracks.settings.SettingsActivity: void onPrepareDialog(int,android.app.Dialog,android.os.Bundle)>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity$2: void <clinit>()>
<java.lang.StringBuilder: void <init>(java.lang.String)>
<com.google.api.client.util.ArrayValueMap: void setValues()>
<com.google.android.common.http.UrlRules$Rule: void <clinit>()>
<java.io.EOFException: void <init>(java.lang.String)>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder: com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setRootUrl(java.lang.String)>
<android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.google.android.apps.mytracks.widgets.TrackWidgetProvider: void updateStopButton(android.content.Context,android.widget.RemoteViews,boolean)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: void <clinit>()>
<java.io.FileOutputStream: void <init>(java.io.File)>
<com.google.android.apps.mytracks.settings.SettingsActivity$6: void <init>(com.google.android.apps.mytracks.settings.SettingsActivity,java.lang.Class)>
<com.google.api.client.json.gson.GsonParser: void checkNumber()>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<com.google.api.client.util.Data: java.util.Map mapOf(java.lang.Object)>
<com.google.gdata.util.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>
<com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment: void onAttach(android.app.Activity)>
<com.google.api.client.util.Types$1: java.util.Iterator iterator()>
<android.support.v4.app.TaskStackBuilder: void <init>(android.content.Context)>
<com.google.android.apps.mytracks.util.ChartsExtendedEncoder: java.lang.String getEncodedValue(int)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: int access$1002(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread,int)>
<com.google.android.apps.mytracks.content.TrackDataManager: int getNumberOfListeners()>
<android.support.v4.util.SparseArrayCompat: int idealIntArraySize(int)>
<com.google.android.apps.mytracks.SensorStateActivity: void updateSensorStateAndDataSet(com.google.android.apps.mytracks.content.Sensor$SensorState,com.google.android.apps.mytracks.content.Sensor$SensorDataSet)>
<android.app.Notification$Builder: android.app.Notification$Builder setSubText(java.lang.CharSequence)>
<com.google.android.apps.mytracks.widgets.TrackWidgetProvider: void updateRecordButton(android.content.Context,android.widget.RemoteViews,boolean,boolean)>
<com.google.android.apps.mytracks.util.AccountUtils: void updateShareTrackAccountPreference(android.content.Context,android.accounts.Account)>
<com.google.gdata.client.GoogleService: com.google.gdata.data.IEntry insert(java.net.URL,com.google.gdata.data.IEntry)>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<com.google.api.client.util.GenericData: void <init>(java.util.EnumSet)>
<com.google.android.apps.mytracks.content.Waypoint$1: void <init>()>
<com.google.api.services.drive.Drive$Files$Update: void <init>(com.google.api.services.drive.Drive$Files,java.lang.String,com.google.api.services.drive.model.File,com.google.api.client.http.AbstractInputStreamContent)>
<com.google.android.apps.mytracks.util.TrackRecordingServiceConnectionUtils: long addMarker(android.content.Context,com.google.android.apps.mytracks.services.TrackRecordingServiceConnection,com.google.android.apps.mytracks.content.WaypointCreationRequest)>
<com.google.api.client.http.UrlEncodedContent: com.google.api.client.http.UrlEncodedContent setData(java.lang.Object)>
<com.google.android.apps.mytracks.io.spreadsheets.SendSpreadsheetsAsyncTask: void <init>(com.google.android.apps.mytracks.io.spreadsheets.SendSpreadsheetsActivity,long,android.accounts.Account)>
<com.google.android.gms.auth.GoogleAuthUtil: void b(android.content.Context)>
<com.google.gdata.util.ContentType: java.lang.String getMediaType()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: int access$1000(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread)>
<com.google.android.gms.internal.bc$a: android.os.IBinder asBinder()>
<com.google.common.collect.Iterators$14: java.lang.Object next()>
<com.google.api.client.http.ByteArrayContent: void <init>(java.lang.String,byte[],int,int)>
<android.support.v4.widget.CursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)>
<java.io.ByteArrayInputStream: boolean markSupported()>
<com.google.gdata.util.ContentType: boolean isAtom()>
<com.google.api.client.http.javanet.NetHttpTransport: com.google.api.client.http.LowLevelHttpRequest buildGetRequest(java.lang.String)>
<com.google.android.apps.mytracks.util.ChartsExtendedEncoder: void <clinit>()>
<java.text.NumberFormat: java.text.NumberFormat getIntegerInstance(java.util.Locale)>
<com.google.gdata.client.http.HttpGDataRequest: com.google.gdata.util.ContentType getResponseContentType()>
<android.graphics.ColorFilter: void <init>()>
<com.google.android.apps.mytracks.util.StatsUtils: void setCalorie(android.content.Context,android.view.View,double)>
<com.google.android.apps.mytracks.io.sendtogoogle.UploadResultActivity: void onChooseActivityDone(java.lang.String,java.lang.String)>
<android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>
<org.apache.http.impl.DefaultHttpClientConnection: void <init>()>
<com.google.gdata.util.common.xml.parsing.SecureGenericXMLFactory$SecureEntityResolver: void <init>(com.google.gdata.util.common.xml.parsing.SecureGenericXMLFactory$1)>
<com.google.android.apps.mytracks.stats.TripStatisticsUpdater: double updateElevation(double)>
<com.google.android.apps.mytracks.services.TrackRecordingService: void stopForegroundService()>
<android.util.Log: int wtf(java.lang.String,java.lang.String)>
<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>
<com.google.android.apps.mytracks.services.sensors.SensorManagerFactory: com.google.android.apps.mytracks.services.sensors.SensorManager getTempSensorManager(android.content.Context)>
<com.google.android.apps.mytracks.io.maps.SendMapsUtils: boolean uploadMarker(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.location.Location,com.google.android.apps.mytracks.io.gdata.maps.MapsClient,java.lang.String,com.google.android.apps.mytracks.io.gdata.maps.MapsGDataConverter)>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment: android.widget.RadioGroup access$300(com.google.android.apps.mytracks.fragments.ExportDialogFragment)>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity: void onShareTrackDone(long,boolean,java.lang.String,android.accounts.Account)>
<com.google.android.apps.mytracks.TrackEditActivity: int getLayoutResId()>
<com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment$4: void <init>(com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment)>
<java.util.IdentityHashMap: boolean containsKey(java.lang.Object)>
<com.google.android.apps.mytracks.stats.TripStatisticsUpdater: com.google.android.apps.mytracks.stats.TripStatistics init(long)>
<android.os.Handler: android.os.Message obtainMessage(int)>
<com.google.android.apps.mytracks.fragments.ChooseAccountDialogFragment$2: void onClick(android.content.DialogInterface,int)>
<android.location.Location: void setLongitude(double)>
<com.google.android.apps.mytracks.services.tasks.TimerTaskExecutor$1: void <init>(com.google.android.apps.mytracks.services.tasks.TimerTaskExecutor)>
<com.google.android.apps.mytracks.SearchListActivity$3: void <init>(com.google.android.apps.mytracks.SearchListActivity)>
<android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>
<dummyMainClass: void dummyMainMethod()>
<com.google.android.gms.common.GooglePlayServicesUtil: boolean b(int)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl$1: boolean hasNext()>
<com.google.android.apps.mytracks.util.Api11Adapter: void configureSearchWidget(android.app.Activity,android.view.MenuItem,com.google.android.apps.mytracks.TrackController)>
<com.google.api.services.fusiontables.model.PointStyle: com.google.api.services.fusiontables.model.PointStyle setIconStyler(com.google.api.services.fusiontables.model.StyleFunction)>
<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException malformedVarint()>
<com.google.api.client.util.Types$1$1: boolean hasNext()>
<com.google.android.apps.mytracks.settings.AbstractSettingsActivity: void access$000(com.google.android.apps.mytracks.settings.AbstractSettingsActivity,android.preference.Preference,java.lang.String[],java.lang.String[],java.lang.String)>
<android.graphics.Color: int parseColor(java.lang.String)>
<java.net.URI: java.lang.String getScheme()>
<android.support.v4.app.Fragment: void startActivity(android.content.Intent)>
<com.google.wireless.gdata.serializer.xml.XmlEntryGDataSerializer: void serializeTitle(org.xmlpull.v1.XmlSerializer,java.lang.String)>
<android.support.v4.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>
<com.google.android.apps.mytracks.content.TrackDataHub: void loadTrack(long)>
<com.google.api.client.util.ClassInfo: com.google.api.client.util.FieldInfo getFieldInfo(java.lang.String)>
<java.lang.Object: java.lang.String toString()>
<com.google.android.apps.mytracks.maps.FixedSpeedTrackPathDescriptor$1: void <init>(com.google.android.apps.mytracks.maps.FixedSpeedTrackPathDescriptor)>
<com.google.android.apps.mytracks.MarkerEditActivity$2: void onClick(android.view.View)>
<com.google.android.apps.mytracks.content.DataSourceManager$PreferenceListener: void <init>(com.google.android.apps.mytracks.content.DataSourceManager,com.google.android.apps.mytracks.content.DataSourceManager$1)>
<com.google.android.apps.mytracks.SectionResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,int)>
<java.util.Calendar: void setTimeInMillis(long)>
<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInArray(boolean)>
<com.google.android.apps.mytracks.SectionResourceCursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)>
<com.google.gdata.util.VersionRegistry: com.google.gdata.util.VersionRegistry ensureRegistry()>
<com.google.gdata.util.VersionRegistry: void setThreadVersion(com.google.gdata.util.Version)>
<com.google.api.client.http.HttpResponseException: java.lang.String computeMessageWithContent(com.google.api.client.http.HttpResponse)>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
<com.google.android.apps.mytracks.content.TrackDataHub: int access$1602(com.google.android.apps.mytracks.content.TrackDataHub,int)>
<com.google.common.collect.ImmutableList$Builder: void <init>(int)>
<java.lang.Object: void finalize()>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity$6: void run()>
<com.google.api.client.util.GenericData$EntryIterator: java.util.Map$Entry next()>
<com.google.android.gms.internal.dz: void c(android.view.View)>
<com.google.protobuf.CodedInputStream: void popLimit(int)>
<com.google.gdata.util.common.base.CharMatcher$14: void <init>(char[])>
<android.support.v4.view.ViewCompat$JBViewCompatImpl: void <init>()>
<com.google.gdata.data.AbstractExtension: void <init>()>
<com.google.android.gms.internal.dz: void <clinit>()>
<com.google.gdata.util.common.base.PercentEscaper: char[] escape(int)>
<java.net.CookieHandler: void setDefault(java.net.CookieHandler)>
<com.google.android.apps.mytracks.content.DescriptionGeneratorImpl: void <init>(android.content.Context)>
<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>
<com.google.android.apps.mytracks.services.ActivityRecognitionIntentService: void onHandleIntent(android.content.Intent)>
<com.google.android.common.http.GoogleHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>
<android.support.v4.widget.SimpleCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[],int)>
<com.google.android.apps.mytracks.content.TrackDataHub$2: void <init>(com.google.android.apps.mytracks.content.TrackDataHub,long)>
<com.google.android.apps.mytracks.io.spreadsheets.SendSpreadsheetsAsyncTask: java.lang.String getSpreadSheetId(java.lang.String)>
<org.apache.http.client.ClientProtocolException: void <init>(java.lang.Throwable)>
<android.support.v4.app.FragmentManagerImpl: void dispatchResume()>
<com.google.android.apps.mytracks.TrackListActivity: void <init>()>
<android.content.Intent: void <init>()>
<java.util.EnumMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<android.support.v4.content.Loader: java.lang.String dataToString(java.lang.Object)>
<com.google.api.client.googleapis.media.MediaHttpUploader: com.google.api.client.googleapis.media.MediaHttpUploader setMetadata(com.google.api.client.http.HttpContent)>
<com.google.android.gms.location.LocationClient: void disconnect()>
<com.google.gdata.client.http.HttpGDataRequest: void setHeader(java.lang.String,java.lang.String)>
<com.google.android.apps.mytracks.widgets.TrackWidgetProvider: void <init>()>
<com.google.android.apps.analytics.PersistentHitStore: com.google.android.apps.analytics.Referrer getAndUpdateReferrer(android.database.sqlite.SQLiteDatabase)>
<android.location.Location: double getLongitude()>
<com.google.android.common.http.GoogleHttpClient: org.apache.http.HttpResponse executeWithoutRewriting(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>
<com.google.api.client.http.HttpResponse: void disconnect()>
<com.google.android.apps.mytracks.util.Api11Adapter: boolean handleSearchMenuSelection(android.app.Activity)>
<com.google.android.apps.analytics.PersistentHitStore: void storeUpdatedSession(android.database.sqlite.SQLiteDatabase)>
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: long getFrameTime()>
<com.google.android.apps.analytics.Referrer: int getIndex()>
<com.google.android.apps.mytracks.SearchListActivity$5$1: void run()>
<com.google.android.gms.location.LocationRequestCreator: void <init>()>
<java.lang.Math: double random()>
<com.google.gdata.util.parser.Chset: int parse(char[],int,int,java.lang.Object)>
<com.google.gdata.data.ExtensionProfile: com.google.gdata.data.ExtensionManifest getManifest(java.lang.Class)>
<com.google.android.apps.mytracks.stats.DoubleBuffer: boolean isFull()>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: boolean hasBatteryLevel()>
<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>
<android.preference.PreferenceActivity: void onActivityResult(int,int,android.content.Intent)>
<com.google.api.client.http.ByteArrayContent: com.google.api.client.http.AbstractInputStreamContent setType(java.lang.String)>
<com.google.android.apps.mytracks.fragments.ChooseActivityTypeDialogFragment: int access$000(android.app.Activity,java.lang.String)>
<java.lang.Double: double parseDouble(java.lang.String)>
<com.google.api.client.json.JsonGenerator: void serialize(boolean,java.lang.Object)>
<com.google.android.apps.mytracks.services.sensors.BluetoothSensorManager: void <init>(android.content.Context,com.google.android.apps.mytracks.services.sensors.MessageParser)>
<com.google.android.apps.mytracks.util.ApiAdapterFactory: com.google.android.apps.mytracks.util.ApiAdapter getApiAdapter()>
<com.google.api.client.http.HttpTransport: boolean supportsPatch()>
<com.google.common.collect.AbstractMapBasedMultiset: int count(java.lang.Object)>
<com.google.protobuf.CodedInputStream: void readMessage(com.google.protobuf.MessageLite$Builder,com.google.protobuf.ExtensionRegistryLite)>
<android.support.v4.view.ViewCompat$JBViewCompatImpl: void setImportantForAccessibility(android.view.View,int)>
<com.google.api.client.auth.oauth2.RefreshTokenRequest: com.google.api.client.auth.oauth2.RefreshTokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl)>
<java.util.HashSet: boolean contains(java.lang.Object)>
<java.util.LinkedList: void <init>()>
<com.google.android.apps.analytics.PipelinedRequester: void sendRequests()>
<com.google.protobuf.CodedInputStream: void checkLastTagWas(int)>
<com.google.android.gms.internal.q$a: android.os.IBinder getBinder()>
<java.lang.String: void <init>()>
<android.widget.TabHost: void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)>
<com.google.gdata.model.MetadataKey: void <init>(com.google.gdata.model.QName,java.lang.Class)>
<android.app.ListActivity: void <init>()>
<java.lang.Class: boolean isArray()>
<com.google.protobuf.CodedInputStream: boolean isAtEnd()>
<android.support.v4.app.FragmentManagerImpl: void dispatchActivityCreated()>
<android.net.Uri: android.net.Uri fromFile(java.io.File)>
<android.widget.ArrayAdapter: void notifyDataSetChanged()>
<java.io.File: boolean equals(java.lang.Object)>
<android.view.animation.Animation: void finalize()>
<com.google.common.collect.ImmutableListMultimap: void <init>(com.google.common.collect.ImmutableMap,int)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>
<android.support.v4.app.FragmentManagerImpl: void dispatchStop()>
<com.google.android.gms.common.SignInButton: void onClick(android.view.View)>
<com.google.api.client.http.apache.ApacheHttpTransport: com.google.api.client.http.LowLevelHttpRequest buildPostRequest(java.lang.String)>
<com.google.android.apps.mytracks.fragments.MarkerDetailFragment: void <clinit>()>
<com.google.android.apps.mytracks.content.Waypoint: long getStopId()>
<com.google.gdata.util.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<com.google.common.collect.SingletonImmutableList: void <init>(java.lang.Object)>
<com.google.common.collect.EmptyImmutableList: com.google.common.collect.UnmodifiableListIterator listIterator(int)>
<java.io.ByteArrayOutputStream: void close()>
<android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)>
<com.google.gdata.model.ElementCreatorImpl: void <init>(com.google.gdata.model.MetadataRegistry,com.google.gdata.model.TransformKey)>
<com.google.android.apps.mytracks.DeleteActivity: void onAsyncTaskCompleted()>
<com.google.android.apps.mytracks.widgets.TrackWidgetProvider: void updateStatisticsContainer(android.content.Context,android.widget.RemoteViews,com.google.android.apps.mytracks.content.Track)>
<com.google.gdata.util.httputil.FormUrlDecoder$Parameter: void <init>()>
<com.google.gdata.data.batch.BatchOperation: com.google.gdata.data.ExtensionDescription getDefaultDescription()>
<com.google.android.apps.mytracks.services.TrackRecordingService: boolean shouldResumeTrack()>
<com.google.gdata.util.ResourceNotFoundException: void <init>(java.net.HttpURLConnection)>
<com.google.gdata.client.http.GoogleGDataRequest: void execute()>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<com.google.android.apps.mytracks.MarkerListActivity: boolean access$100(com.google.android.apps.mytracks.MarkerListActivity,int,long[])>
<com.google.api.client.http.HttpResponse: void <init>(com.google.api.client.http.HttpRequest,com.google.api.client.http.LowLevelHttpResponse)>
<com.google.android.apps.mytracks.content.Waypoint: com.google.android.apps.mytracks.stats.TripStatistics getTripStatistics()>
<com.google.gdata.client.GoogleAuthTokenFactory$UserToken: java.lang.String getAuthorizationHeader(java.net.URL,java.lang.String)>
<com.google.protobuf.CodedInputStream: int readEnum()>
<android.support.v4.app.FragmentPagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)>
<com.google.android.apps.mytracks.fragments.FileTypeDialogFragment$1: void <init>(com.google.android.apps.mytracks.fragments.FileTypeDialogFragment,int)>
<com.google.android.apps.mytracks.TrackDetailActivity: void onStop()>
<com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList construct(java.lang.Object[])>
<android.accounts.Account: void <clinit>()>
<android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.support.v4.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.support.v4.app.DialogFragment: void show(android.support.v4.app.FragmentManager,java.lang.String)>
<com.google.api.client.googleapis.media.MediaHttpUploader: com.google.api.client.http.HttpResponse upload(com.google.api.client.http.GenericUrl)>
<com.google.gdata.util.ServiceException: java.lang.String getMessage()>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity$1: void <init>(com.google.android.apps.mytracks.settings.AdvancedSettingsActivity)>
<com.google.gdata.client.authn.oauthproxy.OAuthProxyResponse: void <init>(java.util.Map)>
<com.google.android.apps.mytracks.fragments.FrequencyDialogFragment: int getListIndex(int)>
<com.google.android.apps.analytics.NetworkDispatcher: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>
<android.support.v4.app.FragmentManagerImpl: void moveToState(int,int,int,boolean)>
<com.google.common.collect.RegularImmutableMap$EntrySet: com.google.common.collect.ImmutableList createAsList()>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: boolean access$1802(com.google.android.apps.mytracks.content.Sensor$SensorDataSet,boolean)>
<com.google.common.collect.Multisets$AbstractEntry: void <init>()>
<com.google.android.apps.mytracks.MarkerEditActivity: int getLayoutResId()>
<com.google.android.apps.mytracks.content.Track: com.google.android.apps.mytracks.stats.TripStatistics getTripStatistics()>
<com.google.android.apps.mytracks.MarkerListActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.google.common.collect.Maps: java.util.TreeMap newTreeMap()>
<com.google.gdata.util.LoggableOutputStream: void <init>(java.util.logging.Logger,java.io.OutputStream)>
<com.google.common.collect.LinkedListMultimap: void <init>()>
<com.google.android.apps.mytracks.widgets.TrackWidgetConfigActivity: android.widget.Spinner access$200(com.google.android.apps.mytracks.widgets.TrackWidgetConfigActivity)>
<android.support.v4.app.Fragment: void onStop()>
<com.google.api.services.drive.model.Permission: java.lang.String getRole()>
<com.google.android.apps.mytracks.io.sync.SyncUtils: void enableSync(android.content.Context)>
<com.google.android.apps.mytracks.maps.FixedSpeedTrackPathDescriptor: void <init>(android.content.Context)>
<java.util.LinkedHashMap: void <init>()>
<com.google.android.apps.mytracks.util.Api17Adapter: void <init>()>
<android.content.IntentFilter: void addAction(java.lang.String)>
<com.google.android.gms.internal.dz: void b(android.graphics.Point)>
<java.util.AbstractCollection: boolean isEmpty()>
<java.net.URI: java.lang.String getRawQuery()>
<android.support.v4.app.NavUtils: android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName)>
<com.google.android.apps.mytracks.fragments.MarkerDetailFragment$1: void run()>
<com.google.android.apps.mytracks.util.GoogleLocationUtils: android.content.Intent newLocationSettingsIntent(android.content.Context)>
<com.google.android.apps.mytracks.util.FileUtils: boolean isSpecialFat32(char)>
<java.util.concurrent.ConcurrentHashMap: void <init>()>
<com.google.api.client.http.HttpResponse: com.google.api.client.http.HttpParser getParser()>
<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException negativeSize()>
<com.google.android.apps.mytracks.content.TrackDataHub: boolean access$1102(com.google.android.apps.mytracks.content.TrackDataHub,boolean)>
<com.google.gdata.util.ContentType: boolean matchAtom(com.google.gdata.util.ContentType)>
<com.google.gdata.util.common.base.CharMatcher$5: void <init>()>
<com.google.wireless.gdata.data.Entry: java.lang.String getUpdateDate()>
<com.google.android.apps.analytics.Event: void setRandomVal(int)>
<com.google.android.apps.mytracks.content.MyTracksProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<java.lang.Double: java.lang.Double valueOf(double)>
<com.google.api.services.fusiontables.model.StyleFunction: void <init>()>
<com.google.android.apps.mytracks.services.tasks.TimerTaskExecutor: void scheduleTask(long)>
<android.support.v4.content.AsyncTaskLoader: void onForceLoad()>
<com.google.android.apps.mytracks.services.MyTracksLocationManager$3: void <init>(com.google.android.apps.mytracks.services.MyTracksLocationManager,com.google.android.gms.location.LocationListener)>
<com.google.android.apps.mytracks.AbstractMyTracksActivity: boolean configureActionBarHomeAsUp()>
<com.google.android.apps.mytracks.io.gdata.AndroidGDataClient: void close()>
<com.google.gdata.util.common.base.CharEscaper: void <init>()>
<com.google.android.apps.mytracks.fragments.EnableSyncDialogFragment$1: void <init>(com.google.android.apps.mytracks.fragments.EnableSyncDialogFragment)>
<com.google.common.collect.EmptyImmutableMap: java.lang.Object get(java.lang.Object)>
<com.google.gdata.wireformats.output.XmlGenerator: void <init>()>
<com.google.android.apps.mytracks.TrackListActivity$8: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>
<java.util.BitSet: void <init>(int)>
<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>
<com.google.gdata.util.common.base.StringUtil: java.lang.String strip(java.lang.String)>
<com.google.api.client.util.DataMap$EntryIterator: boolean hasNext()>
<com.google.android.apps.mytracks.TrackDetailActivity$1: void run()>
<android.support.v4.app.BackStackState: void <init>(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.BackStackRecord)>
<android.os.Handler: boolean sendEmptyMessage(int)>
<android.support.v4.util.SparseArrayCompat: void <clinit>()>
<com.google.api.client.util.escape.CharEscapers: void <clinit>()>
<org.apache.http.impl.client.RequestWrapper: void resetHeaders()>
<com.google.api.client.util.FieldInfo: com.google.api.client.util.FieldInfo of(java.lang.reflect.Field)>
<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>
<com.google.api.client.util.DataMap$Entry: void <init>(com.google.api.client.util.DataMap,com.google.api.client.util.FieldInfo,java.lang.Object)>
<java.lang.Double: boolean isNaN(double)>
<com.google.gdata.model.Schema$RootKey: com.google.gdata.model.Schema$RootKey get(com.google.gdata.model.AttributeKey)>
<com.google.android.apps.mytracks.TrackListActivity$1: void <init>(com.google.android.apps.mytracks.TrackListActivity)>
<java.math.BigDecimal: void <clinit>()>
<java.util.TreeMap: java.lang.Object remove(java.lang.Object)>
<com.google.api.services.fusiontables.model.StyleSetting: com.google.api.services.fusiontables.model.StyleSetting setTableId(java.lang.String)>
<java.math.BigInteger: void <clinit>()>
<com.google.android.apps.mytracks.settings.SensorSettingsActivity: void configSensorType(boolean)>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void writeOpenSegment()>
<com.google.gson.stream.JsonReader: void push(com.google.gson.stream.JsonScope)>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential$RequestHandler: void intercept(com.google.api.client.http.HttpRequest)>
<com.google.gdata.client.Service$ClientStreamProperties: com.google.gdata.wireformats.AltFormat getAltFormat()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void resetPowerSaveMode()>
<com.google.android.apps.mytracks.MapOverlay: void <init>(android.content.Context)>
<android.app.Activity: android.view.Window getWindow()>
<com.google.android.apps.mytracks.content.Waypoint: void setDuration(long)>
<com.google.api.client.http.ExponentialBackOffPolicy: boolean isBackOffRequired(int)>
<com.google.android.apps.mytracks.fragments.ChooseActivityTypeDialogFragment$1: void <init>(android.view.View,android.widget.TextView,java.lang.String,android.app.Activity,com.google.android.apps.mytracks.fragments.ChooseActivityTypeImageAdapter,com.google.android.apps.mytracks.fragments.ChooseActivityTypeDialogFragment$ChooseActivityTypeCaller)>
<com.google.android.apps.mytracks.io.file.importer.AbstractFileTrackImporter: void cleanImport()>
<com.google.api.client.googleapis.extensions.android.gms.auth.UserRecoverableAuthIOException: void <init>(com.google.android.gms.auth.UserRecoverableAuthException)>
<com.google.android.apps.mytracks.services.sensors.ant.SpeedDistanceChannelConfiguration: int getDeviceIdKey()>
<com.google.common.collect.RegularImmutableMap: java.lang.Object get(java.lang.Object)>
<android.graphics.Color: int green(int)>
<com.google.android.apps.mytracks.io.sendtogoogle.SendRequest: void setSendDrive(boolean)>
<com.google.api.client.googleapis.services.AbstractGoogleClient$Builder: com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setServicePath(java.lang.String)>
<com.google.api.services.drive.Drive$Permissions: com.google.api.services.drive.Drive$Permissions$List list(java.lang.String)>
<com.google.android.apps.mytracks.io.file.importer.KmzTrackImporter: long importFile(java.io.InputStream)>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence)>
<android.preference.DialogPreference: android.app.Dialog getDialog()>
<java.lang.String: int hashCode()>
<com.google.android.apps.mytracks.SearchListActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.google.api.client.http.GZipContent: boolean retrySupported()>
<com.google.gdata.client.Service: void endVersionScope()>
<com.google.gdata.util.common.net.UriParameterMap: com.google.common.collect.ListMultimap delegate()>
<com.google.android.apps.mytracks.fragments.MarkerDetailFragment: android.widget.LinearLayout access$100(com.google.android.apps.mytracks.fragments.MarkerDetailFragment)>
<com.google.android.apps.mytracks.content.MyTracksProvider$DatabaseHelper: void <init>(android.content.Context)>
<com.google.android.apps.mytracks.io.spreadsheets.SendSpreadsheetsUtils: void <clinit>()>
<android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)>
<com.google.api.services.fusiontables.model.Table: java.lang.String getTableId()>
<com.google.api.client.googleapis.services.AbstractGoogleClient: java.lang.String normalizeServicePath(java.lang.String)>
<com.google.android.apps.mytracks.MarkerListActivity: void onStart()>
<com.google.android.apps.mytracks.services.sensors.SensorManager: void <clinit>()>
<com.google.android.common.http.GoogleHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<com.google.android.apps.mytracks.util.StatsUtils: void setTripStatisticsValues(android.content.Context,android.app.Activity,android.view.View,com.google.android.apps.mytracks.stats.TripStatistics,com.google.android.apps.mytracks.util.CalorieUtils$ActivityType,java.lang.String)>
<com.google.gdata.model.Schema$RootKey: boolean equals(java.lang.Object)>
<java.util.Date: void <init>()>
<android.content.ContextWrapper: android.os.Looper getMainLooper()>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeature: int getFillColor()>
<com.google.android.apps.analytics.NetworkDispatcher: boolean isDryRun()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>
<android.support.v4.view.ViewPager: void setScrollState(int)>
<com.google.protobuf.UninitializedMessageException: void <init>(com.google.protobuf.MessageLite)>
<com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager$ConnectThread: void run()>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataSerializer: void serializeContent(org.xmlpull.v1.XmlSerializer,java.lang.String)>
<com.google.android.apps.mytracks.settings.SettingsActivity$3: void <init>(com.google.android.apps.mytracks.settings.SettingsActivity,java.lang.String[])>
<com.google.gdata.util.ServiceExceptionInitializer: void parse(java.net.HttpURLConnection)>
<com.google.gdata.wireformats.WireFormat: void <clinit>()>
<java.io.PrintWriter: void flush()>
<java.lang.Double: void <clinit>()>
<android.content.UriMatcher: void <init>(int)>
<com.google.android.apps.mytracks.content.Waypoint: java.lang.String getIcon()>
<com.google.gdata.client.Service$ClientStreamProperties: java.lang.String getQueryParameter(java.lang.String)>
<com.google.gdata.client.GoogleService: void <init>(java.lang.String,java.lang.String)>
<com.google.android.gms.internal.ba: boolean ac()>
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>
<android.support.v4.app.FragmentManagerImpl$5: void <init>(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.Fragment)>
<com.google.android.apps.mytracks.fragments.DeleteMarkerDialogFragment: com.google.android.apps.mytracks.fragments.DeleteMarkerDialogFragment newInstance(long[])>
<com.google.api.client.util.ArrayMap: java.lang.Object set(int,java.lang.Object,java.lang.Object)>
<android.support.v4.app.DialogFragment: void onCancel(android.content.DialogInterface)>
<com.google.android.apps.mytracks.MarkerListActivity: void onResume()>
<com.google.android.gms.internal.q$a: void <init>(com.google.android.gms.internal.q,java.lang.String)>
<android.os.AsyncTask: boolean cancel(boolean)>
<com.google.gdata.client.GoogleAuthTokenFactory: void handleSessionExpiredException(com.google.gdata.client.GoogleService$SessionExpiredException)>
<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<com.google.android.apps.mytracks.content.Sensor$SensorData: com.google.android.apps.mytracks.content.Sensor$SensorState getState()>
<com.google.android.apps.mytracks.settings.StatsSettingsActivity$1: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<com.google.android.apps.mytracks.util.StringUtils: java.lang.String[] getFrequencyOptions(android.content.Context,boolean)>
<com.google.android.apps.mytracks.TrackListActivity$6: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<java.util.Collections: java.util.Set emptySet()>
<android.support.v4.app.DialogFragment: void onActivityCreated(android.os.Bundle)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>
<com.google.android.apps.analytics.Event: boolean getUseServerTime()>
<com.google.gdata.util.ErrorDomain: void <init>(java.lang.String)>
<com.google.android.gms.common.SignInButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: java.lang.String getCoordinates(android.location.Location,java.lang.String)>
<com.google.android.apps.mytracks.content.Sensor$SensorState: com.google.android.apps.mytracks.content.Sensor$SensorState valueOf(int)>
<com.google.android.apps.mytracks.content.TrackDataHub: int access$1600(com.google.android.apps.mytracks.content.TrackDataHub)>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity: void onPermissionFailure()>
<com.google.android.apps.mytracks.TrackListActivity$3: void <init>(com.google.android.apps.mytracks.TrackListActivity)>
<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle bigText(java.lang.CharSequence)>
<com.google.android.apps.mytracks.fragments.ChooseAccountDialogFragment$3: void <init>(com.google.android.apps.mytracks.fragments.ChooseAccountDialogFragment)>
<java.io.Writer: void write(java.lang.String)>
<com.dsi.ant.AntInterface: void goToMarket(android.content.Context)>
<android.provider.SearchRecentSuggestions: void <clinit>()>
<com.google.gdata.model.TransformKey: com.google.gdata.model.MetadataContext getContext()>
<com.google.android.apps.mytracks.io.sendtogoogle.AbstractSendAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
<com.google.android.apps.mytracks.services.MyTracksLocationManager: long access$600(com.google.android.apps.mytracks.services.MyTracksLocationManager)>
<com.google.gdata.util.parser.Parser: com.google.gdata.util.parser.Parser list(com.google.gdata.util.parser.Parser)>
<com.google.gdata.client.http.GoogleGDataRequest$GoogleCookieHandler: void <init>(com.google.gdata.client.http.GoogleGDataRequest$1)>
<android.support.v4.app.FragmentManagerImpl: void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment)>
<android.location.Location: double getAltitude()>
<com.google.api.client.http.apache.ApacheHttpTransport: boolean supportsPatch()>
<com.google.android.apps.mytracks.io.sync.SyncUtils: void clearSyncState(android.content.Context)>
<com.google.gson.stream.JsonWriter: void setLenient(boolean)>
<com.google.protobuf.InvalidProtocolBufferException: com.google.protobuf.InvalidProtocolBufferException invalidWireType()>
<com.google.android.apps.mytracks.fragments.ChooseActivityDialogFragment: void processGroup(java.util.List,java.util.List,int,int)>
<com.google.android.gms.common.SignInButton: void setStyle(int,int)>
<java.lang.reflect.Modifier: boolean isInterface(int)>
<com.google.gson.stream.JsonReader: char readEscapeCharacter()>
<com.google.api.client.util.ArrayMap$EntryIterator: java.util.Map$Entry next()>
<com.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTaskFactory: void <init>()>
<com.google.android.apps.mytracks.util.ChartURLGenerator: double getNormalizedElevation(double,double,double)>
<com.google.android.common.gdata.AndroidGDataClient$PostRequestCreator: org.apache.http.client.methods.HttpUriRequest createRequest(java.net.URI)>
<com.google.api.client.util.DateTime: java.lang.String toStringRfc3339()>
<com.google.android.apps.mytracks.services.tasks.PeriodicTaskExecutor: void calculateNextTaskDistance()>
<com.google.gdata.model.ElementCreatorImpl$AttributeInfo: void <init>(com.google.gdata.model.AttributeKey,com.google.gdata.model.ElementCreatorImpl$Action)>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataParser: void handleEntry(com.google.wireless.gdata.data.Entry)>
<com.google.android.apps.mytracks.content.DescriptionGeneratorImpl: void writeString(java.lang.String,java.lang.StringBuilder,int,java.lang.String)>
<com.google.gdata.util.common.base.CharMatcher$2: void <init>()>
<com.google.api.client.util.ArrayMap$Entry: int hashCode()>
<com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager: void reset()>
<com.google.android.apps.mytracks.MapOverlay: com.google.android.apps.mytracks.maps.TrackPath access$202(com.google.android.apps.mytracks.MapOverlay,com.google.android.apps.mytracks.maps.TrackPath)>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment: void setupExportTypeOptions(android.support.v4.app.FragmentActivity)>
<com.google.api.client.http.HttpMediaType: com.google.api.client.http.HttpMediaType setParameter(java.lang.String,java.lang.String)>
<android.app.ProgressDialog: void setProgressStyle(int)>
<com.google.android.apps.mytracks.io.file.exporter.KmzTrackExporter: void <clinit>()>
<com.google.android.apps.mytracks.io.sendtogoogle.SendRequest: boolean isSendDrive()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: com.google.android.apps.analytics.NetworkDispatcher access$700(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread)>
<com.google.android.apps.mytracks.io.file.importer.ImportActivity$2: void <init>(com.google.android.apps.mytracks.io.file.importer.ImportActivity)>
<com.google.api.client.util.Types: boolean isArray(java.lang.reflect.Type)>
<com.google.android.apps.mytracks.TrackDetailActivity: boolean access$200(com.google.android.apps.mytracks.TrackDetailActivity)>
<com.google.api.client.json.JsonParser$1: void <clinit>()>
<com.google.android.apps.mytracks.services.sensors.BluetoothSensorManager: com.google.android.apps.mytracks.content.Sensor$SensorDataSet getSensorDataSet()>
<java.util.TreeSet: boolean addAll(java.util.Collection)>
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String,android.content.Context)>
<com.google.android.gms.internal.ce: void <init>(android.content.Context,com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks,com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener,java.lang.String)>
<com.google.android.apps.mytracks.util.StringUtils: java.lang.String formatDateTime(android.content.Context,long)>
<android.support.v4.content.CursorLoader: void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void trackPageView(java.lang.String)>
<com.google.android.apps.analytics.PersistentHitStore: int getNumStoredHits()>
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String)>
<com.google.android.apps.mytracks.util.Api8Adapter: android.bluetooth.BluetoothSocket getBluetoothSocket(android.bluetooth.BluetoothDevice)>
<com.google.protobuf.AbstractMessageLite$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.MessageLite)>
<com.google.gdata.data.ExtensionDescription: boolean isAggregate()>
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<com.google.common.collect.Sets: java.util.HashSet newHashSet(java.util.Iterator)>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity$3: boolean onPreferenceClick(android.preference.Preference)>
<java.lang.Enum: java.lang.String toString()>
<com.google.gdata.data.spreadsheet.TableEntry: void <clinit>()>
<com.google.protobuf.CodedInputStream: void skipMessage()>
<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>
<com.google.android.gms.internal.o: void <init>(android.app.Activity,android.content.Intent,int)>
<com.google.api.client.util.ArrayValueMap$ArrayValue: void addValue(java.lang.Class,java.lang.Object)>
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>
<android.support.v4.app.FragmentActivity$1: void <init>(android.support.v4.app.FragmentActivity)>
<com.google.api.client.util.ArrayMap: com.google.api.client.util.ArrayMap create()>
<com.google.android.apps.mytracks.TrackListActivity: void startRecording()>
<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>
<com.google.gdata.model.ElementCreatorImpl: com.google.gdata.model.ElementCreator setVisible(boolean)>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataSerializer: void declareEntryNamespaces(org.xmlpull.v1.XmlSerializer)>
<com.google.android.apps.mytracks.util.GoogleEarthUtils: android.content.Intent getPlayInEarthIntent(android.content.Context,java.lang.String)>
<android.view.animation.AccelerateInterpolator: void <init>(float)>
<com.google.gdata.util.XmlParser: void parse(java.io.Reader,com.google.gdata.util.XmlParser$ElementHandler,java.lang.String,java.lang.String)>
<com.google.api.client.util.GenericData: void putAll(java.util.Map)>
<com.google.gdata.util.common.base.CharMatcher$LookupTable: boolean get(char)>
<com.google.api.client.http.UriTemplate: java.util.Map getMap(java.lang.Object)>
<java.io.BufferedInputStream: long skip(long)>
<com.google.common.collect.RegularImmutableList: void <init>(java.lang.Object[],int,int)>
<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>
<com.google.android.apps.analytics.Referrer: void <init>(java.lang.String,long,int,int)>
<com.google.android.apps.mytracks.util.StringUtils: java.lang.String formatElapsedTime(long)>
<com.google.android.apps.mytracks.io.file.importer.ImportActivity$3: void <init>(com.google.android.apps.mytracks.io.file.importer.ImportActivity)>
<com.google.api.client.googleapis.extensions.android.accounts.GoogleAccountManager: void <init>(android.content.Context)>
<com.google.android.apps.analytics.Referrer: long getTimeStamp()>
<com.google.android.gms.internal.aa: void b(android.content.res.Resources,int,int)>
<com.google.android.gms.internal.dz: com.google.android.gms.internal.ea n(android.content.Context)>
<android.net.Uri$Builder: void <init>()>
<com.google.gdata.client.Service: com.google.gdata.util.Version initServiceVersion(java.lang.Class,com.google.gdata.util.Version)>
<com.google.android.apps.mytracks.widgets.TrackWidgetProvider: void updateRecordStatus(android.content.Context,android.widget.RemoteViews,boolean,boolean)>
<com.google.api.services.fusiontables.FusiontablesRequest: com.google.api.client.googleapis.services.AbstractGoogleClient getAbstractGoogleClient()>
<com.google.api.services.drive.model.ParentReference: void <init>()>
<com.google.api.client.http.javanet.NetHttpTransport: boolean supportsHead()>
<com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableListIterator emptyListIterator()>
<com.google.gdata.util.common.base.CharEscaper: void <clinit>()>
<com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment$1: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<java.lang.String: void <init>(char[],int,int)>
<com.google.android.apps.mytracks.content.Sensor$SensorData: void <init>(boolean)>
<android.support.v4.app.FragmentActivity: void onResume()>
<android.support.v4.app.DialogFragment: void onStop()>
<com.google.android.apps.mytracks.settings.MapSettingsActivity: void <init>()>
<android.view.View$AccessibilityDelegate: void <init>()>
<com.google.android.common.http.GoogleHttpClient: void enableCurlLogging(java.lang.String,int)>
<com.google.common.collect.LinkedHashMultiset: boolean add(java.lang.Object)>
<com.google.gdata.model.ElementCreatorImpl: com.google.gdata.model.ElementCreatorImpl setVisible(boolean)>
<com.google.gdata.util.ErrorDomain$ErrorCode: java.lang.String getLocation()>
<com.google.api.client.http.apache.ApacheHttpRequest: com.google.api.client.http.LowLevelHttpResponse execute()>
<java.util.Stack: boolean empty()>
<com.google.gdata.util.common.net.UriParameterMap$1: void <init>(com.google.gdata.util.common.net.UriParameterMap)>
<java.math.BigDecimal: void <init>(java.lang.String)>
<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<android.support.v4.content.Loader: void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener)>
<com.google.wireless.gdata.serializer.xml.XmlEntryGDataSerializer: void serializeEntryContents(org.xmlpull.v1.XmlSerializer,int)>
<com.google.gson.stream.JsonReader: void <clinit>()>
<java.util.Vector: java.lang.Object elementAt(int)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIcon(int)>
<com.google.android.apps.mytracks.TrackEditActivity$2: void <init>(com.google.android.apps.mytracks.TrackEditActivity)>
<com.google.gdata.util.parser.Chset: java.lang.Object clone()>
<com.google.api.client.repackaged.org.apache.commons.codec.binary.StringUtils: java.lang.IllegalStateException newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException)>
<android.app.Activity: void setDefaultKeyMode(int)>
<com.google.android.apps.mytracks.MarkerListActivity$4: void <init>(com.google.android.apps.mytracks.MarkerListActivity,android.content.Context,int,android.database.Cursor,int)>
<com.google.android.apps.mytracks.settings.SettingsActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void <clinit>()>
<java.lang.Class: java.lang.String toString()>
<com.google.gdata.client.Service: java.lang.Object parseResponseData(com.google.gdata.client.Service$GDataRequest,java.lang.Class)>
<com.google.android.apps.mytracks.services.sensors.SensorManager: void <init>()>
<com.google.gdata.util.parser.Chset: boolean test(char)>
<java.lang.String: byte[] getBytes(java.lang.String)>
<com.google.android.apps.mytracks.util.TrackRecordingServiceConnectionUtils: void resumeTrack(com.google.android.apps.mytracks.services.TrackRecordingServiceConnection)>
<com.google.gson.stream.JsonWriter: void flush()>
<android.view.View: int getMeasuredWidth()>
<java.util.zip.DeflaterOutputStream: void close()>
<com.google.gdata.model.QName: com.google.gdata.util.common.xml.XmlNamespace getNs()>
<com.google.wireless.gdata.serializer.xml.XmlEntryGDataSerializer: void serializeId(org.xmlpull.v1.XmlSerializer,java.lang.String)>
<com.google.android.gms.location.LocationRequest: com.google.android.gms.location.LocationRequest setPriority(int)>
<com.google.android.apps.mytracks.TrackController: void show()>
<java.util.Vector: void <init>(int)>
<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>
<java.math.BigInteger: void <init>(java.lang.String)>
<com.google.protobuf.AbstractMessageLite$Builder: com.google.protobuf.AbstractMessageLite$Builder mergeFrom(byte[],int,int)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.util.List)>
<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet entrySet()>
<com.google.api.client.util.ClassInfo: java.lang.reflect.Field getField(java.lang.String)>
<com.google.gdata.util.NotImplementedException: void <init>(java.net.HttpURLConnection)>
<com.google.android.apps.mytracks.io.sync.SyncUtils: void enableSyncForAccount(android.accounts.Account)>
<com.google.android.apps.mytracks.util.GoogleLocationUtils: void <clinit>()>
<com.google.api.client.http.LogContent: long getLength()>
<com.google.android.apps.mytracks.io.backup.BackupPreferencesListener: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<com.google.android.apps.mytracks.util.Api11Adapter: void <init>()>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeature: void setTitle(java.lang.String)>
<com.google.api.client.util.StringUtils: byte[] getBytesUtf8(java.lang.String)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void createEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
<com.google.android.apps.mytracks.util.AnalyticsUtils: void sendPageViews(android.content.Context,java.lang.String)>
<com.google.android.apps.mytracks.TabsAdapter$TabInfo: android.os.Bundle access$100(com.google.android.apps.mytracks.TabsAdapter$TabInfo)>
<java.lang.IllegalArgumentException: void <init>()>
<com.google.android.common.http.NetworkStatsEntity: void <init>(org.apache.http.HttpEntity,java.lang.String,int,long,long,long,long)>
<android.view.InputEvent: void <clinit>()>
<com.google.wireless.gdata.data.Entry: void setUpdateDate(java.lang.String)>
<android.support.v4.util.SparseArrayCompat: void remove(int)>
<com.google.android.apps.mytracks.content.TrackDataHub: boolean access$1202(com.google.android.apps.mytracks.content.TrackDataHub,boolean)>
<java.util.zip.GZIPInputStream: void close()>
<com.google.android.apps.mytracks.content.MyTracksProvider: boolean onCreate()>
<com.google.android.apps.mytracks.TrackListActivity: int getLayoutResId()>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpResponse execute()>
<com.google.android.apps.mytracks.util.Api16Adapter: void setAppWidgetSize(android.appwidget.AppWidgetManager,int,int)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: long getTrackPointId(long,android.location.Location)>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment$ExportType: com.google.android.apps.mytracks.fragments.ExportDialogFragment$ExportType[] values()>
<android.app.Activity: void runOnUiThread(java.lang.Runnable)>
<com.google.android.apps.mytracks.stats.DoubleBuffer: double getAverage()>
<com.google.android.gms.internal.q$a: boolean isBound()>
<com.google.android.apps.mytracks.util.StatsUtils: void setSpeed(android.content.Context,android.view.View,int,int,double,boolean,boolean)>
<java.lang.Object: java.lang.Object clone()>
<com.google.android.apps.mytracks.widgets.TrackWidgetConfigActivity$1: void onClick(android.view.View)>
<com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()>
<com.google.android.apps.mytracks.io.maps.SendMapsAsyncTask: void invalidateToken()>
<com.google.api.services.drive.Drive: com.google.api.services.drive.Drive$Files files()>
<com.google.gdata.client.http.JdkHttpUrlConnectionSource: void <init>()>
<com.google.gdata.util.Version: void <init>(java.lang.Class,java.lang.String,com.google.gdata.util.Version[])>
<java.lang.System: java.lang.String clearProperty(java.lang.String)>
<com.google.api.client.http.GenericUrl: void <init>(java.lang.String)>
<android.support.v4.app.FragmentTransaction: void <init>()>
<com.google.android.apps.mytracks.SearchListActivity: void doSearch(com.google.android.apps.mytracks.content.SearchEngine$SearchQuery)>
<com.google.android.apps.mytracks.TrackListActivity: boolean access$400(com.google.android.apps.mytracks.TrackListActivity)>
<com.google.gdata.util.httputil.FormUrlDecoder: java.lang.String decodeString(char[],int,int,java.lang.String)>
<com.google.android.apps.mytracks.TrackDetailActivity$2: void <init>(com.google.android.apps.mytracks.TrackDetailActivity)>
<com.google.android.apps.mytracks.fragments.ConfirmSyncDialogFragment$2: void <init>(com.google.android.apps.mytracks.fragments.ConfirmSyncDialogFragment)>
<java.lang.ThreadLocal: void <init>()>
<android.support.v4.view.ViewPager$PagerObserver: void <init>(android.support.v4.view.ViewPager)>
<java.util.Vector: boolean add(java.lang.Object)>
<com.google.api.client.util.FieldInfo: com.google.api.client.util.FieldInfo of(java.lang.Enum)>
<com.google.common.collect.ImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>
<com.google.common.collect.Iterables: java.lang.Object getOnlyElement(java.lang.Iterable)>
<java.io.PrintWriter: void <init>(java.io.Writer)>
<com.google.wireless.gdata.parser.xml.XmlGDataParser: org.xmlpull.v1.XmlPullParser getParser()>
<com.google.android.apps.mytracks.TrackDetailActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment: android.app.Dialog createDialog()>
<com.google.android.apps.mytracks.settings.SettingsActivity: void onActivityResult(int,int,android.content.Intent)>
<com.google.android.apps.mytracks.util.StringUtils: java.lang.String formatCoordinate(double)>
<java.lang.Class: boolean isPrimitive()>
<android.app.Dialog: void setCanceledOnTouchOutside(boolean)>
<com.google.api.client.http.GenericUrl: java.lang.String buildRelativeUrl()>
<com.google.gdata.util.common.base.UnicodeEscaper$2: void <init>()>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataSerializer: void <init>(com.google.wireless.gdata.parser.xml.XmlParserFactory,com.google.android.apps.mytracks.io.gdata.maps.MapFeatureEntry)>
<android.os.Binder: void finalize()>
<com.google.android.gms.internal.dz$c: void <init>(com.google.android.gms.internal.dz,android.content.Context)>
<com.google.android.apps.analytics.PipelinedRequester: void closeConnection()>
<com.google.gdata.util.parser.Parser: int parse(java.lang.String,java.lang.Object)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder setCadence(com.google.android.apps.mytracks.content.Sensor$SensorData)>
<com.google.android.apps.mytracks.MarkerListActivity$5: void onLoaderReset(android.support.v4.content.Loader)>
<android.support.v4.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,int)>
<java.util.BitSet: boolean get(int)>
<com.google.common.collect.ImmutableSet$Builder: void <init>()>
<com.google.android.apps.mytracks.TrackDetailActivity$2$1: void <init>(com.google.android.apps.mytracks.TrackDetailActivity$2)>
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
<com.google.android.apps.mytracks.content.MyTracksProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<com.google.gdata.model.ElementKey: com.google.gdata.model.ElementKey of(com.google.gdata.model.QName,java.lang.Class,java.lang.Class)>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity$5: void <init>(com.google.android.apps.mytracks.settings.AdvancedSettingsActivity)>
<com.google.api.client.http.HttpMediaType: void <clinit>()>
<com.google.android.apps.mytracks.util.StringUtils: void <clinit>()>
<com.google.api.client.json.JsonObjectParser: java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.reflect.Type)>
<com.google.protobuf.CodedInputStream: long readRawVarint64()>
<com.google.android.apps.mytracks.stats.ExtremityMonitor: void setMax(double)>
<com.google.android.apps.mytracks.content.TrackDataHub: long access$1002(com.google.android.apps.mytracks.content.TrackDataHub,long)>
<com.google.android.apps.mytracks.content.MyTracksProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<java.util.Collections: java.util.List emptyList()>
<com.google.android.apps.mytracks.AbstractMyTracksActivity: void onCreate(android.os.Bundle)>
<android.app.Notification$Builder: android.app.Notification build()>
<com.google.common.collect.RegularImmutableMap: com.google.common.collect.RegularImmutableMap$LinkedEntry[] access$100(com.google.common.collect.RegularImmutableMap)>
<com.google.android.apps.mytracks.content.SearchEngine: void retrieveTracks(com.google.android.apps.mytracks.content.SearchEngine$SearchQuery,java.util.ArrayList)>
<java.util.AbstractMap: java.lang.String toString()>
<com.google.api.client.auth.oauth2.RefreshTokenRequest: com.google.api.client.auth.oauth2.RefreshTokenRequest setRefreshToken(java.lang.String)>
<com.google.android.apps.mytracks.TrackEditActivity: void onDrivePermissionSuccess()>
<com.google.common.primitives.UnsignedInteger: int hashCode()>
<com.google.common.base.Preconditions: int checkPositionIndex(int,int)>
<java.util.ArrayList: void <init>(java.util.Collection)>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest: com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient getAbstractGoogleClient()>
<com.google.android.apps.mytracks.MarkerListActivity$5: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>
<com.google.protobuf.CodedInputStream: com.google.protobuf.CodedInputStream newInstance(byte[],int,int)>
<android.os.Process: int myPid()>
<android.support.v4.app.NavUtilsJB: java.lang.String getParentActivityName(android.content.pm.ActivityInfo)>
<com.google.api.services.drive.model.File: com.google.api.services.drive.model.File setMimeType(java.lang.String)>
<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<com.google.api.client.auth.oauth2.Credential: void <init>(com.google.api.client.auth.oauth2.Credential$AccessMethod,com.google.api.client.http.HttpTransport,com.google.api.client.json.JsonFactory,java.lang.String,com.google.api.client.http.HttpExecuteInterceptor,com.google.api.client.http.HttpRequestInitializer,java.util.List)>
<com.google.common.collect.AbstractMultiset$EntrySet: void <init>(com.google.common.collect.AbstractMultiset)>
<java.io.ByteArrayInputStream: void close()>
<com.google.common.collect.ImmutableList$1: void <init>(com.google.common.collect.ImmutableList,int,int)>
<com.google.gdata.model.transforms.atom.AtomVersionTransforms: void addOssTransform(com.google.gdata.model.MetadataRegistry,com.google.gdata.model.ElementKey)>
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header[] getAllHeaders()>
<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>
<android.util.Base64: byte[] decode(java.lang.String,int)>
<android.widget.LinearLayout: void <init>(android.content.Context)>
<com.google.android.apps.mytracks.TrackListActivity$3: boolean onClick(int,int[],long[])>
<com.google.android.apps.analytics.HitBuilder: java.lang.String encode(java.lang.String)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: com.google.android.apps.mytracks.content.Track getLastTrack()>
<com.google.android.apps.mytracks.util.SystemUtils: void <clinit>()>
<java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)>
<android.net.Uri: java.lang.String decode(java.lang.String)>
<com.google.android.apps.mytracks.stats.TripStatisticsUpdater: double getSmoothedElevation()>
<com.google.gdata.client.GoogleAuthTokenFactory: java.lang.String getAuthToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.google.gdata.client.ClientLoginAccountType)>
<com.google.android.apps.mytracks.fragments.PlayMultipleDialogFragment$1: void onClick(android.content.DialogInterface,int)>
<android.appwidget.AppWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>
<com.google.gdata.client.GoogleService: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.google.common.collect.LinkedListMultimap$Node: void <init>(java.lang.Object,java.lang.Object)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: void updateTrack(com.google.android.apps.mytracks.content.Track)>
<android.graphics.Point: void <clinit>()>
<java.util.concurrent.locks.ReentrantLock: void lock()>
<com.google.gdata.client.Service: java.lang.String getServiceVersion()>
<android.support.v4.content.CursorLoader: void onStartLoading()>
<com.google.android.apps.mytracks.TrackListActivity: boolean access$1100(com.google.android.apps.mytracks.TrackListActivity,int,long[])>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment: int getExternalStorageFormatId(com.google.android.apps.mytracks.io.file.TrackFileFormat)>
<com.google.android.gms.internal.p: boolean isConnected()>
<org.apache.http.impl.AbstractHttpClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)>
<com.google.android.apps.mytracks.io.file.importer.ImportActivity: long access$400(com.google.android.apps.mytracks.io.file.importer.ImportActivity)>
<com.google.android.apps.mytracks.MarkerListActivity$3: void <init>(com.google.android.apps.mytracks.MarkerListActivity)>
<com.google.gdata.client.Service$GDataRequest$RequestType: void <clinit>()>
<com.google.android.apps.mytracks.services.sensors.SensorManagerFactory: void <clinit>()>
<com.google.android.apps.mytracks.util.TrackIconUtils: void <clinit>()>
<com.google.gdata.model.Schema: com.google.gdata.model.Schema$RootKey getRootKey(com.google.gdata.model.ElementKey)>
<com.google.android.apps.mytracks.content.Sensor$SensorState: void <init>(java.lang.String,int,int,int)>
<com.google.common.collect.SingletonImmutableList: java.lang.Object get(int)>
<com.google.wireless.gdata.serializer.xml.XmlEntryGDataSerializer: void serializeSummary(org.xmlpull.v1.XmlSerializer,java.lang.String)>
<com.google.android.apps.mytracks.DeleteActivity: android.app.Dialog onCreateDialog(int)>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataSerializer: void serializeTitle(org.xmlpull.v1.XmlSerializer,java.lang.String)>
<android.support.v4.app.Fragment: void restoreViewState(android.os.Bundle)>
<com.google.android.gms.internal.ce$c: void <init>(com.google.android.gms.internal.ce,com.google.android.gms.internal.ce$1)>
<android.support.v4.content.AsyncTaskLoader: void executePendingTask()>
<com.google.common.collect.ImmutableSet$ArrayImmutableSet: com.google.common.collect.ImmutableList createAsList()>
<com.google.api.client.http.javanet.NetHttpRequest: void <init>(java.lang.String,java.lang.String)>
<com.google.gdata.util.Version: java.lang.String getVersionString()>
<com.google.gdata.wireformats.AltFormat: com.google.gdata.wireformats.AltFormat$Builder builder()>
<com.google.protobuf.GeneratedMessageLite: void <init>()>
<android.app.Notification$Builder: android.app.Notification$Builder setContentInfo(java.lang.CharSequence)>
<java.lang.Character: char toUpperCase(char)>
<com.google.android.apps.mytracks.content.MyTracksProvider: android.net.Uri insertContentValues(android.net.Uri,com.google.android.apps.mytracks.content.MyTracksProvider$UrlType,android.content.ContentValues)>
<com.google.android.apps.mytracks.services.sensors.ant.AntSensorManager: com.google.android.apps.mytracks.content.Sensor$SensorDataSet getSensorDataSet()>
<com.google.android.apps.mytracks.content.Sensor$SensorData: boolean access$302(com.google.android.apps.mytracks.content.Sensor$SensorData,boolean)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: void deleteWaypoint(android.content.Context,long,com.google.android.apps.mytracks.content.DescriptionGenerator)>
<com.google.gdata.util.common.base.CharEscaperBuilder: void <init>()>
<com.google.android.apps.analytics.PipelinedRequester: void addRequest(org.apache.http.HttpEntityEnclosingRequest)>
<com.google.common.collect.RegularImmutableMap$EntrySet: void <init>(com.google.common.collect.RegularImmutableMap,com.google.common.collect.RegularImmutableMap$1)>
<com.google.android.apps.mytracks.services.MyTracksLocationManager$5: void run()>
<com.google.gdata.data.ParseSource: void <init>(java.io.InputStream)>
<java.lang.Long: void <clinit>()>
<java.util.TreeSet: void <init>()>
<com.google.android.common.gdata.AndroidXmlParserFactory: void <init>()>
<com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter close(com.google.gson.stream.JsonScope,com.google.gson.stream.JsonScope,java.lang.String)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl$1: android.database.Cursor getCursor(long)>
<com.google.gdata.client.Service: void setTimeouts(com.google.gdata.client.Service$GDataRequest)>
<com.google.android.apps.mytracks.services.MyTracksLocationManager: boolean isAllowed()>
<com.google.gdata.data.Category: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.google.android.apps.mytracks.util.LocationUtils: double distance(android.location.Location,android.location.Location,android.location.Location)>
<java.lang.Character: int digit(char,int)>
<com.google.gdata.client.Service: com.google.gdata.data.IEntry insert(java.net.URL,com.google.gdata.data.IEntry)>
<com.google.android.apps.mytracks.services.sensors.PolarMessageParser: void <init>()>
<com.google.android.gms.internal.dz: java.lang.String bs()>
<com.google.android.apps.mytracks.TrackDetailActivity: void onExportDone(com.google.android.apps.mytracks.fragments.ExportDialogFragment$ExportType,com.google.android.apps.mytracks.io.file.TrackFileFormat,android.accounts.Account)>
<com.google.android.gms.internal.p: void <clinit>()>
<com.google.api.client.http.FileContent: void <init>(java.lang.String,java.io.File)>
<android.support.v4.view.ViewPager: void sortChildDrawingOrder()>
<com.google.api.client.http.HttpHeaders: java.lang.String getLocation()>
<com.google.android.apps.mytracks.io.sync.SyncService: void <init>()>
<android.widget.ArrayAdapter: java.lang.Object getItem(int)>
<com.google.gdata.util.Version: void computeImpliedVersions(com.google.gdata.util.Version[])>
<android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean: void <init>()>
<com.google.android.apps.mytracks.content.WaypointCreationRequest: void <init>(com.google.android.apps.mytracks.content.Waypoint$WaypointType,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataSerializer: void serializeEntryContents(org.xmlpull.v1.XmlSerializer,int)>
<com.google.gdata.client.http.HttpGDataRequest: com.google.gdata.util.ContentType getRequestContentType()>
<com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableListIterator forArray(java.lang.Object[],int,int,int)>
<com.google.api.client.http.apache.ApacheHttpRequest: void addHeader(java.lang.String,java.lang.String)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder newBuilder()>
<android.support.v4.app.Fragment: void onActivityCreated(android.os.Bundle)>
<java.io.BufferedInputStream: void <init>(java.io.InputStream)>
<com.google.android.apps.mytracks.io.gdata.GDataClientFactory: com.google.wireless.gdata.client.GDataClient getGDataClient(android.content.Context)>
<com.google.gdata.wireformats.output.AtomDualGenerator: void <init>(com.google.gdata.wireformats.AltFormat)>
<com.google.android.apps.mytracks.MapOverlay: java.lang.String access$102(com.google.android.apps.mytracks.MapOverlay,java.lang.String)>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<android.location.Location: boolean hasAltitude()>
<com.google.android.apps.mytracks.util.PreferencesUtils: void setLong(android.content.Context,int,long)>
<com.google.android.apps.mytracks.util.StringUtils: java.lang.String[] getSpeedParts(android.content.Context,double,boolean,boolean)>
<com.google.android.apps.mytracks.SearchListActivity: int getLayoutResId()>
<com.google.gdata.wireformats.AltFormat$Builder: com.google.gdata.wireformats.AltFormat$Builder setName(java.lang.String)>
<android.graphics.Bitmap$CompressFormat: void <clinit>()>
<com.google.api.client.http.AbstractHttpContent: java.lang.String getType()>
<com.google.api.client.http.AbstractHttpContent: java.lang.String getEncoding()>
<android.view.accessibility.AccessibilityNodeInfo: void <clinit>()>
<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.apps.mytracks.widgets.TrackWidgetProvider: void updateAppWidget(android.content.Context,android.appwidget.AppWidgetManager,int,long)>
<com.google.android.common.http.GoogleHttpClient$WrappedLayeredSocketFactory: void <init>(com.google.android.common.http.GoogleHttpClient,org.apache.http.conn.scheme.LayeredSocketFactory)>
<com.google.android.apps.mytracks.util.Api10Adapter: void <init>()>
<com.google.gdata.util.VersionRegistry: com.google.gdata.util.Version getVersionFromProperty(java.lang.Class)>
<com.google.android.common.http.UrlRules: com.google.android.common.http.UrlRules getRules(android.content.ContentResolver)>
<com.google.api.services.drive.model.Permission: java.lang.String getType()>
<android.support.v4.app.Fragment: void onDestroyView()>
<com.google.android.apps.mytracks.settings.RecordingSettingsActivity: void onChooseActivityTypeDone(java.lang.String,boolean)>
<com.google.android.apps.mytracks.maps.DynamicSpeedTrackPathDescriptor$1: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<com.google.api.client.http.apache.ApacheHttpResponse: java.lang.String getReasonPhrase()>
<com.google.android.apps.mytracks.fragments.ChooseActivityDialogFragment$1: void <init>(com.google.android.apps.mytracks.fragments.ChooseActivityDialogFragment,android.content.Context,int,int,java.util.List)>
<com.google.api.client.util.GenericData: java.util.Set entrySet()>
<com.google.api.client.http.HttpMediaType: boolean equalsIgnoreParameters(java.lang.String,java.lang.String)>
<java.lang.Math: double max(double,double)>
<android.view.View: int getImportantForAccessibility()>
<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>
<android.content.Intent: android.content.Intent addFlags(int)>
<java.lang.String: byte[] getBytes()>
<com.google.gdata.wireformats.AltFormat: java.lang.String toString()>
<com.google.gdata.util.common.base.CharMatcher$13: void <init>(char,char)>
<com.google.api.client.util.Types: java.lang.IllegalArgumentException handleExceptionForNewInstance(java.lang.Exception,java.lang.Class)>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient: com.google.api.client.json.JsonFactory getJsonFactory()>
<android.support.v4.content.ModernAsyncTask$WorkerRunnable: void <init>(android.support.v4.content.ModernAsyncTask$1)>
<com.google.api.client.http.apache.ApacheHttpTransport: com.google.api.client.http.apache.ApacheHttpRequest buildDeleteRequest(java.lang.String)>
<com.google.api.client.googleapis.media.MediaHttpUploader: void serverErrorCallback()>
<com.google.wireless.gdata.serializer.xml.XmlEntryGDataSerializer: void serializeAuthor(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>
<java.util.ArrayList: void clear()>
<com.google.api.client.util.escape.Escaper: void <init>()>
<com.google.api.client.http.UriTemplate$CompositeOutput: void <clinit>()>
<com.google.android.apps.mytracks.settings.SettingsActivity: void onCreate(android.os.Bundle)>
<com.google.android.apps.mytracks.util.Api16Adapter: int getAppWidgetSize(android.appwidget.AppWidgetManager,int)>
<com.google.protobuf.CodedInputStream: int readTag()>
<android.support.v4.app.LoaderManagerImpl: void updateActivity(android.support.v4.app.FragmentActivity)>
<com.google.android.apps.mytracks.services.TrackRecordingService: long access$102(com.google.android.apps.mytracks.services.TrackRecordingService,long)>
<com.google.api.client.json.gson.GsonGenerator: void writeFieldName(java.lang.String)>
<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>
<com.google.android.apps.mytracks.fragments.ChooseActivityTypeDialogFragment$2: void <init>(android.app.Activity,java.lang.String,android.app.AlertDialog,com.google.android.apps.mytracks.fragments.ChooseActivityTypeImageAdapter,android.view.View,android.widget.TextView,java.lang.String)>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataParserFactory: com.google.wireless.gdata.parser.GDataParser createParserForClass(java.lang.Class,java.io.InputStream)>
<com.google.android.apps.mytracks.content.Sensor$SensorData: void <init>(com.google.android.apps.mytracks.content.Sensor$1)>
<com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment: android.accounts.Account[] access$400(com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment)>
<com.google.android.apps.mytracks.HelpActivity: void onCreate(android.os.Bundle)>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,int,float,int,float)>
<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
<com.google.gdata.client.Service: void startVersionScope()>
<com.google.android.apps.mytracks.TrackDetailActivity: java.lang.String access$702(com.google.android.apps.mytracks.TrackDetailActivity,java.lang.String)>
<android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
<android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>
<android.support.v4.view.AccessibilityDelegateCompatJellyBean: java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean)>
<java.io.BufferedInputStream: int read(byte[],int,int)>
<android.app.Activity: void onStop()>
<com.google.api.client.googleapis.services.AbstractGoogleClientRequest: com.google.api.client.googleapis.services.AbstractGoogleClient getAbstractGoogleClient()>
<com.google.api.client.util.GenericData: void <init>()>
<android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>
<android.support.v4.app.FragmentActivity$2: void <init>(android.support.v4.app.FragmentActivity)>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
<com.google.api.client.json.gson.GsonParser: java.math.BigDecimal getDecimalValue()>
<android.os.Process: int myUid()>
<com.google.gdata.util.common.xml.parsing.SecureGenericXMLFactory$SecureSAXParserFactory: void <init>(javax.xml.parsers.SAXParserFactory)>
<com.google.wireless.gdata.serializer.xml.XmlEntryGDataSerializer: void declareExtraEntryNamespaces(org.xmlpull.v1.XmlSerializer)>
<java.util.AbstractMap: void <init>()>
<android.support.v4.content.Loader: void abandon()>
<com.google.android.apps.mytracks.services.tasks.CheckPermissionAsyncTask: java.lang.Boolean doInBackground(java.lang.Void[])>
<com.google.android.apps.mytracks.io.gdata.maps.MapsGDataConverter: com.google.android.apps.mytracks.io.gdata.maps.MapFeatureEntry getEntryForFeature(com.google.android.apps.mytracks.io.gdata.maps.MapsFeature)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread$AsyncDispatchTask access$400(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread)>
<com.google.api.client.http.EmptyContent: void writeTo(java.io.OutputStream)>
<java.io.BufferedInputStream: boolean markSupported()>
<com.google.android.gms.internal.q$a: boolean c(com.google.android.gms.internal.p$e)>
<com.google.api.services.drive.model.Permission: com.google.api.services.drive.model.Permission setRole(java.lang.String)>
<com.google.android.apps.mytracks.SearchListActivity: void onNewIntent(android.content.Intent)>
<com.google.android.apps.mytracks.content.TrackDataHub: void loadDataForListener(com.google.android.apps.mytracks.content.TrackDataListener)>
<com.google.gdata.data.ExtensionDescription: boolean isRequired()>
<com.google.gdata.util.common.base.Preconditions: void checkArgument(boolean)>
<org.apache.http.message.BasicHttpEntityEnclosingRequest: void <init>(java.lang.String,java.lang.String)>
<java.util.Random: int nextInt(int)>
<android.support.v4.app.FragmentManagerImpl: void saveFragmentViewState(android.support.v4.app.Fragment)>
<com.google.android.apps.mytracks.stats.ExtremityMonitor: void setMin(double)>
<com.google.android.apps.mytracks.SearchListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<com.google.common.primitives.UnsignedLong: void <init>(long)>
<com.google.android.gms.internal.q: void b(java.lang.String,com.google.android.gms.internal.p$e)>
<com.google.android.apps.mytracks.stats.TripStatisticsUpdater: void <init>(long)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void setDispatchPeriod(int)>
<android.view.View: int getPaddingRight()>
<com.google.api.client.http.HttpMediaType: boolean matchesToken(java.lang.String)>
<com.google.api.client.util.Types: java.lang.Object toArray(java.util.Collection,java.lang.Class)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeatureMetadata: int getFillColor()>
<com.google.common.collect.Multisets$EntrySet: void <init>()>
<android.support.v4.widget.EdgeEffectCompat: void <init>(android.content.Context)>
<com.google.api.client.http.HttpRequest: com.google.api.client.http.HttpTransport getTransport()>
<java.lang.Integer: int highestOneBit(int)>
<com.google.gdata.client.SimpleCookieManager: void <clinit>()>
<com.google.android.apps.mytracks.io.file.exporter.SaveActivity$3: void <init>(com.google.android.apps.mytracks.io.file.exporter.SaveActivity)>
<com.google.android.apps.mytracks.io.file.importer.KmzTrackImporter: void <init>(android.content.Context,long)>
<com.google.android.apps.mytracks.content.Track: void setDriveId(java.lang.String)>
<com.google.android.apps.mytracks.SearchListActivity$2: void <init>(com.google.android.apps.mytracks.SearchListActivity)>
<com.google.common.collect.Iterators$13: void <init>(int,int,java.lang.Object[],int)>
<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>
<android.location.Location: void setAccuracy(float)>
<android.app.Activity: void <init>()>
<com.google.android.apps.mytracks.util.Api10Adapter: android.bluetooth.BluetoothSocket getBluetoothSocket(android.bluetooth.BluetoothDevice)>
<com.google.android.apps.analytics.CustomVariable: java.lang.String getValue()>
<com.google.android.apps.mytracks.services.TrackRecordingService$2: void <init>(com.google.android.apps.mytracks.services.TrackRecordingService)>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void writeTrackStyle()>
<com.google.android.apps.mytracks.services.sensors.ZephyrMessageParser: int getFrameSize()>
<com.google.android.apps.mytracks.services.TrackRecordingService: android.os.Handler access$1700(com.google.android.apps.mytracks.services.TrackRecordingService)>
<com.google.android.apps.mytracks.services.tasks.PeriodicTaskExecutor: void setTaskFrequency(int)>
<android.content.ContentResolver: void setMasterSyncAutomatically(boolean)>
<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeature: java.lang.String getIconUrl()>
<com.google.gdata.model.AttributeKey: com.google.gdata.model.AttributeKey of(com.google.gdata.model.QName)>
<java.lang.Throwable: void <init>()>
<com.google.android.apps.mytracks.settings.RecordingSettingsActivity: void setRecordingGpsAccuracySummaryAndOptions(java.lang.String[],java.lang.String[],java.lang.String[],boolean)>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity: android.preference.CheckBoxPreference access$200(com.google.android.apps.mytracks.settings.AdvancedSettingsActivity)>
<com.google.android.apps.analytics.Event: void setTimestampPrevious(int)>
<com.google.wireless.gdata.parser.xml.XmlGDataParser: void handleExtraLinkInEntry(java.lang.String,java.lang.String,java.lang.String,com.google.wireless.gdata.data.Entry)>
<com.google.android.apps.mytracks.content.Sensor$SensorData: int access$602(com.google.android.apps.mytracks.content.Sensor$SensorData,int)>
<java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.settings.MapSettingsActivity: void access$000(com.google.android.apps.mytracks.settings.MapSettingsActivity,java.lang.String)>
<com.google.android.apps.analytics.HitBuilder: java.lang.String getCustomVariableParams(com.google.android.apps.analytics.Event)>
<java.util.AbstractCollection: boolean containsAll(java.util.Collection)>
<com.google.android.apps.mytracks.content.Sensor$SensorData: com.google.android.apps.mytracks.content.Sensor$SensorState access$402(com.google.android.apps.mytracks.content.Sensor$SensorData,com.google.android.apps.mytracks.content.Sensor$SensorState)>
<java.lang.Class: java.lang.Object newInstance()>
<org.apache.http.client.methods.HttpPut: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.settings.MapSettingsActivity$6: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
<com.google.gdata.util.common.base.CharMatcher$2: com.google.gdata.util.common.base.CharMatcher or(com.google.gdata.util.common.base.CharMatcher)>
<com.google.api.services.drive.Drive$Builder: com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setRootUrl(java.lang.String)>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<com.google.android.apps.mytracks.stats.ExtremityMonitor: void reset()>
<com.google.api.services.fusiontables.Fusiontables: com.google.api.services.fusiontables.Fusiontables$Style style()>
<org.apache.http.entity.AbstractHttpEntity: void <init>()>
<com.google.android.apps.mytracks.util.StatsUtils: void setCoordinateValue(android.content.Context,android.view.View,int,double)>
<android.appwidget.AppWidgetProvider: void onEnabled(android.content.Context)>
<com.google.android.apps.mytracks.SearchListActivity: void onStop()>
<com.google.gdata.data.BaseFeed: com.google.gdata.data.BaseEntry createEntry()>
<com.google.common.base.Preconditions: void checkState(boolean)>
<com.google.gson.stream.JsonWriter: void replaceTop(com.google.gson.stream.JsonScope)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtils$Factory: com.google.android.apps.mytracks.content.MyTracksProviderUtils newForContext(android.content.Context)>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<android.support.v4.app.Fragment: void onViewStateRestored(android.os.Bundle)>
<java.lang.Long: java.lang.String toString(long)>
<com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment: android.widget.Spinner access$500(com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment)>
<com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment$3: void <init>(com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment)>
<com.google.android.apps.mytracks.settings.SettingsActivity: void handleSync(boolean)>
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>
<java.util.TreeSet: void <init>(java.util.Comparator)>
<com.google.android.apps.mytracks.util.StatsUtils: void setLocationValues(android.content.Context,android.app.Activity,android.view.View,android.location.Location,boolean)>
<com.google.android.apps.mytracks.TrackListActivity: java.lang.String access$600()>
<com.google.api.client.http.javanet.NetHttpTransport: com.google.api.client.http.javanet.NetHttpRequest buildPutRequest(java.lang.String)>
<com.google.gdata.data.BaseFeed: void <clinit>()>
<com.google.android.apps.mytracks.services.TrackRecordingService: com.google.android.apps.mytracks.services.tasks.PeriodicTaskExecutor access$400(com.google.android.apps.mytracks.services.TrackRecordingService)>
<com.google.android.apps.mytracks.TrackDetailActivity: void handleIntent(android.content.Intent)>
<com.google.common.collect.Maps: int capacity(int)>
<com.google.gdata.model.ElementCreatorImpl: com.google.gdata.model.ElementCreatorImpl addUndeclaredElementMarker()>
<com.google.api.client.googleapis.services.AbstractGoogleClient$Builder: void <init>(com.google.api.client.http.HttpTransport,java.lang.String,java.lang.String,com.google.api.client.util.ObjectParser,com.google.api.client.http.HttpRequestInitializer)>
<com.google.android.apps.mytracks.content.DataSourceManager: com.google.android.apps.mytracks.content.DataSourceListener access$100(com.google.android.apps.mytracks.content.DataSourceManager)>
<android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)>
<java.io.StringReader: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.settings.MapSettingsActivity: void updateSpeedSummary(android.preference.Preference,int,int)>
<com.google.android.gms.internal.bd: com.google.android.gms.internal.bc f(java.lang.Object)>
<com.google.android.apps.mytracks.services.sensors.SensorUtils: byte getCrc8(byte[],int,int)>
<java.lang.String: char charAt(int)>
<java.lang.Float: java.lang.Float valueOf(java.lang.String)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Float)>
<com.google.android.apps.mytracks.TrackListActivity$1$1: void <init>(com.google.android.apps.mytracks.TrackListActivity$1)>
<com.google.android.apps.mytracks.content.Waypoint: void setLocation(android.location.Location)>
<android.widget.Spinner: void onLayout(boolean,int,int,int,int)>
<com.google.android.apps.mytracks.fragments.ChooseActivityDialogFragment$2: void <init>(com.google.android.apps.mytracks.fragments.ChooseActivityDialogFragment)>
<com.google.android.apps.mytracks.services.TrackRecordingService: void <clinit>()>
<java.util.Arrays: void sort(java.lang.Object[])>
<com.google.gdata.util.ErrorDomain$ErrorCode: java.lang.String getExtendedHelp()>
<android.support.v4.app.BackStackRecord$Op: void <init>()>
<com.google.gdata.util.httputil.FormUrlDecoder$Parameter: void <init>(com.google.gdata.util.httputil.FormUrlDecoder$1)>
<com.google.android.apps.analytics.HitBuilder: java.lang.String constructHitRequestPath(com.google.android.apps.analytics.Event,com.google.android.apps.analytics.Referrer)>
<com.google.android.apps.analytics.PersistentHitStore: int getNumStoredHitsFromDb()>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void prepare(java.io.OutputStream)>
<com.google.android.apps.mytracks.content.DataSourceManager$WaypointsTableObserver: void <init>(com.google.android.apps.mytracks.content.DataSourceManager)>
<com.google.api.client.http.ExponentialBackOffPolicy: long getElapsedTimeMillis()>
<android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder create()>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl$1: void <init>(com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl,long,long,boolean,com.google.android.apps.mytracks.content.MyTracksProviderUtils$LocationFactory)>
<com.google.android.apps.mytracks.io.sendtogoogle.UploadResultActivity$1: void <init>(com.google.android.apps.mytracks.io.sendtogoogle.UploadResultActivity)>
<android.content.ContentResolver: void cancelSync(android.accounts.Account,java.lang.String)>
<com.google.android.apps.mytracks.TrackDetailActivity: void onPause()>
<com.google.api.client.http.AbstractHttpContent: com.google.api.client.http.HttpMediaType getMediaType()>
<com.google.api.client.util.GenericData$EntryIterator: boolean hasNext()>
<com.google.api.client.http.HttpMediaType: void <init>(java.lang.String)>
<com.google.common.collect.EmptyImmutableSet: java.util.Iterator iterator()>
<com.google.android.apps.mytracks.content.Sensor$SensorData: boolean hasState()>
<org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket createSocket()>
<com.google.gdata.model.MetadataRegistry: com.google.gdata.model.ElementCreator build(com.google.gdata.model.ElementKey,com.google.gdata.model.ElementKey,com.google.gdata.model.MetadataContext)>
<com.google.api.client.googleapis.services.AbstractGoogleClientRequest: void <init>(com.google.api.client.googleapis.services.AbstractGoogleClient,java.lang.String,java.lang.String,com.google.api.client.http.HttpContent,java.lang.Class)>
<com.google.android.apps.mytracks.content.TrackDataHub: void access$200(com.google.android.apps.mytracks.content.TrackDataHub)>
<com.google.android.apps.mytracks.SensorStateActivity: void stopTempSensorManager()>
<java.util.TimerTask: boolean cancel()>
<com.google.android.apps.mytracks.stats.TripStatistics: void addMovingTime(long)>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter endObject()>
<com.google.common.collect.ImmutableList$Builder: void <init>()>
<com.google.android.apps.mytracks.stats.TripStatistics: void addTotalDistance(double)>
<com.google.api.client.json.JsonFactory: void <init>()>
<com.google.common.collect.AbstractMultiset: int size()>
<com.google.common.io.LimitInputStream: void <init>(java.io.InputStream,long)>
<com.google.android.apps.mytracks.io.sync.SyncUtils: void <clinit>()>
<com.google.android.apps.mytracks.io.maps.SendMapsAsyncTask: void <clinit>()>
<com.google.api.client.util.GenericData: java.lang.Object get(java.lang.Object)>
<com.google.android.apps.mytracks.SearchListActivity: void prepareMarkerForDisplay(com.google.android.apps.mytracks.content.Waypoint,java.util.Map)>
<com.google.android.apps.mytracks.fragments.FileTypeDialogFragment: android.app.Dialog createDialog()>
<com.google.android.apps.mytracks.content.MyTracksProvider: boolean canAccess()>
<com.google.gdata.client.GoogleService$TermsNotAgreedException: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.services.tasks.SplitPeriodicTaskFactory: void <init>()>
<com.google.android.gms.internal.dz$b: void <init>(com.google.android.gms.internal.dz)>
<com.google.gdata.model.MetadataRegistry: void whitelistElements()>
<java.util.zip.DeflaterOutputStream: void flush()>
<com.google.android.apps.mytracks.util.Api17Adapter: int getAppWidgetSizeDefault(android.os.Bundle)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: boolean updateWaypoint(com.google.android.apps.mytracks.content.Waypoint)>
<android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>
<java.lang.Class: boolean isMemberClass()>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential: java.lang.String getToken()>
<com.google.android.apps.mytracks.services.sensors.ant.ChannelConfiguration: void setDeinitializing(boolean)>
<android.content.Intent: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.SensorStateActivity: void onCreate(android.os.Bundle)>
<com.google.android.apps.mytracks.content.Track: java.lang.String getName()>
<com.google.common.base.Throwables: void propagateIfPossible(java.lang.Throwable)>
<com.google.android.apps.mytracks.util.StringUtils: java.lang.String formatCData(java.lang.String)>
<com.google.wireless.gdata.parser.xml.XmlGDataParser: com.google.wireless.gdata.data.Entry parseStandaloneEntry()>
<android.content.pm.ResolveInfo$DisplayNameComparator: void <init>(android.content.pm.PackageManager)>
<com.google.android.apps.mytracks.stats.TripStatistics: double getCalorie()>
<com.google.api.client.googleapis.extensions.android.gms.auth.GooglePlayServicesAvailabilityIOException: void <init>(com.google.android.gms.auth.GooglePlayServicesAvailabilityException)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: android.database.Cursor getTrackCursor(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.support.v4.app.BackStackRecord: void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)>
<android.content.ContextWrapper: void startActivities(android.content.Intent[],android.os.Bundle)>
<com.google.android.apps.mytracks.fragments.ChooseActivityTypeDialogFragment: com.google.android.apps.mytracks.fragments.ChooseActivityTypeDialogFragment newInstance(java.lang.String)>
<com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager: void access$400(com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager,android.bluetooth.BluetoothSocket,android.bluetooth.BluetoothDevice)>
<com.google.android.apps.mytracks.fragments.EnableSyncDialogFragment$1: void onClick(android.content.DialogInterface,int)>
<android.widget.AbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.api.client.http.InputStreamContent: java.io.InputStream getInputStream()>
<java.math.BigInteger: boolean equals(java.lang.Object)>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity: void <init>()>
<android.app.IntentService: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.io.file.exporter.SaveActivity$1: void onCancel(android.content.DialogInterface)>
<com.google.api.client.json.gson.GsonFactory: com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.OutputStream,java.nio.charset.Charset)>
<com.google.api.client.http.AbstractHttpContent: java.nio.charset.Charset getCharset()>
<com.google.gdata.util.common.base.CharEscapers: void <clinit>()>
<com.google.gdata.data.spreadsheet.RecordEntry: void <clinit>()>
<com.google.gdata.data.ExtensionDescription: java.lang.Class getExtensionClass()>
<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>
<com.google.android.apps.mytracks.services.MyTracksLocationManager$GoogleSettingsObserver: void <init>(com.google.android.apps.mytracks.services.MyTracksLocationManager,android.os.Handler)>
<com.google.api.services.fusiontables.Fusiontables$Style: void <init>(com.google.api.services.fusiontables.Fusiontables)>
<android.widget.ArrayAdapter: void setDropDownViewResource(int)>
<com.google.gdata.client.http.HttpGDataRequest: com.google.gdata.data.ParseSource getParseSource()>
<com.google.gdata.client.Service: void writeRequestData(com.google.gdata.client.Service$GDataRequest,com.google.gdata.client.Service$ClientOutputProperties,java.lang.Object)>
<com.google.android.apps.mytracks.services.TrackRecordingService$4: void <init>(com.google.android.apps.mytracks.services.TrackRecordingService)>
<com.google.gdata.client.http.HttpGDataRequest: void checkResponse()>
<org.apache.http.impl.client.AbstractHttpClient: void setHttpRequestRetryHandler(org.apache.http.client.HttpRequestRetryHandler)>
<com.google.android.apps.mytracks.fragments.ChooseAccountDialogFragment: com.google.android.apps.mytracks.fragments.ChooseAccountDialogFragment$ChooseAccountCaller access$000(com.google.android.apps.mytracks.fragments.ChooseAccountDialogFragment)>
<com.google.android.apps.mytracks.services.sensors.ant.ChannelConfiguration: void setDeviceNumber(short)>
<com.google.api.services.fusiontables.model.Template: com.google.api.services.fusiontables.model.Template setAutomaticColumnNames(java.util.List)>
<com.google.gdata.util.ParseException: void <init>(java.lang.String)>
<java.lang.NullPointerException: void <init>()>
<android.view.View: int getScrollY()>
<com.google.android.apps.analytics.Utils: java.lang.String addQueueTimeParameter(java.lang.String,long)>
<com.google.android.apps.mytracks.io.drive.SendDriveAsyncTask: void addPermission(com.google.api.services.drive.Drive,com.google.api.services.drive.model.File)>
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>
<com.google.api.client.util.escape.UnicodeEscaper: int codePointAt(java.lang.CharSequence,int,int)>
<com.google.android.apps.mytracks.content.SearchEngine$ScoredResult: void <init>(com.google.android.apps.mytracks.content.Waypoint,double)>
<android.support.v4.app.Fragment: android.view.View getView()>
<android.app.Notification$Builder: void <init>(android.content.Context)>
<com.google.android.apps.analytics.Referrer: java.lang.String getReferrerString()>
<com.google.android.apps.mytracks.io.gdata.maps.MapsClient: java.lang.String getMapsFeed()>
<com.google.gdata.wireformats.output.AtomServiceDualGenerator: void <init>()>
<com.google.android.apps.mytracks.TrackListActivity: void onCreate(android.os.Bundle)>
<com.google.gdata.util.common.base.CharMatcher$7: void <init>()>
<com.google.common.primitives.UnsignedLong: com.google.common.primitives.UnsignedLong valueOf(java.lang.String)>
<com.google.gdata.data.BaseEntry: void <clinit>()>
<com.google.common.primitives.UnsignedInteger: long longValue()>
<com.google.api.client.util.ClassInfo: void <clinit>()>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.Number)>
<com.google.api.client.auth.oauth2.TokenRequest$1$1: void intercept(com.google.api.client.http.HttpRequest)>
<com.google.api.client.http.GenericUrl: boolean appendParam(boolean,java.lang.StringBuilder,java.lang.String,java.lang.Object)>
<com.google.android.apps.mytracks.fragments.ChooseActivityTypeDialogFragment: android.app.Dialog getDialog(android.app.Activity,java.lang.String,com.google.android.apps.mytracks.fragments.ChooseActivityTypeDialogFragment$ChooseActivityTypeCaller)>
<com.google.android.apps.mytracks.util.FileUtils: java.io.File getPhotoDir()>
<com.google.api.client.util.escape.Platform: void <clinit>()>
<com.google.android.apps.mytracks.TrackDetailActivity: int getLayoutResId()>
<com.google.android.common.http.UrlRules$Rule: void <init>()>
<com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object)>
<com.google.common.collect.AbstractMapBasedMultiset: java.util.Set entrySet()>
<com.google.common.collect.LinkedHashMultiset: java.util.Set entrySet()>
<java.net.URI: java.lang.String getRawPath()>
<com.google.api.client.util.LoggingByteArrayOutputStream: void appendBytes(java.lang.StringBuilder,int)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<com.google.api.client.json.JsonToken: void <clinit>()>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void writeCategory(java.lang.String)>
<com.google.android.apps.analytics.HitBuilder: void createX10Project(com.google.android.apps.analytics.CustomVariable[],java.lang.StringBuilder,int)>
<com.google.android.gms.internal.dz: void bi()>
<com.google.api.client.http.HttpRequestFactory: com.google.api.client.http.HttpRequest buildRequest(java.lang.String,com.google.api.client.http.GenericUrl,com.google.api.client.http.HttpContent)>
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
<android.support.v4.view.PagerAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<com.google.gdata.model.atompub.Workspace: void <clinit>()>
<com.google.android.apps.mytracks.io.sendtogoogle.SendToGoogleUtils: java.lang.String getToken(android.content.Context,java.lang.String,java.lang.String)>
<com.google.android.apps.mytracks.io.sendtogoogle.SendToGoogleUtils: boolean endSegment(com.google.android.apps.mytracks.content.Track,long,java.util.ArrayList)>
<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextValue()>
<android.os.AsyncTask: void <init>()>
<com.google.api.client.http.javanet.NetHttpResponse: void <init>(java.net.HttpURLConnection)>
<android.support.v4.content.IntentCompat: android.content.Intent makeMainActivity(android.content.ComponentName)>
<com.google.gdata.util.common.net.UriParameterMap: void <init>()>
<com.google.android.gms.internal.dt: void <init>(android.content.Context)>
<java.io.BufferedInputStream: void mark(int)>
<android.app.Notification$BigPictureStyle: android.app.Notification$BigPictureStyle setBigContentTitle(java.lang.CharSequence)>
<com.google.api.client.googleapis.media.MediaHttpDownloader: void <init>(com.google.api.client.http.HttpTransport,com.google.api.client.http.HttpRequestInitializer)>
<com.google.android.apps.mytracks.TrackListActivity$4: void onClick(android.view.View)>
<java.lang.AssertionError: void <init>()>
<android.widget.BaseAdapter: void <init>()>
<org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>
<com.google.android.gms.internal.cd: android.location.Location getLastLocation()>
<com.google.gdata.util.common.base.CharMatcher$3: boolean matches(char)>
<com.google.gdata.util.ContentType: com.google.gdata.util.ContentType lock()>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity: void setPhotoSizeSummaryAndOptions(java.lang.String[],java.lang.String[],java.lang.String[])>
<com.google.api.client.util.Types: boolean isAssignableToOrFrom(java.lang.Class,java.lang.Class)>
<com.google.api.services.drive.DriveRequest: com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient getAbstractGoogleClient()>
<android.support.v4.app.ShareCompat$IntentBuilder: android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String)>
<com.google.android.gms.location.ActivityRecognitionClient: void disconnect()>
<com.google.android.apps.mytracks.services.TrackRecordingService: int access$702(com.google.android.apps.mytracks.services.TrackRecordingService,int)>
<com.google.common.collect.RegularImmutableMap$NonTerminalEntry: com.google.common.collect.RegularImmutableMap$LinkedEntry next()>
<com.google.android.apps.mytracks.fragments.EnableSyncDialogFragment: void <init>()>
<com.google.android.apps.mytracks.fragments.MyTracksMapFragment: void <init>()>
<com.google.android.gms.internal.p: void n()>
<com.google.api.services.fusiontables.Fusiontables$Table$Insert: void <init>(com.google.api.services.fusiontables.Fusiontables$Table,com.google.api.services.fusiontables.model.Table)>
<android.widget.RemoteViews: void setViewVisibility(int,int)>
<com.google.android.gms.internal.ce: void removeActivityUpdates(android.app.PendingIntent)>
<com.google.android.apps.mytracks.services.ControlRecordingService: void onDestroy()>
<com.google.common.primitives.UnsignedLongs: boolean overflowInParse(long,int,int)>
<android.app.Notification: void <clinit>()>
<com.google.android.apps.mytracks.SearchListActivity$4: void <init>(com.google.android.apps.mytracks.SearchListActivity,android.content.Context,int,int)>
<com.google.api.client.util.Types: java.lang.Class getRawClass(java.lang.reflect.ParameterizedType)>
<com.google.api.services.drive.Drive$Files$Get: void <init>(com.google.api.services.drive.Drive$Files,java.lang.String)>
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl: void <init>()>
<com.google.gdata.util.parser.Parser: com.google.gdata.util.parser.Parser sequence(com.google.gdata.util.parser.Parser,com.google.gdata.util.parser.Parser)>
<com.google.android.apps.analytics.Event: void setAnonymizeIp(boolean)>
<com.google.android.apps.mytracks.SensorStateActivity: java.lang.String getPower(com.google.android.apps.mytracks.content.Sensor$SensorDataSet)>
<com.google.gdata.data.ExtensionDescription: void setExtensionClass(java.lang.Class)>
<com.google.common.collect.ConcurrentHashMultiset: com.google.common.collect.ConcurrentHashMultiset create()>
<com.google.gdata.client.GoogleService: void handleSessionExpiredException(com.google.gdata.client.GoogleService$SessionExpiredException)>
<android.support.v4.app.TaskStackBuilder: android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent)>
<com.google.gdata.model.ElementCreatorImpl: com.google.gdata.model.AttributeCreator addAttribute(com.google.gdata.model.AttributeKey)>
<com.google.gdata.model.MetadataRegistry: com.google.gdata.model.Schema createSchema()>
<com.google.gdata.model.AttributeCreatorImpl: void <init>(com.google.gdata.model.MetadataRegistry,com.google.gdata.model.TransformKey)>
<com.google.android.apps.mytracks.io.maps.SendMapsAsyncTask: int getPercentage(int,int)>
<com.google.protobuf.CodedInputStream: void recomputeBufferSizeAfterLimit()>
<org.apache.http.impl.client.DefaultHttpClient: void <init>()>
<com.google.android.apps.mytracks.fragments.MapLayerDialogFragment: void <init>()>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void close()>
<com.google.android.gms.auth.GoogleAuthUtil: boolean a(java.lang.String)>
<com.google.gdata.model.Schema: com.google.common.collect.ImmutableMap buildElements(com.google.gdata.model.MetadataRegistry,com.google.gdata.model.Schema)>
<android.content.ContentResolver: boolean isSyncActive(android.accounts.Account,java.lang.String)>
<com.google.android.apps.mytracks.fragments.AbstractMyTracksDialogFragment$1: void <init>(com.google.android.apps.mytracks.fragments.AbstractMyTracksDialogFragment,android.app.Dialog)>
<java.util.AbstractMap: int hashCode()>
<com.google.android.apps.mytracks.util.PreferencesUtils: void setInt(android.content.Context,int,int)>
<com.google.android.apps.mytracks.content.TrackDataHub: com.google.android.apps.mytracks.content.TrackDataManager access$100(com.google.android.apps.mytracks.content.TrackDataHub)>
<com.google.gdata.client.http.HttpGDataRequest: void setPrivateHeader(java.lang.String,java.lang.String)>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void <init>(android.content.Context,boolean,boolean,com.google.android.apps.mytracks.content.DescriptionGenerator)>
<com.google.gdata.wireformats.AltFormat$Builder: java.lang.String access$300(com.google.gdata.wireformats.AltFormat$Builder)>
<android.app.Service: void <init>()>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeature: java.lang.String getDescription()>
<android.app.Activity: void finish()>
<com.google.android.apps.mytracks.fragments.ChooseAccountDialogFragment: void <init>()>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesUtils: java.lang.String getKmlLineString(java.util.ArrayList)>
<com.google.android.apps.mytracks.content.Track: void setDescription(java.lang.String)>
<com.google.gdata.model.atompub.Accept: void <clinit>()>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>
<com.google.android.gms.internal.ea: void setTextSize(int,float)>
<android.app.Activity: boolean onTrackballEvent(android.view.MotionEvent)>
<com.google.android.apps.mytracks.SearchListActivity$2: boolean onClick(int,int[],long[])>
<com.google.android.apps.mytracks.services.ControlRecordingService: void onHandleIntent(android.content.Intent)>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment$1: void <init>(com.google.android.apps.mytracks.fragments.ExportDialogFragment)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: java.util.List getAllTracks()>
<java.io.InputStreamReader: int read(char[],int,int)>
<com.google.gdata.util.ResourceNotFoundException: void initResponseCode()>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeature: void addPoint(android.location.Location)>
<android.view.View: void restoreHierarchyState(android.util.SparseArray)>
<com.google.api.client.auth.oauth2.Credential: void <clinit>()>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void writeBeginTrack(com.google.android.apps.mytracks.content.Track,android.location.Location)>
<org.apache.http.client.methods.HttpRequestBase: org.apache.http.RequestLine getRequestLine()>
<com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment: com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment newInstance(long)>
<android.app.Notification$BigTextStyle: android.app.Notification$BigTextStyle setSummaryText(java.lang.CharSequence)>
<android.support.v4.view.ViewPager$3: void run()>
<com.dsi.ant.AntInterface: boolean releaseInterface()>
<com.google.android.apps.mytracks.util.EulaUtils: void setAcceptedEula(android.content.Context)>
<com.google.android.apps.mytracks.services.sensors.ant.AntSensorManager$2: void <init>(com.google.android.apps.mytracks.services.sensors.ant.AntSensorManager)>
<com.google.android.gms.internal.dz: void a(android.graphics.Point)>
<com.google.android.apps.analytics.Event: void setAdHitId(int)>
<android.widget.LinearLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<com.google.android.apps.mytracks.io.drive.SendDriveAsyncTask: boolean updateDriveFile(com.google.api.services.drive.Drive,com.google.api.services.drive.model.File,java.lang.String,com.google.android.apps.mytracks.content.Track)>
<android.support.v4.app.BackStackRecord: int commitInternal(boolean)>
<java.math.BigDecimal: float floatValue()>
<com.google.android.apps.mytracks.util.Api8Adapter: void setTitleAndSubtitle(android.app.Activity,java.lang.String,java.lang.String)>
<android.preference.Preference: void setSummary(java.lang.CharSequence)>
<android.support.v4.app.FragmentManagerImpl: boolean executePendingTransactions()>
<android.support.v4.content.ContextCompatHoneycomb: void startActivities(android.content.Context,android.content.Intent[])>
<android.support.v4.app.BackStackRecord: int commit()>
<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
<com.google.api.client.http.HttpHeaders: void setContentRange(java.lang.String)>
<java.net.CookieHandler: void <init>()>
<java.lang.Byte: java.lang.Byte valueOf(byte)>
<android.support.v4.app.BackStackRecord: void <init>(android.support.v4.app.FragmentManagerImpl)>
<com.google.android.apps.mytracks.io.sync.SyncUtils: void syncNow(android.content.Context)>
<com.google.common.collect.ImmutableMapEntrySet: void <init>()>
<com.google.android.apps.mytracks.settings.SensorSettingsActivity$3: boolean onPreferenceClick(android.preference.Preference)>
<com.google.android.apps.mytracks.content.TrackDataHub: void resetSamplingState()>
<android.os.StrictMode$ThreadPolicy$Builder: void <init>()>
<com.google.android.apps.mytracks.content.MyTracksProvider: boolean onCreate(android.content.Context)>
<com.google.android.apps.mytracks.content.WaypointCreationRequest: void <init>(com.google.android.apps.mytracks.content.Waypoint$WaypointType,boolean)>
<com.google.android.apps.mytracks.util.GoogleLocationUtils: int getUseLocationForServices(android.content.Context)>
<android.support.v4.content.IntentCompat$IntentCompatImplHC: void <init>()>
<com.google.android.apps.mytracks.stats.DoubleBuffer: void setNext(double)>
<android.support.v4.view.ViewPager: void scrollToItem(int,boolean,int,boolean)>
<com.google.common.primitives.UnsignedLongs: java.lang.String toString(long,int)>
<com.google.gson.stream.JsonReader: int getColumnNumber()>
<com.google.android.apps.mytracks.fragments.ChooseActivityDialogFragment: com.google.android.apps.mytracks.fragments.ChooseActivityDialogFragment$ChooseActivityCaller access$500(com.google.android.apps.mytracks.fragments.ChooseActivityDialogFragment)>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.google.android.apps.mytracks.services.TrackRecordingServiceConnection: void <init>(android.content.Context,java.lang.Runnable)>
<com.google.android.apps.mytracks.content.TrackDataManager: java.util.EnumSet getRegisteredTrackDataTypes()>
<com.google.gdata.wireformats.AltFormat: int hashCode()>
<com.google.common.base.Joiner$MapJoiner: void <init>(com.google.common.base.Joiner,java.lang.String)>
<com.google.android.apps.mytracks.services.TrackRecordingService: void access$1600(com.google.android.apps.mytracks.services.TrackRecordingService)>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>
<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.google.android.gms.internal.cd: void requestLocationUpdates(com.google.android.gms.location.LocationRequest,com.google.android.gms.location.LocationListener,android.os.Looper)>
<android.support.v4.app.FragmentManagerState: void <init>()>
<com.google.android.apps.mytracks.SensorStateActivity: void access$300(com.google.android.apps.mytracks.SensorStateActivity)>
<com.google.common.collect.Count: void <init>(int)>
<com.google.android.apps.mytracks.util.CalorieUtils: double[] updateTrackCalorie(android.content.Context,com.google.android.apps.mytracks.content.Track)>
<android.view.View: void scrollTo(int,int)>
<com.google.common.collect.RegularImmutableList: com.google.common.collect.UnmodifiableListIterator listIterator(int)>
<com.google.android.apps.analytics.PipelinedRequester: void maybeOpenConnection()>
<com.google.gdata.util.common.base.CharMatcher$15: boolean matches(char)>
<android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
<android.support.v4.app.Fragment: boolean isInBackStack()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>
<java.io.OutputStreamWriter: void flush()>
<com.google.gdata.util.VersionRegistry: void addDefaultVersion(com.google.gdata.util.Version,boolean)>
<com.google.api.client.http.HttpMethod: void <clinit>()>
<com.google.common.collect.EmptyImmutableListMultimap: void <clinit>()>
<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataParserFactory: java.io.InputStream maybeLogCommunication(java.io.InputStream)>
<com.google.android.gms.location.LocationRequest: void a(float)>
<com.google.android.apps.mytracks.TrackListActivity: void onPause()>
<com.google.api.client.http.InputStreamContent: void <init>(java.lang.String,java.io.InputStream)>
<android.widget.RemoteViews: void <clinit>()>
<com.google.gdata.client.GoogleAuthTokenFactory: void setUserToken(java.lang.String)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeature: void generateAndroidId()>
<android.support.v4.content.Loader: void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener)>
<com.google.gdata.data.ExtensionDescription: com.google.gdata.util.common.xml.XmlNamespace getNamespace()>
<com.google.api.client.util.ArrayMap$EntryIterator: java.lang.Object next()>
<com.google.api.client.json.gson.GsonGenerator: void writeEndObject()>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void writeSensorData(java.util.ArrayList,java.lang.String)>
<com.google.android.apps.mytracks.SearchListActivity: boolean access$202(com.google.android.apps.mytracks.SearchListActivity,boolean)>
<com.google.common.collect.RegularImmutableMap: void <init>(java.util.Map$Entry[])>
<com.google.api.client.http.UriTemplate$CompositeOutput: java.lang.String getOutputPrefix()>
<com.google.common.collect.ImmutableMultimap: void <init>(com.google.common.collect.ImmutableMap,int)>
<com.google.gdata.util.EntityTooLargeException: void initResponseCode()>
<com.google.api.client.http.HttpHeaders: void serializeHeaders(com.google.api.client.http.HttpHeaders,java.lang.StringBuilder,java.lang.StringBuilder,java.util.logging.Logger,com.google.api.client.http.LowLevelHttpRequest)>
<com.google.android.apps.mytracks.content.TrackDataHub: boolean access$1200(com.google.android.apps.mytracks.content.TrackDataHub)>
<com.google.android.apps.mytracks.content.Track: java.lang.String getSharedOwner()>
<com.google.android.apps.mytracks.TrackListActivity$6: void <init>(com.google.android.apps.mytracks.TrackListActivity)>
<com.google.gson.stream.JsonReader$2: void <clinit>()>
<java.lang.UnsupportedOperationException: void <init>()>
<com.google.gdata.client.Service: com.google.gdata.util.common.net.UriParameterMap computeQueryMap(com.google.gdata.client.Service$GDataRequest)>
<android.location.Location: void setAltitude(double)>
<java.io.FilterInputStream: void <init>(java.io.InputStream)>
<com.google.android.apps.mytracks.services.sensors.BluetoothSensorManager$1: void <init>(java.util.ArrayList,java.lang.Object)>
<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>
<com.google.android.apps.mytracks.content.DescriptionGeneratorImpl: java.lang.String generateWaypointDescription(com.google.android.apps.mytracks.stats.TripStatistics)>
<org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>
<java.lang.System: void <clinit>()>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<com.google.common.collect.ImmutableEntry: java.lang.Object getKey()>
<com.google.wireless.gdata.data.Entry: java.lang.String getCategoryScheme()>
<com.google.gdata.util.common.base.StringUtil: java.util.HashMap string2Map(java.lang.String,java.lang.String,java.lang.String,boolean)>
<com.google.android.apps.analytics.PersistentHitStore: com.google.android.apps.analytics.CustomVariableBuffer getVisitorVarBuffer()>
<com.google.api.client.http.HttpResponse: boolean hasMessageBody()>
<com.google.android.apps.mytracks.util.LocationUtils: void decimate(double,java.util.ArrayList,java.util.ArrayList)>
<org.apache.http.impl.AbstractHttpClientConnection: void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest)>
<com.google.android.apps.mytracks.fragments.ChooseAccountDialogFragment$1: void onClick(android.content.DialogInterface,int)>
<com.google.android.apps.mytracks.SearchListActivity$6: void <init>(com.google.android.apps.mytracks.SearchListActivity,java.util.List)>
<com.google.android.apps.analytics.HitBuilder: java.lang.String constructEventRequestPath(com.google.android.apps.analytics.Event,com.google.android.apps.analytics.Referrer)>
<com.google.gdata.client.Service: com.google.gdata.client.Service$GDataRequest createFeedRequest(java.net.URL)>
<java.lang.String: int indexOf(int,int)>
<android.content.AbstractThreadedSyncAdapter: void <init>(android.content.Context,boolean)>
<com.google.android.apps.mytracks.TrackEditActivity$4: void <init>(com.google.android.apps.mytracks.TrackEditActivity)>
<com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager: void connected(android.bluetooth.BluetoothSocket,android.bluetooth.BluetoothDevice)>
<com.google.android.apps.mytracks.SearchListActivity$5: void <init>(com.google.android.apps.mytracks.SearchListActivity,com.google.android.apps.mytracks.services.MyTracksLocationManager,java.lang.String)>
<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>
<com.google.android.gms.internal.cd: void removeAllListeners()>
<com.google.android.apps.mytracks.io.file.importer.ImportActivity: java.lang.Object onRetainNonConfigurationInstance()>
<com.google.android.apps.mytracks.SensorStateActivity: android.os.Handler access$500(com.google.android.apps.mytracks.SensorStateActivity)>
<com.google.common.primitives.UnsignedLong: int hashCode()>
<com.google.android.gms.internal.q$a: int getState()>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: com.google.android.apps.mytracks.content.Sensor$SensorDataSet access$700(com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder)>
<com.google.common.primitives.UnsignedLong: void <clinit>()>
<com.google.api.client.http.HttpRequestFactory: com.google.api.client.http.HttpRequestInitializer getInitializer()>
<android.content.ContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>
<java.lang.Thread: void run()>
<android.view.ViewGroup: void addView(android.view.View)>
<com.google.api.client.json.gson.GsonParser: com.google.api.client.json.JsonToken getCurrentToken()>
<com.google.gdata.util.VersionRegistry: void <init>()>
<android.app.Activity: void setResult(int,android.content.Intent)>
<android.support.v4.app.Fragment: void onResume()>
<com.google.common.collect.AbstractMultiset: void <init>()>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<com.google.android.apps.mytracks.io.maps.SendMapsAsyncTask: boolean uploadWaypoints()>
<com.google.android.apps.mytracks.settings.AbstractSettingsActivity: void onCreate(android.os.Bundle)>
<com.google.common.collect.Count: int get()>
<com.google.android.apps.mytracks.io.maps.SendMapsAsyncTask: boolean uploadMarker(java.lang.String,java.lang.String,java.lang.String,android.location.Location)>
<android.support.v4.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity: void onCreate(android.os.Bundle)>
<com.google.android.apps.mytracks.TrackDetailActivity: void access$800(com.google.android.apps.mytracks.TrackDetailActivity,boolean,boolean)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: boolean access$1202(com.google.android.apps.mytracks.content.Sensor$SensorDataSet,boolean)>
<android.view.ViewGroup: void removeViewAt(int)>
<java.lang.Class: java.lang.String getSimpleName()>
<java.lang.Class: java.lang.Class getSuperclass()>
<com.google.android.apps.mytracks.util.Api8Adapter: void enableStrictMode()>
<com.google.android.apps.mytracks.io.file.exporter.SaveActivity$2: void <init>(com.google.android.apps.mytracks.io.file.exporter.SaveActivity)>
<com.google.api.client.http.AbstractHttpContent: void <init>(java.lang.String)>
<com.google.gdata.util.common.xml.parsing.SecureGenericXMLFactory$SecureEntityResolver: void <init>()>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesAsyncTask: void setStyle(com.google.api.services.fusiontables.Fusiontables,java.lang.String)>
<com.google.api.client.util.Clock: void <clinit>()>
<com.google.android.apps.mytracks.util.TrackRecordingServiceConnectionUtils: boolean isRecordingServiceRunning(android.content.Context)>
<java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<com.google.android.apps.mytracks.fragments.FrequencyDialogFragment: java.lang.String[] getFrequencyDisplayOptions(android.support.v4.app.FragmentActivity)>
<com.google.android.apps.mytracks.util.Api19Adapter: void <init>()>
<com.google.android.apps.mytracks.services.TrackRecordingService: void startGps()>
<com.google.android.apps.mytracks.util.StatsUtils: void setItem(android.content.Context,android.view.View,int,java.lang.CharSequence,java.lang.CharSequence)>
<com.google.gson.stream.JsonScope: com.google.gson.stream.JsonScope[] values()>
<com.google.android.gms.internal.q$a: void b(boolean)>
<android.view.accessibility.AccessibilityEvent: void <clinit>()>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: boolean hasPower()>
<android.widget.ProgressBar: void setVisibility(int)>
<android.app.AlertDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>
<com.google.gdata.client.http.HttpGDataRequest: void end()>
<android.view.View: android.content.res.Resources getResources()>
<android.support.v4.view.ViewCompat: void setLayerType(android.view.View,int,android.graphics.Paint)>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.String)>
<com.google.android.apps.mytracks.SearchListActivity$5$1: void <init>(com.google.android.apps.mytracks.SearchListActivity$5,android.location.Location)>
<android.os.Binder: void <init>()>
<android.app.Activity: void setContentView(int)>
<com.google.android.apps.mytracks.MarkerListActivity: int getLayoutResId()>
<com.google.api.client.json.gson.GsonGenerator: void writeStartObject()>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeatureMetadata: void setIconUrl(java.lang.String)>
<com.google.gdata.util.VersionRegistry: void mergeVersions(java.util.List,com.google.gdata.util.Version)>
<com.google.android.apps.mytracks.stats.TripStatistics: void updateLongitudeExtremities(double)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: int getNextWaypointNumber(long,com.google.android.apps.mytracks.content.Waypoint$WaypointType)>
<android.support.v4.widget.SimpleCursorAdapter: void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter)>
<android.support.v4.view.ViewPager: float distanceInfluenceForSnapDuration(float)>
<com.google.android.gms.internal.ba: boolean aa()>
<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>
<com.google.android.apps.mytracks.util.AnalyticsUtils: void dispatch()>
<com.google.api.client.util.FieldInfo: java.lang.String getName()>
<com.google.android.apps.mytracks.TabsAdapter: void onPageSelected(int)>
<com.google.api.client.http.javanet.NetHttpTransport: void <clinit>()>
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.android.apps.mytracks.content.Track: int getNumberOfPoints()>
<com.google.android.apps.mytracks.io.file.exporter.FileTrackExporter$TrackWriterLocationFactory: void <init>(com.google.android.apps.mytracks.io.file.exporter.FileTrackExporter)>
<com.google.android.apps.mytracks.content.SearchEngine: double getDistanceBoost(com.google.android.apps.mytracks.content.SearchEngine$SearchQuery,double,double)>
<com.google.android.apps.mytracks.services.TrackRecordingService: void releaseWakeLock()>
<com.google.gdata.client.ClientLoginAccountType: void <clinit>()>
<com.google.android.apps.mytracks.content.Waypoint: void setLength(double)>
<java.lang.Math: int abs(int)>
<com.google.api.client.http.javanet.NetHttpResponse: java.lang.String getHeaderName(int)>
<java.util.concurrent.ArrayBlockingQueue: void <init>(int,boolean)>
<com.google.protobuf.AbstractMessageLite$Builder: void <init>()>
<java.io.BufferedInputStream: void reset()>
<com.google.common.collect.AbstractMapBasedMultiset: void <init>(java.util.Map)>
<android.app.AlertDialog: android.widget.Button getButton(int)>
<com.google.android.apps.mytracks.widgets.TrackWidgetProvider: android.widget.RemoteViews getRemoteViews(android.content.Context,long,int)>
<android.support.v4.app.TaskStackBuilder: android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsMapMetadata: java.lang.String getTitle()>
<com.google.android.apps.mytracks.util.StringUtils: java.lang.String formatElapsedTimeWithHour(long)>
<com.google.android.gms.internal.dz: void bq()>
<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>
<com.google.android.apps.mytracks.util.StatsUtils: void setTimeValue(android.content.Context,android.view.View,int,long)>
<android.view.View: android.view.View findViewById(int)>
<com.google.android.apps.mytracks.services.sensors.SensorManagerFactory: void releaseSystemSensorManager()>
<com.google.gdata.data.batch.BatchStatus: com.google.gdata.data.ExtensionDescription getDefaultDescription()>
<com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment: android.app.Dialog createDialog()>
<java.lang.Float: java.lang.Float valueOf(float)>
<com.dsi.ant.AntInterface: boolean hasAntSupport(android.content.Context)>
<com.google.android.apps.mytracks.services.ActivityRecognitionIntentService: void <init>()>
<com.google.android.gms.internal.ce: void a(com.google.android.gms.internal.ce)>
<com.google.android.apps.mytracks.content.Track: java.lang.String getDriveId()>
<com.google.android.apps.mytracks.TrackController: void <clinit>()>
<com.google.api.client.http.apache.ApacheHttpTransport: com.google.api.client.http.apache.ApacheHttpRequest buildGetRequest(java.lang.String)>
<android.content.AbstractThreadedSyncAdapter: android.os.IBinder getSyncAdapterBinder()>
<com.google.gson.stream.JsonToken: void <clinit>()>
<com.google.android.apps.mytracks.io.sendtogoogle.UploadResultActivity$4: void onShow(android.content.DialogInterface)>
<android.support.v4.app.FragmentManagerImpl: void noteStateNotSaved()>
<com.dsi.ant.AntInterface: void <init>()>
<com.google.gdata.util.ContentType: java.lang.String toString()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: com.google.android.apps.analytics.HitStore access$100(com.google.android.apps.analytics.GoogleAnalyticsTracker)>
<android.support.v4.view.ViewPager$PagerObserver: void <init>(android.support.v4.view.ViewPager,android.support.v4.view.ViewPager$1)>
<com.google.android.apps.mytracks.settings.SensorSettingsActivity$3: void <init>(com.google.android.apps.mytracks.settings.SensorSettingsActivity,int)>
<com.google.android.apps.mytracks.content.Track: void addLocation(android.location.Location)>
<com.google.common.collect.SingletonImmutableSet: int size()>
<com.google.wireless.gdata.data.Entry: java.lang.String getContent()>
<com.google.api.services.drive.model.File: java.util.List getParents()>
<com.google.gdata.wireformats.AltRegistry: com.google.gdata.wireformats.AltFormat lookupType(com.google.gdata.util.ContentType)>
<com.google.api.client.http.EmptyContent: boolean retrySupported()>
<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>
<com.google.android.apps.mytracks.services.tasks.CheckPermissionAsyncTask: void <clinit>()>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesAsyncTask: java.lang.String createNewTable(com.google.api.services.fusiontables.Fusiontables,com.google.android.apps.mytracks.content.Track)>
<android.app.Activity: void setVolumeControlStream(int)>
<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>
<com.google.api.client.http.GZipContent: void writeTo(java.io.OutputStream)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: boolean isInitialized()>
<com.google.api.services.fusiontables.Fusiontables: void <init>(com.google.api.client.http.HttpTransport,com.google.api.client.http.HttpRequestInitializer,java.lang.String,java.lang.String,com.google.api.client.json.JsonObjectParser,com.google.api.client.googleapis.services.GoogleClientRequestInitializer,java.lang.String,boolean)>
<com.google.android.apps.mytracks.io.file.TrackFileFormat$1: com.google.android.apps.mytracks.io.file.exporter.TrackWriter newTrackWriter(android.content.Context,boolean,boolean)>
<com.google.common.collect.ImmutableCollection: void <clinit>()>
<android.support.v4.app.Fragment: java.lang.String getString(int)>
<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeLiteral()>
<java.io.BufferedReader: java.lang.String readLine()>
<java.lang.Integer: java.lang.String toString(int)>
<com.google.android.apps.mytracks.settings.MapSettingsActivity$3: boolean onPreferenceClick(android.preference.Preference)>
<com.google.api.client.http.HttpRequest: boolean handleRedirect(int,com.google.api.client.http.HttpHeaders)>
<com.google.android.apps.mytracks.services.TrackRecordingService$3: void <init>(com.google.android.apps.mytracks.services.TrackRecordingService)>
<com.google.gdata.util.common.base.CharEscapers: com.google.gdata.util.common.base.Escaper uriEscaper(boolean)>
<com.google.android.gms.common.GooglePlayServicesUtil: void <clinit>()>
<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>
<com.google.android.apps.mytracks.TrackListActivity: void onChooseAccountDone(java.lang.String)>
<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity$4: void onClick(android.content.DialogInterface,int)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: void <init>()>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: void deleteAllTracks(android.content.Context)>
<com.google.gdata.util.RedirectRequiredException: java.lang.String getRedirectLocation()>
<java.io.ByteArrayOutputStream: void <init>()>
<com.google.api.client.json.JsonParser: java.lang.Object parse(java.lang.reflect.Type,boolean,com.google.api.client.json.CustomizeJsonParser)>
<com.google.api.client.util.LoggingInputStream: void close()>
<com.google.api.client.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<android.support.v4.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>
<android.content.ContentResolver: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>
<com.google.android.apps.mytracks.util.TrackRecordingServiceConnectionUtils: void <clinit>()>
<com.google.android.apps.mytracks.fragments.ChartFragment$2: void onClick(android.view.View)>
<android.support.v4.app.NotificationCompatJellybean: void addAction(int,java.lang.CharSequence,android.app.PendingIntent)>
<com.google.gdata.util.httputil.FormUrlDecoder$ValueAction: void <init>(com.google.gdata.util.httputil.FormUrlDecoder$1)>
<com.google.common.collect.SingletonImmutableSet: void <init>(java.lang.Object)>
<com.google.android.gms.internal.dz: void c(int,int)>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder: com.google.api.client.json.JsonObjectParser getObjectParser()>
<com.google.gdata.client.ClientLoginAccountType: java.lang.String getValue()>
<com.google.api.client.http.HttpMediaType: boolean equalsIgnoreParameters(com.google.api.client.http.HttpMediaType)>
<android.support.v4.widget.EdgeEffectCompat: void <clinit>()>
<java.io.FileInputStream: long skip(long)>
<com.google.android.apps.mytracks.services.sensors.PolarMessageParser: boolean packetValid(byte[],int)>
<com.google.api.client.googleapis.services.AbstractGoogleClient$Builder: com.google.api.client.util.ObjectParser getObjectParser()>
<org.apache.http.impl.SocketHttpClientConnection: void <init>()>
<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>
<com.google.protobuf.InvalidProtocolBufferException: void <init>(java.lang.String)>
<java.lang.StringBuffer: java.lang.StringBuffer appendCodePoint(int)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>
<android.support.v4.view.ViewCompatHC: void setLayerType(android.view.View,int,android.graphics.Paint)>
<com.google.gdata.client.GoogleAuthTokenFactory: com.google.gdata.client.http.HttpAuthToken getAuthToken()>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void writeEndTrack(com.google.android.apps.mytracks.content.Track,android.location.Location)>
<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.android.apps.mytracks.DeleteAsyncTask: void setActivity(com.google.android.apps.mytracks.DeleteActivity)>
<com.google.android.apps.mytracks.util.Api11Adapter$1: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>
<com.google.android.apps.mytracks.io.drive.SendDriveAsyncTask: void closeConnection()>
<com.google.android.apps.mytracks.content.TrackDataHub: int access$1500(com.google.android.apps.mytracks.content.TrackDataHub)>
<java.lang.reflect.Modifier: boolean isStatic(int)>
<java.io.PrintWriter: void print(boolean)>
<com.google.api.client.auth.oauth2.TokenRequest: com.google.api.client.auth.oauth2.TokenResponse execute()>
<android.content.Context: void <init>()>
<android.widget.ImageView: void setImageURI(android.net.Uri)>
<com.google.gdata.client.Service$Versions: void <clinit>()>
<java.lang.Float: void <clinit>()>
<com.google.android.common.gdata.AndroidGDataClient: java.io.InputStream createEntry(java.lang.String,java.lang.String,com.google.wireless.gdata.serializer.GDataSerializer)>
<com.google.api.services.drive.Drive$Files: com.google.api.services.drive.Drive$Files$List list()>
<com.google.android.apps.mytracks.fragments.ChooseActivityTypeDialogFragment: int getPosition(android.app.Activity,java.lang.String)>
<com.google.android.apps.mytracks.fragments.ChooseActivityDialogFragment$2: void onClick(android.content.DialogInterface,int)>
<com.google.android.apps.mytracks.util.FileUtils: java.lang.String truncateFileName(java.io.File,java.lang.String,java.lang.String)>
<com.google.android.apps.mytracks.TabsAdapter$TabInfo: java.lang.Class access$000(com.google.android.apps.mytracks.TabsAdapter$TabInfo)>
<com.google.android.apps.mytracks.TrackEditActivity: void onCreate(android.os.Bundle)>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment: com.google.android.apps.mytracks.fragments.ExportDialogFragment newInstance(boolean)>
<android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<com.google.android.apps.mytracks.util.Api8Adapter: boolean hasLocationMode()>
<android.app.Activity: android.app.ActionBar getActionBar()>
<com.google.android.apps.mytracks.services.TrackRecordingService: void updateRecordingState(long,boolean)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder setPower(com.google.android.apps.mytracks.content.Sensor$SensorData)>
<android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: void <init>()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker: void dispatchFinished()>
<com.google.api.client.util.Types$1$1: void <init>(com.google.api.client.util.Types$1)>
<com.google.android.gms.location.ActivityRecognitionResult: com.google.android.gms.location.ActivityRecognitionResult extractResult(android.content.Intent)>
<com.google.android.apps.analytics.AdHitIdGenerator: int getAdHitId()>
<java.util.HashSet: void <init>()>
<com.google.api.services.drive.Drive$Files: com.google.api.services.drive.Drive$Files$Update update(java.lang.String,com.google.api.services.drive.model.File)>
<com.google.api.client.http.javanet.NetHttpTransport: com.google.api.client.http.javanet.NetHttpRequest buildDeleteRequest(java.lang.String)>
<com.google.android.apps.mytracks.services.sensors.ant.AntSensorManager: void handleAntError()>
<android.support.v4.app.TaskStackBuilder: android.support.v4.app.TaskStackBuilder create(android.content.Context)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: com.google.android.apps.mytracks.content.Sensor$SensorData access$1902(com.google.android.apps.mytracks.content.Sensor$SensorDataSet,com.google.android.apps.mytracks.content.Sensor$SensorData)>
<com.google.android.apps.mytracks.SensorStateActivity: java.lang.String getCadence(com.google.android.apps.mytracks.content.Sensor$SensorDataSet)>
<com.google.protobuf.ExtensionRegistryLite: void <clinit>()>
<com.google.android.apps.mytracks.settings.MapSettingsActivity: void access$100(com.google.android.apps.mytracks.settings.MapSettingsActivity,int,int,int,int,java.lang.String)>
<com.google.api.client.util.Types: java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type)>
<com.google.android.apps.mytracks.io.drive.SendDriveActivity: void <init>()>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder: com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setServicePath(java.lang.String)>
<com.google.api.client.auth.oauth2.TokenResponseException: com.google.api.client.auth.oauth2.TokenResponseException 'from'(com.google.api.client.json.JsonFactory,com.google.api.client.http.HttpResponse)>
<com.google.api.client.http.UriTemplate$CompositeOutput: java.lang.String getEncodedValue(java.lang.String)>
<com.google.gdata.util.common.base.StringUtil: java.util.LinkedList string2List(java.lang.String,java.lang.String,boolean)>
<com.google.android.apps.mytracks.settings.ChartSettingsActivity: void configXAxisListPreference()>
<com.google.wireless.gdata.parser.ParseException: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.content.Track: void setId(long)>
<com.google.api.client.googleapis.services.AbstractGoogleClient$Builder: boolean getSuppressPatternChecks()>
<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>
<com.google.android.apps.mytracks.TrackListActivity$4: void <init>(com.google.android.apps.mytracks.TrackListActivity)>
<com.google.android.apps.mytracks.stats.TripStatistics: void addCalorie(double)>
<com.google.android.apps.mytracks.content.Sensor: void <clinit>()>
<com.google.api.services.drive.model.File: java.lang.String getMimeType()>
<com.google.android.apps.mytracks.maps.SingleColorTrackPath: void <init>(android.content.Context)>
<com.google.android.apps.mytracks.content.SearchEngine: void retrieveWaypoints(com.google.android.apps.mytracks.content.SearchEngine$SearchQuery,java.util.ArrayList)>
<com.google.android.apps.mytracks.io.file.importer.ImportAsyncTask: boolean importFile(java.io.File)>
<com.google.android.apps.mytracks.io.file.exporter.FileTrackExporter$TrackWriterLocationFactory: android.location.Location createLocation()>
<com.google.gdata.client.GoogleService$SessionExpiredException: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.io.file.exporter.SaveActivity$4: void <init>(com.google.android.apps.mytracks.io.file.exporter.SaveActivity)>
<com.google.android.apps.mytracks.SensorStateActivity: java.lang.String getBattery(com.google.android.apps.mytracks.content.Sensor$SensorDataSet)>
<android.support.v4.view.ViewCompat: void <clinit>()>
<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>
<com.google.android.gms.internal.a$a$a: void <init>(android.os.IBinder)>
<com.google.gdata.client.http.HttpGDataRequest$Factory: void extendHeaderMap(java.util.Map,java.lang.String,java.lang.String)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker$DispatcherCallbacks: void dispatchFinished()>
<com.google.android.apps.mytracks.fragments.ChooseAccountDialogFragment: void onAttach(android.app.Activity)>
<com.google.common.collect.AbstractMapBasedMultiset$1: boolean hasNext()>
<com.google.android.apps.mytracks.MapOverlay: android.content.Context access$000(com.google.android.apps.mytracks.MapOverlay)>
<com.google.api.client.http.apache.ApacheHttpTransport: com.google.api.client.http.apache.ApacheHttpRequest buildPutRequest(java.lang.String)>
<com.google.api.client.googleapis.services.AbstractGoogleClient: void <init>(com.google.api.client.http.HttpTransport,com.google.api.client.http.HttpRequestInitializer,java.lang.String,java.lang.String,com.google.api.client.util.ObjectParser,com.google.api.client.googleapis.services.GoogleClientRequestInitializer,java.lang.String,boolean)>
<com.google.android.apps.mytracks.fragments.ChooseAccountDialogFragment: void onCreate(android.os.Bundle)>
<com.google.api.services.fusiontables.Fusiontables$Builder: com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setServicePath(java.lang.String)>
<com.google.gson.stream.JsonWriter: void writeDeferredName()>
<com.google.android.apps.mytracks.settings.SettingsActivity: void updateSyncDriveSummary()>
<android.database.ContentObserver: void <init>(android.os.Handler)>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment: android.widget.RadioGroup access$200(com.google.android.apps.mytracks.fragments.ExportDialogFragment)>
<com.google.gdata.util.ServiceException: java.lang.String getResponseBody()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<com.google.api.client.http.MultipartRelatedContent: void <clinit>()>
<com.google.android.apps.mytracks.util.FileUtils: java.lang.String buildUniqueFileName(java.io.File,java.lang.String,java.lang.String,int)>
<com.google.android.apps.analytics.PersistentHitStore: com.google.android.apps.analytics.Referrer readCurrentReferrer(android.database.sqlite.SQLiteDatabase)>
<com.google.android.apps.mytracks.SearchListActivity: com.google.android.apps.mytracks.content.MyTracksProviderUtils access$500(com.google.android.apps.mytracks.SearchListActivity)>
<com.google.android.apps.mytracks.MarkerListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<java.lang.Float: boolean isNaN(float)>
<com.google.gdata.model.MetadataRegistry: com.google.gdata.model.ElementCreator build(com.google.gdata.model.ElementKey,com.google.gdata.model.MetadataContext)>
<android.support.v4.app.FragmentPagerAdapter: void <init>(android.support.v4.app.FragmentManager)>
<android.widget.ArrayAdapter: void add(java.lang.Object)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>
<com.google.android.apps.mytracks.TrackEditActivity: void setActivityTypeIcon(java.lang.String)>
<com.google.android.apps.mytracks.content.TrackDataHub: boolean isSelectedTrackRecording()>
<android.graphics.BitmapFactory$Options: void <init>()>
<android.database.sqlite.SQLiteQueryBuilder: void <init>()>
<com.google.android.apps.mytracks.services.TrackRecordingService: com.google.android.apps.mytracks.services.MyTracksLocationManager access$1100(com.google.android.apps.mytracks.services.TrackRecordingService)>
<com.google.gdata.client.GoogleAuthTokenFactory: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.google.gdata.client.AuthTokenFactory$TokenListener)>
<android.support.v4.app.FragmentActivity: void supportInvalidateOptionsMenu()>
<java.lang.String: java.lang.String intern()>
<com.google.api.client.googleapis.services.AbstractGoogleClientRequest: void initializeMediaDownload()>
<com.google.android.apps.analytics.PipelinedRequester: void <init>(org.apache.http.HttpHost,org.apache.http.conn.scheme.SocketFactory)>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void writeFooter()>
<java.lang.StringBuilder: void <init>()>
<com.google.gdata.model.QName: boolean equals(java.lang.Object)>
<com.google.api.client.util.Data: boolean isNull(java.lang.Object)>
<com.google.android.apps.mytracks.content.Track: void setStopId(long)>
<com.google.android.apps.mytracks.content.DataSourceManager$TrackPointsTableObserver: void <init>(com.google.android.apps.mytracks.content.DataSourceManager)>
<com.google.android.apps.mytracks.fragments.ConfirmSyncDialogFragment$1: void onClick(android.content.DialogInterface,int)>
<java.net.URL: java.lang.String getProtocol()>
<com.google.gdata.model.ElementCreatorImpl: com.google.gdata.model.AttributeCreatorImpl addAttribute(com.google.gdata.model.AttributeKey,com.google.gdata.model.ElementCreatorImpl$Action)>
<com.google.android.apps.mytracks.TrackListActivity: boolean access$100(com.google.android.apps.mytracks.TrackListActivity)>
<android.view.ViewGroup: void setDescendantFocusability(int)>
<android.os.Binder: int getCallingPid()>
<com.google.android.apps.mytracks.DeleteActivity$1: void onCancel(android.content.DialogInterface)>
<android.util.Log: int e(java.lang.String,java.lang.String)>
<com.google.common.collect.AbstractIndexedListIterator: void <init>(int,int)>
<com.google.api.client.http.HttpTransport: com.google.api.client.http.LowLevelHttpRequest buildPatchRequest(java.lang.String)>
<android.support.v4.app.FragmentActivity: void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int)>
<com.google.android.apps.mytracks.services.tasks.SplitPeriodicTask: void <init>()>
<com.google.android.apps.mytracks.io.maps.SendMapsUtils: com.google.android.apps.mytracks.io.gdata.maps.MapsFeature buildMapsMarkerFeature(java.lang.String,java.lang.String,java.lang.String,android.location.Location)>
<com.google.gdata.model.Schema$RootKey: com.google.gdata.model.QName getRootId(com.google.gdata.model.QName)>
<java.util.logging.Logger: void <clinit>()>
<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForPosition(int)>
<com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger asUnsigned(int)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtils: void <clinit>()>
<com.google.api.client.googleapis.GoogleHeaders: void <clinit>()>
<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream)>
<com.google.android.apps.mytracks.io.spreadsheets.SendSpreadsheetsActivity: void startNextActivity(boolean,boolean)>
<com.google.android.apps.mytracks.fragments.ChooseActivityDialogFragment: android.app.Dialog createDialog()>
<com.google.android.apps.mytracks.services.MyTracksLocationManager$1$1: void run()>
<com.google.wireless.gdata.data.Entry: java.lang.String getEditUri()>
<com.google.android.gms.auth.GoogleAuthUtil: void <clinit>()>
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)>
<com.google.gdata.util.parser.Action: void <init>(com.google.gdata.util.parser.Parser,com.google.gdata.util.parser.Callback)>
<com.google.android.apps.mytracks.TrackListActivity$1: void run()>
<com.google.wireless.gdata.data.Entry: void <init>()>
<com.google.api.services.drive.Drive$Files: void <init>(com.google.api.services.drive.Drive)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsMapMetadata: void setTitle(java.lang.String)>
<com.google.gdata.util.ServiceException: void <init>(com.google.gdata.util.ErrorContent)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: com.google.android.apps.mytracks.content.Sensor$SensorData getCadence()>
<com.google.android.apps.mytracks.TrackDetailActivity: void onChooseActivityTypeDone(java.lang.String,boolean)>
<com.google.common.io.ByteStreams: long copy(java.io.InputStream,java.io.OutputStream)>
<com.google.android.apps.mytracks.MarkerListActivity$5: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<android.support.v4.content.ModernAsyncTask: void <clinit>()>
<com.google.common.primitives.UnsignedInteger: void <init>(int)>
<com.google.android.apps.mytracks.io.gdata.AndroidGDataClient$PostRequestCreator: org.apache.http.client.methods.HttpUriRequest createRequest(java.net.URI)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker$DispatcherCallbacks: void hitDispatched(long)>
<com.google.android.apps.mytracks.content.TrackDataHub$9: void <init>(com.google.android.apps.mytracks.content.TrackDataHub,java.lang.String)>
<java.util.Calendar: boolean isSet(int)>
<com.google.common.collect.ImmutableListMultimap: com.google.common.collect.ImmutableList get(java.lang.Object)>
<java.io.PrintWriter: void println(java.lang.String)>
<com.google.android.apps.mytracks.SearchListActivity$5: void onLocationChanged(android.location.Location)>
<android.content.Intent: android.content.Intent addCategory(java.lang.String)>
<com.google.gdata.util.parser.Repeat: void <init>(com.google.gdata.util.parser.Parser,int,int)>
<com.google.common.primitives.UnsignedInteger: java.lang.String toString(int)>
<com.google.android.apps.mytracks.util.TrackIconUtils: boolean inList(android.content.Context,java.lang.String,int[])>
<com.google.gdata.util.NotAcceptableException: void initResponseCode()>
<com.google.api.client.http.InputStreamContent: com.google.api.client.http.InputStreamContent setType(java.lang.String)>
<com.google.api.client.http.HttpHeaders: void fromHttpResponse(com.google.api.client.http.LowLevelHttpResponse,java.lang.StringBuilder)>
<android.content.ContextWrapper: boolean stopService(android.content.Intent)>
<com.google.gdata.util.Version: void <clinit>()>
<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>
<com.google.api.client.http.apache.ContentEntity: void <init>(long,com.google.api.client.http.HttpContent)>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<com.google.gdata.wireformats.AltFormat: com.google.gdata.wireformats.WireFormat getWireFormat()>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: java.lang.String access$1100(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread)>
<com.google.api.services.drive.model.File: com.google.api.client.util.DateTime getModifiedDate()>
<android.database.DataSetObservable: void <init>()>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: void deleteDirectoryRecurse(android.content.Context,java.io.File)>
<java.io.ByteArrayInputStream: void mark(int)>
<com.google.common.collect.EmptyImmutableSet: int size()>
<android.os.AsyncTask: void <clinit>()>
<android.os.Binder: void attachInterface(android.os.IInterface,java.lang.String)>
<android.support.v4.view.ViewCompat: int getImportantForAccessibility(android.view.View)>
<android.support.v4.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment)>
<com.google.gdata.client.http.HttpGDataRequest$1: void <clinit>()>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment$1: void onClick(android.content.DialogInterface,int)>
<com.google.android.apps.mytracks.content.Waypoint: void setTripStatistics(com.google.android.apps.mytracks.stats.TripStatistics)>
<com.google.android.apps.mytracks.TrackListActivity: void onStop()>
<android.support.v4.app.Fragment: boolean isResumed()>
<com.google.android.apps.mytracks.TrackEditActivity: android.widget.EditText access$300(com.google.android.apps.mytracks.TrackEditActivity)>
<com.google.android.apps.mytracks.io.sync.SyncUtils: boolean isSyncActive(android.content.Context)>
<android.os.SystemClock: long elapsedRealtime()>
<android.graphics.Point: void <init>()>
<com.google.android.apps.mytracks.content.TrackDataHub: void loadDataForAll()>
<com.google.android.apps.mytracks.content.Track: boolean isSharedWithMe()>
<com.google.android.apps.mytracks.maps.DynamicSpeedTrackPathDescriptor$1: void <init>(com.google.android.apps.mytracks.maps.DynamicSpeedTrackPathDescriptor)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: void fillTrackPoint(android.database.Cursor,com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl$CachedTrackPointsIndexes,android.location.Location)>
<java.lang.Float: void <init>(float)>
<android.support.v4.app.LoaderManagerImpl: android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>
<com.google.android.apps.mytracks.settings.RecordingSettingsActivity: void configTrackName()>
<com.google.android.apps.mytracks.util.Api14Adapter$2: void <init>(com.google.android.apps.mytracks.util.Api14Adapter,android.view.MenuItem)>
<com.google.api.client.http.HttpHeaders$ParseHeaderState: void finish()>
<com.google.android.apps.mytracks.TrackDetailActivity: long access$102(com.google.android.apps.mytracks.TrackDetailActivity,long)>
<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View)>
<com.google.android.apps.mytracks.settings.SensorSettingsActivity$1: void <init>(com.google.android.apps.mytracks.settings.SensorSettingsActivity)>
<java.util.Timer: void cancel()>
<android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)>
<com.google.android.apps.analytics.Event: void setTimestampFirst(int)>
<com.google.gdata.client.spreadsheet.SpreadsheetService: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment: com.google.android.apps.mytracks.io.file.TrackFileFormat access$500(com.google.android.apps.mytracks.fragments.ExportDialogFragment,int)>
<com.google.gdata.wireformats.AltFormat: com.google.gdata.util.ContentType getContentType()>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<com.google.android.apps.mytracks.util.FileUtils: boolean isExternalStorageAvailable()>
<com.google.android.apps.mytracks.io.sendtogoogle.SendRequest: boolean isDriveSync()>
<android.support.v4.view.ViewPager$ItemInfo: void <init>()>
<com.google.android.apps.mytracks.io.file.exporter.FileTrackExporter: void writeWaypoints(com.google.android.apps.mytracks.content.Track)>
<com.google.android.common.http.UrlRules: java.util.regex.Pattern access$000()>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment$ExportType: void <clinit>()>
<com.google.android.apps.mytracks.util.FileUtils: boolean ensureDirectoryExists(java.io.File)>
<com.google.android.apps.mytracks.stats.TripStatisticsUpdater: void updateGrade(double,double)>
<com.google.android.apps.mytracks.widgets.TrackWidgetConfigActivity: void <init>()>
<com.google.android.apps.mytracks.content.Track$1: void <init>()>
<android.support.v4.app.FragmentManagerImpl: void popBackStack(int,int)>
<android.view.KeyEvent: void <clinit>()>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl$1: boolean advanceCursorToNextBatch()>
<com.google.protobuf.AbstractMessageLite: void <init>()>
<com.google.android.apps.analytics.Event: int getVisits()>
<com.google.android.apps.mytracks.stats.TripStatisticsUpdater: boolean isValidSpeed(long,double,long,double)>
<java.io.OutputStream: void write(byte[])>
<android.support.v4.app.FragmentManagerImpl: void dispatchPause()>
<com.google.gdata.wireformats.input.AtomDualParser: void <init>()>
<android.widget.LinearLayout: void setOrientation(int)>
<android.view.View: void postInvalidateDelayed(long)>
<android.support.v4.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>
<com.google.android.apps.mytracks.io.maps.SendMapsAsyncTask: void closeConnection()>
<com.google.android.apps.mytracks.fragments.ChooseActivityTypeImageAdapter: int getSelected()>
<com.google.android.apps.mytracks.fragments.EulaDialogFragment: java.lang.String getEulaText()>
<java.math.BigInteger: int intValue()>
<com.google.gdata.client.GoogleAuthTokenFactory: com.google.gdata.util.AuthenticationException getAuthException(java.util.Map)>
<android.location.Location: boolean hasAccuracy()>
<com.google.android.apps.mytracks.util.AccountUtils: void setupAccountSpinner(android.support.v4.app.FragmentActivity,android.widget.Spinner,android.accounts.Account[])>
<java.util.HashMap: java.util.Collection values()>
<org.apache.http.impl.client.RequestWrapper: void <init>(org.apache.http.HttpRequest)>
<com.google.android.apps.mytracks.SensorStateActivity: void updateFromTempSensorManager()>
<com.google.api.client.json.gson.GsonGenerator: void writeNumber(float)>
<com.google.android.apps.mytracks.fragments.FileTypeDialogFragment: com.google.android.apps.mytracks.fragments.FileTypeDialogFragment newInstance(int,int,int,int)>
<com.google.gdata.util.common.xml.parsing.SecureGenericXMLFactory$SecureSAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>
<java.lang.String: java.lang.String valueOf(int)>
<com.google.gdata.model.transforms.atompub.AtompubVersionTransforms: void addAtompubTransforms(com.google.gdata.model.MetadataRegistry,com.google.gdata.model.ElementKey[])>
<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>
<android.support.v4.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)>
<com.google.api.client.json.gson.GsonFactory: com.google.api.client.json.JsonParser createJsonParser(java.io.InputStream)>
<android.support.v4.app.FragmentActivity: void <init>()>
<android.util.SparseArray: void <init>()>
<com.google.android.apps.mytracks.TrackEditActivity$3: void <init>(com.google.android.apps.mytracks.TrackEditActivity)>
<com.google.android.apps.mytracks.TrackController: boolean access$100(com.google.android.apps.mytracks.TrackController)>
<com.google.api.services.fusiontables.model.Table: com.google.api.services.fusiontables.model.Table setIsExportable(java.lang.Boolean)>
<com.google.android.apps.mytracks.services.sensors.ZephyrSensorManager: void <init>(android.content.Context)>
<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>
<com.google.gdata.util.InvalidEntryException: void <init>(java.net.HttpURLConnection)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker$1: void <init>(com.google.android.apps.analytics.GoogleAnalyticsTracker)>
<com.google.android.apps.mytracks.MarkerListActivity$1: void <init>(com.google.android.apps.mytracks.MarkerListActivity)>
<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>
<com.google.android.apps.mytracks.util.TrackIconUtils: void revertMenuIconColor(android.view.MenuItem)>
<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<com.google.android.apps.mytracks.io.gdata.AndroidGDataClient: java.io.InputStream createAndExecuteMethod(com.google.android.apps.mytracks.io.gdata.AndroidGDataClient$HttpRequestCreator,java.lang.String,java.lang.String)>
<com.google.gdata.util.common.base.CharMatcher$2: void setBits(com.google.gdata.util.common.base.CharMatcher$LookupTable)>
<com.google.android.apps.mytracks.TrackEditActivity$6: void <init>(com.google.android.apps.mytracks.TrackEditActivity)>
<com.google.android.apps.mytracks.io.file.exporter.SaveAsyncTask$1: void <init>(com.google.android.apps.mytracks.io.file.exporter.SaveAsyncTask)>
<com.google.android.apps.mytracks.content.TrackDataHub: void start()>
<com.google.api.client.http.AbstractInputStreamContent: com.google.api.client.http.AbstractInputStreamContent setCloseInputStream(boolean)>
<com.google.android.apps.mytracks.TrackEditActivity: void onPermissionFailure()>
<com.google.api.client.http.json.JsonHttpContent: void <init>(com.google.api.client.json.JsonFactory,java.lang.Object)>
<com.google.api.services.drive.Drive$Files$Insert: void <init>(com.google.api.services.drive.Drive$Files,com.google.api.services.drive.model.File)>
<com.google.android.apps.mytracks.widgets.TrackWidgetConfigActivity: android.widget.Spinner access$400(com.google.android.apps.mytracks.widgets.TrackWidgetConfigActivity)>
<com.google.android.gms.location.LocationClient: void removeLocationUpdates(com.google.android.gms.location.LocationListener)>
<com.google.android.apps.mytracks.util.EulaUtils: void setShowEnableSync(android.content.Context)>
<android.support.v4.content.CursorLoader: void onReset()>
<com.google.common.collect.AbstractIndexedListIterator: boolean hasNext()>
<com.google.android.apps.mytracks.content.TrackDataType: void <init>(java.lang.String,int)>
<com.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask: android.speech.tts.TextToSpeech newTextToSpeech(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener)>
<com.google.android.apps.mytracks.TrackListActivity: boolean configureActionBarHomeAsUp()>
<com.google.gdata.data.spreadsheet.SpreadsheetEntry: void <clinit>()>
<com.google.android.apps.mytracks.util.Api8Adapter: int getAppWidgetSize(android.appwidget.AppWidgetManager,int)>
<com.google.android.apps.mytracks.AggregatedStatsActivity: com.google.android.apps.mytracks.stats.TripStatistics getTripStatistics()>
<java.net.URI: java.lang.String getFragment()>
<android.os.HandlerThread: void run()>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: com.google.android.apps.mytracks.content.Track getTrack(long)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int)>
<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<com.google.android.gms.internal.bd: void <init>(java.lang.Object)>
<com.google.gdata.model.transforms.atom.AtomVersionTransforms: void addTransforms(com.google.gdata.model.MetadataRegistry)>
<com.google.android.apps.mytracks.util.Api9Adapter: void enableStrictMode()>
<com.google.android.apps.analytics.GoogleAnalyticsTracker$1: void run()>
<com.google.android.apps.mytracks.io.file.TrackFileFormat: void <init>(java.lang.String,int)>
<com.google.android.apps.mytracks.content.MyTracksProvider: void <clinit>()>
<android.widget.ImageView: void setVisibility(int)>
<com.google.gdata.client.http.HttpGDataRequest$Factory: void <init>()>
<android.app.Notification: void <init>()>
<com.google.android.apps.mytracks.settings.SettingsActivity: void access$000(com.google.android.apps.mytracks.settings.SettingsActivity,boolean)>
<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)>
<com.google.gdata.model.AttributeKey: void <init>(com.google.gdata.model.QName,java.lang.Class)>
<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.gdata.model.QName: void <init>(java.lang.String)>
<com.google.wireless.gdata.GDataException: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.TrackEditActivity: com.google.android.apps.mytracks.content.Track access$200(com.google.android.apps.mytracks.TrackEditActivity)>
<com.google.android.apps.mytracks.io.file.exporter.KmlTrackWriter: void writeBeginWaypoints(com.google.android.apps.mytracks.content.Track)>
<com.google.gdata.data.ExtensionDescription: boolean allowsMixedContent()>
<com.google.api.client.util.Data: boolean isValueOfPrimitiveType(java.lang.Object)>
<com.google.api.client.util.DateTime: com.google.api.client.util.DateTime parseRfc3339(java.lang.String)>
<com.google.api.client.http.apache.ApacheHttpTransport: com.google.api.client.http.LowLevelHttpRequest buildRequest(java.lang.String,java.lang.String)>
<com.google.android.apps.mytracks.settings.SettingsActivity$5: void <init>(com.google.android.apps.mytracks.settings.SettingsActivity)>
<com.google.gdata.util.common.base.CharMatcher: void <clinit>()>
<java.net.CookieHandler: java.net.CookieHandler getDefault()>
<java.lang.AssertionError: void <init>(java.lang.Object)>
<com.google.android.apps.mytracks.settings.MapSettingsActivity: void access$500(com.google.android.apps.mytracks.settings.MapSettingsActivity)>
<java.lang.Short: java.lang.Short valueOf(java.lang.String)>
<android.widget.AbsListView: long[] getCheckedItemIds()>
<com.google.gson.stream.JsonWriter: void beforeName()>
<com.google.android.apps.mytracks.io.sendtogoogle.AbstractSendActivity: com.google.android.apps.mytracks.io.sendtogoogle.AbstractSendAsyncTask access$000(com.google.android.apps.mytracks.io.sendtogoogle.AbstractSendActivity)>
<com.google.gdata.model.QName: java.lang.String getLocalName()>
<android.util.SparseArray: void clear()>
<android.support.v4.app.LoaderManagerImpl: android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity: void startCheckPermission(java.lang.String)>
<com.google.api.client.json.gson.GsonGenerator: void writeNumber(long)>
<com.google.android.gms.internal.aa: void c(android.content.res.Resources,int,int)>
<android.support.v4.content.ModernAsyncTask: void onPreExecute()>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity: void onFusionTablesSuccess()>
<com.google.api.client.googleapis.services.AbstractGoogleClient$Builder: java.lang.String getServicePath()>
<com.google.android.apps.analytics.HitBuilder: java.lang.String constructTransactionRequestPath(com.google.android.apps.analytics.Event,com.google.android.apps.analytics.Referrer)>
<android.app.Notification$Builder: android.app.Notification$Builder setOngoing(boolean)>
<com.google.api.client.http.InputStreamContent: com.google.api.client.http.InputStreamContent setCloseInputStream(boolean)>
<android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
<java.lang.Character: void <clinit>()>
<com.google.android.apps.mytracks.io.spreadsheets.SendSpreadsheetsUtils: java.lang.String getElevation(double,boolean)>
<com.google.api.client.http.HttpHeaders: void serializeHeaders(com.google.api.client.http.HttpHeaders,java.lang.StringBuilder,java.lang.StringBuilder,java.util.logging.Logger,com.google.api.client.http.LowLevelHttpRequest,java.io.Writer)>
<com.google.android.apps.mytracks.io.drive.SendDriveAsyncTask: void <init>(com.google.android.apps.mytracks.io.drive.SendDriveActivity,long,android.accounts.Account,java.lang.String,boolean)>
<android.widget.Spinner: void setEnabled(boolean)>
<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>
<com.google.api.services.drive.DriveRequest: com.google.api.services.drive.Drive getAbstractGoogleClient()>
<com.google.android.apps.mytracks.fragments.ConfirmSyncDialogFragment: com.google.android.apps.mytracks.fragments.ConfirmSyncDialogFragment$ConfirmSyncCaller access$000(com.google.android.apps.mytracks.fragments.ConfirmSyncDialogFragment)>
<com.google.android.apps.mytracks.fragments.ChartFragment: void access$500(com.google.android.apps.mytracks.fragments.ChartFragment)>
<com.google.api.client.http.apache.ApacheHttpTransport: boolean supportsHead()>
<com.google.android.gms.internal.ce$c: void <init>(com.google.android.gms.internal.ce)>
<com.google.gdata.data.spreadsheet.WorksheetFeed: void declareExtensions(com.google.gdata.data.ExtensionProfile)>
<com.google.android.apps.mytracks.util.Api9Adapter: boolean revertMenuIconColor()>
<com.google.android.apps.mytracks.content.Sensor$SensorData: void <clinit>()>
<android.os.Bundle: void putInt(java.lang.String,int)>
<com.google.api.client.util.Types: java.lang.reflect.Type getIterableParameter(java.lang.reflect.Type)>
<com.google.gdata.client.spreadsheet.SpreadsheetService: void <clinit>()>
<com.google.api.client.http.UrlEncodedContent: boolean appendParam(boolean,java.io.Writer,java.lang.String,java.lang.Object)>
<android.support.v4.app.LoaderManagerImpl: void doRetain()>
<android.os.StrictMode$VmPolicy$Builder: void <init>()>
<com.google.android.apps.mytracks.content.Waypoint$WaypointType: void <clinit>()>
<com.google.api.client.extensions.android.http.AndroidHttp: com.google.api.client.http.HttpTransport newCompatibleTransport()>
<android.app.Notification$Builder: android.app.Notification$Builder setProgress(int,int,boolean)>
<com.google.common.collect.Sets: java.util.HashSet newHashSetWithExpectedSize(int)>
<com.google.common.primitives.UnsignedInteger: float floatValue()>
<com.google.android.apps.mytracks.io.sendtogoogle.SendRequest: boolean isSendSpreadsheets()>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment: com.google.android.apps.mytracks.io.file.TrackFileFormat getTrackFileFormat(int)>
<com.google.android.apps.mytracks.TrackListActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.google.android.apps.mytracks.MarkerListActivity$2: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<com.google.android.apps.mytracks.content.DataSourceManager: void <init>(com.google.android.apps.mytracks.content.DataSource,com.google.android.apps.mytracks.content.DataSourceListener)>
<com.google.gdata.util.common.base.UnicodeEscaper: void <clinit>()>
<org.apache.http.impl.client.RequestWrapper: void setURI(java.net.URI)>
<com.google.android.apps.mytracks.stats.TripStatistics: void setTotalElevationGain(double)>
<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>
<com.google.android.apps.mytracks.io.sendtogoogle.AbstractSendActivity: void <init>()>
<com.google.gdata.data.Category: void <init>(java.lang.String,java.lang.String)>
<com.google.gdata.client.GoogleService: com.google.gdata.client.GoogleAuthTokenFactory getGoogleAuthTokenFactory()>
<com.google.android.apps.mytracks.services.MyTracksLocationManager: long access$602(com.google.android.apps.mytracks.services.MyTracksLocationManager,long)>
<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>
<android.util.Log: int w(java.lang.String,java.lang.String)>
<android.graphics.Color: int alpha(int)>
<com.google.api.client.json.JsonObjectParser: com.google.api.client.json.JsonFactory getJsonFactory()>
<android.app.AlertDialog: void <init>(android.content.Context)>
<com.google.android.apps.analytics.CustomVariableBuffer: boolean isIndexAvailable(int)>
<android.support.v4.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>
<android.content.ContentValues: boolean containsKey(java.lang.String)>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient: com.google.api.client.json.JsonObjectParser getObjectParser()>
<com.google.android.apps.mytracks.io.file.importer.ImportActivity: void onCreate(android.os.Bundle)>
<com.google.api.client.http.apache.HttpExtensionMethod: void <init>(java.lang.String,java.lang.String)>
<com.google.api.client.util.escape.PercentEscaper: void <init>(java.lang.String,boolean)>
<com.google.api.client.util.DataMap: void <init>(java.lang.Object,boolean)>
<android.os.Handler: boolean post(java.lang.Runnable)>
<com.google.android.apps.mytracks.services.sensors.ant.AntSensorManager: void closeChannel(byte)>
<com.google.gdata.util.httputil.FormUrlDecoder: void <clinit>()>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: android.content.ContentValues createContentValues(com.google.android.apps.mytracks.content.Track)>
<android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.support.v4.app.Fragment: void <clinit>()>
<com.google.api.services.drive.model.File: void <clinit>()>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.FragmentTransaction beginTransaction()>
<com.google.android.apps.mytracks.stats.TripStatistics: void addTotalElevationGain(double)>
<android.support.v4.app.Fragment: void onStart()>
<com.google.android.apps.mytracks.services.ITrackRecordingService$Stub: void <init>()>
<com.google.gdata.util.Namespaces: void <clinit>()>
<android.support.v4.app.NavUtils$NavUtilsImplJB: java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo)>
<java.lang.Math: double floor(double)>
<com.google.gdata.util.common.xml.XmlWriter$Attribute: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl$CachedTrackPointsIndexes: void <init>(android.database.Cursor)>
<com.google.api.client.googleapis.GoogleUrl: void <init>(java.lang.String)>
<android.os.Bundle: boolean getBoolean(java.lang.String)>
<com.google.android.apps.mytracks.io.sendtogoogle.SendRequest: void setSendSpreadsheets(boolean)>
<android.view.ViewGroup$MarginLayoutParams: void setMargins(int,int,int,int)>
<com.google.android.apps.mytracks.fragments.EulaDialogFragment: android.app.Dialog createDialog()>
<com.google.common.primitives.UnsignedInteger: void <clinit>()>
<com.google.gdata.util.parser.Parser: int parse(char[],java.lang.Object)>
<com.google.android.apps.mytracks.util.Api11Adapter: void hideTitle(android.app.Activity)>
<android.support.v4.app.NavUtils: void <clinit>()>
<com.google.android.apps.mytracks.widgets.TrackWidgetProvider: void onEnabled(android.content.Context)>
<com.google.android.apps.mytracks.settings.SettingsActivity: com.google.android.apps.mytracks.services.tasks.CheckPermissionAsyncTask access$100(com.google.android.apps.mytracks.settings.SettingsActivity)>
<com.google.gdata.util.parser.Parser: void <init>()>
<com.google.api.services.fusiontables.Fusiontables$Query: com.google.api.services.fusiontables.Fusiontables$Query$Sql sql(java.lang.String)>
<com.google.android.apps.mytracks.content.Track: long getStopId()>
<com.google.common.primitives.UnsignedInteger: boolean equals(java.lang.Object)>
<com.google.android.apps.mytracks.MarkerListActivity: void onDeleteMarkerDone()>
<android.view.accessibility.AccessibilityNodeInfo: void <init>()>
<com.google.gdata.model.Schema$RootKey: int hashCode()>
<com.google.android.apps.mytracks.fragments.ChartFragment: void access$400(com.google.android.apps.mytracks.fragments.ChartFragment)>
<com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Iterable)>
<com.google.android.apps.mytracks.content.MyTracksProvider$1: void <clinit>()>
<com.google.gdata.client.ClientLoginAccountType: void <init>(java.lang.String,int,java.lang.String)>
<com.google.android.apps.mytracks.io.drive.SendDriveActivity: void startNextActivity(boolean,boolean)>
<com.google.gdata.data.Source: java.util.Set getCategories()>
<com.google.android.apps.mytracks.services.sensors.ant.AntSensorManager: void setUpChannel()>
<com.google.api.client.http.ByteArrayContent: com.google.api.client.http.ByteArrayContent fromString(java.lang.String,java.lang.String)>
<com.google.wireless.gdata.client.GDataServiceClient: com.google.wireless.gdata.data.Entry parseEntry(java.lang.Class,java.io.InputStream)>
<android.content.ContextWrapper: void startActivities(android.content.Intent[])>
<com.google.android.apps.mytracks.content.Waypoint: void setTrackId(long)>
<android.app.Activity: void startActivities(android.content.Intent[],android.os.Bundle)>
<android.support.v4.app.ShareCompat$IntentBuilder: void combineArrayExtra(java.lang.String,java.util.ArrayList)>
<com.google.gdata.util.common.base.CharMatcher$Or: com.google.gdata.util.common.base.CharMatcher or(com.google.gdata.util.common.base.CharMatcher)>
<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>
<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>
<com.google.common.collect.AbstractMapEntry: void <init>()>
<com.google.android.gsf.Gservices$1: void run()>
<com.google.gdata.util.common.base.CharMatcher$15: void setBits(com.google.gdata.util.common.base.CharMatcher$LookupTable)>
<com.google.android.apps.mytracks.settings.RecordingSettingsActivity$1: void <init>(com.google.android.apps.mytracks.settings.RecordingSettingsActivity)>
<com.google.android.apps.mytracks.TrackListActivity$2: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<com.google.android.apps.mytracks.services.TrackRecordingService: void registerLocationListener()>
<android.support.v4.app.Fragment: java.lang.String toString()>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<com.google.api.client.http.HttpHeaders$ParseHeaderState: void <init>(com.google.api.client.http.HttpHeaders,java.lang.StringBuilder)>
<android.support.v4.view.ViewCompat$JBViewCompatImpl: void postOnAnimation(android.view.View,java.lang.Runnable)>
<com.google.android.apps.mytracks.fragments.DeleteMarkerDialogFragment$1: void onClick(android.content.DialogInterface,int)>
<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken nextInObject(boolean)>
<com.google.android.apps.mytracks.util.Api9Adapter: void <init>()>
<com.google.gdata.data.spreadsheet.CellEntry: void <clinit>()>
<com.google.android.apps.mytracks.fragments.MyTracksMapFragment$1: void onClick(android.view.View)>
<com.google.android.apps.mytracks.fragments.DeleteMarkerDialogFragment: void <init>()>
<com.google.api.client.http.MultipartRelatedContent: long computeLength()>
<com.google.android.apps.mytracks.stats.TripStatistics: void setMaxSpeed(double)>
<com.google.api.client.util.ArrayMap: java.lang.Object getValue(int)>
<java.lang.Character: java.lang.Character valueOf(char)>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity$2: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<com.google.android.apps.mytracks.util.Api14Adapter: void configureSearchWidget(android.app.Activity,android.view.MenuItem,com.google.android.apps.mytracks.TrackController)>
<com.google.api.client.googleapis.extensions.android.gms.auth.UserRecoverableAuthIOException: android.content.Intent getIntent()>
<com.google.gdata.util.common.base.CharEscaperBuilder: char[][] toArray()>
<com.google.protobuf.GeneratedMessageLite$Builder: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,int)>
<com.google.android.apps.mytracks.io.gdata.maps.XmlMapsGDataSerializer: void serializeExtraEntryContents(org.xmlpull.v1.XmlSerializer,int)>
<com.google.api.client.http.ExponentialBackOffPolicy: void reset()>
<java.util.Timer: void schedule(java.util.TimerTask,long,long)>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(boolean)>
<android.support.v4.app.LoaderManagerImpl: void doDestroy()>
<com.google.android.apps.mytracks.io.fusiontables.SendFusionTablesAsyncTask: boolean uploadWaypoints(com.google.api.services.fusiontables.Fusiontables,java.lang.String)>
<com.google.android.gms.internal.aa: int a(int,int,int)>
<com.google.gdata.client.GoogleService: void setOAuth2Credentials(com.google.api.client.auth.oauth2.Credential)>
<android.support.v4.app.FragmentManagerState: void <clinit>()>
<android.support.v4.app.Fragment: android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<android.support.v4.view.ViewPager: void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment: com.google.android.apps.mytracks.fragments.ExportDialogFragment$ExportCaller access$800(com.google.android.apps.mytracks.fragments.ExportDialogFragment)>
<com.google.gdata.util.common.base.PercentEscaper: void <clinit>()>
<com.google.api.client.http.apache.ApacheHttpTransport: org.apache.http.impl.client.DefaultHttpClient newDefaultHttpClient()>
<com.google.android.gms.internal.dz: android.graphics.drawable.Drawable br()>
<com.google.api.client.util.ArrayMap: java.util.Set entrySet()>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder setCreationTime(long)>
<com.google.android.apps.analytics.GoogleAnalyticsTracker$DispatcherCallbacks: void <init>(com.google.android.apps.analytics.GoogleAnalyticsTracker)>
<com.google.android.apps.mytracks.DeleteAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
<com.google.android.apps.mytracks.TrackListActivity: com.google.android.apps.mytracks.TrackController access$200(com.google.android.apps.mytracks.TrackListActivity)>
<com.google.android.apps.mytracks.content.DescriptionGeneratorImpl: void writeTime(long,java.lang.StringBuilder,int,java.lang.String)>
<com.google.android.apps.mytracks.content.MyTracksLocation: void <init>(java.lang.String)>
<com.google.gdata.util.PreconditionFailedException: void initResponseCode()>
<com.google.android.apps.analytics.NetworkDispatcher: void init(com.google.android.apps.analytics.Dispatcher$Callbacks)>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity: void onSaveInstanceState(android.os.Bundle)>
<com.google.android.apps.mytracks.util.Api8Adapter: void configureListViewContextualMenu(android.app.Activity,android.widget.ListView,com.google.android.apps.mytracks.ContextualActionModeCallback)>
<com.google.android.apps.mytracks.content.WaypointsColumns: void <clinit>()>
<java.lang.String: int length()>
<com.google.gdata.model.AttributeMetadataRegistryBuilder: void <init>(com.google.gdata.model.MetadataRegistry)>
<com.google.android.apps.mytracks.util.GoogleLocationUtils: java.lang.String getGpsDisabledMyLocationMessage(android.content.Context)>
<com.google.api.client.googleapis.MethodOverride: void <init>(boolean,java.util.EnumSet)>
<com.google.android.apps.mytracks.io.file.exporter.SaveActivity$5: void <init>(com.google.android.apps.mytracks.io.file.exporter.SaveActivity,android.app.Dialog)>
<com.google.android.apps.mytracks.TrackListActivity$2: void <init>(com.google.android.apps.mytracks.TrackListActivity)>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient: com.google.api.client.util.ObjectParser getObjectParser()>
<com.google.gdata.wireformats.AltFormat: void <init>(com.google.gdata.wireformats.AltFormat$Builder,com.google.gdata.wireformats.AltFormat$1)>
<com.google.android.apps.mytracks.widgets.TrackWidgetConfigActivity: void onCreate(android.os.Bundle)>
<com.google.gson.stream.JsonReader: java.lang.String nextName()>
<com.google.gdata.model.Schema$RootKey: java.lang.Class getSuper(java.lang.Class)>
<android.support.v4.app.FragmentManagerState$1: void <init>()>
<com.google.android.apps.mytracks.util.PreferencesUtils: void setString(android.content.Context,int,java.lang.String)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsFeature: int getPointCount()>
<java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>
<java.util.Calendar: void set(int,int,int,int,int,int)>
<com.google.android.apps.mytracks.io.gdata.maps.MapsMapMetadata: void <init>()>
<com.google.android.apps.mytracks.content.DescriptionGeneratorImpl: void writeSpeed(double,java.lang.StringBuilder,int,java.lang.String)>
<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>
<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>
<java.io.ByteArrayInputStream: void reset()>
<com.google.android.apps.mytracks.settings.SettingsActivity$3: void onClick(android.content.DialogInterface,int)>
<android.app.AlertDialog$Builder: void <init>(android.content.Context)>
<android.support.v4.util.TimeUtils: void formatDuration(long,java.io.PrintWriter,int)>
<com.google.common.primitives.Longs: int hashCode(long)>
<com.google.android.apps.mytracks.io.file.importer.ImportActivity: android.app.Dialog onCreateDialog(int)>
<com.google.android.apps.mytracks.io.maps.SendMapsUtils: void <clinit>()>
<android.support.v4.app.BackStackRecord: void addOp(android.support.v4.app.BackStackRecord$Op)>
<com.google.api.client.http.javanet.NetHttpTransport: void <init>()>
<com.google.android.apps.mytracks.HelpActivity$1: void onClick(android.view.View)>
<com.google.android.apps.mytracks.SearchListActivity: java.util.List prepareResultsforDisplay(java.util.Collection)>
<android.app.Activity: android.view.MenuInflater getMenuInflater()>
<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<org.apache.http.entity.AbstractHttpEntity: void setContentEncoding(java.lang.String)>
<java.io.File: long length()>
<com.google.android.apps.mytracks.maps.FixedSpeedTrackPathDescriptor: double access$202(com.google.android.apps.mytracks.maps.FixedSpeedTrackPathDescriptor,double)>
<java.math.BigInteger: java.lang.String toString()>
<android.os.Bundle: java.lang.String getString(java.lang.String)>
<android.support.v4.app.Fragment: void setIndex(int,android.support.v4.app.Fragment)>
<com.google.api.client.http.EmptyContent: long getLength()>
<com.google.android.common.http.UrlRules: void <init>(com.google.android.common.http.UrlRules$Rule[])>
<java.util.Stack: java.lang.Object pop()>
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
<com.google.android.apps.mytracks.fragments.MyTracksMapFragment$11: void onClick(android.view.View)>
<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object)>
<com.google.android.gms.internal.ce: void a(com.google.android.gms.internal.u,com.google.android.gms.internal.p$d)>
<java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>
<android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence)>
<com.google.android.apps.mytracks.services.TrackRecordingService$ServiceBinder: void detachFromService()>
<android.view.View: boolean isEnabled()>
<android.os.Looper: android.os.Looper myLooper()>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void finishRetain()>
<java.lang.Byte: void <clinit>()>
<com.google.gdata.util.ServiceException: java.lang.Throwable initCause(java.lang.Throwable)>
<com.google.android.apps.analytics.HitBuilder: java.lang.String getEscapedCookieString(com.google.android.apps.analytics.Event,com.google.android.apps.analytics.Referrer)>
<com.google.android.apps.mytracks.stats.TripStatistics: void updateElevationExtremities(double)>
<com.google.gdata.wireformats.AltFormat$Builder: com.google.gdata.wireformats.WireFormat access$400(com.google.gdata.wireformats.AltFormat$Builder)>
<com.google.gson.stream.JsonReader: void endArray()>
<com.google.android.apps.analytics.Hit: void <init>(java.lang.String,long)>
<com.google.api.client.googleapis.media.MediaHttpUploader: long getNextByteIndex(java.lang.String)>
<com.google.android.apps.mytracks.TrackEditActivity: boolean access$700(com.google.android.apps.mytracks.TrackEditActivity)>
<java.lang.Object: void wait()>
<com.google.android.apps.mytracks.io.gdata.maps.MapFeatureEntry: void <init>()>
<java.lang.Math: float max(float,float)>
<android.content.Intent: android.content.Intent putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)>
<com.google.android.apps.mytracks.settings.MapSettingsActivity: int getSpeedDisplayValue(int,int)>
<android.support.v4.app.NavUtils$NavUtilsImplJB: void <init>()>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment: android.widget.Spinner access$700(com.google.android.apps.mytracks.fragments.ExportDialogFragment)>
<com.google.android.apps.mytracks.settings.MapSettingsActivity$3: void <init>(com.google.android.apps.mytracks.settings.MapSettingsActivity,int,int)>
<com.google.api.client.http.AbstractHttpContent: long computeLength()>
<com.google.android.apps.mytracks.MarkerListActivity: void <init>()>
<com.google.common.collect.AbstractMultiset: boolean add(java.lang.Object)>
<com.google.api.client.json.gson.GsonParser: int getIntValue()>
<com.google.gdata.util.Version: void <init>(java.lang.Class,int,int,com.google.gdata.util.Version[])>
<java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.google.gdata.util.common.xml.XmlNamespace: java.lang.String getUri()>
<com.google.android.apps.mytracks.util.PreferencesUtils: void <clinit>()>
<android.app.Activity: void setTitle(int)>
<android.os.Handler: void <init>(android.os.Looper)>
<com.google.android.apps.analytics.Event: void setTimestampCurrent(int)>
<android.app.Notification$Builder: android.app.Notification$Builder setLights(int,int,int)>
<com.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl: android.database.Cursor getTrackPointCursor(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.google.android.gms.internal.dz: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: boolean access$1402(com.google.android.apps.mytracks.content.Sensor$SensorDataSet,boolean)>
<com.google.api.client.json.JsonToken: void <init>(java.lang.String,int)>
<com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential: com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential setSelectedAccountName(java.lang.String)>
<java.lang.reflect.Modifier: boolean isFinal(int)>
<com.google.gdata.util.common.base.CharMatcher$10: void <init>()>
<java.lang.String: int indexOf(int)>
<com.google.android.apps.mytracks.services.sensors.ant.AntSensorManager: void enableDataMessage(boolean)>
<com.google.android.apps.mytracks.services.TrackRecordingService: int access$602(com.google.android.apps.mytracks.services.TrackRecordingService,int)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet: void initFields()>
<com.google.android.apps.mytracks.util.TrackIconUtils: android.widget.ArrayAdapter getIconSpinnerAdapter(android.content.Context,java.lang.String)>
<com.google.android.apps.mytracks.io.file.exporter.SaveAsyncTask: java.lang.Boolean saveTracks(com.google.android.apps.mytracks.content.Track[])>
<com.google.android.apps.mytracks.services.sensors.SensorManager: void startSensor()>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void finalize()>
<com.google.android.apps.analytics.PersistentHitStore: void putEvent(com.google.android.apps.analytics.Event)>
<com.google.gson.stream.JsonWriter: void beforeValue(boolean)>
<com.google.android.apps.mytracks.services.TrackRecordingService: void restartTrack(com.google.android.apps.mytracks.content.Track)>
<android.view.animation.Animation: void <init>()>
<android.support.v4.view.ViewCompat$HCViewCompatImpl: void setLayerType(android.view.View,int,android.graphics.Paint)>
<com.google.gson.stream.JsonReader: void skipValue()>
<com.google.gdata.model.Schema: com.google.gdata.model.ElementMetadata bind(com.google.gdata.model.ElementKey,com.google.gdata.model.MetadataContext)>
<com.google.android.apps.mytracks.util.IntentUtils: android.content.Intent newShareFileIntent(android.content.Context,long,java.lang.String,com.google.android.apps.mytracks.io.file.TrackFileFormat)>
<java.util.TreeSet: boolean isEmpty()>
<android.support.v4.app.TaskStackBuilderHoneycomb: android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int)>
<com.google.api.client.util.ClassInfo: com.google.api.client.util.ClassInfo of(java.lang.Class)>
<java.lang.String: int indexOf(java.lang.String)>
<com.google.android.apps.mytracks.io.gdata.maps.MapFeatureEntry: java.lang.String getPrivacy()>
<android.os.Bundle: int getInt(java.lang.String,int)>
<com.google.common.collect.Lists: java.util.ArrayList newArrayList()>
<com.google.android.apps.mytracks.content.WaypointCreationRequest: void <clinit>()>
<com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment: com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment$ShareTrackCaller access$600(com.google.android.apps.mytracks.fragments.ShareTrackDialogFragment)>
<com.google.common.base.Joiner: void <init>(com.google.common.base.Joiner,com.google.common.base.Joiner$1)>
<java.lang.Object: java.lang.Class getClass()>
<com.google.gdata.util.parser.Repeat: void <init>(com.google.gdata.util.parser.Parser,int)>
<com.google.gdata.wireformats.AltFormat$Builder: void <init>()>
<com.google.android.apps.mytracks.fragments.AbstractMyTracksDialogFragment: void <init>()>
<com.google.android.common.http.UrlRules$Rule: void <init>(java.lang.String,java.lang.String)>
<com.google.android.apps.mytracks.stats.TripStatistics$Creator: void <init>()>
<com.google.android.apps.mytracks.fragments.ExportDialogFragment: android.accounts.Account[] access$600(com.google.android.apps.mytracks.fragments.ExportDialogFragment)>
<java.io.FileOutputStream: void write(byte[],int,int)>
<com.google.android.apps.mytracks.SearchListActivity: com.google.android.apps.mytracks.services.TrackRecordingServiceConnection getTrackRecordingServiceConnection()>
<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>
<android.support.v4.app.FragmentActivity: void onResumeFragments()>
<com.google.gdata.model.atom.Category: void <clinit>()>
<com.google.android.apps.mytracks.fragments.InstallEarthDialogFragment: void <init>()>
<com.google.android.apps.mytracks.stats.TripStatistics: void merge(com.google.android.apps.mytracks.stats.TripStatistics)>
<com.google.android.apps.mytracks.TrackListActivity: com.google.android.apps.mytracks.services.TrackRecordingServiceConnection access$500(com.google.android.apps.mytracks.TrackListActivity)>
<com.google.gdata.util.VersionRegistry: com.google.gdata.util.Version getVersion(java.lang.Class)>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: boolean hasCadence()>
<android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl: java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat)>
<java.util.Calendar: int get(int)>
<com.google.api.client.json.gson.GsonParser: com.google.common.primitives.UnsignedLong getUnsignedLongValue()>
<android.view.KeyEvent: void <init>(int,int)>
<android.support.v4.app.FragmentPagerAdapter: void startUpdate(android.view.ViewGroup)>
<com.google.android.apps.mytracks.TabsAdapter: android.support.v4.app.Fragment getItem(int)>
<com.google.common.collect.LinkedListMultimap: com.google.common.collect.LinkedListMultimap create()>
<com.google.android.apps.mytracks.TrackEditActivity: void onEnableSyncDone(boolean)>
<com.google.android.apps.mytracks.content.TrackDataHub: android.content.Context access$900(com.google.android.apps.mytracks.content.TrackDataHub)>
<com.google.common.collect.Maps: void <clinit>()>
<com.google.common.base.Preconditions: java.lang.String badPositionIndexes(int,int,int)>
<com.google.android.apps.mytracks.services.MyTracksLocationManager: com.google.android.gms.location.LocationClient access$300(com.google.android.apps.mytracks.services.MyTracksLocationManager)>
<android.app.Service: void stopForeground(boolean)>
<com.google.android.gms.internal.dz: void bo()>
<java.lang.reflect.Array: int getLength(java.lang.Object)>
<com.google.api.client.auth.oauth2.RefreshTokenRequest: com.google.api.client.auth.oauth2.RefreshTokenRequest setGrantType(java.lang.String)>
<com.google.android.apps.mytracks.util.ChartsExtendedEncoder: java.lang.String getSeparator()>
<com.google.android.apps.mytracks.settings.MapSettingsActivity$4: void <init>(com.google.android.apps.mytracks.settings.MapSettingsActivity)>
<com.google.api.client.googleapis.services.AbstractGoogleClientRequest: com.google.api.client.http.GenericUrl buildHttpRequestUrl()>
<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>
<com.google.android.apps.mytracks.util.DialogUtils$2: void <init>(android.content.Context,android.app.ProgressDialog)>
<com.google.android.apps.mytracks.io.maps.SendMapsAsyncTask: boolean performTask()>
<android.support.v4.util.SparseArrayCompat: void delete(int)>
<java.lang.String: java.lang.String toLowerCase()>
<com.google.android.apps.mytracks.fragments.ChooseActivityTypeDialogFragment: void <init>()>
<com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object)>
<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>
<com.google.android.apps.mytracks.util.FileUtils: boolean isDirectory(java.io.File)>
<android.support.v4.view.ViewCompat$JBViewCompatImpl: void postInvalidateOnAnimation(android.view.View)>
<android.support.v4.content.Loader: void onReset()>
<com.google.api.client.util.GenericData$EntrySet: void <init>(com.google.api.client.util.GenericData)>
<com.google.android.apps.mytracks.content.MyTracksProvider: android.net.Uri insertWaypoint(android.net.Uri,android.content.ContentValues)>
<java.lang.reflect.Modifier: boolean isAbstract(int)>
<android.support.v4.content.ModernAsyncTask$InternalHandler: void <init>()>
<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken decodeNumber(char[],int,int)>
<com.google.android.apps.mytracks.content.Waypoint: long getDuration()>
<android.view.ViewGroup: android.view.View findFocus()>
<com.google.api.client.auth.oauth2.RefreshTokenRequest: com.google.api.client.auth.oauth2.RefreshTokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer)>
<com.google.android.apps.mytracks.content.DataSourceManager$PreferenceListener: void <init>(com.google.android.apps.mytracks.content.DataSourceManager)>
<com.google.api.client.http.apache.ApacheHttpResponse: java.lang.String getContentType()>
<java.util.Arrays: java.util.List asList(java.lang.Object[])>
<android.net.Uri: void <clinit>()>
<com.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask: void shutdown()>
<com.google.gdata.util.httputil.FormUrlDecoder$NameAction: void handle(char[],int,int,java.lang.Object)>
<com.google.android.apps.mytracks.util.Api14Adapter: boolean isGoogleFeedbackAvailable()>
<com.google.android.apps.mytracks.util.TrackUtils: void <clinit>()>
<android.app.Dialog: android.view.Window getWindow()>
<com.google.android.apps.mytracks.fragments.EnableSyncDialogFragment: com.google.android.apps.mytracks.fragments.EnableSyncDialogFragment$EnableSyncCaller access$000(com.google.android.apps.mytracks.fragments.EnableSyncDialogFragment)>
<com.google.android.apps.mytracks.fragments.ChooseActivityTypeDialogFragment$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity: void onActivityResult(int,int,android.content.Intent)>
<com.google.gdata.client.http.HttpGDataRequest: void handleErrorResponse()>
<android.support.v4.util.SparseArrayCompat: int binarySearch(int[],int,int,int)>
<android.support.v4.app.BackStackState$1: void <init>()>
<com.google.android.apps.mytracks.fragments.PlayMultipleDialogFragment: void onAttach(android.app.Activity)>
<com.google.android.apps.mytracks.io.sendtogoogle.UploadResultActivity: void <init>()>
<com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest: com.google.api.client.googleapis.json.GoogleJsonResponseException newExceptionOnError(com.google.api.client.http.HttpResponse)>
<com.google.api.client.util.DataMap: java.util.Set entrySet()>
<com.google.android.apps.mytracks.TrackController: void hide()>
<com.google.android.apps.mytracks.MarkerListActivity: boolean onContextItemSelected(android.view.MenuItem)>
<com.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTaskFactory: com.google.android.apps.mytracks.services.tasks.PeriodicTask create(android.content.Context)>
<com.google.wireless.gdata.serializer.xml.XmlEntryGDataSerializer: void serializeExtraEntryContents(org.xmlpull.v1.XmlSerializer,int)>
<org.apache.http.impl.AbstractHttpClientConnection: void flush()>
<com.google.common.collect.Platform: java.lang.Object[] newArray(java.lang.Object[],int)>
<android.app.Dialog: void setOnCancelListener(android.content.DialogInterface$OnCancelListener)>
<android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)>
<com.google.android.apps.mytracks.io.spreadsheets.SendSpreadsheetsAsyncTask: void invalidateToken()>
<com.google.gdata.client.Service$ClientInputProperties: void <init>(com.google.gdata.client.Service,com.google.gdata.client.Service$GDataRequest,java.lang.Class)>
<com.google.android.apps.mytracks.settings.AdvancedSettingsActivity: void <init>()>
<com.google.android.common.http.GoogleHttpClient$WrappedSocketFactory: void <init>(com.google.android.common.http.GoogleHttpClient,org.apache.http.conn.scheme.SocketFactory)>
<com.google.android.apps.mytracks.TrackEditActivity$1: void <init>(com.google.android.apps.mytracks.TrackEditActivity)>
<com.google.android.apps.mytracks.content.MyTracksLocation: com.google.android.apps.mytracks.content.Sensor$SensorDataSet getSensorDataSet()>
<com.google.android.apps.mytracks.MarkerListActivity: boolean handleContextItem(int,long[])>
<java.lang.IllegalStateException: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.io.maps.SendMapsUtils: com.google.android.apps.mytracks.io.gdata.maps.MapsFeature buildMapsLineFeature(java.lang.String,java.util.ArrayList)>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()>
<com.google.android.apps.mytracks.fragments.ConfirmSyncDialogFragment: void onAttach(android.app.Activity)>
<com.google.android.apps.mytracks.content.Waypoint: java.lang.String getCategory()>
<android.support.v4.util.TimeUtils: void <clinit>()>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<com.google.android.apps.mytracks.fragments.DeleteMarkerDialogFragment: android.app.Dialog createDialog()>
<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter beginArray()>
<com.google.api.services.fusiontables.Fusiontables: com.google.api.services.fusiontables.Fusiontables$Query query()>
<android.widget.TextView: void setSingleLine()>
<com.google.android.apps.mytracks.services.tasks.SplitPeriodicTask: void start()>
<com.google.gdata.util.NoLongerAvailableException: void <init>(java.net.HttpURLConnection)>
<com.google.android.apps.mytracks.io.sync.SyncUtils: com.google.api.services.drive.model.File getMyTracksFolder(android.content.Context,com.google.api.services.drive.Drive)>
<com.google.android.apps.mytracks.stats.TripStatistics: long getStartTime()>
<java.io.InputStream: boolean markSupported()>
<com.google.api.client.http.UrlEncodedContent: void <init>(java.lang.Object)>
<com.google.gdata.client.GoogleService$ServiceUnavailableException: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.widgets.TrackWidgetConfigActivity: android.widget.Spinner access$100(com.google.android.apps.mytracks.widgets.TrackWidgetConfigActivity)>
<com.google.android.apps.mytracks.util.IntentUtils: android.content.Intent newShareUrlIntent(android.content.Context,long,java.lang.String,java.lang.String,java.lang.String)>
<android.app.Service: void startForeground(int,android.app.Notification)>
<com.google.android.apps.mytracks.MarkerEditActivity: void <clinit>()>
<com.google.api.client.http.LowLevelHttpResponse: void <init>()>
<com.google.api.client.util.escape.Platform: char[] charBufferFromThreadLocal()>
<com.google.android.apps.mytracks.services.ControlRecordingService: void onCreate()>
<com.google.android.apps.mytracks.fragments.ChooseActivityTypeDialogFragment$3: void <init>(android.app.AlertDialog,com.google.android.apps.mytracks.fragments.ChooseActivityTypeImageAdapter,android.view.View)>
<com.google.common.collect.Collections2: void <clinit>()>
<com.google.android.apps.analytics.HitBuilder: java.lang.String constructPageviewRequestPath(com.google.android.apps.analytics.Event,com.google.android.apps.analytics.Referrer)>
<com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>
<com.google.android.apps.mytracks.SearchListActivity: void onCreate(android.os.Bundle)>
<com.google.android.apps.mytracks.AbstractSendToGoogleActivity: void playTracks(long[])>
<com.google.api.client.http.GenericUrl: void <clinit>()>
<android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>
<com.google.android.apps.mytracks.content.DescriptionGeneratorImpl: void writeGrade(double,java.lang.StringBuilder,int,java.lang.String)>
<java.net.URI: void <init>(java.lang.String)>
<com.google.android.apps.mytracks.settings.SensorSettingsActivity$2: void <init>(com.google.android.apps.mytracks.settings.SensorSettingsActivity)>
<com.google.wireless.gdata.serializer.xml.XmlEntryGDataSerializer: void serializePublicationDate(org.xmlpull.v1.XmlSerializer,java.lang.String)>
<android.support.v4.util.SparseArrayCompat: java.lang.Object get(int)>
<com.google.gdata.client.Service$ClientStreamProperties: com.google.gdata.wireformats.AltRegistry getAltRegistry()>
<com.google.gdata.model.MetadataCreatorImpl: void <init>(com.google.gdata.model.MetadataRegistry,com.google.gdata.model.TransformKey)>
<com.google.android.gms.internal.bd: java.lang.Object a(com.google.android.gms.internal.bc)>
<com.google.android.apps.mytracks.widgets.TrackWidgetProvider: void updateDistance(android.content.Context,android.widget.RemoteViews,int[],com.google.android.apps.mytracks.stats.TripStatistics,boolean)>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager: java.lang.String access$000()>
<com.google.gdata.client.http.HttpGDataRequest: void setMethod(java.lang.String)>
<com.google.api.client.util.LoggingByteArrayOutputStream: void write(byte[],int,int)>
<com.google.android.gms.internal.ea: void setGravity(int)>
<com.google.api.client.http.apache.ApacheHttpTransport: com.google.api.client.http.apache.ApacheHttpRequest buildRequest(java.lang.String,java.lang.String)>
<java.util.HashMap: boolean isEmpty()>
<android.net.TrafficStats: long getUidRxBytes(int)>
<com.google.api.client.json.JsonGenerator: void serialize(java.lang.Object)>
<com.google.android.gms.common.GooglePlayServicesUtil: boolean b(android.content.res.Resources)>
<com.google.android.apps.mytracks.content.MyTracksProvider$UrlType: void <clinit>()>
<com.google.common.collect.EmptyImmutableList: boolean isEmpty()>
<com.google.android.apps.mytracks.TrackController: long access$400(com.google.android.apps.mytracks.TrackController)>
<com.google.android.apps.mytracks.settings.MapSettingsActivity$5: void <init>(com.google.android.apps.mytracks.settings.MapSettingsActivity)>
<android.support.v4.app.Fragment: android.os.Bundle getArguments()>
<java.text.NumberFormat: java.text.NumberFormat getInstance()>
<com.google.android.apps.mytracks.io.sync.SyncUtils: java.io.File getTempFile(android.content.Context,com.google.android.apps.mytracks.content.MyTracksProviderUtils,com.google.android.apps.mytracks.content.Track,boolean)>
<com.google.common.collect.ImmutableList$1: java.lang.Object get(int)>
<java.util.ArrayList: java.lang.Object[] toArray()>
<com.google.android.apps.mytracks.services.TrackRecordingService$5: void <init>(com.google.android.apps.mytracks.services.TrackRecordingService)>
<com.google.common.base.Preconditions: int checkElementIndex(int,int,java.lang.String)>
<com.dsi.ant.AntInterface: void ANTCloseChannel(byte)>
<com.google.android.apps.mytracks.fragments.MarkerDetailFragment: android.widget.ImageView access$000(com.google.android.apps.mytracks.fragments.MarkerDetailFragment)>
<com.google.android.apps.mytracks.fragments.EulaDialogFragment$3: void <init>(com.google.android.apps.mytracks.fragments.EulaDialogFragment)>
<android.support.v4.view.AccessibilityDelegateCompat: java.lang.Object getBridge()>
<com.google.gdata.data.spreadsheet.CustomElementCollection: void setValueLocal(java.lang.String,java.lang.String)>
<android.widget.Spinner: void onDetachedFromWindow()>
<android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich: void <init>()>
<com.google.gdata.util.parser.Chset: void <init>(char)>
<com.google.common.collect.Iterators$14: void <init>(java.lang.Object)>
<com.google.api.services.drive.model.Permission: com.google.api.services.drive.model.Permission setValue(java.lang.String)>
<com.google.android.apps.analytics.Event: int getAdHitId()>
<com.google.common.base.Preconditions: void checkPositionIndexes(int,int,int)>
<com.google.android.apps.mytracks.settings.MapSettingsActivity$2: void <init>(com.google.android.apps.mytracks.settings.MapSettingsActivity,int,int)>
<com.google.android.apps.mytracks.MarkerEditActivity: long access$200(com.google.android.apps.mytracks.MarkerEditActivity)>
<com.google.android.apps.mytracks.util.ChartURLGenerator: java.lang.String getChartUrl(java.util.Vector,java.util.Vector,com.google.android.apps.mytracks.content.Track,java.lang.String,boolean)>
<com.google.android.apps.mytracks.io.file.importer.KmzTrackImporter: void cleanImport(long)>
<android.support.v4.content.ModernAsyncTask$2: void <init>(android.support.v4.content.ModernAsyncTask)>
<com.google.api.client.util.Clock$1: void <init>()>
<com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder: com.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder setBatteryLevel(com.google.android.apps.mytracks.content.Sensor$SensorData)>
<com.google.android.gms.internal.aa: void <init>(android.content.Context)>
<com.google.android.apps.analytics.AnalyticsParameterEncoder: java.lang.String encode(java.lang.String)>
<java.util.HashMap: java.util.Set keySet()>
<com.google.android.gms.internal.h: void <init>()>
<com.google.android.apps.mytracks.services.sensors.BluetoothConnectionManager: void connect(android.bluetooth.BluetoothDevice)>
<com.google.gdata.data.ExtensionDescription: void setNamespace(com.google.gdata.util.common.xml.XmlNamespace)>
<com.google.android.apps.mytracks.services.tasks.CheckPermissionAsyncTask: void <init>(android.app.Activity,java.lang.String,java.lang.String)>
<com.google.android.apps.mytracks.io.sendtogoogle.AbstractSendAsyncTask: boolean retryTask()>
<com.google.android.apps.mytracks.fragments.EulaDialogFragment$1: void <init>(com.google.android.apps.mytracks.fragments.EulaDialogFragment)>
<com.google.api.client.googleapis.services.AbstractGoogleClient: java.lang.String normalizeRootUrl(java.lang.String)>
<com.google.android.apps.mytracks.io.file.importer.AbstractFileTrackImporter: long importFile(java.io.InputStream)>
<com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread: long access$600(com.google.android.apps.analytics.NetworkDispatcher$DispatcherThread)>
<com.google.api.client.json.gson.GsonParser: void close()>
<android.preference.PreferenceActivity: void addPreferencesFromResource(int)>
<com.google.gdata.util.ErrorDomain$ErrorCode: com.google.gdata.util.ErrorDomain$ErrorCode withInternalReason(java.lang.String)>
<com.google.gdata.model.MetadataRegistry: com.google.gdata.model.ElementCreator build(com.google.gdata.model.ElementKey)>
<com.google.android.apps.mytracks.fragments.FrequencyDialogFragment: void <init>()>
<android.support.v4.app.LoaderManagerImpl: android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>
<com.google.common.collect.ImmutableEntry: java.lang.Object getValue()>
<android.location.Location: double getLatitude()>
<com.google.android.apps.mytracks.fragments.EnableSyncDialogFragment$2: void onClick(android.content.DialogInterface,int)>
<com.google.android.gms.common.GooglePlayServicesUtil: byte[][] a(byte[][][])>
<android.support.v4.view.ViewPager$MyAccessibilityDelegate: void <init>(android.support.v4.view.ViewPager)>
<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>
<com.google.api.client.http.GenericUrl: boolean equals(java.lang.Object)>
<com.google.gdata.util.common.base.CharMatcher$11: com.google.gdata.util.common.base.CharMatcher or(com.google.gdata.util.common.base.CharMatcher)>
<com.google.gson.stream.JsonWriter: void newline()>
<com.google.api.client.util.Data: java.lang.Object nullOf(java.lang.Class)>
<java.lang.IllegalStateException: void <init>()>
<org.apache.http.entity.ByteArrayEntity: void <init>(byte[])>
<android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)>
