<android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)>
<org.eclipse.egit.github.core.Issue: org.eclipse.egit.github.core.User getAssignee()>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors optionalConstructor(java.lang.reflect.Constructor)>
<android.support.v4.util.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.inject.internal.util.$FinalizableReferenceQueue$DecoupledLoader: java.net.URLClassLoader newLoader(java.net.URL)>
<com.google.inject.internal.util.$MapMaker$StrongValueReference: java.lang.Object waitForValue()>
<java.util.HashMap: boolean isEmpty()>
<com.github.mobile.ui.TabPagerActivity: void createTabs()>
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
<com.github.mobile.util.SourceEditor: void <init>(android.webkit.WebView)>
<com.google.inject.internal.util.$Hashing: int chooseTableSize(int)>
<com.github.mobile.ui.issue.IssueDashboardPagerAdapter: java.lang.CharSequence getPageTitle(int)>
<com.google.inject.matcher.Matchers: com.google.inject.matcher.Matcher identicalTo(java.lang.Object)>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockFragmentActivity: void onStop()>
<com.google.inject.internal.util.$Iterators$2: void <init>()>
<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>
<java.lang.Class: boolean isInterface()>
<com.google.inject.internal.Annotations$AnnotationChecker$1: void <init>(com.google.inject.internal.Annotations$AnnotationChecker)>
<java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors jitDisabled(com.google.inject.Key)>
<com.google.inject.internal.util.$ImmutableMap: java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object)>
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>
<com.google.inject.internal.MembersInjectorStore$1: java.lang.Object create(java.lang.Object,com.google.inject.internal.Errors)>
<com.google.inject.internal.Scoping$1: com.google.inject.Scope getScopeInstance()>
<com.github.mobile.util.MarkdownUtils: boolean isMarkdown(java.lang.String)>
<com.github.mobile.ui.issue.MilestoneDialogFragment: void show(com.github.mobile.ui.DialogFragmentActivity,int,java.lang.String,java.lang.String,java.util.ArrayList,int)>
<com.github.mobile.ui.gist.GistFilesViewActivity: com.github.mobile.ui.FragmentProvider getProvider()>
<android.app.Activity: void onActivityResult(int,int,android.content.Intent)>
<com.google.inject.Key$AnnotationInstanceStrategy: boolean hasAttributes()>
<com.github.mobile.ui.search.SearchActivity: int getContentView()>
<com.google.inject.internal.UntargettedBindingProcessor: void <init>(com.google.inject.internal.Errors,com.google.inject.internal.ProcessedBindingData)>
<java.lang.Enum: int hashCode()>
<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
<com.google.inject.spi.InjectionPoint: java.util.List hierarchyFor(com.google.inject.TypeLiteral)>
<android.graphics.Rect: int width()>
<com.github.mobile.ui.search.SearchActivity: void <init>()>
<com.google.inject.internal.InjectorShell$Builder: void <init>()>
<com.google.inject.internal.ProviderMethodsModule: java.util.List getProviderMethods(com.google.inject.Binder)>
<android.database.DataSetObservable: void notifyChanged()>
<java.lang.reflect.Modifier: boolean isPrivate(int)>
<android.app.AlertDialog: void <init>(android.content.Context,int)>
<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl: int hash(java.lang.Object)>
<android.support.v4.app.Fragment: void performReallyStop()>
<android.app.AlertDialog: void setView(android.view.View)>
<com.google.inject.internal.MessageProcessor: void <init>(com.google.inject.internal.Errors)>
<android.support.v4.app.BackStackRecord: void calculateFragments(android.util.SparseArray,android.util.SparseArray)>
<com.google.inject.Key: void ensureIsBindingAnnotation(java.lang.Class)>
<com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList copyOfInternal(java.util.ArrayList)>
<java.lang.ref.WeakReference: void <init>(java.lang.Object)>
<com.google.inject.internal.util.$ImmutableSet$Builder: com.google.inject.internal.util.$ImmutableSet$Builder addAll(java.lang.Iterable)>
<com.github.mobile.ui.gist.GistFilesViewActivity: void onCreate(android.os.Bundle)>
<roboguice.service.RoboService: void onStart(android.content.Intent,int)>
<java.util.ArrayList: void clear()>
<android.os.Looper: android.os.Looper myLooper()>
<com.github.mobile.util.SourceEditor$1: void <init>(com.github.mobile.util.SourceEditor)>
<java.lang.UnsupportedOperationException: void <init>()>
<android.support.v4.app.DialogFragment: void onDetach()>
<com.google.inject.matcher.Matchers$SubclassesOf: void <init>(java.lang.Class)>
<com.github.mobile.ui.issue.EditIssueActivity: void updateSaveMenu()>
<com.google.inject.internal.util.$Maps: java.util.LinkedHashMap newLinkedHashMap()>
<roboguice.fragment.RoboDialogFragment: void <init>()>
<com.github.mobile.ui.gist.CreateGistActivity: void onCreate(android.os.Bundle)>
<roboguice.activity.event.OnActivityResultEvent: void <init>(int,int,android.content.Intent)>
<org.eclipse.egit.github.core.Issue: org.eclipse.egit.github.core.Issue setMilestone(org.eclipse.egit.github.core.Milestone)>
<com.google.inject.internal.util.$FinalizableReferenceQueue$DecoupledLoader: java.net.URL getBaseUrl()>
<com.google.inject.TypeLiteral: com.google.inject.TypeLiteral resolve(java.lang.reflect.Type)>
<java.lang.Long: void <clinit>()>
<android.support.v4.app.FragmentManagerImpl: void dispatchActivityCreated()>
<com.github.kevinsawicki.wishlist.ViewFinder: android.view.View find(int)>
<com.google.inject.internal.InheritingState: com.google.inject.internal.BindingImpl getExplicitBinding(com.google.inject.Key)>
<com.github.mobile.ui.search.SearchActivity: com.github.mobile.ui.search.SearchPagerAdapter createAdapter()>
<java.util.Formatter: void <init>()>
<com.google.inject.internal.util.$MapMaker$StrategyImpl: java.lang.Object newEntry(java.lang.Object,int,java.lang.Object)>
<android.support.v4.app.LoaderManagerImpl: void <clinit>()>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockAccountAuthenticatorActivity: void onRestart()>
<com.github.mobile.ui.FragmentPagerAdapter: com.actionbarsherlock.app.SherlockFragment getSelected()>
<android.support.v4.app.FragmentManagerImpl: void checkStateLoss()>
<com.github.mobile.ui.gist.DeleteGistTask: void start()>
<com.google.inject.internal.AbstractProcessor: void <init>(com.google.inject.internal.Errors)>
<com.google.inject.internal.InjectorImpl$4: void <init>(com.google.inject.internal.InjectorImpl,com.google.inject.spi.Dependency,com.google.inject.internal.InternalFactory)>
<java.lang.ThreadLocal: java.lang.Object get()>
<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: void <init>(java.lang.Object[])>
<java.util.LinkedHashSet: void <init>()>
<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: void <init>(java.lang.Object[],com.google.inject.internal.util.$ImmutableList$1)>
<com.github.mobile.ui.user.HomeActivity: void configureActionBar()>
<java.lang.reflect.Modifier: boolean isProtected(int)>
<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>
<android.support.v4.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>
<com.google.inject.spi.InjectionPoint$InjectableMember: void <init>(com.google.inject.TypeLiteral,java.lang.annotation.Annotation)>
<com.google.inject.Key: com.google.inject.Key ofType(java.lang.reflect.Type)>
<com.google.inject.name.NamedImpl: int hashCode()>
<com.google.inject.internal.util.$ImmutableMap$EmptyImmutableMap: void <init>()>
<android.support.v4.app.FragmentManagerImpl: void dispatchDestroyView()>
<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>
<android.support.v4.app.FragmentTransitionCompat21: void setSharedElementEpicenter(android.transition.Transition,android.support.v4.app.FragmentTransitionCompat21$EpicenterView)>
<com.github.mobile.core.user.FollowingUserTask: void <init>(android.content.Context,java.lang.String)>
<android.app.Dialog: void setOnCancelListener(android.content.DialogInterface$OnCancelListener)>
<com.github.mobile.ui.PagerActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<android.provider.SearchRecentSuggestions: void saveRecentQuery(java.lang.String,java.lang.String)>
<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$InternalsImpl: void <init>(com.google.inject.internal.util.$CustomConcurrentHashMap$Impl)>
<com.google.inject.internal.InjectorImpl: com.google.inject.Provider getProviderOrThrow(com.google.inject.Key,com.google.inject.internal.Errors)>
<com.github.mobile.ui.ConfirmDialogFragment: void onClick(android.content.DialogInterface,int)>
<com.google.inject.internal.AbstractBindingProcessor: void <clinit>()>
<android.support.v4.content.Loader: void forceLoad()>
<com.github.mobile.ui.user.UriLauncherActivity: android.content.Intent getIntentForURI(android.net.Uri)>
<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>
<com.google.inject.Key: com.google.inject.Key get(com.google.inject.TypeLiteral,java.lang.annotation.Annotation)>
<com.google.inject.internal.BindingBuilder: void copyErrorsToBinder(com.google.inject.ConfigurationException)>
<com.google.inject.internal.util.$ImmutableSet: com.google.inject.internal.util.$ImmutableSet copyOf(java.lang.Iterable)>
<android.support.v4.content.ModernAsyncTask: void <clinit>()>
<com.github.mobile.sync.ContentProviderAdapter: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<roboguice.activity.event.OnDestroyEvent: void <init>()>
<com.github.mobile.ui.issue.CreateIssueTask: void <init>(android.app.Activity,org.eclipse.egit.github.core.IRepositoryIdProvider,org.eclipse.egit.github.core.Issue)>
<android.app.Activity: void startActivity(android.content.Intent)>
<java.util.concurrent.locks.ReentrantLock: void <init>()>
<android.support.v4.app.Fragment: void onAttach(android.app.Activity)>
<android.support.v4.app.BackStackRecord: void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean)>
<android.support.v4.content.AsyncTaskLoader: void onForceLoad()>
<android.content.Intent: java.lang.String getAction()>
<android.app.Activity: android.view.View findViewById(int)>
<com.github.mobile.ui.issue.EditIssuesFilterActivity: void onSaveInstanceState(android.os.Bundle)>
<android.app.ProgressDialog: void setProgressStyle(int)>
<com.google.inject.spi.Elements$RecordingBinder: void install(com.google.inject.Module)>
<android.app.ProgressDialog: void <init>(android.content.Context)>
<com.github.mobile.Intents$Builder: com.github.mobile.Intents$Builder user(org.eclipse.egit.github.core.User)>
<com.github.mobile.ui.issue.EditIssueActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<android.view.View: void saveHierarchyState(android.util.SparseArray)>
<java.util.concurrent.FutureTask: boolean cancel(boolean)>
<android.support.v4.app.BackStackRecord: void <init>(android.support.v4.app.FragmentManagerImpl)>
<android.support.v4.app.DialogFragment: void onCreate(android.os.Bundle)>
<com.github.mobile.ui.DialogFragmentHelper: android.app.AlertDialog createDialog()>
<com.google.inject.spi.InjectionPoint$OverrideIndex: boolean removeIfOverriddenBy(java.lang.reflect.Method,boolean,com.google.inject.spi.InjectionPoint$InjectableMethod)>
<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockAccountAuthenticatorActivity: void onStop()>
<com.github.mobile.ui.comment.CreateCommentActivity$1: void onViewAttachedToWindow(android.view.View)>
<com.github.mobile.ui.ConfirmDialogFragment: void <init>()>
<android.support.v4.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>
<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>
<com.google.inject.internal.InjectorShell$Builder: java.lang.Object lock()>
<com.github.mobile.ui.search.SearchPagerAdapter: void <init>(com.actionbarsherlock.app.SherlockFragmentActivity)>
<com.github.mobile.ui.issue.AssigneeDialogFragment: java.util.ArrayList getChoices()>
<android.support.v4.app.FragmentActivity$2: boolean hasView()>
<com.google.inject.internal.InjectorShell$LoggerFactory: void <init>()>
<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.Binder withSource(java.lang.Object)>
<com.google.inject.internal.MoreTypes: com.google.inject.TypeLiteral canonicalizeForKey(com.google.inject.TypeLiteral)>
<java.lang.Class: int getModifiers()>
<android.os.Bundle: void putString(java.lang.String,java.lang.String)>
<roboguice.util.SafeAsyncTask$Task: void <init>(roboguice.util.SafeAsyncTask)>
<android.support.v4.util.ArrayMap: void <init>()>
<com.google.inject.internal.util.$SourceProvider: void <init>(java.lang.Iterable)>
<java.util.HashSet: void clear()>
<android.util.SparseArray: void <init>()>
<java.util.HashMap: int size()>
<com.google.inject.internal.LinkedBindingImpl: java.util.Set getDependencies()>
<com.github.mobile.accounts.AccountAuthenticator: void <clinit>()>
<com.github.mobile.ui.DialogFragmentHelper: java.lang.String getMessage()>
<com.google.inject.internal.util.$ImmutableSet: com.google.inject.internal.util.$ImmutableSet of(java.lang.Object[])>
<android.content.Intent: android.content.Intent setData(android.net.Uri)>
<java.util.concurrent.atomic.AtomicBoolean: void <init>()>
<com.google.inject.internal.Errors: void <init>(java.lang.Object)>
<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>
<com.github.mobile.ui.issue.FiltersViewActivity: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: void <init>(java.util.Map$Entry)>
<java.lang.StringBuilder: java.lang.String toString()>
<com.github.mobile.ui.gist.GistFilesViewActivity: void <init>()>
<com.github.mobile.ui.gist.GistsViewActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockFragmentActivity: void <init>()>
<android.support.v4.app.FragmentTransitionCompat21: java.lang.String getTransitionName(android.view.View)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors notASubtype(java.lang.Class,java.lang.Class)>
<android.support.v4.app.BackStackRecord: void setNameOverride(android.support.v4.util.ArrayMap,java.lang.String,java.lang.String)>
<com.google.inject.internal.util.$ImmutableMap: com.google.inject.internal.util.$ImmutableMap of()>
<com.google.inject.internal.ScopeBindingProcessor: void <init>(com.google.inject.internal.Errors)>
<com.github.mobile.ui.issue.CreateCommentActivity: android.support.v4.view.PagerAdapter createAdapter()>
<com.google.inject.internal.InjectorImpl: com.google.inject.internal.BindingImpl createUninitializedBinding(com.google.inject.Key,com.google.inject.internal.Scoping,java.lang.Object,com.google.inject.internal.Errors,boolean)>
<android.support.v4.util.MapCollections$ValuesCollection: void <init>(android.support.v4.util.MapCollections)>
<com.github.mobile.ui.issue.EditIssueActivity: void checkCollaboratorStatus()>
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>
<com.google.inject.internal.util.$ImmutableSet$RegularImmutableSet: boolean contains(java.lang.Object)>
<com.github.mobile.ui.issue.IssueSearchActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<com.google.inject.internal.Initializables: com.google.inject.internal.Initializable of(java.lang.Object)>
<android.app.Dialog: void setOnDismissListener(android.content.DialogInterface$OnDismissListener)>
<com.google.inject.internal.State$1: void blacklist(com.google.inject.Key,java.lang.Object)>
<android.support.v4.app.FragmentTransitionCompat21: void addTransitionTargets(java.lang.Object,java.lang.Object,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,android.view.View,android.support.v4.app.FragmentTransitionCompat21$EpicenterView,java.util.Map,java.util.ArrayList,java.util.Map,java.util.ArrayList)>
<com.google.inject.spi.Dependency: java.util.Set forInjectionPoints(java.util.Set)>
<com.google.inject.internal.util.$ImmutableSet$Builder: void <init>()>
<android.support.v4.app.LoaderManagerImpl: android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>
<com.google.inject.internal.util.$ImmutableSet: com.google.inject.internal.util.$ImmutableSet$Builder builder()>
<com.github.mobile.accounts.TwoFactorAuthActivity$1: void <init>(com.github.mobile.accounts.TwoFactorAuthActivity)>
<com.github.mobile.core.issue.IssueUtils: boolean isPullRequest(org.eclipse.egit.github.core.Issue)>
<com.google.inject.internal.Errors: void formatSource(java.util.Formatter,java.lang.Object)>
<android.graphics.Color: int parseColor(java.lang.String)>
<android.content.Context: java.lang.String getString(int)>
<com.actionbarsherlock.app.SherlockActivity: void onPostResume()>
<com.github.mobile.ui.issue.AssigneeDialog: void load(org.eclipse.egit.github.core.User)>
<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl: void <init>(com.google.inject.internal.util.$CustomConcurrentHashMap$Strategy,com.google.inject.internal.util.$CustomConcurrentHashMap$Builder)>
<android.support.v4.app.FragmentActivity: void onReallyStop()>
<android.support.v4.app.Fragment: void onDestroy()>
<roboguice.inject.ContextScopedRoboInjector: void injectMembersWithoutViews(java.lang.Object)>
<java.util.logging.Level: void <clinit>()>
<com.google.inject.internal.util.$MapMaker$StrongValueReference: void <init>(java.lang.Object)>
<android.support.v4.util.ArrayMap$1: void <init>(android.support.v4.util.ArrayMap)>
<org.eclipse.egit.github.core.RepositoryIssue: void <init>()>
<com.google.inject.spi.InjectionPoint: java.lang.reflect.Member getMember()>
<com.google.inject.internal.DeferredLookups: void <init>(com.google.inject.internal.InjectorImpl)>
<android.content.ContentProvider: void <init>()>
<com.google.inject.internal.InternalInjectorCreator: void <init>()>
<com.github.mobile.ui.issue.MilestoneDialog: void <init>(com.github.mobile.ui.DialogFragmentActivity,int,org.eclipse.egit.github.core.IRepositoryIdProvider,org.eclipse.egit.github.core.service.MilestoneService)>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment findFragmentById(int)>
<java.util.WeakHashMap: java.lang.Object remove(java.lang.Object)>
<android.view.View: void setVisibility(int)>
<com.github.mobile.ui.user.UriLauncherActivity$1: void onCancel(android.content.DialogInterface)>
<android.support.v4.app.LoaderManagerImpl: android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>
<java.io.PrintWriter: void print(boolean)>
<java.lang.Class: boolean isEnum()>
<com.google.inject.internal.ConstructorInjectorStore: com.google.inject.internal.ConstructorInjector access$000(com.google.inject.internal.ConstructorInjectorStore,com.google.inject.spi.InjectionPoint,com.google.inject.internal.Errors)>
<com.github.mobile.ui.issue.EditIssuesFilterActivity: com.github.mobile.ui.issue.LabelsDialog access$502(com.github.mobile.ui.issue.EditIssuesFilterActivity,com.github.mobile.ui.issue.LabelsDialog)>
<com.google.inject.internal.util.$MapMaker$StrategyImpl: java.lang.Object compute(java.lang.Object,com.google.inject.internal.util.$MapMaker$ReferenceEntry,com.google.inject.internal.util.$Function)>
<com.google.inject.internal.Annotations: boolean isMarker(java.lang.Class)>
<com.google.inject.internal.util.$ImmutableSet: com.google.inject.internal.util.$ImmutableSet of()>
<com.github.mobile.accounts.AccountAuthenticatorService: com.github.mobile.accounts.AccountAuthenticator getAuthenticator()>
<android.support.v4.app.FragmentActivity: void onPause()>
<com.google.inject.internal.EncounterImpl: void <init>(com.google.inject.internal.Errors,com.google.inject.internal.Lookups)>
<roboguice.RoboGuice$1: void <init>(android.app.Application)>
<com.github.mobile.ui.issue.EditIssueTask: com.github.mobile.ui.issue.EditIssueTask edit()>
<dummyMainClass: void dummyMainMethod()>
<java.lang.StringBuilder: void <init>(int)>
<android.view.View: void startAnimation(android.view.animation.Animation)>
<com.google.inject.internal.LinkedBindingImpl: void <init>(com.google.inject.internal.InjectorImpl,com.google.inject.Key,java.lang.Object,com.google.inject.internal.InternalFactory,com.google.inject.internal.Scoping,com.google.inject.Key)>
<com.github.mobile.ui.user.UriLauncherActivity$2: void <init>(com.github.mobile.ui.user.UriLauncherActivity)>
<com.github.kevinsawicki.wishlist.ViewUpdater: void <clinit>()>
<com.google.inject.internal.UniqueAnnotations$1: boolean equals(java.lang.Object)>
<com.github.mobile.ui.gist.GistsActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.github.mobile.ui.DialogFragmentHelper: void onResult(int)>
<android.support.v4.util.ArrayMap: android.support.v4.util.MapCollections getCollection()>
<com.github.mobile.ui.issue.EditIssueActivity$6: void <init>(com.github.mobile.ui.issue.EditIssueActivity,android.app.Activity,org.eclipse.egit.github.core.IRepositoryIdProvider,org.eclipse.egit.github.core.Issue)>
<com.google.inject.internal.FailableCache: void <init>()>
<com.github.mobile.ui.issue.LabelsDialogFragment: void <init>()>
<com.google.inject.util.Modules$1: void <init>()>
<android.app.Dialog: void hide()>
<java.util.HashMap: void <init>()>
<java.io.IOException: void <init>()>
<com.google.inject.spi.InjectionPoint$Position: void <init>(java.lang.String,int)>
<com.github.mobile.ui.search.SearchActivity: void onNewIntent(android.content.Intent)>
<roboguice.activity.event.OnCreateEvent: void <init>(android.os.Bundle)>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockActivity: void onResume()>
<roboguice.RoboGuice: roboguice.inject.ResourceListener getResourceListener(android.app.Application)>
<com.github.mobile.ui.commit.CommitFileViewActivity: void loadContent()>
<com.github.mobile.core.repo.StarRepositoryTask: void start()>
<java.util.ArrayList: boolean add(java.lang.Object)>
<com.github.kevinsawicki.wishlist.ViewFinder$WindowWrapper: void <init>(android.view.Window)>
<com.github.mobile.ui.issue.AssigneeDialogFragment: void onClick(android.content.DialogInterface,int)>
<android.support.v4.app.LoaderManagerImpl: void doDestroy()>
<java.lang.StackTraceElement: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>
<android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)>
<android.support.v4.util.SparseArrayCompat: java.lang.Object get(int)>
<com.google.inject.internal.InjectorShell$InjectorFactory: void <init>(com.google.inject.Injector)>
<java.lang.Integer: int parseInt(java.lang.String)>
<com.github.mobile.ui.user.UriLauncherActivity: void onCreate(android.os.Bundle)>
<com.github.mobile.ui.repo.RepositoryViewActivity: android.content.Intent createIntent(org.eclipse.egit.github.core.Repository)>
<android.support.v4.app.Fragment: void instantiateChildFragmentManager()>
<com.google.inject.internal.Annotations: boolean isScopeAnnotation(java.lang.Class)>
<com.google.inject.Scopes$1: void <init>()>
<android.support.v4.app.FragmentManagerImpl: void dispatchResume()>
<com.google.inject.internal.State$1: java.util.Set getSourcesForBlacklistedKey(com.google.inject.Key)>
<com.google.inject.internal.util.$MapMaker$Strength$1: com.google.inject.internal.util.$MapMaker$ReferenceEntry newEntry(com.google.inject.internal.util.$CustomConcurrentHashMap$Internals,java.lang.Object,int,com.google.inject.internal.util.$MapMaker$ReferenceEntry)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors cannotInjectInnerClass(java.lang.Class)>
<com.github.mobile.accounts.TwoFactorAuthActivity$4: void onCancel(android.content.DialogInterface)>
<com.google.inject.ConfigurationException: com.google.inject.ConfigurationException withPartialValue(java.lang.Object)>
<com.github.mobile.ui.commit.CreateCommentActivity: com.github.mobile.ui.comment.CommentPreviewPagerAdapter createAdapter()>
<com.google.inject.internal.util.$ImmutableSet: com.google.inject.internal.util.$ImmutableSet copyOfInternal(java.util.Collection)>
<java.lang.Class: java.lang.Class getEnclosingClass()>
<android.support.v4.app.FragmentManagerImpl: void dispatchReallyStop()>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.FragmentTransaction beginTransaction()>
<org.eclipse.egit.github.core.User: java.lang.String getLogin()>
<com.google.inject.internal.MembersInjectorStore: boolean remove(com.google.inject.TypeLiteral)>
<com.google.inject.internal.InjectorImpl$ProviderBindingImpl$1: void <init>(com.google.inject.Provider)>
<com.github.mobile.ui.ref.BranchFileViewActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: int size()>
<com.google.inject.internal.util.$Finalizer: void <clinit>()>
<com.google.inject.internal.util.$ImmutableCollection: void <clinit>()>
<android.app.Dialog: android.content.Context getContext()>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors addMessage(java.lang.Throwable,java.lang.String,java.lang.Object[])>
<com.google.inject.TypeLiteral: com.google.inject.TypeLiteral getSupertype(java.lang.Class)>
<com.github.mobile.ui.issue.EditIssueTask: void <init>(com.github.mobile.ui.DialogFragmentActivity,org.eclipse.egit.github.core.IRepositoryIdProvider,org.eclipse.egit.github.core.Issue)>
<android.support.v4.app.Fragment: void onActivityCreated(android.os.Bundle)>
<org.eclipse.egit.github.core.util.Base64: byte[] decode(java.lang.String)>
<com.github.mobile.accounts.LoginActivity: void onResume()>
<com.github.mobile.util.SourceEditor: void loadSource()>
<java.util.NoSuchElementException: void <init>()>
<com.google.inject.internal.util.$Iterators$8: java.lang.Object next()>
<com.github.mobile.accounts.TwoFactorAuthActivity$3: void <init>(com.github.mobile.accounts.TwoFactorAuthActivity)>
<com.google.inject.internal.ConstructorBindingImpl$Factory: void <init>(boolean,com.google.inject.Key)>
<com.google.inject.internal.Errors: com.google.inject.internal.ErrorsException toException()>
<android.support.v4.content.Loader: void stopLoading()>
<android.os.Handler: boolean hasMessages(int)>
<android.support.v4.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>
<android.support.v4.app.FragmentManagerImpl: void <clinit>()>
<android.net.Uri: void <clinit>()>
<com.google.inject.internal.InstanceBindingImpl: java.util.Set getDependencies()>
<android.content.res.Configuration: void <clinit>()>
<android.support.v4.app.Fragment: void setArguments(android.os.Bundle)>
<com.google.inject.internal.ConstructorBindingImpl: void initialize(com.google.inject.internal.InjectorImpl,com.google.inject.internal.Errors)>
<com.github.mobile.ui.commit.CommitFileViewActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockActivity: void onStop()>
<com.google.inject.internal.TypeConverterBindingProcessor: void internalConvertToTypes(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter)>
<android.widget.TextView: void <init>(android.content.Context)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors keyNotFullySpecified(com.google.inject.TypeLiteral)>
<com.google.inject.internal.util.$Maps: java.util.HashMap newHashMap()>
<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>
<android.view.ContextThemeWrapper: void <init>()>
<com.github.mobile.sync.ContentProviderAdapter: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.google.inject.internal.MembersInjectorImpl: void <init>(com.google.inject.internal.InjectorImpl,com.google.inject.TypeLiteral,com.google.inject.internal.EncounterImpl,com.google.inject.internal.util.$ImmutableList)>
<com.github.mobile.accounts.AccountUtils: void <clinit>()>
<android.support.v4.util.SimpleArrayMap: void <init>()>
<com.google.inject.internal.Errors: void formatInjectionPoint(java.util.Formatter,com.google.inject.spi.Dependency,com.google.inject.spi.InjectionPoint)>
<com.google.inject.TypeLiteral: java.util.List resolveAll(java.lang.reflect.Type[])>
<android.util.SparseArray: int size()>
<com.github.mobile.ui.user.UriLauncherActivity: void showParseError(java.lang.String)>
<java.text.NumberFormat: java.text.NumberFormat getIntegerInstance()>
<java.lang.System: int identityHashCode(java.lang.Object)>
<com.google.inject.internal.util.$ComputationException: void <init>(java.lang.Throwable)>
<android.support.v4.content.ModernAsyncTask$4: void <clinit>()>
<com.github.mobile.accounts.LoginActivity$3: void <init>(com.github.mobile.accounts.LoginActivity)>
<com.google.inject.internal.util.$MapMaker$ComputationExceptionReference: void <init>(java.lang.Throwable)>
<com.github.mobile.ui.issue.EditIssuesFilterActivity: com.github.mobile.ui.issue.AssigneeDialog access$002(com.github.mobile.ui.issue.EditIssuesFilterActivity,com.github.mobile.ui.issue.AssigneeDialog)>
<com.google.inject.internal.Errors: void throwIfNewErrors(int)>
<com.google.inject.internal.InjectorImpl$ConvertedConstantBindingImpl: java.util.Set getDependencies()>
<android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
<android.support.v4.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)>
<com.github.mobile.ui.issue.EditIssuesFilterActivity: void <init>()>
<com.github.mobile.ui.PagerActivity: void <init>()>
<java.lang.reflect.Modifier: boolean isAbstract(int)>
<java.lang.String: int hashCode()>
<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl: java.lang.Object remove(java.lang.Object)>
<roboguice.util.SafeAsyncTask: void execute()>
<com.google.inject.internal.Annotations$AnnotationChecker$1: java.lang.Boolean apply(java.lang.Class)>
<java.lang.Class: java.lang.Class getSuperclass()>
<com.google.inject.internal.util.$Iterators$1: boolean hasNext()>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors childBindingAlreadySet(com.google.inject.Key,java.util.Set)>
<com.google.inject.internal.Initializables$1: void <init>(java.lang.Object)>
<java.io.IOException: void <init>(java.lang.String)>
<com.github.mobile.util.ShareUtils: android.content.Intent create(java.lang.CharSequence,java.lang.CharSequence)>
<com.google.inject.internal.util.$AsynchronousComputationException: void <init>(java.lang.Throwable)>
<java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)>
<android.support.v4.app.BackStackRecord: void setBackNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean)>
<com.google.inject.internal.UniqueAnnotations: java.lang.annotation.Annotation create(int)>
<android.support.v4.app.FragmentTransitionCompat21$4: void <init>(android.view.View,android.transition.Transition,android.view.View,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,java.util.Map,java.util.ArrayList,android.transition.Transition)>
<android.support.v4.app.FragmentManagerImpl: void dispatchStop()>
<android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.google.inject.internal.ConstructorBindingImpl: java.util.Set getInternalDependencies()>
<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.google.inject.Key: java.lang.annotation.Annotation getAnnotation()>
<com.google.inject.TypeLiteral: boolean equals(java.lang.Object)>
<com.google.inject.util.Types: java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type)>
<java.lang.Math: double floor(double)>
<com.google.inject.internal.util.$Classes: java.lang.String toString(java.lang.reflect.Member)>
<com.github.mobile.accounts.LoginActivity$4: void <init>(com.github.mobile.accounts.LoginActivity)>
<com.github.mobile.ui.gist.GistFilesPagerAdapter: void <init>(com.actionbarsherlock.app.SherlockFragmentActivity,org.eclipse.egit.github.core.Gist)>
<android.support.v4.app.FragmentTransitionCompat21$3: void <init>(android.support.v4.app.FragmentTransitionCompat21$EpicenterView)>
<com.github.mobile.ui.issue.MilestoneDialogFragment: org.eclipse.egit.github.core.Milestone getSelected(android.os.Bundle)>
<com.github.mobile.ui.issue.MilestoneDialogFragment$MilestoneListAdapter: int[] getChildViewIds()>
<android.view.KeyEvent: void <init>(int,int)>
<com.google.inject.internal.util.$Iterators$6: java.lang.Object next()>
<java.io.PrintWriter: void print(java.lang.String)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void <init>()>
<com.google.inject.internal.util.$MapMaker$ComputationExceptionReference: java.lang.Object waitForValue()>
<android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>
<com.github.mobile.ui.search.RepositorySearchSuggestionsProvider: android.provider.SearchRecentSuggestions suggestions(android.content.Context)>
<android.support.v4.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
<com.google.inject.internal.EncounterImpl: com.google.inject.internal.util.$ImmutableList getMembersInjectors()>
<com.google.inject.internal.util.$MapMaker$StrategyImpl: java.lang.Object waitForValue(java.lang.Object)>
<com.google.inject.spi.Message: java.lang.String getMessage()>
<java.lang.Object: void <init>()>
<java.lang.ThreadLocal: void set(java.lang.Object)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>
<com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)>
<com.github.mobile.util.ShareUtils: java.lang.String getSubject(android.content.Intent)>
<android.os.Build$VERSION: void <clinit>()>
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: void <init>(java.util.Map$Entry,com.google.inject.internal.util.$ImmutableMap$1)>
<com.google.inject.internal.util.$ImmutableSet$EmptyImmutableSet: boolean isEmpty()>
<java.util.concurrent.atomic.AtomicReferenceArray: void <init>(int)>
<com.google.inject.internal.util.$MapMaker$Strength: void <clinit>()>
<com.github.mobile.ui.issue.EditIssueActivity: void <init>()>
<com.github.mobile.ui.comment.CreateCommentActivity: void <init>()>
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<com.google.inject.internal.ConstructorInjector: com.google.inject.internal.util.$ImmutableSet getInjectableMembers()>
<com.github.mobile.ui.issue.EditIssueActivity: org.eclipse.egit.github.core.RepositoryId access$200(com.github.mobile.ui.issue.EditIssueActivity)>
<android.accounts.AbstractAccountAuthenticator: void <init>(android.content.Context)>
<com.google.inject.internal.Annotations: boolean isBindingAnnotation(java.lang.Class)>
<com.github.mobile.ui.gist.GistsActivity: android.support.v4.view.PagerAdapter createAdapter()>
<android.util.SparseArray: int keyAt(int)>
<com.github.mobile.accounts.LoginActivity: void updateEnablement()>
<com.google.inject.Key: void <init>(com.google.inject.TypeLiteral,com.google.inject.Key$AnnotationStrategy)>
<com.google.inject.internal.TypeConverterBindingProcessor$6: void <init>(com.google.inject.internal.TypeConverterBindingProcessor,com.google.inject.matcher.Matcher)>
<com.google.inject.internal.util.$Iterators: java.util.Iterator transform(java.util.Iterator,com.google.inject.internal.util.$Function)>
<com.google.inject.internal.util.$Sets: java.util.HashSet newHashSet()>
<com.github.mobile.ui.issue.EditIssuesFilterActivity: com.github.mobile.ui.issue.MilestoneDialog access$300(com.github.mobile.ui.issue.EditIssuesFilterActivity)>
<com.github.mobile.ui.issue.MilestoneDialogFragment: java.util.ArrayList getChoices()>
<com.github.mobile.accounts.AccountAuthenticatorService: android.os.IBinder onBind(android.content.Intent)>
<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>
<com.google.inject.internal.Scoping$5: java.lang.Class getScopeAnnotation()>
<com.github.mobile.ui.search.SearchActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.github.mobile.accounts.AccountUtils: boolean isUnauthorized(java.lang.Exception)>
<android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int[])>
<android.transition.TransitionSet: android.transition.TransitionSet setOrdering(int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<com.github.mobile.ui.user.HomeActivity: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<android.view.ViewGroup: void addView(android.view.View)>
<com.github.mobile.ui.issue.IssueDashboardActivity: android.support.v4.view.PagerAdapter createAdapter()>
<com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap: java.lang.Object get(java.lang.Object)>
<android.app.Activity: boolean onSearchRequested()>
<android.text.SpannableStringBuilder: void <init>()>
<com.github.mobile.ui.BaseActivity: java.lang.String getStringExtra(java.lang.String)>
<com.github.mobile.util.ToastUtils: void show(android.app.Activity,java.lang.Exception,int)>
<com.github.mobile.ui.issue.AssigneeDialog: void show(org.eclipse.egit.github.core.User)>
<android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.support.v4.app.BackStackRecord: android.support.v4.app.BackStackRecord$TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean)>
<android.support.v4.app.FragmentTransitionCompat21: void setEpicenter(java.lang.Object,android.view.View)>
<java.lang.reflect.Modifier: boolean isStatic(int)>
<com.google.inject.internal.ConstructorInjectorStore: void <init>(com.google.inject.internal.InjectorImpl)>
<android.support.v4.app.FragmentManagerImpl: void addBackStackState(android.support.v4.app.BackStackRecord)>
<android.support.v4.app.FragmentActivity: void doReallyStop(boolean)>
<com.google.inject.Key$AnnotationTypeStrategy: void <init>(java.lang.Class,java.lang.annotation.Annotation)>
<com.google.inject.internal.Scoping$3: com.google.inject.Scope getScopeInstance()>
<android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
<java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>
<com.google.inject.internal.util.$Iterators$7: java.lang.Object next()>
<com.google.inject.internal.InjectorImpl: boolean cleanup(com.google.inject.internal.BindingImpl,java.util.Set)>
<android.view.View: void getLocationOnScreen(int[])>
<com.google.inject.spi.InjectionPoint: java.lang.annotation.Annotation getAtInject(java.lang.reflect.AnnotatedElement)>
<android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
<android.support.v4.app.FragmentTransitionCompat21: void findNamedViews(java.util.Map,android.view.View)>
<com.google.inject.internal.util.$ImmutableSet$ArrayImmutableSet: boolean isEmpty()>
<com.google.inject.internal.util.$Iterators$5: boolean hasNext()>
<com.github.mobile.ui.issue.IssueDashboardPagerAdapter: void <init>(com.actionbarsherlock.app.SherlockFragmentActivity)>
<roboguice.activity.event.OnPauseEvent: void <init>()>
<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.InternalInjectorCreator addModules(java.lang.Iterable)>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<com.github.mobile.ui.issue.EditIssueActivity$1: void <init>(com.github.mobile.ui.issue.EditIssueActivity)>
<com.github.rtyley.android.sherlock.android.accounts.SherlockAccountAuthenticatorActivity: void <init>()>
<com.github.mobile.ui.gist.GistsViewActivity: void onDialogResult(int,int,android.os.Bundle)>
<com.google.inject.internal.util.$Iterators: java.util.Iterator concat(java.util.Iterator)>
<com.google.inject.internal.util.$SourceProvider: void <clinit>()>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<com.github.mobile.accounts.LoginActivity: void finishLogin(java.lang.String,java.lang.String)>
<com.google.inject.spi.InjectionPoint: boolean checkForMisplacedBindingAnnotations(java.lang.reflect.Member,com.google.inject.internal.Errors)>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockAccountAuthenticatorActivity: void onStart()>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors duplicateScopeAnnotations(java.lang.Class,java.lang.Class)>
<roboguice.service.RoboService: void onDestroy()>
<java.util.ArrayList: java.lang.Object[] toArray()>
<com.google.inject.internal.InjectorImpl: com.google.inject.internal.BindingImpl createTypeLiteralBinding(com.google.inject.Key,com.google.inject.internal.Errors)>
<org.eclipse.egit.github.core.RepositoryIssue: org.eclipse.egit.github.core.Repository getRepository()>
<com.github.mobile.sync.SyncAdapterService: void <init>()>
<android.app.Activity: void finish()>
<com.google.inject.internal.InjectorImpl: boolean isTypeLiteral(com.google.inject.Key)>
<android.support.v4.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)>
<com.google.inject.internal.InternalInjectorCreator: boolean isEagerSingleton(com.google.inject.internal.InjectorImpl,com.google.inject.internal.BindingImpl,com.google.inject.Stage)>
<java.lang.IllegalStateException: void <init>(java.lang.String)>
<com.github.mobile.ui.issue.AssigneeDialogFragment: org.eclipse.egit.github.core.User getSelected(android.os.Bundle)>
<com.google.inject.spi.Elements$RecordingBinder: void <init>(com.google.inject.Stage,com.google.inject.spi.Elements$1)>
<java.lang.IllegalStateException: void <init>()>
<com.google.inject.internal.MoreTypes: java.lang.Class getRawType(java.lang.reflect.Type)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors conversionError(java.lang.String,java.lang.Object,com.google.inject.TypeLiteral,com.google.inject.spi.TypeConverterBinding,java.lang.RuntimeException)>
<com.github.mobile.Intents$Builder: com.github.mobile.Intents$Builder repo(org.eclipse.egit.github.core.Repository)>
<com.google.inject.spi.InjectionPoint$InjectableMethod: boolean isFinal()>
<com.google.inject.internal.SingleFieldInjector: void <init>(com.google.inject.internal.InjectorImpl,com.google.inject.spi.InjectionPoint,com.google.inject.internal.Errors)>
<android.app.Activity: void onResume()>
<com.google.inject.spi.InjectionPoint$InjectableMembers: void add(com.google.inject.spi.InjectionPoint$InjectableMember)>
<android.app.Dialog: void onRestoreInstanceState(android.os.Bundle)>
<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<android.support.v4.util.TimeUtils: int formatDurationLocked(long,int)>
<com.github.mobile.accounts.AccountAuthenticatorService: void <init>()>
<com.github.mobile.accounts.LoginActivity: void onCreate(android.os.Bundle)>
<com.github.kevinsawicki.wishlist.AsyncLoader: void deliverResult(java.lang.Object)>
<android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>
<com.google.inject.internal.util.$MapMaker$WeakEntry: void <init>(com.google.inject.internal.util.$CustomConcurrentHashMap$Internals,java.lang.Object,int)>
<com.google.inject.internal.Annotations$AnnotationChecker: java.util.Collection access$000(com.google.inject.internal.Annotations$AnnotationChecker)>
<com.google.inject.spi.InjectionPoint$InjectableMethod: void <init>(com.google.inject.TypeLiteral,java.lang.reflect.Method,java.lang.annotation.Annotation)>
<com.google.inject.TypeLiteral: com.google.inject.TypeLiteral get(java.lang.reflect.Type)>
<com.github.mobile.ui.user.UriLauncherActivity: android.content.Intent convert(android.content.Intent)>
<com.google.inject.Key$NullAnnotationStrategy: void <clinit>()>
<com.google.inject.internal.ConstantFactory: void <init>(com.google.inject.internal.Initializable)>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<com.github.mobile.ui.StyledText: com.github.mobile.ui.StyledText append(java.lang.CharSequence,java.lang.Object)>
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<com.google.inject.internal.Annotations: boolean isRetainedAtRuntime(java.lang.Class)>
<com.github.mobile.accounts.TwoFactorAuthActivity: void onCreate(android.os.Bundle)>
<android.app.Dialog: void show()>
<com.google.inject.internal.ConstructorInjectorStore: com.google.inject.internal.ConstructorInjector get(com.google.inject.spi.InjectionPoint,com.google.inject.internal.Errors)>
<com.google.inject.internal.util.$ImmutableSet$ArrayImmutableSet: void <init>(java.lang.Object[])>
<com.google.inject.internal.ConstructorBindingImpl: java.util.Set getInjectableMembers()>
<com.github.mobile.ui.DialogFragmentHelper: void show(com.github.mobile.ui.DialogFragmentActivity,com.github.mobile.ui.DialogFragmentHelper,android.os.Bundle,java.lang.String)>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockAccountAuthenticatorActivity: void onPause()>
<android.view.View: void <clinit>()>
<roboguice.service.event.OnStartEvent: void <init>()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean[])>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence)>
<com.google.inject.internal.InjectorImpl$JitLimitation: void <init>(java.lang.String,int)>
<com.google.inject.internal.TypeConverterBindingProcessor$1: void <init>(com.google.inject.internal.TypeConverterBindingProcessor)>
<com.google.inject.internal.util.$MapMaker$WeakEntry: com.google.inject.internal.util.$MapMaker$ValueReference getValueReference()>
<com.github.mobile.ui.user.UserViewActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.github.mobile.ui.TabPagerActivity: java.lang.String getTitle(int)>
<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<com.google.inject.internal.util.$ImmutableMap: void <init>()>
<com.google.inject.internal.BindingBuilder: com.google.inject.internal.BindingBuilder toProvider(com.google.inject.Provider)>
<com.github.mobile.ui.user.HomeActivity: void access$100(com.github.mobile.ui.user.HomeActivity,org.eclipse.egit.github.core.User)>
<com.github.mobile.ui.commit.CommitCompareViewActivity: void <init>()>
<com.google.inject.internal.AbstractProcessor: void process(com.google.inject.internal.InjectorImpl,java.util.List)>
<java.lang.Class: java.lang.Class[] getInterfaces()>
<com.google.inject.spi.Elements$1: void <init>()>
<com.github.mobile.ui.issue.EditIssueActivity: com.github.mobile.ui.issue.LabelsDialog access$702(com.github.mobile.ui.issue.EditIssueActivity,com.github.mobile.ui.issue.LabelsDialog)>
<com.google.inject.internal.util.$ImmutableList: void <init>()>
<com.github.mobile.ui.search.SearchActivity: void handleIntent(android.content.Intent)>
<com.google.inject.spi.InjectionPoint: java.util.Set forInstanceMethodsAndFields(com.google.inject.TypeLiteral)>
<com.google.inject.internal.MoreTypes$WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()>
<com.github.mobile.ui.search.RepositorySearchSuggestionsProvider: void <init>()>
<com.github.kevinsawicki.wishlist.ViewFinder: void <init>(android.app.Activity)>
<android.support.v4.app.FragmentActivity: void <init>()>
<com.github.mobile.util.ShareUtils: java.lang.String getBody(android.content.Intent)>
<com.github.mobile.ui.FragmentStatePagerAdapter: com.actionbarsherlock.app.SherlockFragment getSelected()>
<android.support.v4.app.FragmentManagerState$1: void <init>()>
<android.support.v4.app.BackStackRecord$Op: void <init>()>
<com.google.inject.internal.BindingImpl: com.google.inject.internal.InternalFactory getInternalFactory()>
<com.google.inject.internal.UniqueAnnotations$1: int value()>
<android.support.v4.app.FragmentManagerImpl: void startPendingDeferredFragments()>
<android.support.v4.util.MapCollections: java.util.Set getKeySet()>
<com.google.inject.internal.util.$CustomConcurrentHashMap$ComputingImpl: void <init>(com.google.inject.internal.util.$CustomConcurrentHashMap$ComputingStrategy,com.google.inject.internal.util.$CustomConcurrentHashMap$Builder,com.google.inject.internal.util.$Function)>
<com.google.inject.internal.MembersInjectorStore: com.google.inject.internal.util.$ImmutableList getInjectors(java.util.Set,com.google.inject.internal.Errors)>
<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>
<com.github.mobile.ui.DialogFragmentActivity: void onDialogResult(int,int,android.os.Bundle)>
<com.actionbarsherlock.app.SherlockActivity: void onStop()>
<java.lang.Integer: int highestOneBit(int)>
<java.lang.Class: java.lang.Class getComponentType()>
<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>
<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])>
<com.github.mobile.ui.issue.LabelDrawableSpan: void <init>(android.content.res.Resources,float,java.lang.String,float,float,android.graphics.Rect,java.lang.String)>
<com.github.mobile.ui.issue.LabelsDialogFragment: java.util.ArrayList getChoices()>
<android.support.v4.util.SparseArrayCompat: int size()>
<com.google.inject.internal.util.$FinalizableReferenceQueue: void <init>()>
<android.content.Intent: void <init>()>
<android.support.v4.app.FragmentManagerImpl$5: void <init>(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.Fragment)>
<java.util.concurrent.FutureTask: void run()>
<com.google.inject.internal.InjectorImpl: com.google.inject.internal.BindingImpl createProviderBinding(com.google.inject.Key,com.google.inject.internal.Errors)>
<android.support.v4.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.github.mobile.util.PreferenceUtils: void save(android.content.SharedPreferences$Editor)>
<android.support.v4.app.FragmentActivity: void onBackPressed()>
<com.google.inject.internal.TypeConverterBindingProcessor: void convertToClass(java.lang.Class,com.google.inject.spi.TypeConverter)>
<android.support.v4.app.FragmentManagerImpl$1: void run()>
<android.support.v4.app.BackStackState: void <init>(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.BackStackRecord)>
<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>
<com.github.mobile.ui.gist.GistQueriesPagerAdapter: void <init>(com.actionbarsherlock.app.SherlockFragmentActivity)>
<com.google.inject.internal.State$1: java.lang.Iterable getConvertersThisLevel()>
<com.google.inject.internal.InstanceBindingImpl: void <init>(com.google.inject.internal.InjectorImpl,com.google.inject.Key,java.lang.Object,com.google.inject.internal.InternalFactory,java.util.Set,java.lang.Object)>
<com.google.inject.internal.util.$ImmutableList$EmptyImmutableList: int size()>
<com.github.mobile.ui.StyledText: com.github.mobile.ui.StyledText append(java.lang.CharSequence)>
<com.github.mobile.ui.user.UserViewActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<java.lang.IllegalArgumentException: void <init>()>
<com.github.mobile.ui.gist.GistsActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.github.mobile.ui.issue.LabelsDialogFragment$LabelListAdapter: void <init>(android.view.LayoutInflater,org.eclipse.egit.github.core.Label[],boolean[])>
<com.google.inject.Key: com.google.inject.Key ofType(com.google.inject.TypeLiteral)>
<android.support.v4.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>
<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type getOwnerType()>
<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Segment segmentFor(int)>
<com.google.inject.internal.util.$ImmutableList$EmptyImmutableList: java.lang.Object get(int)>
<java.util.Arrays: void fill(byte[],byte)>
<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
<com.google.inject.internal.util.$ImmutableMap$Builder: com.google.inject.internal.util.$ImmutableMap fromEntryList(java.util.List)>
<com.github.mobile.ui.ref.BranchFileViewActivity: void onCreate(android.os.Bundle)>
<com.github.mobile.ui.issue.EditIssueActivity: com.github.mobile.ui.issue.MilestoneDialog access$102(com.github.mobile.ui.issue.EditIssueActivity,com.github.mobile.ui.issue.MilestoneDialog)>
<com.google.inject.internal.TypeConverterBindingProcessor: void convertToPrimitiveType(java.lang.Class,java.lang.Class)>
<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: void <init>(java.lang.Object[],int,int,com.google.inject.internal.util.$ImmutableList$1)>
<com.google.inject.internal.WeakKeySet: boolean contains(com.google.inject.Key)>
<java.lang.String: byte[] getBytes(java.lang.String)>
<com.google.inject.internal.Errors: void throwConfigurationExceptionIfErrorsExist()>
<com.github.mobile.ui.DialogFragmentHelper: android.os.Bundle createArguments(java.lang.String,java.lang.String,int)>
<com.github.mobile.ui.issue.EditIssueActivity: com.github.mobile.ui.issue.MilestoneDialog access$100(com.github.mobile.ui.issue.EditIssueActivity)>
<android.support.v4.util.TimeUtils: void formatDuration(long,java.io.PrintWriter,int)>
<java.util.ArrayList: void ensureCapacity(int)>
<com.github.mobile.ui.DialogFragmentHelper: void <init>()>
<com.github.mobile.ui.repo.RepositoryViewActivity$4: void <init>(com.github.mobile.ui.repo.RepositoryViewActivity,android.content.Context,org.eclipse.egit.github.core.IRepositoryIdProvider)>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockAccountAuthenticatorActivity: void <init>()>
<com.github.mobile.accounts.LoginActivity: boolean access$100(com.github.mobile.accounts.LoginActivity)>
<roboguice.RoboGuice: roboguice.inject.RoboInjector getInjector(android.content.Context)>
<com.github.mobile.ui.user.UserViewActivity$2: void <init>(com.github.mobile.ui.user.UserViewActivity,android.content.Context,java.lang.String)>
<com.github.mobile.ui.user.UserViewActivity: void <init>()>
<android.app.Activity: void onPostResume()>
<android.support.v4.util.MapCollections: java.util.Collection getValues()>
<android.support.v4.app.FragmentManagerImpl: void showFragment(android.support.v4.app.Fragment,int,int)>
<com.github.mobile.util.TypefaceUtils: void setOcticons(android.widget.TextView[])>
<com.actionbarsherlock.app.SherlockFragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>
<org.eclipse.egit.github.core.util.Base64: int decode4to3(byte[],int,byte[],int)>
<java.lang.Throwable: void <init>()>
<android.transition.TransitionSet: android.transition.TransitionSet addTransition(android.transition.Transition)>
<com.google.inject.spi.Message: void <init>(java.util.List,java.lang.String,java.lang.Throwable)>
<com.github.mobile.ui.issue.IssueSearchSuggestionsProvider: android.provider.SearchRecentSuggestions suggestions(android.content.Context)>
<com.github.mobile.accounts.LoginActivity: void onAuthenticationResult(boolean)>
<com.google.inject.internal.ProviderMethodsModule$LogProvider: void <init>(java.lang.reflect.Method)>
<com.google.inject.internal.InjectorImpl$ProviderBindingImpl: com.google.inject.Key getProvidedKey()>
<com.github.mobile.ui.repo.RepositoryViewActivity: void starRepository()>
<com.google.inject.internal.InjectorImpl: void removeFailedJitBinding(com.google.inject.Key,com.google.inject.spi.InjectionPoint)>
<android.support.v4.app.FragmentActivity: void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View)>
<com.actionbarsherlock.app.SherlockActivity: void onRestoreInstanceState(android.os.Bundle)>
<roboguice.util.RoboAsyncTask: void <init>(android.content.Context)>
<com.github.mobile.ui.repo.RepositoryContributorsActivity: void <init>()>
<com.github.mobile.ui.user.HomeActivity: void onResume()>
<android.support.v4.app.FragmentTransitionCompat21: void cleanupTransitions(android.view.View,android.view.View,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.util.Map)>
<java.lang.ref.WeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>
<android.support.v4.app.FragmentManagerImpl: android.view.LayoutInflater$Factory getLayoutInflaterFactory()>
<java.io.StringWriter: java.lang.StringBuffer getBuffer()>
<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: boolean equals(java.lang.Object)>
<android.support.v4.app.LoaderManagerImpl: void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo)>
<com.google.inject.internal.ProcessedBindingData: void runCreationListeners(com.google.inject.internal.Errors)>
<com.github.mobile.accounts.AccountUtils$AuthenticatorConflictException: void <init>(com.github.mobile.accounts.AccountUtils$1)>
<android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
<com.github.mobile.ui.TabPagerActivity: void setCurrentItem(int)>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockFragmentActivity: void onStart()>
<com.github.mobile.ui.issue.EditIssueActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.github.mobile.ui.BaseActivity: void onCreate(android.os.Bundle)>
<com.github.mobile.ui.repo.RepositoryViewActivity: void forkRepository()>
<android.content.Context: void <init>()>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors merge(java.util.Collection)>
<java.net.URL: void <init>(java.lang.String)>
<com.github.kevinsawicki.wishlist.SingleTypeAdapter: void setItems(java.lang.Object[])>
<android.support.v4.app.BackStackRecord: void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)>
<com.github.mobile.core.repo.ForkRepositoryTask: void <init>(android.content.Context,org.eclipse.egit.github.core.IRepositoryIdProvider)>
<com.google.inject.internal.util.$Preconditions: void checkPositionIndex(int,int,java.lang.String)>
<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<org.eclipse.egit.github.core.Repository: void <init>()>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockActivity: void onRestart()>
<com.google.inject.Key: void ensureRetainedAtRuntime(java.lang.Class)>
<com.google.inject.spi.Message: java.lang.Throwable getCause()>
<android.content.Intent: android.net.Uri getData()>
<com.github.mobile.ui.comment.CreateCommentActivity: void onCreate(android.os.Bundle)>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockActivity: void onStart()>
<android.support.v4.content.Loader: void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener)>
<android.support.v4.app.Fragment: void <clinit>()>
<com.google.inject.internal.ProviderMethodsModule: void <init>(java.lang.Object)>
<android.support.v4.util.ArrayMap: java.util.Collection values()>
<com.google.inject.internal.InjectionRequestProcessor: void validate()>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockFragmentActivity: void onCreate(android.os.Bundle)>
<com.google.inject.internal.util.$ImmutableList: void <init>(com.google.inject.internal.util.$ImmutableList$1)>
<com.google.inject.internal.util.$ImmutableSet$EmptyImmutableSet: boolean contains(java.lang.Object)>
<com.github.mobile.ui.user.UserViewActivity: android.support.v4.view.PagerAdapter createAdapter()>
<com.google.inject.internal.Scoping$5: void <init>(java.lang.Class)>
<com.google.inject.spi.Message: void <init>(java.lang.Object,java.lang.String)>
<com.google.inject.internal.util.$MapMaker: com.google.inject.internal.util.$MapMaker$Strength access$200(com.google.inject.internal.util.$MapMaker)>
<roboguice.RoboGuice: roboguice.inject.ViewListener getViewListener(android.app.Application)>
<com.google.inject.spi.InjectionPoint: boolean overrides(java.lang.reflect.Method,java.lang.reflect.Method)>
<android.support.v4.app.BackStackRecord$TransitionState: void <init>(android.support.v4.app.BackStackRecord)>
<java.util.Stack: java.lang.Object push(java.lang.Object)>
<com.github.mobile.Intents$Builder: com.github.mobile.Intents$Builder add(java.lang.String,java.lang.CharSequence[])>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
<com.github.mobile.ui.DialogFragmentHelper: java.lang.String getTitle()>
<android.view.View: android.view.View findViewById(int)>
<com.github.mobile.core.user.FollowUserTask: void <init>(android.content.Context,java.lang.String)>
<com.google.inject.internal.InjectorShell: void access$100(com.google.inject.internal.InjectorImpl)>
<java.io.PrintWriter: void println()>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors missingImplementation(com.google.inject.Key)>
<com.google.inject.internal.MembersInjectorStore$1: void <init>(com.google.inject.internal.MembersInjectorStore)>
<com.google.inject.internal.AbstractBindingBuilder: com.google.inject.internal.BindingImpl setBinding(com.google.inject.internal.BindingImpl)>
<com.google.inject.internal.State$1: java.util.List getTypeListenerBindings()>
<com.google.inject.internal.InheritingState: java.lang.Iterable getConvertersThisLevel()>
<com.github.mobile.ui.commit.CommitViewActivity: com.github.mobile.ui.FragmentProvider getProvider()>
<android.support.v4.app.BackStackRecord: java.lang.Object getEnterTransition(android.support.v4.app.Fragment,boolean)>
<com.google.inject.internal.util.$ImmutableSet: com.google.inject.internal.util.$ImmutableSet of(java.lang.Object)>
<android.os.Handler: void <init>()>
<com.google.inject.internal.Errors: java.lang.String format(java.lang.String,java.util.Collection)>
<android.support.v4.util.MapCollections$ArrayIterator: void remove()>
<com.github.mobile.ui.issue.LabelsDialog: void <init>(com.github.mobile.ui.DialogFragmentActivity,int,org.eclipse.egit.github.core.IRepositoryIdProvider,org.eclipse.egit.github.core.service.LabelService)>
<com.google.inject.internal.Scoping$2: void <init>()>
<com.github.mobile.ui.user.HomePagerAdapter: java.lang.CharSequence getPageTitle(int)>
<android.support.v4.app.FragmentActivity: void onResume()>
<roboguice.util.SafeAsyncTask: roboguice.util.SafeAsyncTask$Task newTask()>
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>
<android.support.v4.util.SimpleArrayMap: int size()>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<java.util.ArrayList: java.util.Iterator iterator()>
<com.google.inject.internal.MoreTypes: void access$000(java.lang.reflect.Type,java.lang.String)>
<com.google.inject.internal.InheritingState: void blacklist(com.google.inject.Key,java.lang.Object)>
<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.inject.internal.TypeConverterBindingProcessor$5: void <init>(com.google.inject.internal.TypeConverterBindingProcessor,java.lang.reflect.Method,java.lang.Class)>
<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>
<java.lang.Boolean: void <clinit>()>
<com.google.inject.internal.InjectorImpl: void <clinit>()>
<com.google.inject.internal.InjectorImpl$ProviderBindingImpl: java.util.Set getDependencies()>
<java.util.Arrays: void fill(boolean[],boolean)>
<com.google.inject.internal.InheritingState: java.util.Set getSourcesForBlacklistedKey(com.google.inject.Key)>
<java.util.Arrays: int hashCode(java.lang.Object[])>
<com.github.mobile.ui.issue.EditIssuesFilterActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
<com.github.mobile.ui.issue.FiltersViewActivity: void onCreate(android.os.Bundle)>
<com.github.mobile.accounts.LoginActivity: android.widget.EditText access$200(com.github.mobile.accounts.LoginActivity)>
<java.lang.Thread: java.lang.Thread currentThread()>
<com.google.inject.ConfigurationException: java.util.Collection getErrorMessages()>
<android.support.v4.app.FragmentPagerAdapter: void <init>(android.support.v4.app.FragmentManager)>
<com.google.inject.Key$AnnotationInstanceStrategy: java.lang.Class getAnnotationType()>
<com.github.mobile.ui.ref.BranchFileViewActivity: void onLoadFinished(android.support.v4.content.Loader,java.lang.CharSequence)>
<com.google.inject.internal.util.$MapMaker$Strength$3: void <init>(java.lang.String,int)>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.support.v4.app.FragmentManagerImpl: void hideFragment(android.support.v4.app.Fragment,int,int)>
<android.support.v4.app.FragmentManagerImpl: void dispatchStart()>
<android.support.v4.view.PagerAdapter: void <init>()>
<com.github.mobile.ui.issue.IssueDashboardActivity: void <init>()>
<android.content.Intent: android.content.Intent addCategory(java.lang.String)>
<com.google.inject.internal.util.$MapMaker: com.google.inject.internal.util.$MapMaker setKeyStrength(com.google.inject.internal.util.$MapMaker$Strength)>
<com.github.mobile.ui.issue.EditIssuesFilterActivity: org.eclipse.egit.github.core.service.LabelService access$600(com.github.mobile.ui.issue.EditIssuesFilterActivity)>
<com.github.kevinsawicki.wishlist.Toaster: void showLong(android.app.Activity,java.lang.String)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors recursiveProviderType()>
<com.google.inject.spi.InjectionPoint: void <init>(com.google.inject.TypeLiteral,java.lang.reflect.Constructor)>
<android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment)>
<com.google.inject.internal.Errors: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.google.inject.internal.Errors$2: java.lang.String toString(java.lang.Object)>
<com.github.mobile.ui.repo.RepositoryViewActivity: com.github.mobile.ui.repo.RepositoryPagerAdapter createAdapter()>
<android.view.ViewGroup: void removeView(android.view.View)>
<com.actionbarsherlock.ActionBarSherlock: void registerImplementation(java.lang.Class)>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockAccountAuthenticatorActivity: void onResume()>
<com.google.inject.Key$AnnotationInstanceStrategy: java.lang.annotation.Annotation getAnnotation()>
<com.google.inject.internal.InternalInjectorCreator: com.google.inject.Injector primaryInjector()>
<com.github.mobile.core.commit.CommitUtils: java.lang.String abbreviate(java.lang.String)>
<android.support.v4.app.FragmentTransitionCompat21: java.lang.Object cloneTransition(java.lang.Object)>
<com.google.inject.internal.util.$Iterables$2: void <init>(java.lang.Iterable)>
<com.google.inject.internal.MoreTypes: boolean isFullySpecified(java.lang.reflect.Type)>
<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: int hashCode()>
<com.google.inject.internal.ConstructorInjector: void <init>(java.util.Set,com.google.inject.internal.ConstructionProxy,com.google.inject.internal.SingleParameterInjector[],com.google.inject.internal.MembersInjectorImpl)>
<com.google.inject.internal.Errors: java.util.List getSources()>
<android.graphics.Rect: int height()>
<com.github.mobile.ui.ref.BranchFileViewActivity: void onLoaderReset(android.support.v4.content.Loader)>
<com.google.inject.internal.util.$FinalizableReferenceQueue$DirectLoader: void <init>()>
<com.google.inject.internal.BindingImpl: java.lang.Object getSource()>
<android.view.InputEvent: void <clinit>()>
<com.google.inject.internal.MoreTypes: java.lang.String typeToString(java.lang.reflect.Type)>
<android.support.v4.app.Fragment: void onResume()>
<android.app.Activity: boolean isFinishing()>
<com.google.inject.internal.util.$Iterables$1: java.util.Iterator apply(java.lang.Iterable)>
<android.text.style.MetricAffectingSpan: void <init>()>
<java.lang.Object: void notifyAll()>
<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.InjectorShell$Builder stage(com.google.inject.Stage)>
<com.github.mobile.ui.gist.CreateCommentActivity: void <init>()>
<com.github.mobile.accounts.LoginActivity$6: void <init>(com.github.mobile.accounts.LoginActivity,android.content.Context,android.app.AlertDialog)>
<android.support.v4.app.FragmentTransitionCompat21: void captureTransitioningViews(java.util.ArrayList,android.view.View)>
<java.lang.Throwable: java.lang.String getMessage()>
<com.github.mobile.ui.user.UserPagerAdapter: java.lang.CharSequence getPageTitle(int)>
<android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)>
<com.github.mobile.ui.gist.GistFilesPagerAdapter: int getCount()>
<android.support.v4.app.FragmentManager: void <init>()>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors cannotInjectAbstractMethod(java.lang.reflect.Method)>
<android.support.v4.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)>
<com.github.mobile.sync.ContentProviderAdapter: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<com.google.inject.internal.BindingImpl: void <init>(com.google.inject.internal.InjectorImpl,com.google.inject.Key,java.lang.Object,com.google.inject.internal.InternalFactory,com.google.inject.internal.Scoping)>
<com.github.mobile.ui.issue.MilestoneDialog: void show(org.eclipse.egit.github.core.Milestone)>
<java.lang.Short: void <clinit>()>
<com.google.inject.internal.util.$MapMaker$Strength$1: com.google.inject.internal.util.$MapMaker$ValueReference referenceValue(com.google.inject.internal.util.$MapMaker$ReferenceEntry,java.lang.Object)>
<com.google.inject.Key$AnnotationInstanceStrategy: boolean equals(java.lang.Object)>
<com.google.inject.internal.util.$Collections2: java.util.Collection toCollection(java.lang.Iterable)>
<com.google.inject.internal.util.$Iterators$1: void <init>()>
<java.util.ArrayList: boolean contains(java.lang.Object)>
<com.google.inject.internal.InjectorImpl: com.google.inject.Provider getProvider(com.google.inject.Key)>
<com.github.mobile.ui.issue.FiltersViewActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>
<android.os.Bundle: void <clinit>()>
<com.google.inject.internal.MembersInjectorStore: com.google.inject.internal.MembersInjectorImpl createWithListeners(com.google.inject.TypeLiteral,com.google.inject.internal.Errors)>
<com.github.mobile.ui.user.HomeActivity: android.support.v4.view.PagerAdapter createAdapter()>
<java.lang.Class: boolean isMemberClass()>
<android.support.v4.util.ContainerHelpers: void <clinit>()>
<java.util.ArrayList: boolean remove(java.lang.Object)>
<com.google.inject.internal.TypeConverterBindingProcessor: void prepareBuiltInConverters(com.google.inject.internal.InjectorImpl)>
<android.util.SparseArray: java.lang.Object get(int)>
<com.github.mobile.ui.repo.RepositoryPagerAdapter: boolean onBackPressed()>
<android.support.v4.view.PagerAdapter: void notifyDataSetChanged()>
<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>
<com.github.mobile.ui.user.HomeActivity: void reloadOrgs()>
<com.google.inject.spi.InjectionPoint: boolean isValidMethod(com.google.inject.spi.InjectionPoint$InjectableMethod,com.google.inject.internal.Errors)>
<android.view.View: int getWidth()>
<com.google.inject.internal.ConstructorBindingImpl$Factory: boolean access$102(com.google.inject.internal.ConstructorBindingImpl$Factory,boolean)>
<android.transition.TransitionSet: void <init>()>
<com.github.mobile.core.repo.StarredRepositoryTask: void <init>(android.content.Context,org.eclipse.egit.github.core.IRepositoryIdProvider)>
<com.google.inject.matcher.Matchers: void <clinit>()>
<android.support.v4.app.FragmentManagerImpl: void dispatchPause()>
<com.github.mobile.ui.issue.EditIssuesFilterActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.google.inject.Stage: void <clinit>()>
<android.graphics.Paint: void finalize()>
<com.github.mobile.ui.issue.IssueDashboardActivity: java.lang.String getIcon(int)>
<com.google.inject.internal.util.$MapMaker$Strength: void <init>(java.lang.String,int,com.google.inject.internal.util.$MapMaker$1)>
<android.os.Handler: android.os.Looper getLooper()>
<com.google.inject.Key$NullAnnotationStrategy: boolean hasAttributes()>
<com.github.mobile.ui.repo.RepositoryViewActivity: int getContentView()>
<com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet: int size()>
<java.lang.Float: void <clinit>()>
<java.lang.Enum: void <init>(java.lang.String,int)>
<com.github.mobile.ui.issue.LabelsDialog$1: void execute()>
<android.support.v4.app.DialogFragment: void onActivityCreated(android.os.Bundle)>
<com.github.mobile.ui.TabPagerActivity: void configureTabPager()>
<com.github.mobile.sync.ContentProviderAdapter: void <init>()>
<com.google.inject.internal.UniqueAnnotations: void <clinit>()>
<android.support.v4.app.FragmentManagerImpl: boolean popBackStackImmediate()>
<android.os.SystemClock: long uptimeMillis()>
<com.github.mobile.util.SourceEditor: com.github.mobile.util.SourceEditor setMarkdown(boolean)>
<com.google.inject.Key: com.google.inject.TypeLiteral getTypeLiteral()>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors duplicateBindingAnnotations(java.lang.reflect.Member,java.lang.Class,java.lang.Class)>
<com.actionbarsherlock.app.SherlockActivity: void onPause()>
<java.lang.String: int length()>
<android.text.SpannableStringBuilder: int length()>
<com.github.mobile.ui.StyledText: com.github.mobile.ui.StyledText bold(java.lang.CharSequence)>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockFragmentActivity: void onRestart()>
<com.google.inject.TypeLiteral: com.google.inject.TypeLiteral getReturnType(java.lang.reflect.Method)>
<android.text.TextUtils: void <clinit>()>
<com.actionbarsherlock.app.SherlockFragmentActivity: void supportInvalidateOptionsMenu()>
<android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getChildFragmentManager()>
<com.github.mobile.sync.ContentProviderAdapter: java.lang.String getType(android.net.Uri)>
<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>
<com.github.mobile.ui.issue.EditIssueActivity$4: void <init>(com.github.mobile.ui.issue.EditIssueActivity)>
<com.github.mobile.ui.issue.IssueSearchActivity: void search(java.lang.String)>
<com.github.mobile.ui.gist.CreateGistActivity: void updateCreateMenu()>
<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.InternalInjectorCreator stage(com.google.inject.Stage)>
<android.support.v4.app.Fragment: void performDestroy()>
<java.util.Stack: void <init>()>
<com.google.inject.internal.util.$MapMaker$StrategyImpl: com.google.inject.internal.util.$MapMaker$ReferenceEntry newEntry(java.lang.Object,int,com.google.inject.internal.util.$MapMaker$ReferenceEntry)>
<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.binder.AnnotatedBindingBuilder bind(com.google.inject.Key)>
<android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
<com.google.inject.internal.BindingImpl: void <init>(java.lang.Object,com.google.inject.Key,com.google.inject.internal.Scoping)>
<android.support.v4.content.AsyncTaskLoader$LoadTask: void <init>(android.support.v4.content.AsyncTaskLoader)>
<android.support.v4.app.FragmentState: void <init>(android.support.v4.app.Fragment)>
<android.support.v4.app.BackStackRecord: void excludeHiddenFragments(android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object)>
<com.google.inject.internal.InternalInjectorCreator$ToolStageInjector: void injectMembers(java.lang.Object)>
<com.google.inject.internal.Initializer: void <init>()>
<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: com.google.inject.internal.util.$UnmodifiableIterator iterator()>
<java.util.concurrent.atomic.AtomicReference: void <init>()>
<com.google.inject.internal.util.$Maps: java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object)>
<com.github.mobile.ui.issue.EditIssuesFilterActivity$5: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.google.inject.Key$NullAnnotationStrategy: java.lang.Class getAnnotationType()>
<android.support.v4.app.FragmentManagerImpl: void saveFragmentViewState(android.support.v4.app.Fragment)>
<com.google.inject.spi.InjectionPoint$InjectableMethod: com.google.inject.spi.InjectionPoint toInjectionPoint()>
<android.support.v4.app.Fragment: void onViewStateRestored(android.os.Bundle)>
<com.github.mobile.ui.user.UserViewActivity$4: void <init>(com.github.mobile.ui.user.UserViewActivity,android.content.Context,java.lang.String)>
<android.support.v4.util.SparseArrayCompat: void <init>()>
<com.github.mobile.ui.user.UserPagerAdapter: int getCount()>
<com.google.inject.internal.util.$ImmutableList$EmptyImmutableList: boolean isEmpty()>
<android.support.v4.app.Fragment: void restoreViewState(android.os.Bundle)>
<com.github.mobile.ui.comment.CreateCommentActivity$1: void <init>(com.github.mobile.ui.comment.CreateCommentActivity)>
<com.google.inject.internal.Scoping: java.lang.Class getScopeAnnotation()>
<android.provider.SearchRecentSuggestions: void <clinit>()>
<com.google.inject.internal.util.$ImmutableSet: void <init>()>
<com.google.inject.internal.EncounterImpl: com.google.inject.internal.util.$ImmutableList getInjectionListeners()>
<com.actionbarsherlock.app.SherlockActivity: void onPostCreate(android.os.Bundle)>
<roboguice.service.event.OnCreateEvent: void <init>()>
<com.github.mobile.ui.issue.AssigneeDialogFragment$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.google.inject.internal.InjectorImpl$3: void <init>(com.google.inject.internal.InjectorImpl,com.google.inject.internal.BindingImpl,com.google.inject.Key)>
<com.google.inject.internal.util.$Preconditions: void checkArgument(boolean,java.lang.Object)>
<android.support.v4.app.ActivityCompat: void finishAfterTransition(android.app.Activity)>
<android.os.Bundle: java.lang.String getString(java.lang.String)>
<com.github.mobile.ui.issue.AssigneeDialogFragment: void <init>()>
<com.github.mobile.Intents$Builder: com.github.mobile.Intents$Builder add(java.lang.String,boolean[])>
<com.github.mobile.ui.repo.RepositoryPagerAdapter: int getCount()>
<com.google.inject.internal.MoreTypes$WildcardTypeImpl: java.lang.String toString()>
<android.database.DataSetObservable: void <init>()>
<java.lang.Class: java.lang.String getSimpleName()>
<com.github.mobile.ui.gist.CreateGistTask: void <init>(android.app.Activity,java.lang.String,boolean,java.lang.String,java.lang.String)>
<android.os.Bundle: boolean isEmpty()>
<java.lang.String: void <init>(byte[])>
<com.github.mobile.accounts.TwoFactorAuthActivity$4: void <init>(com.github.mobile.accounts.TwoFactorAuthActivity)>
<android.accounts.Account: void <clinit>()>
<com.github.kevinsawicki.wishlist.AsyncLoader: void onReset()>
<com.google.inject.internal.TypeConverterBindingProcessor: void convertToClasses(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter)>
<com.github.mobile.ui.issue.FiltersViewActivity: void <init>()>
<android.support.v4.util.SimpleArrayMap: java.lang.Object valueAt(int)>
<android.view.KeyEvent: void <clinit>()>
<com.google.inject.internal.MoreTypes$WildcardTypeImpl: void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[])>
<com.google.inject.internal.MoreTypes: java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable)>
<android.support.v4.content.Loader: void onForceLoad()>
<com.google.inject.internal.MembersInjectorStore: com.google.inject.internal.MembersInjectorImpl get(com.google.inject.TypeLiteral,com.google.inject.internal.Errors)>
<android.os.Handler: void removeCallbacks(java.lang.Runnable)>
<com.github.mobile.ui.user.HomeDropdownListAdapter: int[] getChildViewIds()>
<com.github.mobile.ui.user.HomeActivity$1: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.github.mobile.core.repo.RepositoryUtils: boolean isValidRepo(java.lang.String)>
<java.util.Collections: void sort(java.util.List,java.util.Comparator)>
<com.github.mobile.ui.issue.IssueSearchSuggestionsProvider: void <init>()>
<com.google.inject.internal.util.$Iterators: java.lang.Object getOnlyElement(java.util.Iterator)>
<com.google.inject.internal.util.$Iterables: java.lang.Object getOnlyElement(java.lang.Iterable)>
<android.support.v4.util.SimpleArrayMap: java.lang.Object setValueAt(int,java.lang.Object)>
<com.github.mobile.ui.issue.AssigneeDialogFragment$UserListAdapter: int[] getChildViewIds()>
<com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList of()>
<com.google.inject.internal.TypeConverterBindingProcessor$2: void <init>(com.google.inject.internal.TypeConverterBindingProcessor)>
<com.github.mobile.ui.gist.EditCommentActivity: void <init>()>
<com.google.inject.internal.WeakKeySet: void add(com.google.inject.Key,java.lang.Object)>
<com.github.mobile.accounts.TwoFactorAuthActivity: void <init>()>
<com.google.inject.internal.util.$ImmutableSet$EmptyImmutableSet: void <init>(com.google.inject.internal.util.$ImmutableSet$1)>
<com.google.inject.internal.util.$FinalizableReferenceQueue$SystemLoader: void <init>()>
<java.lang.Object: int hashCode()>
<com.google.inject.internal.SingleParameterInjector: void <init>(com.google.inject.spi.Dependency,com.google.inject.internal.InternalFactory)>
<android.support.v4.util.SimpleArrayMap: java.lang.Object keyAt(int)>
<java.lang.Character: void <clinit>()>
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.support.v4.app.FragmentTransitionCompat21$2: void <init>(android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,java.util.Map,java.util.Map,android.transition.Transition,java.util.ArrayList)>
<com.github.mobile.ui.comment.CommentPreviewPagerAdapter: int getCount()>
<roboguice.RoboGuice: void destroyInjector(android.content.Context)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>
<android.support.v4.util.SparseArrayCompat: void remove(int)>
<com.github.mobile.ui.user.HomeActivity: void <init>()>
<com.google.inject.internal.MoreTypes$WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()>
<com.google.inject.internal.Errors$Converter: void <init>(java.lang.Class)>
<com.google.inject.internal.PrivateElementProcessor: void <init>(com.google.inject.internal.Errors)>
<org.eclipse.egit.github.core.Issue: void <init>()>
<com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList of(java.lang.Object)>
<com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.github.mobile.ui.issue.LabelsDialogFragment: java.util.ArrayList getSelected(android.os.Bundle)>
<com.google.inject.internal.Annotations: void <clinit>()>
<android.os.Bundle: void putInt(java.lang.String,int)>
<com.github.mobile.ui.LightProgressDialog: void <init>(android.content.Context,java.lang.CharSequence)>
<com.github.mobile.ui.issue.EditIssueActivity: void updateAssignee()>
<com.google.inject.internal.util.$ImmutableList$EmptyImmutableList: java.util.Iterator iterator()>
<com.github.mobile.ui.StyledText: com.github.mobile.ui.StyledText append(char,java.lang.Object)>
<com.google.inject.internal.InternalInjectorCreator: com.google.inject.Injector build()>
<com.github.mobile.ui.search.SearchPagerAdapter: int getCount()>
<com.google.inject.internal.Scoping: void <clinit>()>
<com.google.inject.internal.Errors: int size()>
<java.lang.System: void <clinit>()>
<java.lang.Integer: void <clinit>()>
<com.github.mobile.ui.repo.RepositoryViewActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.actionbarsherlock.app.SherlockActivity: void <init>()>
<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>
<com.google.inject.util.Types: java.lang.reflect.ParameterizedType providerOf(java.lang.reflect.Type)>
<com.github.mobile.accounts.AccountUtils: android.accounts.Account getPasswordAccessibleAccount(android.content.Context)>
<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>
<com.github.mobile.ui.ConfirmDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.google.inject.internal.util.$Iterators: void <clinit>()>
<android.support.v4.util.SimpleArrayMap: java.lang.Object get(java.lang.Object)>
<com.github.mobile.ui.SingleChoiceDialogFragment: void <init>()>
<android.app.Activity: void <init>()>
<android.support.v4.app.FragmentManagerImpl: void performPendingDeferredStart(android.support.v4.app.Fragment)>
<com.google.inject.internal.util.$ImmutableList: java.lang.Object[] copyOf(java.lang.Object[],int)>
<android.support.v4.content.ModernAsyncTask: void <init>()>
<com.google.inject.internal.State$1: com.google.inject.internal.State parent()>
<com.google.inject.internal.MessageProcessor: void <clinit>()>
<com.github.mobile.core.issue.IssueUriMatcher: org.eclipse.egit.github.core.RepositoryIssue getIssue(android.net.Uri)>
<com.google.inject.internal.Errors: java.util.Collection getMessagesFromThrowable(java.lang.Throwable)>
<roboguice.util.RoboAsyncTask: android.content.Context getContext()>
<android.support.v4.util.SparseArrayCompat: void delete(int)>
<com.google.inject.internal.MoreTypes: int hashCodeOrZero(java.lang.Object)>
<android.app.Dialog: void setContentView(android.view.View)>
<com.github.mobile.ui.repo.RepositoryViewActivity$2: void <init>(com.github.mobile.ui.repo.RepositoryViewActivity,android.content.Context,org.eclipse.egit.github.core.IRepositoryIdProvider)>
<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: java.util.Iterator iterator()>
<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>
<android.app.Service: void onDestroy()>
<android.webkit.WebViewClient: void <init>()>
<com.google.inject.internal.util.$Iterators$5: java.lang.Object next()>
<android.support.v4.app.FragmentManagerImpl: void attachFragment(android.support.v4.app.Fragment,int,int)>
<com.github.mobile.ui.TabPagerActivity: void onCreate(android.os.Bundle)>
<com.github.mobile.ui.search.SearchActivity: java.lang.String getIcon(int)>
<com.github.mobile.ui.issue.EditIssueActivity: void onSaveInstanceState(android.os.Bundle)>
<com.github.mobile.ui.gist.CreateGistTask: void create()>
<com.google.inject.internal.util.$MapMaker$WeakEntry: java.lang.Object getKey()>
<com.google.inject.internal.MoreTypes$GenericArrayTypeImpl: boolean isFullySpecified()>
<com.github.mobile.core.gist.GistUriMatcher: void <clinit>()>
<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>
<com.google.inject.internal.util.$Stopwatch: void <init>()>
<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>
<com.google.inject.internal.Errors$2: void <init>(java.lang.Class)>
<java.io.PrintWriter: void print(int)>
<android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment,int,int)>
<android.support.v4.app.Fragment: void performPause()>
<android.content.ContextWrapper: void <init>(android.content.Context)>
<com.github.mobile.core.repo.UnstarRepositoryTask: void start()>
<android.support.v4.app.Fragment$1: android.view.View findViewById(int)>
<com.google.inject.internal.util.$Objects: boolean equal(java.lang.Object,java.lang.Object)>
<com.google.inject.internal.util.$MapMaker$Strength$3: com.google.inject.internal.util.$MapMaker$ValueReference referenceValue(com.google.inject.internal.util.$MapMaker$ReferenceEntry,java.lang.Object)>
<com.google.inject.internal.util.$MapMaker$Strength$3: int hash(java.lang.Object)>
<com.google.inject.internal.BindingProcessor: void <init>(com.google.inject.internal.Errors,com.google.inject.internal.Initializer,com.google.inject.internal.ProcessedBindingData)>
<com.github.mobile.ui.repo.RepositoryContributorsActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.google.inject.internal.util.$ImmutableMap$EmptyImmutableMap: java.lang.Object get(java.lang.Object)>
<android.support.v4.app.LoaderManagerImpl: void finishRetain()>
<com.github.kevinsawicki.wishlist.AsyncLoader: void onStartLoading()>
<android.support.v4.app.Fragment: void performStop()>
<com.github.mobile.ui.user.HomeActivity$1: void <init>(com.github.mobile.ui.user.HomeActivity)>
<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>
<java.lang.reflect.Modifier: boolean isPublic(int)>
<com.github.kevinsawicki.wishlist.AsyncLoader: void <init>(android.content.Context)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>
<com.github.mobile.ui.search.SearchActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.google.inject.internal.util.$AbstractMapEntry: void <init>()>
<roboguice.inject.ContextScopedRoboInjector: java.lang.Object getInstance(java.lang.Class)>
<android.support.v4.app.FragmentManagerImpl$1: void <init>(android.support.v4.app.FragmentManagerImpl)>
<com.google.inject.internal.FailableCache: java.lang.Object get(java.lang.Object,com.google.inject.internal.Errors)>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()>
<com.google.inject.internal.util.$Stopwatch: long reset()>
<com.google.inject.spi.InjectionPoint: boolean equals(java.lang.Object)>
<android.graphics.Rect: void set(int,int,int,int)>
<android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)>
<android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
<com.github.mobile.ui.gist.GistFilesViewActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.github.mobile.ui.comment.CreateCommentActivity: android.support.v4.view.PagerAdapter createAdapter()>
<com.github.mobile.accounts.TwoFactorAuthActivity: boolean access$100(com.github.mobile.accounts.TwoFactorAuthActivity)>
<com.google.inject.internal.Initializer: void injectAll(com.google.inject.internal.Errors)>
<android.app.AlertDialog: void setTitle(java.lang.CharSequence)>
<com.google.inject.internal.util.$MapMaker$StrategyImpl$1: void <init>(com.google.inject.internal.util.$MapMaker$StrategyImpl,java.lang.ref.WeakReference,java.lang.ref.WeakReference)>
<com.google.inject.ConfigurationException: void <init>(java.lang.Iterable)>
<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>
<com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet: boolean contains(java.lang.Object)>
<android.support.v4.app.FragmentState$1: void <init>()>
<com.github.kevinsawicki.wishlist.SingleTypeAdapter: void <clinit>()>
<org.eclipse.egit.github.core.util.Base64: void <clinit>()>
<android.support.v4.util.SimpleArrayMap: boolean isEmpty()>
<com.github.mobile.ui.gist.GistFilesViewActivity: void configurePager()>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void retain()>
<org.eclipse.egit.github.core.User: void <init>()>
<com.github.mobile.core.repo.StarRepositoryTask: void <init>(android.content.Context,org.eclipse.egit.github.core.IRepositoryIdProvider)>
<android.view.animation.Animation: void finalize()>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<java.lang.Math: int min(int,int)>
<com.google.inject.internal.DefaultConstructionProxyFactory: com.google.inject.spi.InjectionPoint access$000(com.google.inject.internal.DefaultConstructionProxyFactory)>
<roboguice.service.RoboService: void onCreate()>
<com.google.inject.spi.DefaultBindingTargetVisitor: void <init>()>
<com.google.inject.spi.Elements$RecordingBinder: void addError(com.google.inject.spi.Message)>
<com.google.inject.internal.util.$Iterators$8: void <init>(java.lang.Object)>
<android.view.KeyEvent: int getAction()>
<com.google.inject.internal.Annotations$AnnotationChecker$1: java.lang.Object apply(java.lang.Object)>
<com.google.inject.spi.Elements$RecordingBinder: void addError(java.lang.Throwable)>
<com.google.inject.internal.InjectorImpl: com.google.inject.internal.SingleParameterInjector createParameterInjector(com.google.inject.spi.Dependency,com.google.inject.internal.Errors)>
<com.github.mobile.core.commit.CommitUtils: void <clinit>()>
<android.support.v4.util.SimpleArrayMap: java.lang.Object remove(java.lang.Object)>
<com.github.kevinsawicki.wishlist.ViewUtils: android.view.View setGone(android.view.View,boolean)>
<android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>
<com.google.inject.internal.util.$FinalizableReferenceQueue: void <clinit>()>
<com.google.inject.internal.util.$Iterables$3: void <init>(java.lang.Iterable,com.google.inject.internal.util.$Function)>
<com.github.mobile.ui.repo.RepositoryPagerAdapter: com.github.mobile.ui.repo.RepositoryPagerAdapter onDialogResult(int,int,int,android.os.Bundle)>
<com.google.inject.spi.InjectionPoint$InjectableMembers: boolean isEmpty()>
<com.github.mobile.core.repo.RepositoryUriMatcher: org.eclipse.egit.github.core.Repository getRepository(android.net.Uri)>
<com.google.inject.internal.InternalInjectorCreator: void injectDynamically()>
<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: boolean isFullySpecified()>
<com.google.inject.internal.MoreTypes$WildcardTypeImpl: boolean equals(java.lang.Object)>
<java.lang.String: int indexOf(java.lang.String,int)>
<com.google.inject.internal.util.$Maps: java.util.IdentityHashMap newIdentityHashMap()>
<android.app.AlertDialog: void setMessage(java.lang.CharSequence)>
<android.support.v4.app.Fragment: void performStart()>
<com.google.inject.internal.ProviderInstanceBindingImpl: void <init>(com.google.inject.internal.InjectorImpl,com.google.inject.Key,java.lang.Object,com.google.inject.internal.InternalFactory,com.google.inject.internal.Scoping,com.google.inject.Provider,java.util.Set)>
<com.github.mobile.ui.user.UserViewActivity: void configurePager()>
<com.github.mobile.ui.issue.IssuesViewActivity$1: void <init>(com.github.mobile.ui.issue.IssuesViewActivity,android.content.Context,org.eclipse.egit.github.core.IRepositoryIdProvider)>
<com.google.inject.internal.State$1: java.lang.Object lock()>
<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>
<com.github.mobile.sync.ContentProviderAdapter: boolean onCreate()>
<com.google.inject.internal.UniqueAnnotations$1: java.lang.Class annotationType()>
<roboguice.inject.ContextScope: void <init>(android.app.Application)>
<com.google.inject.TypeLiteral: void <init>(java.lang.reflect.Type)>
<android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)>
<com.github.mobile.util.MarkdownUtils: void <clinit>()>
<com.google.inject.internal.MoreTypes: java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable)>
<com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet: boolean isEmpty()>
<com.google.inject.internal.ConstructorBindingImpl: com.google.inject.internal.ConstructorBindingImpl create(com.google.inject.internal.InjectorImpl,com.google.inject.Key,com.google.inject.spi.InjectionPoint,java.lang.Object,com.google.inject.internal.Scoping,com.google.inject.internal.Errors,boolean)>
<com.github.mobile.accounts.TwoFactorAuthActivity: void updateEnablement()>
<com.google.inject.internal.BindingBuilder: com.google.inject.binder.ScopedBindingBuilder toProvider(com.google.inject.Provider)>
<java.util.Collections: java.util.List singletonList(java.lang.Object)>
<com.github.mobile.ui.issue.AssigneeDialogFragment$UserListAdapter: void <init>(android.view.LayoutInflater,org.eclipse.egit.github.core.User[],int,com.github.mobile.util.AvatarLoader)>
<com.google.inject.internal.Errors$1: void <init>(com.google.inject.internal.Errors)>
<com.google.inject.internal.util.$MapMaker$Strength$1: int hash(java.lang.Object)>
<java.util.ArrayList: boolean isEmpty()>
<java.lang.ref.ReferenceQueue: void <init>()>
<com.github.mobile.ui.comment.CreateCommentActivity: java.lang.String getTitle(int)>
<roboguice.service.event.OnDestroyEvent: void <init>()>
<com.github.mobile.Intents$Builder: android.content.Intent toIntent()>
<com.actionbarsherlock.app.SherlockFragmentActivity: void setContentView(int)>
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>
<com.github.kevinsawicki.wishlist.SingleTypeAdapter: void <init>(android.content.Context,int)>
<com.github.mobile.ui.issue.EditIssueActivity: com.github.mobile.ui.issue.LabelsDialog access$700(com.github.mobile.ui.issue.EditIssueActivity)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<com.github.mobile.ui.commit.CommitFileViewActivity: void <init>()>
<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
<java.lang.StringBuilder: void <init>()>
<com.github.mobile.ui.TabPagerActivity: void <init>()>
<com.github.mobile.ui.issue.EditIssuesFilterActivity$2: void <init>(com.github.mobile.ui.issue.EditIssuesFilterActivity,org.eclipse.egit.github.core.Repository)>
<com.github.mobile.ui.issue.EditIssuesFilterActivity: void updateMilestone()>
<android.support.v4.app.ActivityCompat21: void finishAfterTransition(android.app.Activity)>
<android.support.v4.app.Fragment: void performCreate(android.os.Bundle)>
<java.util.IdentityHashMap: void <init>()>
<android.app.Activity: void onStop()>
<com.google.inject.internal.Scoping$6: void <init>(com.google.inject.Scope)>
<com.github.mobile.ui.user.HomeDropdownListAdapter: com.github.mobile.ui.user.HomeDropdownListAdapter setOrgs(java.util.List)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<com.google.inject.internal.util.$CustomConcurrentHashMap: int access$000(int)>
<android.support.v4.app.FragmentTransitionCompat21: void beginDelayedTransition(android.view.ViewGroup,java.lang.Object)>
<android.support.v4.app.FragmentState: void <clinit>()>
<org.eclipse.egit.github.core.Issue: java.lang.String getBody()>
<com.github.kevinsawicki.wishlist.TypeAdapter: void <init>()>
<java.lang.RuntimeException: void <init>(java.lang.Throwable)>
<com.github.mobile.ui.issue.AssigneeDialog$1: void <init>(com.github.mobile.ui.issue.AssigneeDialog,android.content.Context,org.eclipse.egit.github.core.User)>
<com.google.inject.internal.util.$MapMaker: com.google.inject.internal.util.$MapMaker$ValueReference access$600()>
<android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<roboguice.activity.event.OnStartEvent: void <init>()>
<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>
<org.eclipse.egit.github.core.Gist: org.eclipse.egit.github.core.Gist setId(java.lang.String)>
<com.github.mobile.core.repo.ForkRepositoryTask: void start()>
<com.github.mobile.ui.ref.BranchFileViewActivity$1: void <init>(com.github.mobile.ui.ref.BranchFileViewActivity,org.eclipse.egit.github.core.Repository,java.lang.String,android.content.Context)>
<android.support.v4.util.ArrayMap$1: int colGetSize()>
<com.google.inject.spi.InjectionPoint: java.util.Set forInstanceMethodsAndFields(java.lang.Class)>
<com.google.inject.internal.InjectorImpl$ProviderBindingImpl: com.google.inject.internal.InternalFactory createInternalFactory(com.google.inject.Binding)>
<com.google.inject.internal.InjectorImpl: com.google.inject.internal.BindingImpl createImplementedByBinding(com.google.inject.Key,com.google.inject.internal.Scoping,com.google.inject.ImplementedBy,com.google.inject.internal.Errors)>
<android.support.v4.content.ModernAsyncTask: android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>
<android.support.v4.content.ModernAsyncTask: boolean cancel(boolean)>
<android.support.v4.app.FragmentManagerImpl: void dispatchConfigurationChanged(android.content.res.Configuration)>
<com.google.inject.spi.Elements$RecordingBinder: java.lang.Object getSource()>
<android.support.v4.app.DialogFragment: void onStart()>
<android.view.animation.AccelerateInterpolator: void <init>(float)>
<com.google.inject.Key: com.google.inject.Key withoutAttributes()>
<com.google.inject.util.Types: java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type)>
<java.util.Timer: void <init>(boolean)>
<com.github.mobile.ui.search.RepositorySearchSuggestionsProvider: void clear(android.content.Context)>
<java.util.logging.Logger: void <clinit>()>
<java.lang.Class: java.lang.Object cast(java.lang.Object)>
<com.github.mobile.ui.issue.CreateCommentActivity: void onCreate(android.os.Bundle)>
<roboguice.inject.ContextScope: void enter(android.content.Context)>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockFragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>
<com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>
<android.support.v4.util.SimpleArrayMap: int indexOf(java.lang.Object,int)>
<com.github.mobile.ui.issue.EditCommentActivity: android.support.v4.view.PagerAdapter createAdapter()>
<com.google.inject.internal.ConstructorInjectorStore$1: com.google.inject.internal.ConstructorInjector create(com.google.inject.spi.InjectionPoint,com.google.inject.internal.Errors)>
<org.eclipse.egit.github.core.Gist: void <init>()>
<com.google.inject.internal.ConstructorBindingImpl$Factory: com.google.inject.internal.ConstructorInjector access$000(com.google.inject.internal.ConstructorBindingImpl$Factory)>
<com.google.inject.internal.MoreTypes: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)>
<com.github.mobile.ui.gist.GistsActivity: com.github.mobile.ui.gist.GistQueriesPagerAdapter createAdapter()>
<com.github.mobile.ui.issue.EditIssueActivity$2: void <init>(com.github.mobile.ui.issue.EditIssueActivity)>
<android.support.v4.app.Fragment: void performActivityCreated(android.os.Bundle)>
<com.github.mobile.ui.gist.CreateGistActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<android.view.View: int getHeight()>
<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>
<android.support.v4.app.FragmentActivity: void onDestroy()>
<com.github.mobile.sync.ContentProviderAdapter: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<com.github.mobile.accounts.LoginActivity: void handleLogin()>
<android.support.v4.app.FragmentTransitionCompat21: java.lang.Object captureExitingViews(java.lang.Object,android.view.View,java.util.ArrayList,java.util.Map)>
<com.github.mobile.ui.issue.EditIssuesFilterActivity: com.github.mobile.core.issue.IssueFilter access$200(com.github.mobile.ui.issue.EditIssuesFilterActivity)>
<com.google.inject.internal.util.$MapMaker: com.google.inject.internal.util.$MapMaker$ValueReference computing()>
<com.github.mobile.core.repo.UnstarRepositoryTask: void <init>(android.content.Context,org.eclipse.egit.github.core.IRepositoryIdProvider)>
<com.github.mobile.ui.repo.RepositoryViewActivity: void <init>()>
<android.app.Dialog: void dismiss()>
<com.github.mobile.ui.gist.GistFilesViewActivity$1: void <init>(com.github.mobile.ui.gist.GistFilesViewActivity,android.content.Context,java.lang.String,com.github.mobile.util.HttpImageGetter)>
<org.eclipse.egit.github.core.Issue: org.eclipse.egit.github.core.Issue setBody(java.lang.String)>
<android.support.v4.app.BackStackRecord: boolean configureTransitions(int,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray)>
<com.google.inject.internal.LookupProcessor: void <init>(com.google.inject.internal.Errors)>
<android.support.v4.util.LogWriter: void <init>(java.lang.String)>
<com.github.mobile.accounts.LoginActivity$5: void onCancel(android.content.DialogInterface)>
<com.github.mobile.ui.issue.EditIssuesFilterActivity$4: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<com.github.mobile.ui.ref.BranchFileViewActivity: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList copyOf(java.lang.Iterable)>
<com.github.mobile.ui.issue.IssueSearchActivity: void handleIntent(android.content.Intent)>
<roboguice.RoboGuice: roboguice.config.DefaultRoboModule newDefaultRoboModule(android.app.Application)>
<android.support.v4.app.FragmentStatePagerAdapter: void <init>(android.support.v4.app.FragmentManager)>
<com.github.mobile.Intents$Builder: void <init>(java.lang.String)>
<com.google.inject.internal.util.$MapMaker$WeakValueReference: void <init>(java.lang.Object,com.google.inject.internal.util.$MapMaker$ReferenceEntry)>
<java.lang.Error: void <init>()>
<com.google.inject.internal.util.$MapMaker$StrongEntry: void setValueReference(com.google.inject.internal.util.$MapMaker$ValueReference)>
<android.support.v4.app.FragmentActivity: void onPostResume()>
<com.google.inject.internal.Errors: com.google.inject.spi.Message merge(com.google.inject.spi.Message)>
<com.google.inject.internal.util.$ImmutableMap$Builder: com.google.inject.internal.util.$ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>
<com.google.inject.internal.MoreTypes: java.lang.reflect.Type canonicalize(java.lang.reflect.Type)>
<com.google.inject.internal.InjectorImpl: void <init>(com.google.inject.internal.InjectorImpl,com.google.inject.internal.State,com.google.inject.internal.InjectorImpl$InjectorOptions)>
<com.github.mobile.util.ServiceUtils: float getPixels(android.content.res.Resources,int)>
<com.github.kevinsawicki.wishlist.Toaster: void show(android.app.Activity,java.lang.String,int)>
<android.view.View: void restoreHierarchyState(android.util.SparseArray)>
<com.github.mobile.ui.issue.IssueSearchSuggestionsProvider: void clear(android.content.Context)>
<com.github.mobile.accounts.LoginActivity$1: void <init>(com.github.mobile.accounts.LoginActivity)>
<com.google.inject.internal.ConstructorBindingImpl: com.google.inject.spi.InjectionPoint getConstructor()>
<com.google.inject.internal.Scoping: com.google.inject.internal.Scoping forAnnotation(java.lang.Class)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors cannotInjectRawTypeLiteral()>
<java.lang.String: java.lang.String substring(int)>
<java.lang.NullPointerException: void <init>()>
<com.github.mobile.ui.gist.GistsActivity: java.lang.String getIcon(int)>
<com.google.inject.internal.util.$ImmutableSet$EmptyImmutableSet: int size()>
<android.support.v4.app.FragmentActivity$2: android.view.View findViewById(int)>
<com.google.inject.internal.InternalInjectorCreator$ToolStageInjector: java.lang.Object getInstance(java.lang.Class)>
<com.github.mobile.ui.issue.EditIssuesFilterActivity$1: void onClick(android.view.View)>
<com.google.inject.internal.util.$ImmutableMap$SingletonImmutableMap: java.lang.Object get(java.lang.Object)>
<com.github.kevinsawicki.wishlist.Toaster$2: void <init>(android.content.Context,java.lang.String,int)>
<com.google.inject.internal.util.$FinalizableReferenceQueue$SystemLoader: java.lang.Class loadFinalizer()>
<com.github.mobile.core.repo.RefreshRepositoryTask: void <init>(android.content.Context,org.eclipse.egit.github.core.IRepositoryIdProvider)>
<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>
<android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.github.mobile.ui.gist.GistsViewActivity: android.content.Intent createIntent(org.eclipse.egit.github.core.Gist)>
<com.google.inject.internal.util.$ImmutableSet$ArrayImmutableSet: java.util.Iterator iterator()>
<com.github.mobile.ui.issue.MilestoneDialogFragment: void onClick(android.content.DialogInterface,int)>
<com.google.inject.matcher.Matchers: com.google.inject.matcher.Matcher subclassesOf(java.lang.Class)>
<java.util.HashMap: java.lang.Object remove(java.lang.Object)>
<com.github.mobile.ui.commit.CommitFileViewActivity: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<com.google.inject.internal.InternalInjectorCreator: void initializeStatically()>
<com.google.inject.internal.util.$Preconditions: void checkElementIndex(int,int,java.lang.String)>
<com.github.kevinsawicki.wishlist.ViewFinder: void <init>(android.view.Window)>
<com.google.inject.Stage: void <init>(java.lang.String,int)>
<com.github.mobile.ui.ref.BranchFileViewActivity: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()>
<com.google.inject.internal.util.$CustomConcurrentHashMap: int rehash(int)>
<com.github.mobile.ui.commit.CommitViewActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.google.inject.internal.MoreTypes$GenericArrayTypeImpl: java.lang.reflect.Type getGenericComponentType()>
<android.support.v4.app.LoaderManagerImpl: void doStart()>
<com.github.mobile.accounts.LoginActivity$2: void <init>(com.github.mobile.accounts.LoginActivity)>
<com.github.mobile.accounts.LoginActivity: void finishConfirmCredentials(boolean)>
<org.eclipse.egit.github.core.Issue: org.eclipse.egit.github.core.Issue setAssignee(org.eclipse.egit.github.core.User)>
<com.github.mobile.ui.ref.BranchFileViewActivity: void <init>()>
<android.support.v4.util.TimeUtils: int printField(char[],int,char,int,boolean,int)>
<com.github.mobile.ui.search.RepositorySearchSuggestionsProvider: void save(android.content.Context,java.lang.String)>
<roboguice.util.SafeAsyncTask: boolean cancel(boolean)>
<com.google.inject.internal.Errors$4: java.lang.String toString(java.lang.Object)>
<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.reflect.Type getRawType()>
<com.google.inject.spi.Dependency: void <init>(com.google.inject.spi.InjectionPoint,com.google.inject.Key,boolean,int)>
<android.content.ContentValues: void <init>()>
<java.util.Arrays: java.lang.String toString(java.lang.Object[])>
<com.github.mobile.ui.issue.LabelsDialogFragment: void onResult(int)>
<com.github.mobile.ui.gist.EditCommentActivity: void onCreate(android.os.Bundle)>
<com.actionbarsherlock.app.SherlockActivity: void onSaveInstanceState(android.os.Bundle)>
<com.github.mobile.ui.gist.GistsViewActivity: void updateActionBar(org.eclipse.egit.github.core.Gist,java.lang.String)>
<com.github.mobile.core.commit.CommitUtils: java.lang.String getName(java.lang.String)>
<com.github.mobile.util.SourceEditor: com.github.mobile.util.SourceEditor toggleMarkdown()>
<java.lang.Object: boolean equals(java.lang.Object)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors cannotInjectRawProvider()>
<com.google.inject.internal.State$1: com.google.inject.Scope getScope(java.lang.Class)>
<android.support.v4.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment)>
<com.google.inject.CreationException: java.util.Collection getErrorMessages()>
<com.github.mobile.ui.issue.IssuesViewActivity: android.content.Intent createIntent(org.eclipse.egit.github.core.Issue,org.eclipse.egit.github.core.Repository)>
<java.util.IdentityHashMap: boolean isEmpty()>
<com.google.inject.internal.SingleMethodInjector: void <init>(com.google.inject.internal.InjectorImpl,com.google.inject.spi.InjectionPoint,com.google.inject.internal.Errors)>
<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Segment: java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int)>
<com.google.inject.internal.util.$ImmutableMap: java.util.Map$Entry access$300(java.lang.Object,java.lang.Object)>
<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()>
<android.widget.FrameLayout: void <init>(android.content.Context)>
<android.graphics.Rect: void setEmpty()>
<com.google.inject.internal.MembersInjectorStore$1: com.google.inject.internal.MembersInjectorImpl create(com.google.inject.TypeLiteral,com.google.inject.internal.Errors)>
<com.google.inject.internal.InjectorImpl$ConvertedConstantBindingImpl: com.google.inject.Key getSourceKey()>
<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
<com.github.mobile.ui.issue.IssueBrowseActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.google.inject.internal.InjectorShell$RootModule: void <init>(com.google.inject.Stage)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors misplacedBindingAnnotation(java.lang.reflect.Member,java.lang.annotation.Annotation)>
<com.github.mobile.ui.BaseActivity: java.io.Serializable getSerializableExtra(java.lang.String)>
<android.support.v4.util.MapCollections$ArrayIterator: boolean hasNext()>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockAccountAuthenticatorActivity: void onActivityResult(int,int,android.content.Intent)>
<java.util.AbstractMap: void <init>()>
<com.google.inject.internal.util.$ImmutableSet$EmptyImmutableSet: java.util.Iterator iterator()>
<com.google.inject.internal.util.$Objects: int hashCode(java.lang.Object[])>
<android.support.v4.util.SparseArrayCompat: int keyAt(int)>
<android.util.Log: int d(java.lang.String,java.lang.String)>
<com.google.inject.internal.util.$SourceProvider: java.util.List asStrings(java.lang.Class[])>
<android.support.v4.content.ModernAsyncTask: void onPreExecute()>
<com.github.mobile.ui.gist.CreateCommentActivity: void onCreate(android.os.Bundle)>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()>
<com.google.inject.internal.ProviderMethodsModule: com.google.inject.Module forModule(com.google.inject.Module)>
<com.google.inject.internal.util.$MapMaker$StrategyImpl: void setValueReference(com.google.inject.internal.util.$MapMaker$ReferenceEntry,com.google.inject.internal.util.$MapMaker$ValueReference)>
<com.github.mobile.ui.repo.RepositoryPagerAdapter: void <init>(com.actionbarsherlock.app.SherlockFragmentActivity,boolean)>
<com.google.inject.internal.util.$FinalizableWeakReference: void <init>(java.lang.Object,com.google.inject.internal.util.$FinalizableReferenceQueue)>
<com.google.inject.spi.Elements$RecordingBinder: void addError(java.lang.String,java.lang.Object[])>
<android.support.v4.app.Fragment$1: boolean hasView()>
<com.google.inject.name.NamedImpl: java.lang.Class annotationType()>
<android.support.v4.app.BackStackRecord: android.support.v4.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.support.v4.util.ArrayMap)>
<com.github.mobile.ui.commit.CommitFileViewActivity$1: void <init>(com.github.mobile.ui.commit.CommitFileViewActivity,org.eclipse.egit.github.core.Repository,java.lang.String,android.content.Context)>
<android.support.v4.app.Fragment: void onCreate(android.os.Bundle)>
<com.google.inject.internal.util.$ImmutableSet: void <clinit>()>
<com.google.inject.internal.AbstractBindingBuilder: void <clinit>()>
<com.google.inject.internal.AbstractBindingBuilder: void checkNotTargetted()>
<android.support.v4.app.LoaderManagerImpl: void <init>(java.lang.String,android.support.v4.app.FragmentActivity,boolean)>
<com.google.inject.internal.InjectorShell: void bindInjector(com.google.inject.internal.InjectorImpl)>
<java.lang.String: void <clinit>()>
<roboguice.RoboGuice: com.google.inject.Injector setBaseApplicationInjector(android.app.Application,com.google.inject.Stage,com.google.inject.Module[])>
<com.github.mobile.ui.issue.LabelsDialogFragment: void onClick(android.content.DialogInterface,int)>
<com.google.inject.spi.ProviderLookup: com.google.inject.Provider getProvider()>
<com.google.inject.spi.Elements: java.util.List getElements(com.google.inject.Module[])>
<android.support.v4.app.FragmentActivity$1: void <init>(android.support.v4.app.FragmentActivity)>
<com.github.mobile.ui.commit.CreateCommentActivity: android.support.v4.view.PagerAdapter createAdapter()>
<java.util.ArrayList: boolean addAll(java.util.Collection)>
<org.eclipse.egit.github.core.util.Base64: byte[] decode(byte[],int,int)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors cannotInjectMethodWithTypeParameters(java.lang.reflect.Method)>
<com.google.inject.internal.util.$ImmutableCollection: void <init>()>
<android.support.v4.util.ContainerHelpers: int idealByteArraySize(int)>
<android.support.v4.app.FragmentActivity: java.lang.String viewToString(android.view.View)>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()>
<com.github.mobile.ui.comment.CreateCommentActivity: android.widget.TabHost access$000(com.github.mobile.ui.comment.CreateCommentActivity)>
<com.github.mobile.ui.issue.AssigneeDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>
<com.github.mobile.ui.comment.CommentPreviewPagerAdapter: void <init>(com.actionbarsherlock.app.SherlockFragmentActivity,org.eclipse.egit.github.core.IRepositoryIdProvider)>
<com.github.mobile.ui.user.UserViewActivity$3: void <init>(com.github.mobile.ui.user.UserViewActivity,android.content.Context,java.lang.String)>
<com.github.mobile.ui.gist.GistsActivity: void onCreate(android.os.Bundle)>
<com.github.mobile.ui.user.HomeActivity: boolean access$002(com.github.mobile.ui.user.HomeActivity,boolean)>
<com.google.inject.internal.util.$MapMaker$NullOutputExceptionReference: void <init>(java.lang.String)>
<com.google.inject.matcher.AbstractMatcher: void <init>()>
<android.support.v4.app.Fragment: void onStart()>
<com.google.inject.internal.Errors: void throwCreationExceptionIfErrorsExist()>
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
<com.github.mobile.ui.ProgressDialogTask: void dismissProgress()>
<com.google.inject.internal.ConstructorBindingImpl: boolean isInitialized()>
<com.google.inject.internal.util.$Iterables: java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable)>
<android.support.v4.util.SparseArrayCompat: void <init>(int)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>
<android.support.v4.app.BackStackRecord: void prepareSharedElementTransition(android.support.v4.app.BackStackRecord$TransitionState,android.view.View,java.lang.Object,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList)>
<com.github.mobile.ui.gist.CreateGistActivity: void <init>()>
<com.github.mobile.ui.issue.AssigneeDialogFragment: void show(com.github.mobile.ui.DialogFragmentActivity,int,java.lang.String,java.lang.String,java.util.ArrayList,int)>
<android.util.AndroidRuntimeException: void <init>(java.lang.String)>
<java.io.Writer: void <init>()>
<com.github.mobile.ui.StyledText: void <init>()>
<com.google.inject.internal.util.$FinalizableReferenceQueue: java.lang.Class loadFinalizer(com.google.inject.internal.util.$FinalizableReferenceQueue$FinalizerLoader[])>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void <init>(android.support.v4.app.LoaderManagerImpl,int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>
<com.github.mobile.ui.repo.RepositoryViewActivity: void shareRepository()>
<android.support.v4.util.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)>
<com.google.inject.internal.Errors: java.util.List getMessages()>
<com.google.inject.internal.InheritingState: void <init>(com.google.inject.internal.State)>
<java.util.HashMap: java.util.Set keySet()>
<com.google.inject.internal.util.$NullOutputException: void <init>(java.lang.String)>
<com.github.mobile.ui.user.UserViewActivity: void onCreate(android.os.Bundle)>
<android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
<com.google.inject.internal.ConstructorBindingImpl: java.util.Set getDependencies()>
<com.google.inject.internal.InjectorImpl: void initializeJitBinding(com.google.inject.internal.BindingImpl,com.google.inject.internal.Errors)>
<com.github.mobile.accounts.AuthenticatedUserTask: void <init>(android.content.Context)>
<android.support.v4.app.NoSaveStateFrameLayout: android.view.ViewGroup wrap(android.view.View)>
<android.support.v4.app.LoaderManagerImpl: void doReportNextStart()>
<com.github.mobile.ui.user.HomeActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<android.support.v4.util.TimeUtils: void <clinit>()>
<com.github.mobile.ui.issue.EditCommentActivity: void <init>()>
<com.google.inject.internal.DefaultConstructionProxyFactory$1: void <init>(com.google.inject.internal.DefaultConstructionProxyFactory,java.lang.reflect.Constructor)>
<com.google.inject.spi.InjectionPoint$OverrideIndex: void <init>(com.google.inject.spi.InjectionPoint$InjectableMembers)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors missingConstructor(java.lang.Class)>
<com.google.inject.spi.InjectionPoint$Signature: void <init>(java.lang.reflect.Method)>
<com.github.mobile.Intents$Builder: com.github.mobile.Intents$Builder add(java.lang.String,int)>
<com.google.inject.internal.util.$ImmutableCollection$EmptyImmutableCollection: void <init>(com.google.inject.internal.util.$ImmutableCollection$1)>
<android.support.v4.app.LoaderManagerImpl: void doRetain()>
<com.google.inject.internal.InjectorImpl$ConvertedConstantBindingImpl: com.google.inject.Provider getProvider()>
<android.os.Bundle: int getInt(java.lang.String)>
<com.github.mobile.accounts.AccountUtils: android.accounts.Account getAccount(android.content.Context)>
<com.github.mobile.accounts.LoginActivity: void startActivity(android.content.Intent)>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockFragmentActivity: void onDestroy()>
<com.github.mobile.core.commit.CommitUriMatcher: com.github.mobile.core.commit.CommitMatch getCommit(android.net.Uri)>
<com.google.inject.internal.State$1: boolean isBlacklisted(com.google.inject.Key)>
<com.google.inject.internal.util.$Iterators$6: void <init>(java.lang.Object[])>
<java.lang.Character: char toUpperCase(char)>
<android.app.Dialog: void setCancelable(boolean)>
<com.actionbarsherlock.app.SherlockActivity: void onDestroy()>
<com.google.inject.internal.Errors$4: java.lang.String toString(com.google.inject.Key)>
<com.github.mobile.ui.user.UserPagerAdapter: void <init>(com.actionbarsherlock.app.SherlockFragmentActivity)>
<android.support.v4.app.BackStackRecord$1: void <init>(android.support.v4.app.BackStackRecord,android.support.v4.app.Fragment)>
<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()>
<android.text.style.StyleSpan: void <init>(int)>
<com.google.inject.Key$NullAnnotationStrategy: void <init>(java.lang.String,int)>
<com.google.inject.util.Types: java.lang.reflect.ParameterizedType newParameterizedType(java.lang.reflect.Type,java.lang.reflect.Type[])>
<android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)>
<com.google.inject.internal.util.$MapMaker$StrategyImpl: void scheduleRemoval(java.lang.Object,java.lang.Object)>
<com.google.inject.internal.InjectorShell: void access$200(com.google.inject.internal.InjectorImpl)>
<com.google.inject.internal.util.$ImmutableMap$Builder: void <init>()>
<android.support.v4.app.FragmentManagerImpl: void dispatchDestroy()>
<com.github.mobile.ui.user.HomeActivity: void onLoaderReset(android.support.v4.content.Loader)>
<com.google.inject.internal.util.$StackTraceElements: java.lang.Object forType(java.lang.Class)>
<com.google.inject.internal.util.$ImmutableList$EmptyImmutableList: void <init>(com.google.inject.internal.util.$ImmutableList$1)>
<com.google.inject.internal.InheritingState: void addConverter(com.google.inject.spi.TypeConverterBinding)>
<android.app.Activity: android.content.Intent getIntent()>
<com.github.mobile.ui.issue.AssigneeDialog$1: void execute()>
<roboguice.activity.event.OnResumeEvent: void <init>()>
<java.util.IdentityHashMap: java.util.Collection values()>
<android.support.v4.content.ModernAsyncTask$WorkerRunnable: void <init>()>
<java.util.Arrays: java.util.List asList(java.lang.Object[])>
<com.github.mobile.core.gist.RefreshGistTask: void <init>(android.content.Context,java.lang.String,com.github.mobile.util.HttpImageGetter)>
<com.google.inject.internal.util.$ImmutableSet$Builder: com.google.inject.internal.util.$ImmutableSet build()>
<java.util.HashMap: void <init>(java.util.Map)>
<android.view.InputEvent: void <init>()>
<com.github.mobile.ui.DialogFragmentActivity: void <init>()>
<android.provider.SearchRecentSuggestions: void clearHistory()>
<com.github.mobile.accounts.LoginActivity$3: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
<com.google.inject.internal.util.$Iterators$4: void <init>(java.util.Iterator)>
<com.github.mobile.accounts.LoginActivity: void handleLoginException(java.lang.Exception)>
<com.github.mobile.accounts.TwoFactorAuthActivity: boolean loginEnabled()>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<android.os.Bundle: void <init>()>
<java.lang.Math: int max(int,int)>
<java.lang.Object: void finalize()>
<com.google.inject.matcher.Matchers$Any: void <init>(com.google.inject.matcher.Matchers$1)>
<com.google.inject.internal.Scoping$2: java.lang.Class getScopeAnnotation()>
<com.google.inject.internal.SingleParameterInjector: void <clinit>()>
<com.github.mobile.ui.commit.CommitFileViewActivity: void loadMarkdown()>
<com.github.mobile.ui.gist.EditCommentActivity: com.github.mobile.ui.comment.CommentPreviewPagerAdapter createAdapter()>
<com.google.inject.internal.util.$MapMaker: com.google.inject.internal.util.$MapMaker$ValueReference access$500()>
<com.google.inject.internal.util.$ImmutableCollection$EmptyImmutableCollection: void <init>()>
<roboguice.util.SafeAsyncTask: void <clinit>()>
<com.google.inject.internal.util.$Iterables$1: void <init>()>
<java.lang.String: java.lang.String replace(char,char)>
<com.google.inject.internal.InheritingState: com.google.inject.Scope getScope(java.lang.Class)>
<com.google.inject.internal.util.$MapMaker$StrongEntry: java.lang.Object getKey()>
<android.support.v4.util.SimpleArrayMap: int indexOfKey(java.lang.Object)>
<android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)>
<com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>
<android.support.v4.content.Loader: boolean isReset()>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<com.github.mobile.ui.issue.EditIssuesFilterActivity$1: void <init>(com.github.mobile.ui.issue.EditIssuesFilterActivity,org.eclipse.egit.github.core.Repository)>
<com.github.mobile.ui.issue.IssuesViewActivity: void checkCollaboratorStatus()>
<android.support.v4.content.ModernAsyncTask$1: void <init>()>
<android.os.Bundle: void putBooleanArray(java.lang.String,boolean[])>
<com.github.mobile.ui.user.UserViewActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.google.inject.internal.InjectorImpl: com.google.inject.internal.BindingImpl getBindingOrThrow(com.google.inject.Key,com.google.inject.internal.Errors,com.google.inject.internal.InjectorImpl$JitLimitation)>
<com.github.mobile.accounts.LoginActivity: boolean loginEnabled()>
<com.google.inject.spi.Elements$RecordingBinder: void <init>(com.google.inject.spi.Elements$RecordingBinder,java.lang.Object,com.google.inject.internal.util.$SourceProvider)>
<com.github.mobile.util.SourceEditor: boolean getWrap()>
<java.lang.AssertionError: void <init>()>
<android.os.Handler: void removeMessages(int)>
<android.app.Activity: void setIntent(android.content.Intent)>
<android.support.v4.app.FragmentActivity: void onResumeFragments()>
<java.lang.System: long currentTimeMillis()>
<java.io.PrintWriter: void <init>(java.io.Writer)>
<com.github.mobile.ui.gist.RandomGistTask: void start()>
<com.github.mobile.accounts.TwoFactorAuthActivity$2: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<com.github.mobile.ui.StyledText: com.github.mobile.ui.StyledText append(char)>
<android.support.v4.app.FragmentActivity$2: void <init>(android.support.v4.app.FragmentActivity)>
<com.github.mobile.ui.gist.GistQueriesPagerAdapter: int getCount()>
<java.io.PrintWriter: void println(int)>
<com.google.inject.CreationException: java.lang.String getMessage()>
<com.google.inject.internal.util.$CustomConcurrentHashMap$Builder: void <init>()>
<java.lang.Class: java.lang.Class forName(java.lang.String)>
<com.github.mobile.ui.gist.GistsPagerAdapter: com.github.mobile.ui.gist.GistsPagerAdapter onDialogResult(int,int,int,android.os.Bundle)>
<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>
<com.google.inject.Key$AnnotationInstanceStrategy: com.google.inject.Key$AnnotationStrategy withoutAttributes()>
<com.google.inject.internal.InjectorImpl: com.google.inject.internal.BindingImpl createMembersInjectorBinding(com.google.inject.Key,com.google.inject.internal.Errors)>
<com.google.inject.internal.util.$Sets: java.util.LinkedHashSet newLinkedHashSet()>
<android.support.v4.content.AsyncTaskLoader$LoadTask: void run()>
<com.google.inject.internal.util.$ImmutableCollection$1: void <init>()>
<android.support.v4.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.State getState()>
<android.support.v4.content.Loader: void startLoading()>
<com.google.inject.internal.util.$Classes: boolean isConcrete(java.lang.Class)>
<com.google.inject.internal.InjectorImpl$InjectorOptions: void <init>(com.google.inject.Stage,boolean,boolean)>
<com.github.mobile.ui.user.UserViewActivity: void followUser()>
<com.github.mobile.ui.issue.EditIssueActivity: void onDialogResult(int,int,android.os.Bundle)>
<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>
<com.google.inject.spi.InjectionPoint$OverrideIndex: void add(com.google.inject.spi.InjectionPoint$InjectableMethod)>
<com.github.mobile.ui.issue.LabelsDialogFragment: void show(com.github.mobile.ui.DialogFragmentActivity,int,java.lang.String,java.lang.String,java.util.ArrayList,boolean[])>
<android.content.Intent: android.content.Intent setType(java.lang.String)>
<com.github.mobile.ui.issue.EditIssueActivity$7: void <init>(com.github.mobile.ui.issue.EditIssueActivity,android.content.Context)>
<com.google.inject.internal.ProviderMethodsModule: com.google.inject.Module forObject(java.lang.Object)>
<com.github.mobile.ui.issue.EditIssueActivity: void updateSaveMenu(java.lang.CharSequence)>
<java.util.concurrent.CountDownLatch: void countDown()>
<android.support.v4.app.Fragment: boolean isAdded()>
<com.github.mobile.accounts.LoginActivity$2: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<com.github.mobile.ui.search.SearchActivity: void onCreate(android.os.Bundle)>
<com.google.inject.internal.util.$Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>
<com.google.inject.internal.util.$Iterables$1: java.lang.Object apply(java.lang.Object)>
<com.google.inject.internal.Annotations: java.lang.annotation.Annotation canonicalizeIfNamed(java.lang.annotation.Annotation)>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<java.util.ArrayList: void <init>(java.util.Collection)>
<com.google.inject.internal.State$1: com.google.inject.internal.BindingImpl getExplicitBinding(com.google.inject.Key)>
<com.github.mobile.ui.issue.EditIssuesFilterActivity: com.github.mobile.ui.issue.LabelsDialog access$500(com.github.mobile.ui.issue.EditIssuesFilterActivity)>
<com.github.mobile.ui.issue.IssueSearchActivity: void onCreate(android.os.Bundle)>
<roboguice.activity.event.OnStopEvent: void <init>()>
<com.github.mobile.ui.gist.GistsViewActivity: void <init>()>
<com.github.mobile.ui.issue.IssueSearchActivity: void <init>()>
<com.github.mobile.ui.issue.MilestoneDialogFragment$MilestoneListAdapter: void <init>(android.view.LayoutInflater,org.eclipse.egit.github.core.Milestone[],int)>
<roboguice.util.SafeAsyncTask: void execute(java.lang.StackTraceElement[])>
<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: void <init>(java.lang.Object[],int,int)>
<com.google.inject.internal.ConstructorInjectorStore$1: void <init>(com.google.inject.internal.ConstructorInjectorStore)>
<com.google.inject.spi.Dependency: int getParameterIndex()>
<com.github.mobile.accounts.TwoFactorAuthActivity$3: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
<com.github.mobile.core.user.RefreshUserTask: void <init>(android.content.Context,java.lang.String)>
<android.support.v4.app.BackStackState: void <clinit>()>
<org.eclipse.egit.github.core.Issue: org.eclipse.egit.github.core.Issue setLabels(java.util.List)>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockActivity: void onCreate(android.os.Bundle)>
<com.google.inject.internal.MoreTypes$WildcardTypeImpl: int hashCode()>
<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<com.google.inject.internal.InjectorShell$LoggerFactory: void <init>(com.google.inject.internal.InjectorShell$1)>
<com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap: void <init>(java.util.Map$Entry[])>
<com.google.inject.internal.MembersInjectorStore: com.google.inject.internal.MembersInjectorImpl access$000(com.google.inject.internal.MembersInjectorStore,com.google.inject.TypeLiteral,com.google.inject.internal.Errors)>
<android.support.v4.content.Loader: boolean takeContentChanged()>
<android.app.Dialog: void setTitle(int)>
<com.google.inject.internal.util.$ExpirationTimer: void <clinit>()>
<com.github.mobile.ui.LightProgressDialog: android.app.AlertDialog create(android.content.Context,int)>
<com.google.inject.Key$NullAnnotationStrategy: java.lang.annotation.Annotation getAnnotation()>
<android.support.v4.app.FragmentTransitionCompat21: void excludeTarget(java.lang.Object,android.view.View,boolean)>
<com.github.mobile.core.code.RefreshBlobTask: void <init>(org.eclipse.egit.github.core.Repository,java.lang.String,android.content.Context)>
<android.content.res.Configuration: void <init>()>
<android.view.animation.AnimationSet: void <init>(boolean)>
<com.google.inject.AbstractModule: void <init>()>
<com.google.inject.internal.InternalFactoryToProviderAdapter: void <init>(com.google.inject.internal.Initializable,java.lang.Object)>
<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl: com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Segment[] newSegmentArray(int)>
<com.github.mobile.ui.DialogFragmentActivity: java.lang.String getStringExtra(java.lang.String)>
<java.lang.ref.Reference: java.lang.Object get()>
<com.github.mobile.ui.TabPagerActivity: void createPager()>
<com.github.mobile.ui.issue.EditIssueActivity: com.github.mobile.ui.issue.AssigneeDialog access$500(com.github.mobile.ui.issue.EditIssueActivity)>
<android.util.SparseArray: void put(int,java.lang.Object)>
<com.google.inject.Key: java.lang.Class getAnnotationType()>
<android.support.v4.app.FragmentManagerImpl: void detachFragment(android.support.v4.app.Fragment,int,int)>
<com.google.inject.internal.FailableCache: boolean remove(java.lang.Object)>
<com.github.mobile.ui.issue.IssueBrowseActivity: void <init>()>
<android.support.v4.app.DialogFragment: void onAttach(android.app.Activity)>
<com.google.inject.internal.InjectorShell: void <init>(com.google.inject.internal.InjectorShell$Builder,java.util.List,com.google.inject.internal.InjectorImpl)>
<com.github.mobile.ui.issue.EditIssuesFilterActivity: void onDialogResult(int,int,android.os.Bundle)>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void reportStart()>
<com.google.inject.internal.ProviderMethod: void <init>(com.google.inject.Key,java.lang.reflect.Method,java.lang.Object,com.google.inject.internal.util.$ImmutableSet,java.util.List,java.lang.Class)>
<java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<java.lang.Integer: java.lang.Integer valueOf(int)>
<android.database.Observable: void <init>()>
<java.util.ArrayList: void add(int,java.lang.Object)>
<org.eclipse.egit.github.core.RepositoryId: void <init>(java.lang.String,java.lang.String)>
<java.lang.IllegalArgumentException: void <init>(java.lang.String)>
<com.google.inject.internal.util.$MapMaker$Strength$1: void <init>(java.lang.String,int)>
<com.github.mobile.ui.issue.LabelsDialogFragment$LabelListAdapter: int[] getChildViewIds()>
<com.google.inject.internal.util.$ImmutableSet: com.google.inject.internal.util.$ImmutableSet create(java.lang.Iterable,int)>
<com.google.inject.internal.util.$FinalizableReferenceQueue$DecoupledLoader: java.lang.Class loadFinalizer()>
<android.support.v4.app.FragmentManagerState: void <init>()>
<com.google.inject.internal.MoreTypes$WildcardTypeImpl: boolean isFullySpecified()>
<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>
<android.support.v4.util.SimpleArrayMap: java.lang.Object removeAt(int)>
<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>
<com.github.mobile.ui.issue.IssueSearchActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.github.mobile.accounts.AccountUtils: java.lang.String getLogin(android.content.Context)>
<com.google.inject.internal.SingleMethodInjector: com.google.inject.internal.InjectorImpl$MethodInvoker createMethodInvoker(java.lang.reflect.Method)>
<com.google.inject.Scopes: void <clinit>()>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<roboguice.inject.ViewListener: void <init>()>
<android.support.v4.util.MapCollections: boolean retainAllHelper(java.util.Map,java.util.Collection)>
<java.io.PrintWriter: void print(java.lang.Object)>
<com.google.inject.internal.Scoping: com.google.inject.internal.Scoping forInstance(com.google.inject.Scope)>
<com.google.inject.internal.util.$ImmutableMap: void <clinit>()>
<android.support.v4.content.ModernAsyncTask$Status: void <clinit>()>
<com.google.inject.internal.util.$Iterators$7: void <init>(int,int,java.lang.Object[])>
<com.google.inject.internal.UntargettedBindingImpl: void <init>(java.lang.Object,com.google.inject.Key,com.google.inject.internal.Scoping)>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.google.inject.internal.InjectorImpl: com.google.inject.internal.SingleParameterInjector[] getParametersInjectors(java.util.List,com.google.inject.internal.Errors)>
<android.support.v4.app.Fragment: void onPause()>
<android.content.SearchRecentSuggestionsProvider: boolean onCreate()>
<com.google.inject.internal.util.$ImmutableSet$EmptyImmutableSet: void <clinit>()>
<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<com.github.mobile.ui.issue.CreateCommentActivity: void <init>()>
<com.github.mobile.ui.comment.CreateCommentActivity: android.widget.TabHost access$100(com.github.mobile.ui.comment.CreateCommentActivity)>
<com.google.inject.internal.InjectorImpl: com.google.inject.internal.InternalFactory getInternalFactory(com.google.inject.Key,com.google.inject.internal.Errors,com.google.inject.internal.InjectorImpl$JitLimitation)>
<roboguice.fragment.RoboDialogFragment: void onCreate(android.os.Bundle)>
<com.github.mobile.ui.issue.IssuesViewActivity: void startActivity(android.content.Intent)>
<com.google.inject.spi.Elements: java.util.List getElements(com.google.inject.Stage,java.lang.Iterable)>
<com.github.mobile.accounts.TwoFactorAuthActivity: void handleLogin()>
<com.google.inject.spi.Elements$RecordingBinder: void <init>(com.google.inject.spi.Elements$RecordingBinder,com.google.inject.internal.PrivateElementsImpl)>
<java.util.AbstractCollection: boolean removeAll(java.util.Collection)>
<com.github.mobile.ui.issue.EditIssueActivity: void updateLabels()>
<java.util.Timer: void schedule(java.util.TimerTask,long)>
<android.app.Activity: void <clinit>()>
<android.support.v4.app.LoaderManagerImpl: android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>
<android.support.v4.util.ArrayMap: java.util.Set keySet()>
<com.google.inject.internal.Scoping: void <init>(com.google.inject.internal.Scoping$1)>
<com.google.inject.internal.util.$ImmutableSet$ArrayImmutableSet: com.google.inject.internal.util.$UnmodifiableIterator iterator()>
<com.github.mobile.ui.commit.CommitFileViewActivity: void onLoaderReset(android.support.v4.content.Loader)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors scopeAnnotationOnAbstractType(java.lang.Class,java.lang.Class,java.lang.Object)>
<com.github.mobile.ui.issue.AssigneeDialogFragment$1: void <init>(com.github.mobile.ui.issue.AssigneeDialogFragment,android.app.AlertDialog)>
<android.graphics.Rect: void <clinit>()>
<com.github.mobile.ui.PagerActivity: void onPageSelected(int)>
<com.google.inject.internal.Errors$3: java.lang.String toString(java.lang.reflect.Member)>
<com.github.mobile.ui.commit.CreateCommentActivity: void <init>()>
<com.github.mobile.util.SourceEditor: com.github.mobile.util.SourceEditor setSource(java.lang.String,java.lang.String,boolean)>
<java.util.HashSet: boolean isEmpty()>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void finishRetain()>
<com.github.mobile.ui.commit.CommitPagerAdapter: void <init>(com.actionbarsherlock.app.SherlockFragmentActivity,org.eclipse.egit.github.core.Repository,java.lang.CharSequence[])>
<android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.github.mobile.ui.gist.GistsActivity: void randomGist()>
<android.support.v4.app.BackStackRecord$2: void <init>(android.support.v4.app.BackStackRecord,android.view.View,java.lang.Object,java.util.ArrayList,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment,android.support.v4.app.Fragment)>
<com.google.inject.internal.InjectorImpl: com.google.inject.internal.BindingImpl createProvidedByBinding(com.google.inject.Key,com.google.inject.internal.Scoping,com.google.inject.ProvidedBy,com.google.inject.internal.Errors)>
<com.google.inject.internal.util.$SourceProvider: java.lang.StackTraceElement get()>
<android.support.v4.util.ContainerHelpers: int idealIntArraySize(int)>
<com.google.inject.internal.InjectorShell$Builder: com.google.inject.Stage getStage()>
<com.google.inject.internal.ConstructorInjectorStore$1: java.lang.Object create(java.lang.Object,com.google.inject.internal.Errors)>
<com.github.mobile.ui.commit.CommitViewActivity: android.content.Intent createIntent(org.eclipse.egit.github.core.Repository,java.lang.String)>
<com.github.mobile.ui.LightAlertDialog: void <init>(android.content.Context,int)>
<com.google.inject.internal.InheritingState: com.google.inject.internal.State parent()>
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.inject.spi.ProviderLookup: void <init>(java.lang.Object,com.google.inject.Key)>
<com.google.inject.internal.util.$MapMaker: long access$300(com.google.inject.internal.util.$MapMaker)>
<com.github.mobile.accounts.TwoFactorAuthActivity: void access$200(com.github.mobile.accounts.TwoFactorAuthActivity)>
<android.support.v4.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)>
<com.google.inject.internal.util.$StackTraceElements: java.lang.Object forMember(java.lang.reflect.Member)>
<com.google.inject.Key$AnnotationTypeStrategy: boolean hasAttributes()>
<com.google.inject.internal.InheritingState: void putBinding(com.google.inject.Key,com.google.inject.internal.BindingImpl)>
<com.github.mobile.accounts.AuthenticatedUserLoader: void <init>(android.content.Context)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors addMessage(java.lang.String,java.lang.Object[])>
<java.io.PrintWriter: void println(java.lang.String)>
<android.support.v4.app.FragmentManagerImpl: void dispatchCreate()>
<com.github.mobile.accounts.AccountAuthenticator: void <init>(android.content.Context)>
<com.google.inject.spi.Dependency: com.google.inject.spi.Dependency get(com.google.inject.Key)>
<java.util.HashSet: boolean contains(java.lang.Object)>
<com.github.mobile.ui.issue.IssueDashboardPagerAdapter: int getCount()>
<com.github.mobile.ui.gist.GistsPagerAdapter: void <init>(com.actionbarsherlock.app.SherlockFragmentActivity,java.lang.String[])>
<com.github.mobile.ui.issue.IssuesViewActivity: void <init>()>
<com.github.mobile.ui.repo.RepositoryViewActivity: void checkStarredRepositoryStatus()>
<com.github.mobile.ui.issue.EditIssueActivity$5: void <init>(com.github.mobile.ui.issue.EditIssueActivity,com.github.mobile.ui.DialogFragmentActivity,org.eclipse.egit.github.core.IRepositoryIdProvider,org.eclipse.egit.github.core.Issue)>
<com.google.inject.internal.InjectorImpl$BindingsMultimap: void <init>()>
<com.google.inject.Key: int computeHashCode()>
<android.support.v4.util.SimpleArrayMap: void allocArrays(int)>
<com.google.inject.internal.Errors$Converter: boolean appliesTo(java.lang.Object)>
<com.github.mobile.ui.user.HomePagerAdapter: int getCount()>
<android.support.v4.app.Fragment: void performDestroyView()>
<com.google.inject.spi.InjectionPoint$InjectableMembers: void remove(com.google.inject.spi.InjectionPoint$InjectableMember)>
<com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet: void <init>(java.lang.Object,int)>
<com.google.inject.internal.util.$Stopwatch: void resetAndLog(java.lang.String)>
<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>
<android.os.Looper: android.os.Looper getMainLooper()>
<android.support.v4.util.ArrayMap$1: void colRemoveAt(int)>
<java.lang.String: boolean equals(java.lang.Object)>
<android.support.v4.app.FragmentActivity: void onAttachFragment(android.support.v4.app.Fragment)>
<com.google.inject.internal.util.$MapMaker$LinkedStrongEntry: void <init>(com.google.inject.internal.util.$CustomConcurrentHashMap$Internals,java.lang.Object,int,com.google.inject.internal.util.$MapMaker$ReferenceEntry)>
<com.google.inject.TypeLiteral: int hashCode()>
<android.support.v4.util.SparseArrayCompat: void gc()>
<android.transition.Transition$EpicenterCallback: void <init>()>
<android.support.v4.app.FragmentActivity: void supportFinishAfterTransition()>
<com.google.inject.Key$AnnotationTypeStrategy: int hashCode()>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockAccountAuthenticatorActivity: void onCreate(android.os.Bundle)>
<com.google.inject.Key: com.google.inject.Key$AnnotationStrategy strategyFor(java.lang.annotation.Annotation)>
<java.lang.annotation.RetentionPolicy: void <clinit>()>
<android.support.v4.app.BackStackRecord$3: void <init>(android.support.v4.app.BackStackRecord,android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object)>
<android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)>
<com.google.inject.internal.PrivateElementsImpl: java.util.List getElementsMutable()>
<com.github.mobile.ui.gist.CreateGistActivity: void updateCreateMenu(java.lang.CharSequence)>
<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>
<com.github.mobile.ui.ref.BranchFileViewActivity: void shareFile()>
<android.support.v4.util.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)>
<com.google.inject.internal.InjectorImpl: com.google.inject.Key getProvidedKey(com.google.inject.Key,com.google.inject.internal.Errors)>
<android.app.Service: void onStart(android.content.Intent,int)>
<com.google.inject.spi.InjectionPoint$Position: void <clinit>()>
<com.google.inject.internal.util.$Iterators$6: boolean hasNext()>
<java.lang.Enum: int ordinal()>
<com.google.inject.internal.InjectorShell$InjectorFactory: void <init>(com.google.inject.Injector,com.google.inject.internal.InjectorShell$1)>
<android.support.v4.app.FragmentManagerImpl: void <init>()>
<com.google.inject.spi.Elements$RecordingBinder: java.util.List access$100(com.google.inject.spi.Elements$RecordingBinder)>
<com.github.mobile.ui.commit.CommitCompareViewActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors converterReturnedNull(java.lang.String,java.lang.Object,com.google.inject.TypeLiteral,com.google.inject.spi.TypeConverterBinding)>
<com.google.inject.internal.util.$ImmutableList$EmptyImmutableList: void <init>()>
<com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>
<com.github.mobile.ui.issue.LabelDrawableSpan: void setText(android.widget.TextView,java.util.Collection)>
<java.util.TimerTask: void <init>()>
<java.util.Collections: void <clinit>()>
<android.support.v4.app.DialogFragment: void onDestroyView()>
<roboguice.RoboGuice: com.google.inject.Injector setBaseApplicationInjector(android.app.Application,com.google.inject.Stage)>
<android.content.SearchRecentSuggestionsProvider: void <init>()>
<java.util.Collections: java.util.List unmodifiableList(java.util.List)>
<com.github.mobile.ui.TextWatcherAdapter: void <init>()>
<com.google.inject.internal.InjectorImpl: boolean isMembersInjector(com.google.inject.Key)>
<roboguice.inject.ViewListener$ViewMembersInjector: void injectViews(java.lang.Object)>
<com.github.mobile.ui.user.HomeActivity: com.github.mobile.ui.user.HomePagerAdapter createAdapter()>
<com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList()>
<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>
<android.support.v4.app.Fragment: void onHiddenChanged(boolean)>
<com.google.inject.internal.MoreTypes: void <clinit>()>
<com.google.inject.internal.AbstractBindingBuilder: com.google.inject.internal.BindingImpl getBinding()>
<com.github.mobile.ui.comment.CreateCommentActivity: com.github.mobile.ui.comment.CommentPreviewPagerAdapter createAdapter()>
<com.google.inject.internal.InjectorImpl: com.google.inject.internal.BindingImpl convertConstantStringBinding(com.google.inject.Key,com.google.inject.internal.Errors)>
<com.github.mobile.ui.gist.CreateGistActivity: void createGist()>
<com.google.inject.internal.InjectorShell$RootModule: void <init>(com.google.inject.Stage,com.google.inject.internal.InjectorShell$1)>
<java.util.WeakHashMap: void <init>()>
<com.google.inject.internal.InjectorShell$Builder: java.util.List build(com.google.inject.internal.Initializer,com.google.inject.internal.ProcessedBindingData,com.google.inject.internal.util.$Stopwatch,com.google.inject.internal.Errors)>
<com.github.mobile.ui.commit.CommitFileViewActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.google.inject.internal.util.$Iterables$3: java.util.Iterator iterator()>
<com.google.inject.internal.Errors$3: java.lang.String toString(java.lang.Object)>
<com.google.inject.internal.Annotations: java.lang.Class findScopeAnnotation(com.google.inject.internal.Errors,java.lang.Class)>
<com.github.mobile.ui.LightAlertDialog: android.app.AlertDialog create(android.content.Context)>
<com.github.mobile.ui.issue.EditIssueActivity: org.eclipse.egit.github.core.Issue access$400(com.github.mobile.ui.issue.EditIssueActivity)>
<com.google.inject.internal.InternalInjectorCreator$ToolStageInjector: void <init>(com.google.inject.Injector)>
<com.github.mobile.ui.user.UriLauncherActivity$1: void <init>(com.github.mobile.ui.user.UriLauncherActivity)>
<com.google.inject.util.Providers: com.google.inject.Provider of(java.lang.Object)>
<com.google.inject.internal.TypeConverterBindingProcessor$4: void <init>(com.google.inject.internal.TypeConverterBindingProcessor)>
<com.google.inject.internal.InjectorImpl: com.google.inject.internal.BindingImpl createJustInTimeBinding(com.google.inject.Key,com.google.inject.internal.Errors,boolean,com.google.inject.internal.InjectorImpl$JitLimitation)>
<com.github.mobile.util.SourceEditor: com.github.mobile.util.SourceEditor setSource(java.lang.String,org.eclipse.egit.github.core.Blob)>
<android.support.v4.app.FragmentManagerImpl: void reportBackStackChanged()>
<java.util.concurrent.atomic.AtomicReferenceArray: int length()>
<android.transition.Transition: android.transition.Transition excludeTarget(android.view.View,boolean)>
<com.google.inject.internal.util.$Iterators: com.google.inject.internal.util.$UnmodifiableIterator singletonIterator(java.lang.Object)>
<com.google.inject.internal.util.$ImmutableMap$EmptyImmutableMap: void <init>(com.google.inject.internal.util.$ImmutableMap$1)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors cannotInjectRawMembersInjector()>
<com.github.mobile.ui.user.UserViewActivity: java.lang.String getIcon(int)>
<android.content.Intent: android.content.Intent addFlags(int)>
<android.util.SparseArray: void clear()>
<com.github.mobile.ui.user.UserViewActivity: int getContentView()>
<com.google.inject.internal.util.$FinalizableReferenceQueue: void cleanUp()>
<com.google.inject.internal.AbstractBindingBuilder: void <init>(com.google.inject.Binder,java.util.List,java.lang.Object,com.google.inject.Key)>
<com.github.mobile.ui.LightAlertDialog: void <init>(android.content.Context)>
<com.google.inject.spi.Dependency: int hashCode()>
<com.github.mobile.ui.gist.EditCommentActivity: android.support.v4.view.PagerAdapter createAdapter()>
<com.github.mobile.ui.issue.LabelsDialogFragment$LabelListAdapter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.app.AlertDialog: void <init>(android.content.Context)>
<android.support.v4.app.Fragment: void <init>()>
<android.support.v4.app.LoaderManager: void <init>()>
<com.github.mobile.ui.gist.GistsActivity: void <init>()>
<java.lang.Enum: boolean equals(java.lang.Object)>
<com.github.mobile.ui.TabPagerActivity: com.github.mobile.ui.FragmentProvider getProvider()>
<java.lang.AssertionError: void <init>(java.lang.Object)>
<com.google.inject.Scopes$1: com.google.inject.Provider scope(com.google.inject.Key,com.google.inject.Provider)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void onSaveInstanceState(android.os.Bundle)>
<android.support.v4.util.ContainerHelpers: int binarySearch(int[],int,int)>
<android.support.v4.util.MapCollections$KeySet: void <init>(android.support.v4.util.MapCollections)>
<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: boolean isEmpty()>
<com.google.inject.internal.util.$ImmutableSet$EmptyImmutableSet: void <init>()>
<com.google.inject.spi.InjectionPoint: java.util.List getDependencies()>
<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Segment: void setTable(java.util.concurrent.atomic.AtomicReferenceArray)>
<com.google.inject.internal.util.$ImmutableList: void <clinit>()>
<roboguice.util.SafeAsyncTask: java.util.concurrent.FutureTask future()>
<com.github.mobile.ui.TabPagerActivity: java.lang.String getIcon(int)>
<com.github.mobile.ui.repo.RepositoryViewActivity: void onDialogResult(int,int,android.os.Bundle)>
<org.eclipse.egit.github.core.util.EncodingUtils: byte[] fromBase64(java.lang.String)>
<com.google.inject.internal.EncounterImpl: void invalidate()>
<roboguice.inject.ContextScope: java.util.Stack getContextStack()>
<android.support.v4.app.FragmentTransitionCompat21$1: void <init>(android.graphics.Rect)>
<android.accounts.AbstractAccountAuthenticator: android.os.IBinder getIBinder()>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.Provider getProvider(com.google.inject.Key)>
<android.app.Dialog: void setOwnerActivity(android.app.Activity)>
<com.google.inject.Key: boolean hasAttributes()>
<com.github.mobile.ui.issue.AssigneeDialog: void <init>(com.github.mobile.ui.DialogFragmentActivity,int,org.eclipse.egit.github.core.IRepositoryIdProvider,org.eclipse.egit.github.core.service.CollaboratorService)>
<android.support.v4.util.MapCollections$ArrayIterator: void <init>(android.support.v4.util.MapCollections,int)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.support.v4.app.Fragment: boolean isHidden()>
<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors errorNotifyingTypeListener(com.google.inject.spi.TypeListenerBinding,com.google.inject.TypeLiteral,java.lang.Throwable)>
<android.content.Intent: void <clinit>()>
<com.google.inject.name.NamedImpl: void <init>(java.lang.String)>
<com.google.inject.Key$AnnotationTypeStrategy: java.lang.annotation.Annotation getAnnotation()>
<com.github.mobile.ui.gist.GistsViewActivity: com.github.mobile.ui.FragmentProvider getProvider()>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors errorInUserCode(java.lang.Throwable,java.lang.String,java.lang.Object[])>
<com.github.mobile.ui.issue.EditIssuesFilterActivity$3: void <init>(com.github.mobile.ui.issue.EditIssuesFilterActivity,org.eclipse.egit.github.core.Repository)>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<roboguice.activity.event.OnConfigurationChangedEvent: void <init>(android.content.res.Configuration,android.content.res.Configuration)>
<com.google.inject.internal.InheritingState: com.google.inject.spi.TypeConverterBinding getConverter(java.lang.String,com.google.inject.TypeLiteral,com.google.inject.internal.Errors,java.lang.Object)>
<com.github.mobile.ui.issue.EditIssuesFilterActivity$4: void <init>(com.github.mobile.ui.issue.EditIssuesFilterActivity)>
<com.github.mobile.accounts.TwoFactorAuthActivity: void onResume()>
<org.eclipse.egit.github.core.Issue: org.eclipse.egit.github.core.Issue setNumber(int)>
<com.github.mobile.ui.user.HomeActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<android.graphics.Rect: void <init>()>
<com.github.mobile.ui.DialogFragmentActivity: int getIntExtra(java.lang.String)>
<com.github.mobile.ui.issue.EditIssuesFilterActivity$5: void <init>(com.github.mobile.ui.issue.EditIssuesFilterActivity)>
<com.google.inject.internal.Scoping$1: void <init>()>
<com.google.inject.internal.util.$MapMaker$QueueHolder: void <clinit>()>
<android.support.v4.util.MapCollections: void <init>()>
<android.app.ProgressDialog: void setIndeterminate(boolean)>
<com.github.mobile.ui.repo.RepositoryViewActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.github.mobile.ui.ProgressDialogTask: void showIndeterminate(int)>
<com.github.mobile.ui.issue.EditIssuesFilterActivity$2: void onClick(android.view.View)>
<com.google.inject.internal.Scoping: com.google.inject.internal.InternalFactory scope(com.google.inject.Key,com.google.inject.internal.InjectorImpl,com.google.inject.internal.InternalFactory,java.lang.Object,com.google.inject.internal.Scoping)>
<java.lang.ThreadLocal: void <init>()>
<com.github.mobile.ui.user.UserViewActivity: void checkFollowingUserStatus()>
<android.support.v4.util.SparseArrayCompat: void clear()>
<android.support.v4.app.Fragment: void initState()>
<roboguice.inject.ViewListener: void <clinit>()>
<com.google.inject.internal.MembersInjectorImpl: com.google.inject.internal.util.$ImmutableSet getInjectionPoints()>
<com.google.inject.internal.Scoping$6: com.google.inject.Scope getScopeInstance()>
<java.lang.RuntimeException: void <init>()>
<com.google.inject.internal.util.$Iterators$7: boolean hasNext()>
<com.google.inject.internal.util.$ImmutableSet$Builder: com.google.inject.internal.util.$ImmutableSet$Builder add(java.lang.Object)>
<com.google.inject.internal.util.$CustomConcurrentHashMap$ComputingImpl: java.lang.Object get(java.lang.Object)>
<com.github.mobile.ui.DialogFragmentActivity: java.lang.String[] getStringArrayExtra(java.lang.String)>
<java.lang.Object: void wait()>
<android.support.v4.app.FragmentTransitionCompat21: java.lang.Object mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,boolean)>
<com.github.mobile.core.user.UserUriMatcher: org.eclipse.egit.github.core.User getUser(android.net.Uri)>
<com.github.mobile.ui.user.HomeActivity: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.github.mobile.core.commit.CommitUtils: boolean isValidCommit(java.lang.String)>
<com.github.mobile.ui.commit.CommitFileViewActivity: void onCreate(android.os.Bundle)>
<com.google.inject.internal.util.$Iterables$2: java.util.Iterator iterator()>
<android.app.Activity: void runOnUiThread(java.lang.Runnable)>
<com.github.mobile.ui.DialogFragmentHelper: void onClick(android.content.DialogInterface,int)>
<com.github.mobile.ui.issue.LabelDrawableSpan$1: void <init>()>
<com.google.inject.internal.util.$MapMaker$StrategyImpl: void setInternals(com.google.inject.internal.util.$CustomConcurrentHashMap$Internals)>
<com.google.inject.internal.MoreTypes$GenericArrayTypeImpl: boolean equals(java.lang.Object)>
<com.github.mobile.ui.user.HomeActivity: void onCreate(android.os.Bundle)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors addMessage(com.google.inject.spi.Message)>
<com.github.mobile.ui.issue.IssuesViewActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.github.mobile.accounts.LoginActivity$5: void <init>(com.github.mobile.accounts.LoginActivity)>
<com.google.inject.spi.InjectionPoint: void <clinit>()>
<android.provider.SearchRecentSuggestions: void <init>(android.content.Context,java.lang.String,int)>
<com.google.inject.internal.util.$MapMaker$Strength$3: com.google.inject.internal.util.$MapMaker$ReferenceEntry newEntry(com.google.inject.internal.util.$CustomConcurrentHashMap$Internals,java.lang.Object,int,com.google.inject.internal.util.$MapMaker$ReferenceEntry)>
<com.google.inject.internal.util.$ImmutableMap$Builder: com.google.inject.internal.util.$ImmutableMap build()>
<com.google.inject.util.Modules: void <clinit>()>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors tooManyConstructors(java.lang.Class)>
<org.eclipse.egit.github.core.Repository: org.eclipse.egit.github.core.Repository setName(java.lang.String)>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<org.eclipse.egit.github.core.Repository: org.eclipse.egit.github.core.Repository setOwner(org.eclipse.egit.github.core.User)>
<android.support.v4.content.ModernAsyncTask$InternalHandler: void <init>(android.support.v4.content.ModernAsyncTask$1)>
<com.github.mobile.util.TypefaceUtils: android.graphics.Typeface getTypeface(android.content.Context,java.lang.String)>
<com.github.mobile.util.SourceEditor: com.github.mobile.util.SourceEditor setWrap(boolean)>
<android.app.AlertDialog: void setInverseBackgroundForced(boolean)>
<com.github.mobile.ui.comment.CreateCommentActivity: java.lang.String getIcon(int)>
<com.github.mobile.accounts.AccountUtils: android.accounts.Account[] getPasswordAccessibleAccounts(android.accounts.AccountManager,android.accounts.Account[])>
<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>
<android.support.v4.app.FragmentActivity: void invalidateSupportFragment(java.lang.String)>
<com.github.mobile.core.gist.GistUriMatcher: org.eclipse.egit.github.core.Gist getGist(android.net.Uri)>
<java.util.ArrayList: java.lang.Object get(int)>
<com.google.inject.internal.InjectorImpl$BindingsMultimap: void <init>(com.google.inject.internal.InjectorImpl$1)>
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<com.google.inject.internal.Errors: java.lang.Throwable getOnlyCause(java.util.Collection)>
<com.github.mobile.ui.user.HomePagerAdapter: void <init>(com.actionbarsherlock.app.SherlockFragmentActivity,boolean)>
<android.support.v4.app.Fragment$1: void <init>(android.support.v4.app.Fragment)>
<android.app.Dialog: android.view.Window getWindow()>
<com.google.inject.TypeLiteral: java.lang.Class getRawType()>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
<com.github.mobile.ui.search.SearchActivity: void search(java.lang.String)>
<java.lang.Integer: java.lang.String toHexString(int)>
<com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet: java.util.Iterator iterator()>
<com.github.mobile.ui.SingleChoiceDialogFragment: void show(com.github.mobile.ui.DialogFragmentActivity,int,java.lang.String,java.lang.String,java.util.ArrayList,int,com.github.mobile.ui.DialogFragmentHelper)>
<com.github.mobile.ui.issue.EditIssuesFilterActivity: com.github.mobile.ui.issue.AssigneeDialog access$000(com.github.mobile.ui.issue.EditIssuesFilterActivity)>
<com.github.mobile.accounts.AccountUtils: boolean isUser(android.content.Context,org.eclipse.egit.github.core.User)>
<com.google.inject.name.NamedImpl: boolean equals(java.lang.Object)>
<com.google.inject.spi.Message: java.util.List getSources()>
<com.google.inject.internal.util.$MapMaker: java.util.concurrent.ConcurrentMap makeComputingMap(com.google.inject.internal.util.$Function)>
<com.google.inject.internal.BindingBuilder: void <init>(com.google.inject.Binder,java.util.List,java.lang.Object,com.google.inject.Key)>
<org.eclipse.egit.github.core.Issue: int getNumber()>
<com.google.inject.internal.ConstructorBindingImpl: void <init>(com.google.inject.internal.InjectorImpl,com.google.inject.Key,java.lang.Object,com.google.inject.internal.InternalFactory,com.google.inject.internal.Scoping,com.google.inject.internal.ConstructorBindingImpl$Factory,com.google.inject.spi.InjectionPoint)>
<com.google.inject.internal.Annotations$AnnotationChecker: boolean hasAnnotations(java.lang.Class)>
<java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<com.google.inject.internal.InheritingState: boolean isBlacklisted(com.google.inject.Key)>
<com.github.mobile.ui.ref.BranchFileViewActivity: void loadMarkdown()>
<com.github.mobile.ui.gist.GistQueriesPagerAdapter: java.lang.CharSequence getPageTitle(int)>
<com.github.mobile.ui.user.HomeActivity$1$1: void <init>(com.github.mobile.ui.user.HomeActivity$1,java.util.List)>
<java.lang.Void: void <clinit>()>
<android.app.Activity: void onPostCreate(android.os.Bundle)>
<com.google.inject.internal.Errors: void <clinit>()>
<com.google.inject.internal.MoreTypes: java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)>
<com.google.inject.internal.ProviderToInternalFactoryAdapter: void <init>(com.google.inject.internal.InjectorImpl,com.google.inject.internal.InternalFactory)>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.github.mobile.ui.issue.MilestoneDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.google.inject.internal.util.$Preconditions: void checkArgument(boolean)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>
<android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)>
<com.github.mobile.ui.gist.GistsViewActivity: void onCreate(android.os.Bundle)>
<android.view.ViewGroup$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<com.github.mobile.ui.search.SearchPagerAdapter: java.lang.CharSequence getPageTitle(int)>
<android.support.v4.app.Fragment: boolean isInBackStack()>
<com.github.mobile.ui.issue.IssuesViewActivity: void onCreate(android.os.Bundle)>
<com.google.inject.internal.InjectorOptionsProcessor: com.google.inject.internal.InjectorImpl$InjectorOptions getOptions(com.google.inject.Stage,com.google.inject.internal.InjectorImpl$InjectorOptions)>
<com.google.inject.internal.ConstructorBindingImpl$Factory: com.google.inject.internal.ConstructorInjector access$002(com.google.inject.internal.ConstructorBindingImpl$Factory,com.google.inject.internal.ConstructorInjector)>
<com.google.inject.internal.util.$Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>
<com.google.inject.internal.util.$MapMaker$StrongValueReference: java.lang.Object get()>
<android.support.v4.app.FragmentManagerImpl: void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment)>
<com.google.inject.internal.util.$MapMaker$StrategyImpl: void <init>(com.google.inject.internal.util.$MapMaker,com.google.inject.internal.util.$Function)>
<com.github.mobile.ui.DialogFragmentActivity: java.lang.CharSequence[] getCharSequenceArrayExtra(java.lang.String)>
<roboguice.RoboGuice: void <clinit>()>
<com.google.inject.internal.Errors$2: java.lang.String toString(java.lang.Class)>
<android.support.v4.app.BackStackRecord: void run()>
<android.support.v4.app.DialogFragment: void onStop()>
<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>
<com.github.mobile.ui.issue.LabelsDialog: void load(java.util.Collection)>
<com.google.inject.internal.util.$MapMaker$LinkedWeakEntry: void <init>(com.google.inject.internal.util.$CustomConcurrentHashMap$Internals,java.lang.Object,int,com.google.inject.internal.util.$MapMaker$ReferenceEntry)>
<com.github.mobile.accounts.LoginActivity: roboguice.util.RoboAsyncTask access$300(com.github.mobile.accounts.LoginActivity)>
<com.google.inject.internal.Errors: java.lang.Object convert(java.lang.Object)>
<android.content.ContentValues: void <clinit>()>
<android.support.v4.app.BackStackRecord: java.lang.Object getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean)>
<com.github.mobile.ui.commit.CommitFileViewActivity: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.google.inject.internal.InjectorImpl$ConvertedConstantBindingImpl: void <init>(com.google.inject.internal.InjectorImpl,com.google.inject.Key,java.lang.Object,com.google.inject.Binding,com.google.inject.spi.TypeConverterBinding)>
<com.github.mobile.ui.repo.RepositoryViewActivity$5: void <init>(com.github.mobile.ui.repo.RepositoryViewActivity,android.content.Context,org.eclipse.egit.github.core.IRepositoryIdProvider)>
<android.os.Bundle: void putAll(android.os.Bundle)>
<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>
<com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList copyOfInternal(java.util.Collection)>
<com.google.inject.internal.TypeConverterBindingProcessor: void <init>(com.google.inject.internal.Errors)>
<com.github.mobile.ui.repo.RepositoryViewActivity: java.lang.String getIcon(int)>
<android.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup,android.transition.Transition)>
<android.support.v4.app.Fragment: void onDestroyView()>
<java.lang.Object: java.lang.Object clone()>
<android.support.v4.util.MapCollections$KeySet: java.util.Iterator iterator()>
<com.github.mobile.ui.issue.EditIssuesFilterActivity: void onCreate(android.os.Bundle)>
<com.google.inject.internal.util.$MapMaker: void <init>()>
<android.view.View: android.view.ViewParent getParent()>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment findFragmentByTag(java.lang.String)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>
<android.support.v4.app.FragmentManagerImpl: void noteStateNotSaved()>
<java.util.Formatter: java.lang.Appendable out()>
<java.util.LinkedHashMap: void <init>()>
<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.PrivateBinder newPrivateBinder()>
<com.github.kevinsawicki.wishlist.ViewUpdater: void <init>()>
<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors withSource(java.lang.Object)>
<com.github.mobile.ui.comment.CommentPreviewPagerAdapter: void setCommentText(java.lang.String)>
<com.google.inject.internal.ConstructorInjectorStore: boolean remove(com.google.inject.spi.InjectionPoint)>
<com.github.mobile.ui.repo.RepositoryViewActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.google.inject.ConfigurationException: java.lang.Object getPartialValue()>
<android.support.v4.content.AsyncTaskLoader: void executePendingTask()>
<android.app.Service: void onCreate()>
<com.google.inject.Key$AnnotationTypeStrategy: boolean equals(java.lang.Object)>
<com.google.inject.internal.util.$ImmutableList$EmptyImmutableList: void <clinit>()>
<com.github.mobile.ui.user.UserViewActivity: com.github.mobile.ui.user.UserPagerAdapter createAdapter()>
<android.app.Activity: void onDestroy()>
<com.google.inject.spi.Elements: void <clinit>()>
<com.actionbarsherlock.app.SherlockFragmentActivity: android.view.View findViewById(int)>
<com.github.mobile.accounts.LoginActivity: void onActivityResult(int,int,android.content.Intent)>
<java.lang.reflect.Modifier: boolean isFinal(int)>
<com.google.inject.internal.Annotations: java.lang.Class findScopeAnnotation(com.google.inject.internal.Errors,java.lang.annotation.Annotation[])>
<com.github.mobile.ui.user.HomeActivity: java.lang.String getIcon(int)>
<com.github.mobile.Intents$Builder: com.github.mobile.Intents$Builder add(java.lang.String,int[])>
<com.github.mobile.ui.FragmentPagerAdapter: void <init>(com.actionbarsherlock.app.SherlockFragmentActivity)>
<java.util.Locale: void <clinit>()>
<java.util.Collections: java.util.List emptyList()>
<java.util.Formatter: java.lang.String toString()>
<android.os.Handler: boolean post(java.lang.Runnable)>
<android.support.v4.app.BackStackRecord: void setLastIn(android.util.SparseArray,android.support.v4.app.Fragment)>
<com.google.inject.internal.InjectionRequestProcessor: void <init>(com.google.inject.internal.Errors,com.google.inject.internal.Initializer)>
<java.lang.String: java.lang.String toString()>
<com.google.inject.internal.InjectorImpl: boolean isProvider(com.google.inject.Key)>
<android.support.v4.app.Fragment: android.os.Bundle getArguments()>
<android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float)>
<com.google.inject.internal.Errors$Converter: java.lang.String convert(java.lang.Object)>
<com.google.inject.internal.TypeListenerBindingProcessor: void <init>(com.google.inject.internal.Errors)>
<android.support.v4.app.FragmentActivity: void onStart()>
<com.github.kevinsawicki.wishlist.SingleTypeAdapter: void <init>(android.view.LayoutInflater,int)>
<roboguice.fragment.RoboDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<android.os.Bundle: void putBoolean(java.lang.String,boolean)>
<com.google.inject.Key$AnnotationTypeStrategy: com.google.inject.Key$AnnotationStrategy withoutAttributes()>
<com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object)>
<com.google.inject.internal.util.$Iterators: com.google.inject.internal.util.$UnmodifiableIterator emptyIterator()>
<com.github.mobile.ui.repo.RepositoryViewActivity: void onCreate(android.os.Bundle)>
<com.google.inject.internal.BindingImpl: com.google.inject.Key getKey()>
<roboguice.RoboGuice: java.lang.Object injectMembers(android.content.Context,java.lang.Object)>
<com.github.mobile.accounts.AccountUtils$AuthenticatorConflictException: void <init>()>
<com.google.inject.internal.ConstructorBindingImpl: com.google.inject.spi.InjectionPoint getInternalConstructor()>
<android.support.v4.app.FragmentActivity: void onStop()>
<com.google.inject.util.Providers$1: void <init>(java.lang.Object)>
<android.support.v4.content.Loader: void reset()>
<com.github.mobile.ui.user.HomePagerAdapter: com.github.mobile.ui.user.HomePagerAdapter clearAdapter(boolean)>
<com.github.mobile.ui.commit.CommitViewActivity: void onCreate(android.os.Bundle)>
<com.github.mobile.ui.commit.CreateCommentActivity: void onCreate(android.os.Bundle)>
<com.google.inject.internal.util.$Preconditions: void checkElementIndex(int,int)>
<com.google.inject.internal.FailableCache$1: void <init>(com.google.inject.internal.FailableCache)>
<com.google.inject.TypeLiteral: java.lang.reflect.Type resolveType(java.lang.reflect.Type)>
<com.google.inject.internal.ProviderMethodsModule: com.google.inject.internal.ProviderMethod createProviderMethod(com.google.inject.Binder,java.lang.reflect.Method)>
<com.google.inject.internal.util.$Iterators$1: java.lang.Object next()>
<java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>
<com.google.inject.internal.util.$ImmutableSet$ArrayImmutableSet: int size()>
<com.google.inject.internal.InjectorOptionsProcessor: void <init>(com.google.inject.internal.Errors)>
<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.binder.LinkedBindingBuilder bind(com.google.inject.Key)>
<android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)>
<com.github.mobile.ui.PagerActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.google.inject.TypeLiteral: java.lang.reflect.Type getType()>
<android.graphics.Paint: void setTextSize(float)>
<com.github.mobile.ui.issue.EditCommentActivity: void onCreate(android.os.Bundle)>
<com.github.mobile.core.commit.CommitMatch: void <init>(org.eclipse.egit.github.core.Repository,java.lang.String)>
<android.support.v4.content.ModernAsyncTask$InternalHandler: void <init>()>
<java.util.HashSet: boolean add(java.lang.Object)>
<com.github.mobile.ui.issue.IssuesViewActivity: com.github.mobile.ui.FragmentProvider getProvider()>
<com.github.mobile.sync.SyncAdapterService: android.os.IBinder onBind(android.content.Intent)>
<com.google.inject.internal.InternalInjectorCreator: void loadEagerSingletons(com.google.inject.internal.InjectorImpl,com.google.inject.Stage,com.google.inject.internal.Errors)>
<com.google.inject.internal.InjectorImpl$ProviderBindingImpl: void <init>(com.google.inject.internal.InjectorImpl,com.google.inject.Key,com.google.inject.Binding)>
<com.github.mobile.ui.commit.CommitCompareViewActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.github.mobile.ui.user.HomeDropdownListAdapter: void <init>(android.content.Context,java.util.List,com.github.mobile.util.AvatarLoader)>
<com.google.inject.internal.util.$MapMaker: com.google.inject.internal.util.$MapMaker$Strength access$100(com.google.inject.internal.util.$MapMaker)>
<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>
<android.support.v4.content.AsyncTaskLoader: void <init>(android.content.Context)>
<com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList(java.util.Iterator)>
<android.support.v4.content.Loader: void onReset()>
<com.google.inject.internal.InjectorShell: void bindLogger(com.google.inject.internal.InjectorImpl)>
<android.support.v4.content.Loader: java.lang.String dataToString(java.lang.Object)>
<android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>
<com.github.mobile.util.ToastUtils: void show(android.app.Activity,int)>
<com.github.mobile.ui.search.SearchActivity: void findFragments()>
<com.github.rtyley.android.sherlock.android.accounts.SherlockAccountAuthenticatorActivity: void setAccountAuthenticatorResult(android.os.Bundle)>
<android.app.Activity: void onCreate(android.os.Bundle)>
<com.google.inject.internal.UniqueAnnotations$1: int hashCode()>
<com.github.mobile.ui.issue.FiltersViewActivity: android.content.Intent createIntent()>
<com.github.mobile.util.PreferenceUtils: boolean isEditorApplyAvailable()>
<com.google.inject.spi.Dependency: com.google.inject.Key getKey()>
<com.google.inject.internal.util.$ImmutableMap$RegularImmutableMap: void <init>(java.util.Map$Entry[],com.google.inject.internal.util.$ImmutableMap$1)>
<com.google.inject.internal.util.$MapMaker$1: void <init>()>
<android.support.v4.app.LoaderManagerImpl: void updateActivity(android.support.v4.app.FragmentActivity)>
<com.github.mobile.ui.gist.CreateGistActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.google.inject.internal.util.$MapMaker$Strength: void <init>(java.lang.String,int)>
<android.text.TextUtils: boolean isDigitsOnly(java.lang.CharSequence)>
<com.google.inject.internal.util.$Iterators: com.google.inject.internal.util.$UnmodifiableIterator forArray(java.lang.Object[])>
<android.support.v4.content.Loader: void <init>(android.content.Context)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence[])>
<com.github.mobile.ui.DialogFragmentActivity: int[] getIntArrayExtra(java.lang.String)>
<com.github.mobile.ui.comment.CommentPreviewPagerAdapter: com.github.mobile.ui.comment.CommentPreviewPagerAdapter setCurrentItem(int)>
<android.view.animation.Animation: void setDuration(long)>
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
<com.google.inject.internal.util.$CustomConcurrentHashMap$Builder: java.util.concurrent.ConcurrentMap buildComputingMap(com.google.inject.internal.util.$CustomConcurrentHashMap$ComputingStrategy,com.google.inject.internal.util.$Function)>
<com.github.mobile.ui.ref.BranchFileViewActivity: void loadContent()>
<com.google.inject.internal.InjectorShell$Builder: void addModules(java.lang.Iterable)>
<com.google.inject.internal.util.$FinalizableReferenceQueue: java.util.logging.Logger access$000()>
<java.io.PrintWriter: void println(boolean)>
<com.google.inject.internal.SingleMethodInjector$1: void <init>(com.google.inject.internal.SingleMethodInjector,java.lang.reflect.Method)>
<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>
<com.google.inject.internal.util.$Iterators$4: java.lang.Object next()>
<java.lang.String: char charAt(int)>
<roboguice.RoboGuice: com.google.inject.Injector getBaseApplicationInjector(android.app.Application)>
<com.actionbarsherlock.app.SherlockFragmentActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<android.text.style.ReplacementSpan: void <init>()>
<com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Stage,java.lang.Iterable)>
<com.github.mobile.util.SourceEditor: com.github.mobile.util.SourceEditor toggleWrap()>
<android.app.Activity: android.view.Window getWindow()>
<com.github.mobile.ui.issue.EditCommentActivity: com.github.mobile.ui.comment.CommentPreviewPagerAdapter createAdapter()>
<java.lang.Byte: void <clinit>()>
<com.github.mobile.ui.user.UriLauncherActivity: void <init>()>
<com.google.inject.internal.ConstructorInjectorStore: com.google.inject.internal.ConstructorInjector createConstructor(com.google.inject.spi.InjectionPoint,com.google.inject.internal.Errors)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors merge(com.google.inject.internal.Errors)>
<org.eclipse.egit.github.core.Issue: org.eclipse.egit.github.core.PullRequest getPullRequest()>
<com.google.inject.internal.util.$Strings: java.lang.String capitalize(java.lang.String)>
<com.google.inject.internal.util.$ImmutableList: java.lang.Object[] copyIntoArray(java.lang.Object[])>
<com.github.mobile.ui.repo.RepositoryContributorsActivity: void onCreate(android.os.Bundle)>
<com.github.mobile.accounts.LoginActivity: java.util.List getEmailAddresses()>
<android.support.v4.app.Fragment: void setIndex(int,android.support.v4.app.Fragment)>
<com.google.inject.internal.ConstructorInjector: com.google.inject.internal.ConstructionProxy getConstructionProxy()>
<com.google.inject.internal.InjectorImpl: com.google.inject.internal.BindingImpl getJustInTimeBinding(com.google.inject.Key,com.google.inject.internal.Errors,com.google.inject.internal.InjectorImpl$JitLimitation)>
<com.google.inject.internal.MembersInjectorStore: void <init>(com.google.inject.internal.InjectorImpl,java.util.List)>
<com.google.inject.matcher.Matchers$IdenticalTo: void <init>(java.lang.Object)>
<com.google.inject.spi.ProviderLookup$1: void <init>(com.google.inject.spi.ProviderLookup)>
<com.github.mobile.ui.user.HomeActivity: void setOrg(org.eclipse.egit.github.core.User)>
<com.google.inject.internal.BindingImpl: com.google.inject.Provider getProvider()>
<com.google.inject.internal.InjectorImpl: com.google.inject.internal.BindingImpl createJustInTimeBindingRecursive(com.google.inject.Key,com.google.inject.internal.Errors,boolean,com.google.inject.internal.InjectorImpl$JitLimitation)>
<android.app.Activity: void setResult(int,android.content.Intent)>
<com.google.inject.internal.State: void <clinit>()>
<android.view.View: void <init>(android.content.Context)>
<com.github.mobile.ui.gist.DeleteGistTask: void <init>(android.app.Activity,java.lang.String)>
<android.content.Intent: void <init>(java.lang.String)>
<android.support.v4.app.Watson: void <init>()>
<com.google.inject.spi.InjectionPoint: void <init>(com.google.inject.TypeLiteral,java.lang.reflect.Field,boolean)>
<com.github.rtyley.android.sherlock.android.accounts.SherlockAccountAuthenticatorActivity: void onCreate(android.os.Bundle)>
<org.eclipse.egit.github.core.Issue: java.util.List getLabels()>
<com.google.inject.Key: java.lang.String toString()>
<com.google.inject.TypeLiteral: java.util.List getParameterTypes(java.lang.reflect.Member)>
<com.github.mobile.ui.issue.EditIssueActivity: org.eclipse.egit.github.core.service.LabelService access$800(com.github.mobile.ui.issue.EditIssueActivity)>
<android.widget.BaseAdapter: void notifyDataSetChanged()>
<com.google.inject.Key: boolean equals(java.lang.Object)>
<com.google.inject.internal.util.$Classes: boolean isInnerClass(java.lang.Class)>
<com.github.kevinsawicki.wishlist.SingleTypeAdapter: void setItems(java.util.Collection)>
<com.github.kevinsawicki.wishlist.AsyncLoader: void onStopLoading()>
<com.google.inject.internal.Nullability: boolean allowsNull(java.lang.annotation.Annotation[])>
<com.google.inject.internal.util.$MapMaker: com.google.inject.internal.util.$MapMaker weakKeys()>
<com.actionbarsherlock.ActionBarSherlock: void <clinit>()>
<com.google.inject.internal.util.$ImmutableSet$RegularImmutableSet: void <init>(java.lang.Object[],int,java.lang.Object[],int)>
<com.github.mobile.ui.issue.MilestoneDialog$1: void <init>(com.github.mobile.ui.issue.MilestoneDialog,android.content.Context,org.eclipse.egit.github.core.Milestone)>
<com.google.inject.internal.util.$MapMaker$StrategyImpl: void setValue(com.google.inject.internal.util.$MapMaker$ReferenceEntry,java.lang.Object)>
<com.google.inject.Key$AnnotationInstanceStrategy: int hashCode()>
<android.support.v4.app.BackStackRecord: void setFirstOut(android.util.SparseArray,android.support.v4.app.Fragment)>
<java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<com.github.mobile.ui.user.HomeActivity$1: void onLoadFinished(android.support.v4.content.Loader,java.util.List)>
<roboguice.inject.ContextScopedRoboInjector: void injectMembers(java.lang.Object)>
<java.io.FileNotFoundException: void <init>(java.lang.String)>
<android.support.v4.app.FragmentManagerImpl: void enqueueAction(java.lang.Runnable,boolean)>
<android.util.Log: int e(java.lang.String,java.lang.String)>
<com.google.inject.spi.InjectionPoint: com.google.inject.TypeLiteral getDeclaringType()>
<com.google.inject.spi.InjectionPoint: com.google.inject.internal.util.$ImmutableList forMember(java.lang.reflect.Member,com.google.inject.TypeLiteral,java.lang.annotation.Annotation[][])>
<com.google.inject.internal.util.$ImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>
<java.lang.String: void <init>(char[],int,int)>
<com.github.mobile.ui.issue.IssueSearchSuggestionsProvider: void save(android.content.Context,java.lang.String)>
<android.app.Service: void <init>()>
<com.google.inject.internal.util.$ImmutableList$EmptyImmutableList: com.google.inject.internal.util.$UnmodifiableIterator iterator()>
<org.eclipse.egit.github.core.User: org.eclipse.egit.github.core.User setLogin(java.lang.String)>
<java.lang.Exception: void <init>()>
<com.github.mobile.ui.issue.EditIssuesFilterActivity$3: void onClick(android.view.View)>
<com.github.mobile.ui.issue.EditIssueActivity: void onCreate(android.os.Bundle)>
<com.google.inject.internal.Annotations: void checkForMisplacedScopeAnnotations(java.lang.Class,java.lang.Object,com.google.inject.internal.Errors)>
<com.google.inject.internal.WeakKeySet: void <init>()>
<com.github.mobile.ui.user.HomeActivity$1: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<roboguice.inject.ResourceListener: void <init>(android.app.Application)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors cannotInjectTypeLiteralOf(java.lang.reflect.Type)>
<com.google.inject.internal.InjectorImpl$JitLimitation: void <clinit>()>
<com.google.inject.internal.Errors: void <init>(com.google.inject.internal.Errors,java.lang.Object)>
<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
<com.google.inject.internal.util.$ImmutableList$RegularImmutableList: java.lang.Object get(int)>
<android.support.v4.app.BackStackRecord: android.support.v4.util.ArrayMap remapSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean)>
<com.google.inject.internal.util.$Iterators$5: void <init>(java.util.Iterator,com.google.inject.internal.util.$Function)>
<com.google.inject.spi.InjectionPoint$InjectableMembers: void <init>()>
<com.github.mobile.ui.issue.EditIssueActivity: com.github.mobile.ui.issue.AssigneeDialog access$502(com.github.mobile.ui.issue.EditIssueActivity,com.github.mobile.ui.issue.AssigneeDialog)>
<android.support.v4.content.ModernAsyncTask$3: void <init>(android.support.v4.content.ModernAsyncTask,java.util.concurrent.Callable)>
<com.github.mobile.ui.gist.GistsViewActivity: void onPageSelected(int)>
<com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList of(java.lang.Object[])>
<java.io.PrintWriter: void println(java.lang.Object)>
<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>
<com.github.mobile.ui.issue.IssueDashboardActivity: com.github.mobile.ui.issue.IssueDashboardPagerAdapter createAdapter()>
<com.github.mobile.ui.issue.LabelsDialog$1: void <init>(com.github.mobile.ui.issue.LabelsDialog,android.content.Context,java.util.Collection)>
<com.github.mobile.ui.issue.CreateCommentActivity: com.github.mobile.ui.comment.CommentPreviewPagerAdapter createAdapter()>
<com.google.inject.internal.util.$MapMaker$StrongEntry: void <init>(com.google.inject.internal.util.$CustomConcurrentHashMap$Internals,java.lang.Object,int)>
<com.google.inject.internal.UniqueAnnotations$1: void <init>(int)>
<android.support.v4.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)>
<com.google.inject.Key: com.google.inject.Key get(com.google.inject.TypeLiteral)>
<com.google.inject.internal.WeakKeySet: java.util.Set getSources(com.google.inject.Key)>
<com.github.mobile.ui.search.SearchActivity: void configurePager()>
<org.eclipse.egit.github.core.Label: void <init>()>
<java.util.HashSet: void <init>()>
<com.google.inject.internal.util.$Iterators$4: boolean hasNext()>
<android.text.style.CharacterStyle: void <init>()>
<com.google.inject.internal.Annotations: com.google.inject.Key getKey(com.google.inject.TypeLiteral,java.lang.reflect.Member,java.lang.annotation.Annotation[],com.google.inject.internal.Errors)>
<android.support.v4.app.FragmentTransitionCompat21: android.graphics.Rect getBoundsOnScreen(android.view.View)>
<android.graphics.Typeface: void <clinit>()>
<com.google.inject.internal.MoreTypes: int access$200(java.lang.Object)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors ambiguousTypeConversion(java.lang.String,java.lang.Object,com.google.inject.TypeLiteral,com.google.inject.spi.TypeConverterBinding,com.google.inject.spi.TypeConverterBinding)>
<com.google.inject.name.NamedImpl: java.lang.String value()>
<com.google.inject.Scopes$2: void <init>()>
<com.google.inject.internal.DefaultConstructionProxyFactory: com.google.inject.internal.ConstructionProxy create()>
<com.github.mobile.ui.commit.CommitViewActivity: void onPageSelected(int)>
<com.google.inject.internal.Scoping: void <init>()>
<com.github.mobile.ui.issue.IssueBrowseActivity: void onCreate(android.os.Bundle)>
<android.support.v4.app.BackStackState$1: void <init>()>
<com.google.inject.Scopes$2: com.google.inject.Provider scope(com.google.inject.Key,com.google.inject.Provider)>
<com.github.mobile.ui.issue.EditIssueActivity: void updateMilestone()>
<com.github.mobile.ui.repo.RepositoryViewActivity: void configurePager()>
<com.github.mobile.accounts.TwoFactorAuthActivity: roboguice.util.RoboAsyncTask access$300(com.github.mobile.accounts.TwoFactorAuthActivity)>
<com.google.inject.spi.InjectionPoint: java.util.Set getInjectionPoints(com.google.inject.TypeLiteral,boolean,com.google.inject.internal.Errors)>
<com.google.inject.internal.util.$Iterators$8: boolean hasNext()>
<com.google.inject.internal.MoreTypes: void checkNotPrimitive(java.lang.reflect.Type,java.lang.String)>
<com.github.mobile.ui.issue.EditIssueActivity$3: void <init>(com.github.mobile.ui.issue.EditIssueActivity)>
<android.content.Intent: android.os.Bundle getExtras()>
<com.google.inject.internal.Scoping: boolean isExplicitlyScoped()>
<com.google.inject.TypeLiteral: com.google.inject.TypeLiteral getFieldType(java.lang.reflect.Field)>
<com.github.mobile.ui.issue.IssueDashboardActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.google.inject.internal.util.$ImmutableSet$EmptyImmutableSet: com.google.inject.internal.util.$UnmodifiableIterator iterator()>
<com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>
<com.google.inject.internal.Errors: void <init>()>
<com.github.mobile.ui.ProgressDialogTask: void <init>(android.content.Context)>
<android.support.v4.content.ModernAsyncTask$WorkerRunnable: void <init>(android.support.v4.content.ModernAsyncTask$1)>
<com.google.inject.Key$NullAnnotationStrategy: com.google.inject.Key$AnnotationStrategy withoutAttributes()>
<com.github.mobile.ui.issue.FiltersViewActivity$1: void <init>(com.github.mobile.ui.issue.FiltersViewActivity)>
<android.content.SearchRecentSuggestionsProvider: void setupSuggestions(java.lang.String,int)>
<com.github.mobile.ui.PagerActivity: void invalidateOptionsMenu()>
<com.google.inject.internal.util.$MapMaker$StrongEntry: com.google.inject.internal.util.$MapMaker$ValueReference getValueReference()>
<com.google.inject.internal.InternalInjectorCreator$1: void <init>(com.google.inject.internal.InternalInjectorCreator,com.google.inject.internal.BindingImpl,com.google.inject.internal.Errors)>
<com.github.mobile.accounts.LoginActivity: void <init>()>
<com.google.inject.Key: com.google.inject.Key get(java.lang.Class)>
<com.google.inject.internal.util.$MapMaker$StrategyImpl: java.lang.Object compute(java.lang.Object,java.lang.Object,com.google.inject.internal.util.$Function)>
<com.google.inject.internal.util.$UnmodifiableIterator: void <init>()>
<com.github.mobile.ui.issue.EditIssueActivity$4: void onClick(android.view.View)>
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>
<com.github.mobile.ui.issue.EditIssueActivity: org.eclipse.egit.github.core.service.MilestoneService access$300(com.github.mobile.ui.issue.EditIssueActivity)>
<com.google.inject.internal.LinkedProviderBindingImpl: void <init>(com.google.inject.internal.InjectorImpl,com.google.inject.Key,java.lang.Object,com.google.inject.internal.InternalFactory,com.google.inject.internal.Scoping,com.google.inject.Key)>
<com.google.inject.internal.MoreTypes$GenericArrayTypeImpl: int hashCode()>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockFragmentActivity: void onPause()>
<com.google.inject.spi.Dependency: com.google.inject.spi.InjectionPoint getInjectionPoint()>
<com.google.inject.internal.util.$Preconditions: java.lang.String format(java.lang.String,java.lang.Object[])>
<com.github.mobile.ui.ref.RefDialogFragment: java.util.ArrayList getChoices()>
<com.google.inject.internal.util.$FinalizableReferenceQueue: java.lang.reflect.Method getStartFinalizer(java.lang.Class)>
<com.google.inject.Key$AnnotationTypeStrategy: java.lang.Class getAnnotationType()>
<android.support.v4.util.SparseArrayCompat: void <clinit>()>
<com.github.mobile.accounts.TwoFactorAuthActivity$5: void <init>(com.github.mobile.accounts.TwoFactorAuthActivity,android.content.Context,java.lang.String,android.app.AlertDialog)>
<java.util.ArrayList: int size()>
<java.util.HashMap: boolean containsValue(java.lang.Object)>
<android.os.Handler: boolean sendEmptyMessage(int)>
<java.util.concurrent.TimeUnit: void <clinit>()>
<com.google.inject.internal.FailableCache$1: java.lang.Object apply(java.lang.Object)>
<android.support.v4.app.Fragment: void onDetach()>
<com.google.inject.spi.InjectionPoint: com.google.inject.spi.InjectionPoint forConstructorOf(com.google.inject.TypeLiteral)>
<com.google.inject.internal.BindingImpl: com.google.inject.internal.Scoping getScoping()>
<com.google.inject.ConfigurationException: java.lang.String getMessage()>
<com.google.inject.internal.TypeConverterBindingProcessor$3: void <init>(com.google.inject.internal.TypeConverterBindingProcessor)>
<com.google.inject.internal.util.$ImmutableSet$SingletonImmutableSet: com.google.inject.internal.util.$UnmodifiableIterator iterator()>
<java.net.URL: java.lang.String toString()>
<android.support.v4.content.Loader: void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener)>
<com.github.mobile.ui.ref.RefDialogFragment: void <init>()>
<com.google.inject.internal.InjectorImpl: java.util.Set getInternalDependencies(com.google.inject.internal.BindingImpl)>
<com.google.inject.internal.PrivateElementProcessor: java.util.List getInjectorShellBuilders()>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors conversionTypeError(java.lang.String,java.lang.Object,com.google.inject.TypeLiteral,com.google.inject.spi.TypeConverterBinding,java.lang.Object)>
<com.github.kevinsawicki.wishlist.ViewFinder$WindowWrapper: android.view.View findViewById(int)>
<com.google.inject.internal.DefaultConstructionProxyFactory$1: com.google.inject.spi.InjectionPoint getInjectionPoint()>
<com.google.inject.CreationException: void <init>(java.util.Collection)>
<android.support.v4.app.BackStackRecord: int commitInternal(boolean)>
<java.lang.Object: java.lang.Class getClass()>
<com.github.mobile.ui.repo.RepositoryViewActivity: boolean onSearchRequested()>
<com.google.inject.internal.Errors$4: void <init>(java.lang.Class)>
<com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList createFromIterable(java.lang.Iterable,int)>
<com.google.inject.internal.util.$Preconditions: void checkState(boolean,java.lang.Object)>
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,int,float,int,float)>
<android.support.v4.app.Fragment: android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<android.support.v4.app.FragmentManagerImpl: boolean executePendingTransactions()>
<android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.google.inject.internal.util.$Iterables: java.lang.Iterable transform(java.lang.Iterable,com.google.inject.internal.util.$Function)>
<com.google.inject.internal.ProviderMethodsModule: void configure(com.google.inject.Binder)>
<com.github.mobile.core.user.FollowUserTask: void start()>
<com.github.mobile.ui.issue.IssuesViewActivity$2: void <init>(com.github.mobile.ui.issue.IssuesViewActivity,android.content.Context)>
<com.github.mobile.ui.issue.EditIssuesFilterActivity: org.eclipse.egit.github.core.service.CollaboratorService access$100(com.github.mobile.ui.issue.EditIssuesFilterActivity)>
<com.github.mobile.ui.repo.RepositoryViewActivity$3: void <init>(com.github.mobile.ui.repo.RepositoryViewActivity,android.content.Context,org.eclipse.egit.github.core.IRepositoryIdProvider)>
<com.github.mobile.ui.TabPagerActivity: void onTabChanged(java.lang.String)>
<com.google.inject.internal.util.$MapMaker: void <clinit>()>
<java.lang.String: int lastIndexOf(int)>
<com.google.inject.internal.util.$FinalizableReferenceQueue$DecoupledLoader: void <init>()>
<com.github.mobile.ui.issue.MilestoneDialogFragment$1: void <init>(com.github.mobile.ui.issue.MilestoneDialogFragment,android.app.AlertDialog)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<android.os.Handler: void <init>(android.os.Looper)>
<android.support.v4.app.Fragment: android.view.View getView()>
<com.github.mobile.ui.issue.EditIssuesFilterActivity: com.github.mobile.ui.issue.MilestoneDialog access$302(com.github.mobile.ui.issue.EditIssuesFilterActivity,com.github.mobile.ui.issue.MilestoneDialog)>
<com.google.inject.internal.Initializer: void validateOustandingInjections(com.google.inject.internal.Errors)>
<com.google.inject.Key$AnnotationInstanceStrategy: void <init>(java.lang.annotation.Annotation)>
<com.github.mobile.ui.issue.CreateIssueTask: com.github.mobile.ui.issue.CreateIssueTask create()>
<com.github.mobile.ui.issue.EditIssueActivity$3: void onClick(android.view.View)>
<java.lang.Math: int round(float)>
<com.github.mobile.ui.commit.CommitViewActivity: void <init>()>
<roboguice.config.DefaultRoboModule: void <clinit>()>
<com.google.inject.internal.InstanceBindingImpl: com.google.inject.Provider getProvider()>
<com.github.mobile.ui.comment.CreateCommentActivity: void setCurrentItem(int)>
<com.google.inject.internal.MoreTypes: boolean access$100(java.lang.reflect.Type)>
<com.github.mobile.ui.DialogFragmentActivity: void onCreate(android.os.Bundle)>
<android.text.style.DynamicDrawableSpan: void <init>()>
<java.lang.Class: java.lang.String toString()>
<roboguice.inject.ContextScopedRoboInjector: void injectViewMembers(android.support.v4.app.Fragment)>
<com.google.inject.internal.State$1: void <init>()>
<com.google.inject.internal.MoreTypes: int indexOf(java.lang.Object[],java.lang.Object)>
<com.github.mobile.ui.issue.LabelsDialog: void show(java.util.Collection)>
<com.github.mobile.ui.user.UserViewActivity$1: void <init>(com.github.mobile.ui.user.UserViewActivity,android.content.Context,java.lang.String)>
<android.support.v4.util.SimpleArrayMap: int indexOfNull()>
<android.support.v4.app.LoaderManagerImpl: void doReportStart()>
<com.google.inject.internal.InjectionRequestProcessor: void injectMembers()>
<android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)>
<android.support.v4.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>
<com.google.inject.internal.Scoping$3: void <init>()>
<roboguice.service.RoboService: void <init>()>
<com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Stage,com.google.inject.Module[])>
<com.google.inject.util.Modules$1: void configure(com.google.inject.Binder)>
<android.support.v4.app.Fragment: java.lang.String toString()>
<java.util.concurrent.CountDownLatch: void <init>(int)>
<com.github.mobile.accounts.LoginActivity$4: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<java.lang.Class: boolean isInstance(java.lang.Object)>
<android.support.v4.app.NoSaveStateFrameLayout: void <init>(android.content.Context)>
<com.github.mobile.ui.repo.RepositoryViewActivity: void onBackPressed()>
<android.view.View: android.content.Context getContext()>
<com.google.inject.internal.Errors$3: void <init>(java.lang.Class)>
<com.google.inject.internal.util.$MapMaker$WeakEntry: void setValueReference(com.google.inject.internal.util.$MapMaker$ValueReference)>
<com.google.inject.util.Types: java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type)>
<android.view.animation.Animation: void <init>()>
<com.github.mobile.ui.issue.IssuesViewActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.google.inject.internal.AbstractBindingProcessor: void <init>(com.google.inject.internal.Errors,com.google.inject.internal.ProcessedBindingData)>
<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>
<com.google.inject.internal.Errors: boolean hasErrors()>
<com.google.inject.internal.InjectorImpl$1: void <init>(com.google.inject.internal.InjectorImpl)>
<com.actionbarsherlock.app.SherlockFragmentActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockActivity: void <init>()>
<com.google.inject.internal.Annotations: java.lang.annotation.Annotation findBindingAnnotation(com.google.inject.internal.Errors,java.lang.reflect.Member,java.lang.annotation.Annotation[])>
<com.github.mobile.ui.user.UriLauncherActivity$2: void onClick(android.content.DialogInterface,int)>
<com.github.mobile.util.TypefaceUtils: android.graphics.Typeface getOcticons(android.content.Context)>
<com.github.mobile.ui.TabPagerActivity: com.github.mobile.ui.TabPagerActivity setGone(boolean)>
<com.github.mobile.ui.user.HomeActivity$1$1: void run()>
<android.support.v4.app.FragmentTransaction: void <init>()>
<com.github.mobile.ui.user.HomeActivity$1: void onLoaderReset(android.support.v4.content.Loader)>
<com.google.inject.internal.PrivateElementsImpl: void <init>(java.lang.Object)>
<com.github.mobile.ui.ref.BranchFileViewActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.google.inject.internal.ProcessedBindingData: void <init>()>
<android.support.v4.app.BackStackRecord: java.lang.Object captureExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.support.v4.util.ArrayMap)>
<com.google.inject.internal.Annotations$AnnotationChecker: void <init>(java.util.Collection)>
<android.support.v4.content.ModernAsyncTask$Status: void <init>(java.lang.String,int)>
<android.app.ProgressDialog: void setIndeterminateDrawable(android.graphics.drawable.Drawable)>
<com.google.inject.spi.DefaultElementVisitor: void <init>()>
<com.google.inject.spi.InjectionPoint: boolean access$000(java.lang.reflect.Method,java.lang.reflect.Method)>
<com.google.inject.internal.util.$MapMaker$1: java.lang.Object waitForValue()>
<com.google.inject.internal.util.$Hashing: int smear(int)>
<com.google.inject.internal.util.$MapMaker$StrategyImpl: java.lang.Object waitForValue(com.google.inject.internal.util.$MapMaker$ReferenceEntry)>
<android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)>
<org.eclipse.egit.github.core.RepositoryIssue: org.eclipse.egit.github.core.RepositoryIssue setRepository(org.eclipse.egit.github.core.Repository)>
<com.google.inject.internal.Scoping: com.google.inject.Scope getScopeInstance()>
<java.io.StringWriter: void <init>()>
<roboguice.inject.ContextScopedRoboInjector: void <init>(android.content.Context,com.google.inject.Injector,roboguice.inject.ViewListener)>
<android.transition.Transition: void <init>()>
<com.github.mobile.ui.issue.EditIssueActivity$2: void onClick(android.view.View)>
<java.lang.String: java.lang.String substring(int,int)>
<com.google.inject.internal.MoreTypes$GenericArrayTypeImpl: void <init>(java.lang.reflect.Type)>
<roboguice.inject.ViewListener$ViewMembersInjector: void <clinit>()>
<roboguice.util.SafeAsyncTask: void <init>()>
<com.github.mobile.ui.gist.RandomGistTask: void <init>(android.app.Activity)>
<android.support.v4.app.FragmentManagerImpl: void moveToState(int,int,int,boolean)>
<com.google.inject.spi.Elements$RecordingBinder: com.google.inject.spi.Elements$RecordingBinder withSource(java.lang.Object)>
<android.support.v4.app.BackStackRecord: java.lang.Object getExitTransition(android.support.v4.app.Fragment,boolean)>
<com.google.inject.spi.InjectionPoint: com.google.inject.spi.Dependency newDependency(com.google.inject.Key,boolean,int)>
<org.eclipse.egit.github.core.RepositoryId: java.lang.String generateId()>
<android.widget.BaseAdapter: void <init>()>
<com.actionbarsherlock.app.SherlockActivity: void setContentView(int)>
<android.app.AlertDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)>
<android.view.animation.DecelerateInterpolator: void <init>(float)>
<com.google.inject.internal.util.$ImmutableList: java.lang.Object[] nullChecked(java.lang.Object[])>
<com.github.mobile.ui.issue.MilestoneDialogFragment: void <init>()>
<com.google.inject.Key: void <init>(java.lang.reflect.Type,com.google.inject.Key$AnnotationStrategy)>
<com.google.inject.internal.util.$MapMaker$NullOutputExceptionReference: java.lang.Object waitForValue()>
<android.view.animation.AlphaAnimation: void <init>(float,float)>
<java.lang.Class: java.lang.annotation.Annotation[] getAnnotations()>
<com.google.inject.internal.util.$MapMaker: com.google.inject.internal.util.$CustomConcurrentHashMap$Builder access$400(com.google.inject.internal.util.$MapMaker)>
<android.app.Activity: android.app.Application getApplication()>
<com.github.mobile.core.repo.RepositoryUtils: boolean isValidOwner(java.lang.String)>
<android.support.v4.content.Loader: void deliverResult(java.lang.Object)>
<android.support.v4.view.PagerAdapter: java.lang.CharSequence getPageTitle(int)>
<com.github.mobile.core.user.UnfollowUserTask: void start()>
<android.util.Log: int w(java.lang.String,java.lang.String)>
<com.github.mobile.ui.repo.RepositoryPagerAdapter: java.lang.CharSequence getPageTitle(int)>
<com.github.mobile.core.repo.RepositoryUtils: boolean isComplete(org.eclipse.egit.github.core.Repository)>
<com.github.mobile.ui.issue.MilestoneDialogFragment$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.github.mobile.ui.MarkdownLoader: void <init>(android.content.Context,org.eclipse.egit.github.core.IRepositoryIdProvider,java.lang.String,android.text.Html$ImageGetter,boolean)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void onRestoreInstanceState(android.os.Bundle)>
<com.github.mobile.ui.commit.CommitFileViewActivity: void onLoadFinished(android.support.v4.content.Loader,java.lang.CharSequence)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>
<com.github.mobile.Intents$Builder: com.github.mobile.Intents$Builder gist(org.eclipse.egit.github.core.Gist)>
<com.github.mobile.Intents$Builder: com.github.mobile.Intents$Builder add(java.lang.String,java.io.Serializable)>
<java.util.ArrayList: void <init>()>
<com.github.mobile.accounts.TwoFactorAuthActivity$2: void <init>(com.github.mobile.accounts.TwoFactorAuthActivity)>
<com.github.mobile.ui.gist.GistsViewActivity: void startActivity(android.content.Intent)>
<com.google.inject.internal.util.$Classes: java.lang.Class memberType(java.lang.reflect.Member)>
<java.util.HashMap: java.util.Collection values()>
<android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.google.inject.Key: com.google.inject.Key get(java.lang.Class,java.lang.annotation.Annotation)>
<com.github.mobile.ui.issue.FiltersViewActivity: void onDialogResult(int,int,android.os.Bundle)>
<java.util.ArrayList: void <init>(int)>
<java.util.Collections: java.util.Set emptySet()>
<com.google.inject.spi.InjectionPoint$InjectableField: void <init>(com.google.inject.TypeLiteral,java.lang.reflect.Field,java.lang.annotation.Annotation)>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<com.google.inject.internal.util.$Stopwatch: void <clinit>()>
<android.support.v4.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>
<android.support.v4.util.ArrayMap$1: java.lang.Object colGetEntry(int,int)>
<com.google.inject.util.Types: java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])>
<com.github.mobile.ui.DialogFragmentActivity: boolean[] getBooleanArrayExtra(java.lang.String)>
<roboguice.inject.ContextScope: java.util.Map getScopedObjectMap(android.content.Context)>
<com.google.inject.internal.InheritingState: java.lang.Object lock()>
<com.github.mobile.ui.issue.EditIssuesFilterActivity: org.eclipse.egit.github.core.service.MilestoneService access$400(com.github.mobile.ui.issue.EditIssuesFilterActivity)>
<com.github.mobile.ui.user.UserViewActivity: android.content.Intent createIntent(org.eclipse.egit.github.core.User)>
<java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>
<android.support.v4.app.Fragment: void performResume()>
<android.support.v4.app.BackStackRecord: int commit()>
<com.github.mobile.ui.gist.CreateGistActivity$1: void <init>(com.github.mobile.ui.gist.CreateGistActivity)>
<com.github.mobile.ui.TabPagerActivity: void updateCurrentItem(int)>
<com.github.mobile.ui.comment.CommentPreviewPagerAdapter: java.lang.String getCommentText()>
<android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>
<android.app.Dialog: boolean requestWindowFeature(int)>
<com.google.inject.spi.Elements$RecordingBinder: void <init>(com.google.inject.Stage)>
<com.github.mobile.ui.comment.CreateCommentActivity: void invalidateOptionsMenu()>
<android.support.v4.app.Fragment: void onStop()>
<com.google.inject.internal.util.$Iterables$IterableWithToString: void <init>()>
<android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
<android.support.v4.app.FragmentManagerState: void <clinit>()>
<com.google.inject.internal.Scoping: com.google.inject.internal.Scoping makeInjectable(com.google.inject.internal.Scoping,com.google.inject.internal.InjectorImpl,com.google.inject.internal.Errors)>
<com.google.inject.spi.TypeConverterBinding: void <init>(java.lang.Object,com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter)>
<com.github.rtyley.android.sherlock.android.accounts.SherlockAccountAuthenticatorActivity: void finish()>
<java.util.HashMap: boolean containsKey(java.lang.Object)>
<java.lang.Class: boolean isPrimitive()>
<com.github.mobile.ui.DialogFragmentActivity: java.io.Serializable getSerializableExtra(java.lang.String)>
<com.google.inject.internal.util.$SourceProvider: com.google.inject.internal.util.$SourceProvider plusSkippedClasses(java.lang.Class[])>
<com.google.inject.internal.ProviderInstanceBindingImpl: void <init>(java.lang.Object,com.google.inject.Key,com.google.inject.internal.Scoping,java.util.Set,com.google.inject.Provider)>
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment)>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockFragmentActivity: void onResume()>
<com.actionbarsherlock.app.SherlockFragmentActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
<org.eclipse.egit.github.core.RepositoryId: org.eclipse.egit.github.core.RepositoryId create(java.lang.String,java.lang.String)>
<java.net.URLClassLoader: void <init>(java.net.URL[])>
<com.google.inject.internal.ErrorsException: void <init>(com.google.inject.internal.Errors)>
<android.app.Activity: void onStart()>
<com.github.mobile.ui.commit.CommitFileViewActivity: void shareFile()>
<com.github.mobile.ui.ref.RefDialogFragment: void onClick(android.content.DialogInterface,int)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors cannotInjectFinalField(java.lang.reflect.Field)>
<android.app.Activity: void onRestart()>
<com.github.mobile.core.user.UnfollowUserTask: void <init>(android.content.Context,java.lang.String)>
<com.google.inject.internal.Scoping: boolean isNoScope()>
<com.github.mobile.ui.issue.IssuesViewActivity: android.content.Intent createIntent(java.util.Collection,org.eclipse.egit.github.core.Repository,int)>
<com.github.mobile.ui.repo.RepositoryContributorsActivity: android.content.Intent createIntent(org.eclipse.egit.github.core.Repository)>
<java.util.HashSet: java.util.Iterator iterator()>
<com.google.inject.TypeLiteral: java.lang.String toString()>
<android.support.v4.util.TimeUtils: int accumField(int,int,boolean,int)>
<com.github.mobile.ui.issue.EditIssuesFilterActivity: void updateLabels()>
<android.support.v4.util.ArrayMap: boolean retainAll(java.util.Collection)>
<com.github.mobile.ui.FragmentStatePagerAdapter: void <init>(com.actionbarsherlock.app.SherlockFragmentActivity)>
<com.github.mobile.ui.gist.CreateGistActivity$2: void <init>(com.github.mobile.ui.gist.CreateGistActivity,android.app.Activity,java.lang.String,boolean,java.lang.String,java.lang.String)>
<com.github.mobile.ui.issue.MilestoneDialog: void load(org.eclipse.egit.github.core.Milestone)>
<android.support.v4.content.AsyncTaskLoader: boolean cancelLoad()>
<com.github.mobile.util.SourceEditor: boolean isMarkdown()>
<com.github.mobile.ui.search.SearchActivity: android.support.v4.view.PagerAdapter createAdapter()>
<com.google.inject.spi.InjectionPoint: int hashCode()>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<com.github.mobile.ui.commit.CommitViewActivity: android.content.Intent createIntent(org.eclipse.egit.github.core.Repository,int,java.lang.String[])>
<com.google.inject.spi.Dependency: boolean equals(java.lang.Object)>
<com.github.mobile.ui.PagerActivity: com.actionbarsherlock.app.SherlockFragment getFragment()>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors scopeNotFound(java.lang.Class)>
<java.lang.String: boolean endsWith(java.lang.String)>
<android.support.v4.content.ModernAsyncTask$2: void <init>(android.support.v4.content.ModernAsyncTask)>
<android.support.v4.content.Loader: void onAbandon()>
<com.google.inject.TypeLiteral: com.google.inject.TypeLiteral get(java.lang.Class)>
<roboguice.activity.event.OnRestartEvent: void <init>()>
<android.support.v4.app.DialogFragment: void show(android.support.v4.app.FragmentManager,java.lang.String)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<com.google.inject.internal.DefaultConstructionProxyFactory: void <init>(com.google.inject.spi.InjectionPoint)>
<android.support.v4.app.FragmentTransitionCompat21$EpicenterView: void <init>()>
<com.google.inject.spi.InjectionPoint$InjectableField: com.google.inject.spi.InjectionPoint toInjectionPoint()>
<java.lang.RuntimeException: void <init>(java.lang.String)>
<com.github.mobile.ui.ConfirmDialogFragment: void show(com.github.mobile.ui.DialogFragmentActivity,int,java.lang.String,java.lang.String,android.os.Bundle)>
<com.github.mobile.ui.LightProgressDialog: android.app.AlertDialog create(android.content.Context,java.lang.CharSequence)>
<com.google.inject.internal.InheritingState: java.util.List getTypeListenerBindings()>
<com.github.mobile.ui.issue.IssuesViewActivity: void onDialogResult(int,int,android.os.Bundle)>
<com.github.mobile.ui.repo.RepositoryViewActivity$1: void <init>(com.github.mobile.ui.repo.RepositoryViewActivity,android.content.Context,org.eclipse.egit.github.core.IRepositoryIdProvider)>
<android.util.Log: int v(java.lang.String,java.lang.String)>
<com.google.inject.internal.UniqueAnnotations: java.lang.annotation.Annotation create()>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockActivity: void onDestroy()>
<com.google.inject.internal.LinkedProviderBindingImpl: java.util.Set getDependencies()>
<com.google.inject.internal.util.$MapMaker$WeakValueReference: java.lang.Object waitForValue()>
<com.google.inject.internal.MoreTypes$ParameterizedTypeImpl: java.lang.String toString()>
<com.github.mobile.ui.user.HomeActivity: void onLoadFinished(android.support.v4.content.Loader,java.util.List)>
<com.github.mobile.ui.TabPagerActivity: int getContentView()>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockAccountAuthenticatorActivity: void onDestroy()>
<android.support.v4.app.LoaderManagerImpl: android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>
<java.lang.NullPointerException: void <init>(java.lang.String)>
<java.lang.Class: boolean isArray()>
<com.github.mobile.ui.BaseActivity: void <init>()>
<com.google.inject.internal.util.$CustomConcurrentHashMap$Impl$Segment: void <init>(com.google.inject.internal.util.$CustomConcurrentHashMap$Impl,int)>
<com.google.inject.internal.util.$FinalizableReferenceQueue$DirectLoader: java.lang.Class loadFinalizer()>
<com.github.mobile.ui.commit.CommitCompareViewActivity: void onCreate(android.os.Bundle)>
<android.support.v4.app.LoaderManagerImpl: boolean hasRunningLoaders()>
<com.github.mobile.ui.repo.RepositoryViewActivity: android.support.v4.view.PagerAdapter createAdapter()>
<com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockActivity: void onPause()>
<com.google.inject.internal.util.$MapMaker$Strength$2: void <init>(java.lang.String,int)>
<com.github.mobile.ui.issue.LabelsDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.google.inject.Scopes$1$1: void <init>(com.google.inject.Scopes$1,com.google.inject.Provider)>
<com.github.mobile.ui.issue.IssueSearchActivity: void onNewIntent(android.content.Intent)>
<android.support.v4.app.LoaderManagerImpl: void doStop()>
<android.view.View: void clearAnimation()>
<com.google.inject.internal.util.$MapMaker$StrategyImpl: int hashKey(java.lang.Object)>
<android.support.v4.app.DialogFragment: void <init>()>
<org.eclipse.egit.github.core.Issue: java.lang.String getTitle()>
<com.google.inject.internal.ProcessedBindingData: void initializeBindings()>
<android.support.v4.app.BackStackRecord: void addOp(android.support.v4.app.BackStackRecord$Op)>
<com.google.inject.internal.util.$Iterators: com.google.inject.internal.util.$UnmodifiableIterator forArray(java.lang.Object[],int,int)>
<com.google.inject.internal.InjectorImpl$2: void <init>(com.google.inject.internal.InjectorImpl,com.google.inject.Key,com.google.inject.internal.BindingImpl,java.lang.Class,java.lang.Class)>
<com.github.mobile.ui.issue.EditIssuesFilterActivity: void updateAssignee()>
<com.github.mobile.util.ToastUtils: void show(android.app.Activity,java.lang.String)>
<android.support.v4.app.LoaderManagerImpl$LoaderInfo: void stop()>
<android.support.v4.util.MapCollections$ArrayIterator: java.lang.Object next()>
<java.util.ArrayList: java.lang.Object remove(int)>
<com.github.mobile.ui.issue.MilestoneDialog$1: void execute()>
<com.google.inject.internal.ErrorsException: com.google.inject.internal.Errors getErrors()>
<android.app.Activity: void onPause()>
<com.google.inject.internal.Scoping$4: void <init>()>
<com.google.inject.internal.ProviderMethodsModule: com.google.inject.Key getKey(com.google.inject.internal.Errors,com.google.inject.TypeLiteral,java.lang.reflect.Member,java.lang.annotation.Annotation[])>
<com.github.mobile.util.PreferenceUtils: android.content.SharedPreferences getCodePreferences(android.content.Context)>
<android.support.v4.app.Fragment: android.content.res.Resources getResources()>
<com.github.mobile.ui.repo.OrganizationLoader: void <init>(android.app.Activity,com.github.mobile.persistence.AccountDataManager,com.google.inject.Provider)>
<com.google.inject.internal.InjectorShell: void <init>(com.google.inject.internal.InjectorShell$Builder,java.util.List,com.google.inject.internal.InjectorImpl,com.google.inject.internal.InjectorShell$1)>
<android.graphics.Paint: void <init>()>
<org.eclipse.egit.github.core.Issue: org.eclipse.egit.github.core.Milestone getMilestone()>
<org.eclipse.egit.github.core.Issue: org.eclipse.egit.github.core.Issue setTitle(java.lang.String)>
<com.google.inject.internal.util.$Preconditions: void checkPositionIndexes(int,int,int)>
<com.google.inject.spi.InjectionPoint: void <init>(com.google.inject.TypeLiteral,java.lang.reflect.Method,boolean)>
<android.support.v4.content.Loader: void abandon()>
<com.github.mobile.ui.issue.IssueDashboardActivity: void onCreate(android.os.Bundle)>
<com.google.inject.internal.MoreTypes$GenericArrayTypeImpl: java.lang.String toString()>
<java.lang.Class: java.lang.String getName()>
<com.google.inject.internal.util.$Iterables: java.lang.Iterable concat(java.lang.Iterable)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void invalidateOptionsMenu()>
<android.app.ProgressDialog: void <init>(android.content.Context,int)>
<com.google.inject.internal.AbstractProcessor: void process(java.lang.Iterable)>
<com.github.mobile.ui.issue.EditIssueActivity: org.eclipse.egit.github.core.service.CollaboratorService access$600(com.github.mobile.ui.issue.EditIssueActivity)>
<android.support.v4.app.BackStackRecord: void excludeHiddenFragmentsAfterEnter(android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object)>
<com.github.mobile.ui.issue.LabelDrawableSpan: void setText(android.widget.TextView,org.eclipse.egit.github.core.Label[])>
<roboguice.config.DefaultRoboModule: void <init>(android.app.Application,roboguice.inject.ContextScope,roboguice.inject.ViewListener,roboguice.inject.ResourceListener)>
<com.google.inject.internal.Errors: com.google.inject.internal.Errors recursiveImplementationType()>
<com.google.inject.matcher.Matchers$Any: void <init>()>
<android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManager getSupportLoaderManager()>
<java.lang.Double: void <clinit>()>
